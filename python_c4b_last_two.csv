id,submission,sourceCode,author,memory,time,sent,countline,problems_id,verdicts_id,languages_id,isduplicated
46,23674638,"n = int(input())
l = list(map(int, input().split()))
m = 0
for i in range(n-1, -1, -1):
    if l[i] >= m:
        m = l[i]
    l[i] = m - l[i] + (m - l[i] != 0)
print("" "".join(map(str, l)))",34,12700,218,2017-01-10 07:53:31,15,1,2,8,0
47,23674879,"n = int(input())
l = list(map(int, input().split()))
m = l[-1]
l[-1] = 0
for i in range(n-2, -1, -1):
    if l[i] == m:
        l[i] = 1
    elif l[i] > m:
        m = l[i]
        l[i] = 0
    else:
        l[i] = m - l[i] + 1
print("" "".join(map(str, l)))",34,14492,171,2017-01-10 08:20:36,25,1,1,8,0
104,23721209,"input()
intarray = list(map(int, input().split()))
for i in range(0,len(intarray)):
    a = 0;
    for j in range(i+1, len(intarray)):
        if intarray[i] + a <= intarray[j]: a = intarray[j] - intarray[i] + 1
    print(a, end=' ')",56,11624,1000,2017-01-11 18:37:56,13,1,3,8,0
105,23721393,"n = int(input())
intarray = list(map(int, input().split()))
mx=[0]*n
mx[n-1]=intarray[n-1]
for i in range(n-2,-1,-1):
    mx[i] = max(intarray[i],mx[i+1]);
for i in range(0,len(intarray)):
    if mx[i]==intarray[i]: print(0,end="" "")
    else:
        print(mx[i]-intarray[i]+1 , end=' ')",56,12696,483,2017-01-11 18:51:30,19,1,2,8,0
125,23739126,"x=int(input())
y=int(input())
if x-y>1 :
    print(min(x,y),int((x-y)/2))
elif y-x>1:
    print(min(x,y),int((y-x)/2))
else:
    print(min(x,y),0)",64,4476,46,2017-01-12 18:02:50,15,2,5,8,0
126,23739146,"x,y=map(int,input().split())
if x-y>1 :
    print(min(x,y),int((x-y)/2))
elif y-x>1:
    print(min(x,y),int((y-x)/2))
else:
    print(min(x,y),0)",64,4536,62,2017-01-12 18:04:13,13,2,1,8,0
170,23812633,"a=int(input())
x=list(map(int,input().split()))[::-1]
y=[x[0]]
mx=x[0]
for i in range(1,a):
    if mx>x[i]:
        y.append(mx+1)
    else:
        y.append(x[i])
        mx=x[i]

for i in range(a-1,-1,-1):
    print(y[i]-x[i],end=' ')",88,12588,421,2017-01-14 21:44:43,25,1,2,8,0
171,23812678,"a=int(input())
x=list(map(int,input().split()))
y=[0]
mx=x[-1]
for i in range(a-2,-1,-1):
	y.append(max(0,mx-x[i]+1))
	mx=max(mx,x[i])
print(' '.join(map(str,y[::-1])))",88,15892,218,2017-01-14 21:48:23,15,1,1,8,0
285,23926102,"from collections import Counter
n=int(input())
a=[int(x) for x in input().split()]
ra=a[::-1]
mx=[ra[0]]
c=Counter(a)
for i in range(1,n):
  mx.append(max(mx[i-1], ra[i]))
for i in range(n):
  if mx[n-1-i]==a[i]:
    if c[a[i]]>1:
      print(1, end="" "")
    else:
      print(0, end="" "")
  else:
    print(mx[n-1-i]+1-a[i], end="" "")
    
  if c[a[i]]>1:
    c[a[i]]-=1",134,13956,951,2017-01-18 18:50:30,19,1,1,8,0
286,23926875,"from collections import Counter
n=int(input())
a=[int(x) for x in input().split()]
mx=-1
ans=[0]*n
for i in reversed(range(n)):
  ans[i]=max(0,mx+1-a[i])
  mx=max(mx,a[i]);
print(*ans)",134,13292,545,2017-01-18 19:33:05,9,1,1,8,0
593,24179876,"a,b = map(int,raw_input().split())
print min(a,b),(max(a,b)-min(a,b))%2",224,4536,31,2017-01-27 05:54:06,3,2,2,13,0
594,24179899,"a,b = map(int,raw_input().split())
print min(a,b),(max(a,b)-min(a,b))/2",224,4544,62,2017-01-27 05:56:25,3,2,1,13,0
616,24201174,"n = int(input())
x = input().split() # [int(elem) for elem in input().split()]

p=''
maxi = 0

for i in range(n-1,-1,-1):
    xi = int(x[i])
    maxi = max(maxi, xi)#x[i])
    if xi < maxi: # x[i] < maxi:
        p = str((maxi - xi + 1)) + ' ' + p #x[i]+1))+' '+p
    else:
        p = '0' + ' ' + p

print(p[:-1])",234,10184,1000,2017-01-27 23:52:34,29,1,3,8,0
622,24201703,"import array


def main():
    n = int(input())
    hs = input().split()
    maxi = 0
    p = array.array('Q', n * [0])

    for i in range(n - 1, -1, -1):
        hi = int(hs[i])
        p[i] = max(0, maxi - hi + 1)
        maxi = max(maxi, hi)

    for i in range(n - 1):
        print(p[i], '', end='')

    print(p[n - 1])


if __name__ == ""__main__"":
    main()",234,11828,857,2017-01-28 00:41:12,43,1,1,8,0
1197,24795739,"a,b=map(int,raw_input().strip().split("" ""))
if a>b:
    a=a-b
    n=b+a/2
else: 
    b=b=a
    n=a+b/2
print n",475,4500,46,2017-02-19 09:27:37,15,2,2,13,0
1198,24795763,"a,b=map(int,raw_input().strip().split("" ""))
if a>b:
    a=a-b
    print b,a/2 
else: 
    b=b-a
    print a,b/2",475,4548,62,2017-02-19 09:29:34,13,2,1,13,0
1335,25017577,"r,b=map(int,input().split())
can=0
cant=0

if(r>b):
    while(b>0):
        b-=1
        r-=1
        can+=1
    while(r>1):
        r-=2
        cant+=1
elif(r<b):
    while(r>0):
        r-=1
        b-=1
        can+=1
    while(b>1):
        b-=1
        cant+=1
else:
    while(r>0):
        r-=1
        can+=1

print(can,cant)",522,4528,62,2017-02-25 19:20:34,51,2,2,8,0
1336,25017781,"r,b=map(int,input().split())
can=0
cant=0

if(r>b):
    while(b>0):
        b-=1
        r-=1
        can+=1
    while(r>1):
        r-=2
        cant+=1
elif(r<b):
    while(r>0):
        r-=1
        b-=1
        can+=1
    while(b>1):
        b-=2
        cant+=1
else:
    while(r>0):
        r-=1
        can+=1

print(can,cant)",522,4524,62,2017-02-25 19:30:13,51,2,1,8,0
1372,25087043,"a, b = map(int, input().split())
print(min(a, b) // 2, abs(a - b) // 2)",542,4520,46,2017-02-27 22:36:28,3,2,2,8,0
1373,25087046,"a, b = map(int, input().split())
print(min(a, b), abs(a - b) // 2)",542,4532,62,2017-02-27 22:36:40,3,2,1,8,0
1710,25474674,"'''input
4
3 2 1 4
'''
n = int(input())
a = list(map(int, input().split()))
m, l = 0, []
for _ in range(n):
	x = a.pop()
	if x > m:
		m = x
		l.append(0)
	else:
		l.append(m - x + 1)
print(l[::-1])",531,4432,46,2017-03-14 16:54:35,15,1,2,8,0
1711,25474687,"'''input
4
3 2 1 4
'''
n = int(input())
a = list(map(int, input().split()))
m, l = 0, []
for _ in range(n):
	x = a.pop()
	if x > m:
		m = x
		l.append(0)
	else:
		l.append(m - x + 1)
print("" "".join(map(str, l[::-1])))",531,13964,156,2017-03-14 16:54:59,15,1,1,8,0
2268,25812254,"n,k = map(int,input().split())
a = list(map(int,input().split()))
x = [0]*(15)
ans = 0
for i in a:
    x[i%10]+=1
    ans += i//10
for i in range(9,-1,-1):
    ans += min(k//(10-i),x[i]);
    k -= min(k//(10-i),x[i])*(10-i);
print (min(n*10,ans))",815,4480,61,2017-03-26 09:38:51,21,3,2,8,0
2269,25812305,"n,k = map(int,input().split())
a = list(map(int,input().split()))
x = [0]*(15)
ans = 0
for i in a:
    x[i%10]+=1
    ans += i//10
for i in range(9,-1,-1):
    ans += min(k//(10-i),x[i]);
    k -= min(k//(10-i),x[i])*(10-i);
if(ans<10*n):
    ans+=min(10*n-ans,k//10);
print (min(n*10,ans))",815,9856,109,2017-03-26 09:40:59,25,3,1,8,0
2518,26113412,"a, b = map(int, raw_input().split())
print (min(a, b), abs(a-b)/2)",908,4524,30,2017-04-04 08:22:50,3,2,2,13,0
2519,26113417,"a, b = map(int, raw_input().split())
print min(a, b), abs(a-b)/2",908,4564,46,2017-04-04 08:23:22,3,2,1,13,0
2957,26443956,"n = int(input())
houses = list(map(int,input().split()))
lis = []
for i in range(n):
    if max(houses[i:]) > houses[i]:
        lis.append(str(max(houses[i:]) + 1 - houses[i]))
    elif max(houses[i:]) <= houses[i]:
        lis.append('0')

print (' '.join(lis))",1049,11616,1000,2017-04-17 05:40:29,19,1,3,8,0
2958,26444298,"n = int(input())
houses = list(map(int,input().split()))
lis = [0]*n
mx = 0
for i in range(n-1,-1,-1):
    if houses[i] > mx:
        mx = houses[i]
    else:
        lis[i] = mx - houses[i] + 1
print (*lis)",1049,13588,342,2017-04-17 06:07:59,19,1,1,8,0
2966,26459393,"import pdb

def maxim(k, skills):
	def getScore(skills):
		score = 0.0
		for i in skills:
			score += (float(i)/10.0)//1.0

		return int(score)

	rank=[]
	for s in skills:
		if s == 10:
			distance = 0
		else:
			distance = 10-s%10
			
		rank.append(distance)


	srank = rank[:]
	srank.sort()

	irank = []
	for s in srank:
		irank.append(rank.index(s))

	correctOrder = []
	for i in irank:
		correctOrder.append(skills[i])

	# pdb.set_trace()

	skills.sort()

	i = 0
	while i<len(skills) and k > 0:
		if correctOrder[i] %10 != 0 :
			correctOrder[i]+=1
			k-=1
		else:
			i+=1


	return getScore(correctOrder)


n, k = map(int, raw_input().split())
skills = map(int, raw_input().split())

print maxim(k, skills)",1053,6040,77,2017-04-17 19:04:00,51,3,2,13,0
2967,26459430,"import pdb

def maxim(k, skills):
	def getScore(skills):
		score = 0.0
		for i in skills:
			score += (float(i)/10.0)//1.0

		return int(score)

	rank=[]
	for s in skills:
		if s == 10:
			distance = 0
		else:
			distance = 10-s%10
			
		rank.append(distance)


	srank = rank[:]
	srank.sort()

	irank = []
	for s in srank:
		irank.append(rank.index(s))

	correctOrder = []
	for i in irank:
		correctOrder.append(skills[i])

	# pdb.set_trace()

	skills.sort()

	i = 0
	while i<len(skills) and k > 0:
		if correctOrder[i] %10 != 0 or correctOrder[i] == 0:
			correctOrder[i]+=1
			k-=1
		else:
			i+=1


	return getScore(correctOrder)


n, k = map(int, raw_input().split())
skills = map(int, raw_input().split())

print maxim(k, skills)",1053,6032,77,2017-04-17 19:06:01,51,3,2,13,0
3033,26513491,"'''input
2 4
7 9
'''
n, k = map(int, input().split())
a = list(map(int, input().split()))
a1 = map(str, a)
a1 = list(map(int, sorted(a1, key=lambda x: x[-1], reverse=True)))
while k > 0:
	for x in range(n):
		c = 10 - a1[x] % 10
		if c <= k:
			a1[x] += c
			k -= c
		else:
			print(min(sum([x//10 for x in a1]), n*100))
			quit()
print(min(sum([x//10 for x in a1]), n*10))",531,10324,639,2017-04-20 13:56:02,18,3,2,8,0
3034,26513527,"'''input
10 10000
1 1 1 1 1 1 1 1 1 1
'''
n, k = map(int, input().split())
a = list(map(int, input().split()))
a1 = map(str, a)
a1 = list(map(int, sorted(a1, key=lambda x: x[-1], reverse=True)))
while k > 0:
	for x in range(n):
		c = 10 - a1[x] % 10
		if c <= k:
			a1[x] += c
			k -= c
		else:
			print(min(sum([x//10 for x in a1]), n*10))
			quit()
print(min(sum([x//10 for x in a1]), 10*n))",531,11196,795,2017-04-20 13:58:10,18,3,1,8,0
3629,27236581,"import sys
import math

a,b = map(int, input().split())
print(min(a,b), max(a,b) // 2)",1307,0,46,2017-05-20 18:12:05,9,2,2,8,0
3630,27236585,"import sys
import math

a,b = map(int, input().split())
print(min(a,b), (max(a,b) - min(a,b))// 2)",1307,0,62,2017-05-20 18:12:38,9,2,1,8,0
3672,27270220,"st = raw_input()
l st.split()
a = int(l[0])
b = int(l[1])
small = a
big = b
if b<=a:
	small = b
	big = a
sum = 0
sum += big - small
sum1 = small 
print str(sum1) + "" "" + str(sum/2)",1323,0,0,2017-05-21 18:56:57,13,2,4,13,0
3673,27270231,"st = raw_input()
l=st.split()
a = int(l[0])
b = int(l[1])
small = a
big = b
if b<=a:
	small = b
	big = a
sum = 0
sum += big - small
sum1 = small 
print str(sum1) + "" "" + str(sum/2)",1323,8,46,2017-05-21 18:57:31,13,2,1,13,0
3690,27293235,"import math as m
a , b = int(input()), int(input())
if a>b:
    print(b,end=' ')
    print (m.floor(m.fabs(a-b)/2))

else:
    print(a,end=' ')
    print(m.floor(m.fabs(a-b)/2))",1332,12,62,2017-05-23 06:09:37,17,2,5,8,0
3691,27293303,"import math as m
a , b = int(input()), int(input())

if a > b:
        print(b, "" "", m.floor(m.fabs(a-b)/2))
else:
    print(a, "" "", m.floor(m.fabs(a - b) / 2))",1332,0,46,2017-05-23 06:15:57,13,2,5,8,0
4158,27548346,"from math import *

n,k=tuple(input().split("" ""))
n=int(n)
k=int(k)
skills=[int(x) for x in input().split("" "")]
toNext=[]
rating=0
for x in skills:
    toNext.append(ceil(x/10)*10-x)
    rating+=x//10
toNext.sort()
for x in toNext:
    if k>=x:
        rating+=1
        k-=x
    else:
        break
print(rating)",1460,0,61,2017-06-03 19:01:30,37,3,2,8,0
4159,27548417,"from math import *

n,k=tuple(input().split("" ""))
n=int(n)
k=int(k)
skills=[int(x) for x in input().split("" "")]
toNext=[]
rating=0
for x in skills:
    toNext.append(ceil(x/10)*10-x)
    if toNext[-1]==0 and x==100:
        toNext.remove(0)
    elif toNext[-1]==0:
        toNext[-1]=10
    rating+=x//10
toNext.sort()
for x in toNext:
    if k>=x and k>0:
        rating+=1
        k-=x
    else:
        break
print(rating)",1460,0,46,2017-06-03 19:05:49,45,3,2,8,0
4306,27701939,"a=list(map(int, input().strip.split(' ')))
x=int(abs(a[1]-a[0])/2)
if(a[0]<a[1]):
    min=a[0]
else:
    min=a[1]
print(min, x)",1518,0,61,2017-06-10 10:47:19,13,2,5,8,0
4307,27701957,"a=list(map(int, input().strip().split(' ')))
x=int(abs(a[1]-a[0])/2)
if(a[0]<a[1]):
    min=a[0]
else:
    min=a[1]
print(min, x)",1518,16,77,2017-06-10 10:48:52,13,2,1,8,0
4515,27819831,"# 581C
# O(n*log(n)) time
# θ(n) space

__author__ = 'artyom'


# SOLUTION

def main():
    n, k = read(3)
    a = sorted(read(3), key=lambda x: x % 10, reverse=True)
    res = 0
    for v in a:
        res += v // 10
        rem = 10 - v % 10
        if 0 < rem <= k:
            k -= rem
            res += 1
    return res + k // 10


# HELPERS

def read(mode=1, size=None):
    # 0: String
    # 1: Integer
    # 2: List of strings
    # 3: List of integers
    # 4: Matrix of integers
    if mode == 0: return input().strip()
    if mode == 1: return int(input().strip())
    if mode == 2: return input().strip().split()
    if mode == 3: return list(map(int, input().strip().split()))
    a = []
    for _ in range(size):
        a.append(read(3))
    return a


def write(s=""\n""):
    if s is None: s = ''
    if isinstance(s, tuple) or isinstance(s, list): s = ' '.join(map(str, s))
    s = str(s)
    print(s, end=""\n"")


write(main())",227,0,61,2017-06-16 10:58:13,95,3,2,8,0
4516,27819919,"# 581C
# O(n*log(n)) time
# θ(n) space

__author__ = 'artyom'


# SOLUTION

def main():
    n, k = read(3)
    a = sorted(read(3), key=lambda x: x % 10, reverse=True)
    res = 0
    ex = 0
    for v in a:
        res += v // 10
        rem = 10 - v % 10
        if 0 < rem <= k:
            k -= rem
            res += 1
            ex += 100 - (v + rem)
        else:
            ex += 100 - v
    return res + min(k, ex) // 10


# HELPERS

def read(mode=1, size=None):
    # 0: String
    # 1: Integer
    # 2: List of strings
    # 3: List of integers
    # 4: Matrix of integers
    if mode == 0: return input().strip()
    if mode == 1: return int(input().strip())
    if mode == 2: return input().strip().split()
    if mode == 3: return list(map(int, input().strip().split()))
    a = []
    for _ in range(size):
        a.append(read(3))
    return a


def write(s=""\n""):
    if s is None: s = ''
    if isinstance(s, tuple) or isinstance(s, list): s = ' '.join(map(str, s))
    s = str(s)
    print(s, end=""\n"")


write(main())",227,5312,171,2017-06-16 11:03:01,103,3,1,8,0
4623,27917248,"#!/bin/python3

a, b = [int(i) for i in (input().split())]
different = min(a, b)
a -= different
b -= different
same = max(a, b)

print(different, same//2)",1653,4,62,2017-06-20 07:47:11,17,2,1,8,0
4624,27917271,"#!/bin/python3

a, b = [int(i) for i in (input().split())]

print(min(a,b), (max(a,b)-min(a,b))//2)",1653,8,77,2017-06-20 07:49:01,9,2,1,8,0
4840,28137546,"#BeEf_Killer_______
#          / _   _ \
#         / (.) (.) \
#        ( _________ )
#         \`-V-|-V-'/
#          \   |   /
#           \  ^  /
#            \    \
#             \    `-_
#              `-_    -_
#                 -_    -_
#                 _-    _-
#               _-    _-
#             _-    _-
#           _-    _-
#           -_    -_
#             -_    -_
#               -_    -_
#                 -_    -_
#                 _-    _-
#       ,-=:_-_-_-_ _ _-_-_-_:=-.
#      /=I=I=I=I=I=I=I=I=I=I=I=I=\
#     |=I=I=I=I=I=I=I=I=I=I=I=I=I=|
#     |I=I=I=I=I=I=I=I=I=I=I=I=I=I|
#     \=I=I=I=I=I=I=I=I=I=I=I=I=I=/
#      \=I=I=I=I=I=I=I=I=I=I=I=I=/
#       \=I=I=I=I=I=I=I=I=I=I=I=/
#        \=I=I=I=I=I=I=I=I=I=I=/
#         \=I=I=I=I=I=I=I=I=I=/
#          `================='
#To(o_C)lose
n = int(input())
a = list(map(int, input().split()))
m = -1
ans = []
for i in range(n):
      if a[n-i-1] > m:
        ans.append(""0"")
      else:
        ans.append(str(m+1-a[n-i-1]))

      m = max(a[n-i-1], m)

print("" "".join(ans[::-1]))",1718,4548,30,2017-06-29 13:56:18,87,1,5,13,0
4841,28137692,"#BeEf_Killer_______
#          / _   _ \
#         / (.) (.) \
#        ( _________ )
#         \`-V-|-V-'/
#          \   |   /
#           \  ^  /
#            \    \
#             \    `-_
#              `-_    -_
#                 -_    -_
#                 _-    _-
#               _-    _-
#             _-    _-
#           _-    _-
#           -_    -_
#             -_    -_
#               -_    -_
#                 -_    -_
#                 _-    _-
#       ,-=:_-_-_-_ _ _-_-_-_:=-.
#      /=I=I=I=I=I=I=I=I=I=I=I=I=\
#     |=I=I=I=I=I=I=I=I=I=I=I=I=I=|
#     |I=I=I=I=I=I=I=I=I=I=I=I=I=I|
#     \=I=I=I=I=I=I=I=I=I=I=I=I=I=/
#      \=I=I=I=I=I=I=I=I=I=I=I=I=/
#       \=I=I=I=I=I=I=I=I=I=I=I=/
#        \=I=I=I=I=I=I=I=I=I=I=/
#         \=I=I=I=I=I=I=I=I=I=/
#          `================='
#To(o_C)lose

n = int(raw_input());
inp = raw_input().split();
inp.reverse();
mx = -1;
ans=[];
for el in inp:
	x = int(el);
	if mx == -1 or x >  mx:
		ans.append('0')
	else:
		ans.append(str(mx - x + 1))
	mx = max(mx, x);
ans.reverse();
print "" "".join(ans);",1718,13760,218,2017-06-29 14:04:45,91,1,1,13,0
4892,28207113,"n = int(input())
string = input()
numbers = string.split("" "")
for x in range(n):
    numbers[x] = int(numbers[x])
floors = []
for x in range(n - 1):
    a = numbers[x]
    b = max(numbers[(x + 1):])
    if a > b:
        floors.append(""0"")
    else:
        floors.append(str(b - a + 1))
floors.append(""0"")
print("" "".join(floors))",1633,11576,1000,2017-07-02 12:12:10,29,1,3,8,0
4893,28207357,"n = int(input())
string = input()
numbers = string.split("" "")
for x in range(n):
    numbers[x] = int(numbers[x])
floors = []
maximum = numbers[n - 1]
for x in range(n - 2, -1, -1):
    a = numbers[x]
    if a > maximum:
        maximum = a
        floors.append(""0"")
    else:
        floors.append(str(maximum - a + 1))
floors = floors[::-1]
floors.append(""0"")
print("" "".join(floors))",1633,16572,202,2017-07-02 12:27:04,33,1,1,8,0
4978,28316800,"n1, n2 = map(int, input().strip().split(' '))

if n1 != n2:
	mx = max(n1, n2)
	mn = min(n1, n2)
	rem = mx - mn
	if rem > 1:
		sc = int(rem / 2)
	else:
		sc = 0

print(mn, sc)",1811,4480,46,2017-07-06 08:32:55,23,2,5,8,0
4979,28316836,"n1, n2 = map(int, input().strip().split(' '))

if n1 != n2:
	mx = max(n1, n2)
	mn = min(n1, n2)
	dc = mn
	rem = mx - mn
	if rem > 1:
		sc = int(rem / 2)
	else:
		sc = 0
else:
	dc = n1
	sc = 0

print(dc, sc)",1811,5436,62,2017-07-06 08:35:07,31,2,1,8,0
5101,28423256,"a, b = map(int, input().split())
x = min(a, b)
a -= x
b -= x
y = a // 2 + b // 2
print(x + "" "" + y)",1865,4500,46,2017-07-11 11:31:17,11,2,5,8,0
5107,28425472,"a, b = map(int, input().split())
x = min(a, b)
a -= x
b -= x
y = a // 2 + b // 2
print(str(x) + "" "" + str(y))",1865,5448,61,2017-07-11 14:53:17,11,2,1,8,0
5116,28490622,"x = int(input())

lista = list(map(int, input().split()))
velox = """"
for i in range(x-1):
  lia = lista[i+1:]
  velox+= str((max(lia)+1-lista[i])) + "" ""
velox+= ""0""
  
print(velox)",1872,4472,46,2017-07-13 08:36:03,19,1,2,8,0
5117,28490663,"x = int(input())

lista = list(map(int, input().split()))
velox = """"
for i in range(x-1):
  lia = lista[i+1:]
  if((max(lia)+1-lista[i]) < 0):
    valor = 0
  else:
    valor = max(lia)+1-lista[i]
  velox += str(valor) + "" ""
velox+= ""0""
  
print(velox)",1872,11484,1000,2017-07-13 08:37:47,27,1,3,8,0
5120,28495490,"from sys import stdin
n=int(input())
z=tuple(map(int,stdin.readline().split()))
i=0
g=max(z)
max_i=z.index(g)
while(i<n-1):
    if(i>max_i):
        g=max(z[i:])
        max_i=z.index(g)
    if(i==max_i):
        print(0,end="" "")
    else:
        print(z[max_i]-z[i]+1,end="" "")
    i+=1
print(0)",1857,12676,1000,2017-07-13 11:21:28,31,1,3,8,0
5121,28495563,"n=int(input())
a=list(map(int,input().split()))
x=1
r=[]
for i in range(n-1,-1,-1):r+=[max(x-a[i],0)];x=max(x,a[i]+1)
print(' '.join(map(str,r[::-1])))",1857,15808,202,2017-07-13 11:23:39,11,1,1,8,0
5457,28692302,"string = input()
numbers = string.split()
a, b = int(numbers[0]), int(numbers[1])
string = input()
skills = list(map(int, string.split()))
order = sorted(map(lambda x: 10 - x % 10, skills))
global n
n = 0
def improve():
    global n, s
    condition = False
    for x in range(a):
        if skills[x] < 100:
            condition = True
            n += order[x]
            if n > b:
                break
            r = 10 - order[x]
            for y in range(a):
                if skills[y] % 10 == r:
                    skills[y] += r
                    break
            order[x] = 10
    else:
        if condition:
            improve()
improve()
print(sum(map(lambda x: x // 10, skills)))",1633,4520,61,2017-07-19 12:38:53,55,3,2,8,0
5459,28692383,"string = input()
numbers = string.split()
a, b = int(numbers[0]), int(numbers[1])
string = input()
skills = list(map(int, string.split()))
order = sorted(map(lambda x: 10 - x % 10, skills))
global n
n = 0
def improve():
    global n, s
    condition = False
    for x in range(a):
        if skills[x] < 100:
            condition = True
            n += order[x]
            if n > b:
                break
            r = 10 - order[x]
            for y in range(a):
                if skills[y] % 10 == r:
                    skills[y] += order[x]
                    break
            order[x] = 10
    else:
        if condition:
            improve()
improve()
print(sum(map(lambda x: x // 10, skills)))",1633,6484,1000,2017-07-19 12:42:15,55,3,3,8,0
5920,28745827,"n = int(input().strip())
ll = list(map(int,input().split()))
k = ll[-1]
otvet = '0'
for i in range(n-2,-1,-1):
    if ll[i] > k:
        k = ll[i]
        otvet = '0 ' + otvet
    else:
        otvet = str(k - ll[i] + 1) + ' ' + otvet
print(otvet)",1673,11564,1000,2017-07-21 12:11:20,21,1,3,8,0
5925,28746288,"n = int(input().strip())
ll = list(map(int,input().split()))
k = ll[-1] + 1
otvet = '0'
for i in range(n-2,-1,-1):
    if ll[i] >= k:
        k = ll[i] + 1
        otvet = ' 0 ' + otvet
    else:
        otvet = str(k - ll[i]) + otvet
print(otvet)",1673,4448,31,2017-07-21 12:30:41,21,1,2,8,0
6304,29225381,"n = int(input())
a = [int(x) for x in input().split()]
for i in range (0, n - 1):
	mx=a[i + 1]
	for j in range (i + 1, n):
		if a[j] > mx:
			mx = a[j]
        print(max(mx - a[i] + 1, 0),end=' ')
print('0')",2113,0,0,2017-08-05 21:20:38,17,1,4,8,0
6305,29225430,"n = int(input())
a = [int(x) for x in input().split()]
for i in range (0, n - 1):
    mx=a[i + 1]
    for j in range (i + 1, n):
        if a[j] > mx:
            mx = a[j]
    print(max(mx - a[i] + 1, 0), end=' ')
print('0')",2113,11484,1000,2017-08-05 21:23:23,17,1,3,8,0
6316,29248907,"#!/usr/bin/python3

from itertools import permutations


def isqrt(x):
    l, r = 0, 10**100
    while l < r - 1:
        mid = (l + r) // 2
        if mid ** 2 > x:
            r = mid
        else:
            l = mid
    return l


x1, y1, x2, y2, x3, y3 = map(int, input().split())
p = [(x1, y1, ""A""), (x2, y2, ""B""), (x3, y3, ""C"")]

s = x1 * y1 + x2 * y2 + x3 * y3
x = isqrt(s)
if x * x != s:
    print(-1)
    exit(0)

for mask in range(1 << 3):
    q = []
    for i in range(3):
        if (mask >> i) & 1:
            q.append((p[i][0], p[i][1], p[i][2]))
        else:
            q.append((p[i][1], p[i][0], p[i][2]))
    if q[0][0] == q[1][0] == q[2][0] == x:
        for i in range(q[0][1]):
            print(""A"" * x)
        for i in range(q[1][1]):
            print(""B"" * x)
        for i in range(q[2][1]):
            print(""C"" * x)
        exit(0)
    for r in permutations(q):
        t = list(r)
        if t[0][0] == x and t[0][1] + t[1][1] == x and t[0][1] + t[2][1] == x and t[1][0] + t[2][0] == x:
            for i in range(t[0][1]):
                print(t[0][2] * x)
            for i in range(x - t[0][1]):
                print(t[1][2] * t[1][0] + t[2][2] * t[2][0])
            exit(0)

print(-1)",2118,4720,46,2017-08-07 00:01:21,50,4,2,8,0
6317,29248921,"#!/usr/bin/python3

from itertools import permutations


def isqrt(x):
    l, r = 0, 10**100
    while l < r - 1:
        mid = (l + r) // 2
        if mid ** 2 > x:
            r = mid
        else:
            l = mid
    return l


x1, y1, x2, y2, x3, y3 = map(int, input().split())
p = [(x1, y1, ""A""), (x2, y2, ""B""), (x3, y3, ""C"")]

s = x1 * y1 + x2 * y2 + x3 * y3
x = isqrt(s)
if x * x != s:
    print(-1)
    exit(0)

for mask in range(1 << 3):
    q = []
    for i in range(3):
        if (mask >> i) & 1:
            q.append((p[i][0], p[i][1], p[i][2]))
        else:
            q.append((p[i][1], p[i][0], p[i][2]))
    if q[0][0] == q[1][0] == q[2][0] == x:
        print(x)
        for i in range(q[0][1]):
            print(""A"" * x)
        for i in range(q[1][1]):
            print(""B"" * x)
        for i in range(q[2][1]):
            print(""C"" * x)
        exit(0)
    for r in permutations(q):
        t = list(r)
        if t[0][0] == x and t[0][1] + t[1][1] == x and t[0][1] + t[2][1] == x and t[1][0] + t[2][0] == x:
            print(x)
            for i in range(t[0][1]):
                print(t[0][2] * x)
            for i in range(x - t[0][1]):
                print(t[1][2] * t[1][0] + t[2][2] * t[2][0])
            exit(0)

print(-1)",2118,4776,62,2017-08-07 00:02:28,52,4,1,8,0
6669,13405427,"n = int(input())
values = list(map(int, input().split()))
dct = dict()
cnt = n * n - n
for a in values:
    if a not in dct:
        dct[a] = 1            
    else:
        dct[a] += 1
        if cnt and (dct[a] >= cnt):
            dct[a] -= cnt
            cnt = 0
        elif cnt and (dct[a] < cnt):
            cnt -= dct[a]
            dct[a] = 0
            
items = list(dct.items())
for k in items:
    if k[1]:
        for i in range(k[1]):
            print(k[0], end = ' ')",2253,4608,296,2015-10-04 19:38:34,41,7,2,8,0
6691,13405984,"n = int(input())
a = list(map(int, input().split()))
ans = []
max = 0
for i in range(n):
    for j in range(n * n):
        if a[j] > a[max]:
            max = j
    ans.append(a[max])
    a[max] = 0
print(' '.join(map(str, ans)))",2253,0,46,2015-10-04 20:21:43,21,7,2,8,0
6789,13408208,"def gcd(a,b):
    c = min(a,b)
    d = max(a,b)
    while c!=0:
        t = c
        c = d%c
        d = t
    return d

def sort(a, lo, hi):
    if lo >= hi - 1:
        return
    mid = (lo + hi)/2
    sort(a,lo,mid);
    sort(a,mid,hi);

    result = [0 for i in range(hi - lo)]
    left = lo
    right = mid
    tol = hi - lo
    for i in range(tol):
        if right == hi or (left < mid and a[left]<=a[right]):
            result[i] = a[left]
            left+=1
        else:
            result[i] = a[right]
            right+=1
    for i in range(tol):
        a[lo + i] = result[i]

n = int(raw_input())
ns = raw_input().split()
nsInt = [0 for i in range(n*n)]
for i in range(len(ns)):
    nsInt[i] = int(ns[i])
sort(nsInt,0,len(nsInt))
ans = []
counts = {}
for i in reversed(nsInt):
    if(counts.get(i,0) > 0):
        counts[i]-=1
    else:
        for ans_i in ans:
            div = gcd(ans_i,i)
            counts[div] = counts.get(div,0) + 2
        ans.append(i)
print ' '.join([str(x) for x in ans])",2236,9768,2000,2015-10-04 23:42:45,93,7,3,13,0
6791,13408219,"def gcd(a,b):
    c = min(a,b)
    d = max(a,b)
    while c != 0:
        t = c
        c = d % c
        d = t
    return d

def sort(a, lo, hi):
    if lo >= hi - 1:
        return
    mid = (lo + hi)/2
    sort(a,lo,mid);
    sort(a,mid,hi);

    result = [0 for i in range(hi - lo)]
    left = lo
    right = mid
    tol = hi - lo
    for i in range(tol):
        if right == hi or (left < mid and a[left]<=a[right]):
            result[i] = a[left]
            left+=1
        else:
            result[i] = a[right]
            right+=1
    for i in range(tol):
        a[lo + i] = result[i]

n = int(raw_input())
ns = raw_input().split()
nsInt = [0 for i in range(n*n)]
for i in range(len(ns)):
    nsInt[i] = int(ns[i])
#sort(nsInt,0,len(nsInt))
nsInt.sort()
ans = []
counts = {}
for i in reversed(nsInt):
    if(counts.get(i,0) > 0):
        counts[i]-=1
    else:
        for ans_i in ans:
            div = gcd(ans_i,i)
            counts[div] = counts.get(div,0) + 2
        ans.append(i)
print ' '.join([str(x) for x in ans])",2236,17384,639,2015-10-04 23:45:18,95,7,1,13,0
7001,13414633,"def longest(seq):
    dp = [(1, seq[0])]
    max_so_far = 1

    for elem in seq[1:]:
        candid = (1, elem)
        for l_max, last_elem  in dp:
            if elem >= last_elem and candid[0] < (l_max + 1):
                candid = (l_max + 1, elem)

        if candid[0] > max_so_far:
            max_so_far = candid[0]

        dp.append(candid)

    return max_so_far

n, t = [int(x) for x in raw_input().split()]
seq = [int(x) for x in raw_input().split()]


if t <= n:
    to_look = seq * t
    print longest(to_look)

else:
    to_look2 = longest(seq * (n + 1))
    to_look1 = longest(seq * (n))
    diff = to_look2 - to_look1

    print to_look1 + (t - n) * diff",2379,360,1000,2015-10-05 14:31:09,31,9,3,13,0
7002,13414704,"def longest(seq):
    dp = [(1, seq[0])]
    max_so_far = 1

    for elem in seq[1:]:
        candid = (1, elem)
        for l_max, last_elem  in dp:
            if elem >= last_elem and candid[0] < (l_max + 1):
                candid = (l_max + 1, elem)

        if candid[0] > max_so_far:
            max_so_far = candid[0]

        dp.append(candid)

    return max_so_far

n, t = [int(x) for x in raw_input().split()]
seq = [int(x) for x in raw_input().split()]


if t <= n:
    to_look = seq * t
    print longest(to_look)

else:
    to_look2 = longest(seq * 2)
    to_look1 = longest(seq)
    diff = to_look2 - to_look1

    print to_look1 + (t - 1) * diff",2379,4,46,2015-10-05 14:35:43,31,9,2,13,0
7175,13421196,"from collections import defaultdict
import sys

lines = sys.stdin.readlines()
p = lines[0].split()
n, t = int(p[0]), int(p[1])

A = map(int, lines[1].split())
assert len(A) == n
bound = min(n*n, n*t)
dp = [0] * bound

cnts = defaultdict(int)
for a in A:
    cnts[a] += 1

max_cnt = max(cnts.values())

for _ in range(0, n-1):
    A = A + A

res = 0
for i in range(0, bound):
    for j in range(0, 2 * n):
        prev_val = 0 if (i - j < 0) else dp[i-j]
        if i - j >= 0 and A[i] >= A[i-j]:
            dp[i] = max(dp[i], prev_val + 1)
            res = max(res, dp[i])


print res + max(t - n, 0) * max_cnt",2444,262144,249,2015-10-05 21:34:33,31,9,6,13,0
7176,13421265,"from collections import defaultdict
import sys

lines = sys.stdin.readlines()
p = lines[0].split()
n, t = int(p[0]), int(p[1])

A = map(int, lines[1].split())
assert len(A) == n
bound = min(n*n, n*t)
dp = [0] * (2*n)

cnts = defaultdict(int)
for a in A:
    cnts[a] += 1

max_cnt = max(cnts.values())

def val_at(idx):
    return A[idx % n]

def get_dp(idx):
    return dp[idx % (2 * n)]

def store_dp(idx, val):
    dp[idx % (2 * n)] = val


res = 0
for i in range(0, bound):
    for j in range(0, 2 * n):
        prev_val = 0 if (i - j < 0) else get_dp(i - j)
        if i - j >= 0 and val_at(i) >= val_at(i - j):
            best = max(get_dp(i), prev_val + 1)
            store_dp(i, best)
            res = max(res, best)


print res + max(t - n, 0) * max_cnt",2444,596,1000,2015-10-05 21:38:45,39,9,3,13,0
7199,13421824,"input()

dictionary = {}
for element in map(int, input().split()):
    if element not in dictionary: dictionary[element] = 1
    else: dictionary[element] += 1

answer = []
for number in sorted(dictionary.keys(), reverse=True):
    while dictionary[number] > 0:
        answer.append(number)
        for key in answer:
            num = number
            while num: num, key = key, num%key
            dictionary[key] -= 2
        dictionary[number] += 1

print(' '.join(map(str, answer)))",2456,0,46,2015-10-05 22:24:51,35,7,5,8,0
7201,13421895,"input()
dictionary = {}
for element in map(int, input().split()):
    if element not in dictionary: dictionary[element] = 1
    else: dictionary[element] += 1

answer = []
for number in sorted(dictionary.keys(), reverse=True):
    while dictionary[number] > 0:
        answer.append(number)
        for key in answer:
            num = number
            while num: key, num = num, key%num
            dictionary[key] -= 2
        dictionary[number] += 1

print(' '.join(map(str, answer)))",2456,16292,717,2015-10-05 22:30:18,33,7,1,8,0
7670,13471153,"def gcd(a,b):
    while b: a,b=b,a%b
    return a
n=int(input())
l=list(map(int,input().split()))
m={}
ans=[]
for x in l: m[x]=m.get(x,0)+1
for x in sorted(m.keys())[::-1]:
    while m[x]:
      for y in ans: m[gcd(x,y)]-=2
      ans+=[x]
print(' '.join(map(str,ans)))",2606,0,2000,2015-10-07 13:46:31,25,7,3,8,0
7671,13471172,"def gcd(a,b):
    while b: a,b=b,a%b
    return a
n=int(input())
l=list(map(int,input().split()))
m={}
ans=[]
for x in l: m[x]=m.get(x,0)+1
for x in sorted(m.keys())[::-1]:
    while m[x]:
      for y in ans: m[gcd(x,y)]-=2
      ans+=[x]
      m[x]-=1
print(' '.join(map(str,ans)))",2606,18196,561,2015-10-07 13:47:46,27,7,1,8,0
7914,13496704,"__author__ = 'JohnHook'

def nvp(a):
    d = []
    for i in range(len(a)):
        d.append(1)
        for j in range(i):
            if a[j] <= a[i]:
                d[i] = max(d[i], d[j] + 1)
    return max(d)

n, t = list(map(int, input().split()))
a = list(map(int, input().split()))

k = 8
if t < 2 * k + 1:
    print(nvp(a * t))
else:
    print(nvp(a * 2 * k) + (nvp(a * (2 * k + 1)) - nvp(a * 2 * k)) * (t - 2 * k))",2666,0,1000,2015-10-08 18:55:45,37,9,3,8,0
7959,13501512,"import fractions

def gcd(a, b):
    """"""Calculate the Greatest Common Divisor of a and b.

    Unless b==0, the result will have the same sign as b (so that when
    b is divided by it, the result comes out positive).
    """"""
    while b:
        a, b = b, a%b
    return a

n = int(input())
ns = list(map(int, input().strip().split(' ')))

a = []
skip = {}
ns = sorted(ns, reverse=True)

for i, num in enumerate(ns):
    if num in skip and skip[num] > 0:
        skip[num] -= 1
        continue

    a.append(str(num))
    if len(a) == n:
        break

    for i in range(0, i):
        gcd_ = gcd(ns[i], num)
        if not gcd_ in skip:
            skip[gcd_] = 0
        skip[gcd_] += 2

print(' '.join(a))",2674,9532,2000,2015-10-09 01:14:25,35,7,3,8,0
7960,13501579,"import fractions

n = int(input())
ns = list(map(int, input().strip().split(' ')))

a = []
skip = {}
ns = sorted(ns, reverse=True)

for i, num in enumerate(ns):
    if num in skip and skip[num] > 0:
        skip[num] -= 1
        continue

    a.append(num)
    if len(a) == n:
        break

    for other in a:
        gcd = fractions.gcd(other, num)
        if not gcd in skip:
            skip[gcd] = 0
        skip[gcd] += 2

print(' '.join(map(str, a)))",2674,20396,670,2015-10-09 01:24:38,25,7,1,8,0
7964,13501755,"def up1(a,t,option=True):
	if option:
		big = min(a)
	else:
		big = a[0]
	count=0
	for i in itertools.repeat(a,t)[a.index(big):]:
		if i>=big:
			big=i
			count+=1
	return count
	
	
n,t=map(int,raw_input().split(' '))
a=raw_input().split(' ')
print max(up1(a,t,True),up1(a,t,False))",2681,8,46,2015-10-09 02:04:21,31,9,5,13,0
7966,13501784,"import itertools
def up1(a,option=True):
	if option:
		big = min(a)
	else:
		big = a[0]
	count=0
	for i in a[a.index(big):]:
		if i>=big:
			big=i
			count+=1
	return count
	
	
n,t=map(int,raw_input().split(' '))
a=(raw_input()+' ')*t
print max(up1(a,True),up1(a,False))",2681,832,109,2015-10-09 02:10:04,33,9,2,13,0
8204,13539577,"# -*- coding: utf-8 -*- 
#
# Author : fcbruce <fcbruce8964@gmail.com>
#
# Time : Sun 11 Oct 2015 09:36:51 AM CST
#
#

n = input()

a = map(int, raw_input().split())

b = {}


for x in a:
    if x not in b.keys(): b[x] = 0
    b[x] += 1

for k, v in b.items():
    if v % 2 == 1:
        print k,
        n -= 1

for k, v in reversed(b.items()):
    if n == 0: break

    if v % 2 == 0:
        while n and v: 
            print k,
            n -= 1
            v -= 1",43,2984,951,2015-10-11 04:59:44,32,7,2,13,0
8205,13539598,"# -*- coding: utf-8 -*- 
#
# Author : fcbruce <fcbruce8964@gmail.com>
#
# Time : Sun 11 Oct 2015 09:36:51 AM CST
#
#

n = input()

a = map(int, raw_input().split())

b = {}


for x in a:
    if x not in b.keys(): b[x] = 0
    b[x] += 1

for k, v in b.items():
    if v % 2 == 1:
        print k,
        n -= 1

while n:
    for k, v in reversed(b.items()):
        if n == 0: break

        if v % 2 == 0:
            print k, k
            n -= 2
            v -= 2",14,2956,997,2015-10-11 05:04:10,32,7,2,13,0
8207,13539614,"# -*- coding: utf-8 -*- 
#
# Author : fcbruce <fcbruce8964@gmail.com>
#
# Time : Sun 11 Oct 2015 09:36:51 AM CST
#
#

n = input()

a = map(int, raw_input().split())

b = {}


for x in a:
    if x not in b.keys(): b[x] = 0
    b[x] += 1

for k, v in b.items():
    if v % 2 == 1:
        print k,
        n -= 1
        b[k] -= 1

while n:
    for k, v in reversed(b.items()):
        if n == 0: break

        if v % 2 == 0:
            print k, k,
            b[k] -= 2
            n -= 2",43,2996,951,2015-10-11 05:06:35,33,7,2,13,0
8222,13540890,"# -*- coding: utf-8 -*- 
#
# Author : fcbruce <fcbruce8964@gmail.com>
#
# Time : Sun 11 Oct 2015 09:36:51 AM CST
#
#

def gcd(a, b):
    if b == 0: return a
    return gcd(b, a % b)

n = input()

a = map(int, raw_input().split())

b = {}

g = []



for x in a:
    b[x] = b.get(x, 0) + 1

while b:
    x = max(b)
    print x,
    b[x] -= 1
    if b[x] == 0: del b[x]
    for y in g:
        d = gcd(x, y)
        b[d] -= 2
        if (b[d] == 0): del b[d]

    g.append(x)",14,13164,686,2015-10-11 08:28:37,36,7,1,13,1
8253,13545156,"def gcd(a,b):
    while b: a,b=b,a%b
    return a

n = input()
a = sorted(map(int, raw_input().split()))
c = {}
for x in a:
    c[x] = c.get(x,0)+1

ans=[]
for x in sorted(c.keys())[::-1]:
    while c[x]:
        for y in ans: c[gcd(x,y)] -= 2
        ans += [x]
        c[x] -= 1
print (' '.join(map(str,ans)))",2751,0,46,2015-10-11 14:56:04,17,7,5,8,0
8254,13545162,"def gcd(a,b):
    while b: a,b=b,a%b
    return a

n = input()
a = sorted(map(int, raw_input().split()))
c = {}
for x in a:
    c[x] = c.get(x,0)+1

ans=[]
for x in sorted(c.keys())[::-1]:
    while c[x]:
        for y in ans: c[gcd(x,y)] -= 2
        ans += [x]
        c[x] -= 1
print (' '.join(map(str,ans)))",2751,13224,452,2015-10-11 14:56:28,17,7,1,13,0
8558,13607754,"__author__ = 'JohnHook'

# def nvp(a):
#     d = []
#     for i in range(len(a)):
#         d.append(1)
#         for j in range(i):
#             if a[j] <= a[i]:
#                 d[i] = max(d[i], d[j] + 1)
#     return max(d)


INF = float('Inf')
n, t = list(map(int, input().split()))
a = list(map(int, input().split()))
def nvp(a):
    global n
    t = len(a) // n
    a = [-INF] + a
    d = []
    for i in range(t * n + 1):
        d.append([0, 0])
    for i in range(1, t * n + 1):
        for j in range(i - 1, max(-1, i - n - 1), -1):
            if d[j][1] + 1 >= d[i][1] and d[j][0] <= a[i]:
                d[i][0] = a[i]
                d[i][1] = d[j][1] + 1
        if d[i][1] < d[i - 1][1]:
            d[i] = d[i - 1]
    return d[t * n][1]

k = 101
if t < 2 * k + 1:
    print(nvp(a * t))
else:
    print(nvp(a * 2 * k) + (nvp(a * (2 * k + 1)) - nvp(a * 2 * k)) * (t - 2 * k))",2666,436,296,2015-10-14 16:28:02,71,9,2,8,0
9079,13916553,"from fractions import gcd

n = int(input()) 
a = sorted(list(map(int, input().split())))
count = {}
for i in a:
    count[i] = count.get(i,0) + 1 

ans = []
i = n-1
while(len(ans) < n):
    top = a.pop()
    while( count[top] < 1 ):
        top = a.pop()
    count[top] -= 1
    ans.append(top)
    for i in range(len(ans)):
        count[gcd(ans[-1], ans[i])] -= 2
print(' '.join(str(x) for x in ans))",2976,18732,701,2015-10-28 17:24:52,37,7,1,8,1
9080,13916616,"from fractions import gcd

n = int(input()) 
a = sorted(list(map(int, input().split())))
count = {}
for i in a:
    count[i] = count.get(i,0) + 1 

ans = []
i = n-1
while(len(ans) < n):
    top = a.pop()
    while( count[top] < 1 ):
        top = a.pop()
    count[top] -= 1
    ans.append(top)
    for i in range(len(ans)):
        count[gcd(ans[-1], ans[i])] -= 2
print(' '.join(str(x) for x in ans))",2976,18660,717,2015-10-28 17:28:40,37,7,1,8,1
9520,14353523,"__author__ = 'trunghieu11'


def gcd(a, b):
    a, b = abs(a), abs(b)
    while b != 0:
        a, b = b, a % b
    return a


def solve(n, A):
    A = sorted(A, reverse = True)
    answer = []
    for i in range(n):
        maxVal = A[0]
        A.remove(maxVal)
        for x in answer:
            val = gcd(maxVal, x)
            if val in A:
                A.remove(val)
                A.remove(val)
        answer.append(maxVal)
    return ' '.join(str(x) for x in answer)


if __name__ == '__main__':
    n = int(raw_input())
    A = map(int, raw_input().split("" ""))
    print solve(n, A)",3092,3572,2000,2015-11-20 06:22:43,57,7,3,13,0
9521,14353598,"__author__ = 'trunghieu11'


def gcd(a, b):
    a, b = abs(a), abs(b)
    while b != 0:
        a, b = b, a % b
    return a


def solve(n, A):
    total = {}
    for x in A:
        total[x] = (total[x] if x in total else 0) + 1
    answer = []
    for i in range(n):
        maxVal = max(list(total.keys()))
        total[maxVal] -= 1
        if total[maxVal] <= 0:
            total.pop(maxVal)
        for x in answer:
            val = gcd(maxVal, x)
            total[val] -= 2
            if total[val] <= 0:
                total.pop(val)
        answer.append(maxVal)
    return ' '.join(str(x) for x in answer)


if __name__ == '__main__':
    n = int(raw_input())
    A = map(int, raw_input().split("" ""))
    print solve(n, A)",3092,13236,405,2015-11-20 06:39:20,65,7,1,13,0
9544,14430738,"def gcd_table():
    n = int(raw_input())
    table = map(int, raw_input().split())
    
    for i in xrange(n):
            print table[i*n+i],
                
gcd_table()",3100,0,30,2015-11-23 20:40:13,15,7,2,13,0
9548,14441367,"def gcd_table():
    n = int(raw_input())
    table = map(int, raw_input().split())
    
    table.sort(reverse=True)
    last = None
    cnt = 0
    for e in table:
        if cnt == n:
            break
        elif e != last:
            cnt += 1
            last = e 
            print e,    
    print (""%d "" % (last)) * (n - cnt)        
                               
gcd_table()",3100,3100,171,2015-11-24 18:08:33,33,7,2,13,0
9602,14545579,"import sys

n = input()
l = raw_input().split()
a = [int(i) for i in l]

d = {}

for i in a:
    if d.has_key(i):
        d[i]+=1
    else:
        d[i]=1
ans = """"
count = 0
for i in d.keys():
    if d[i]%2==1:
        count+=1
        ans+=str(i) + ' '
for i in xrange(n-count):
    ans+='1 '
print ans",3111,3488,234,2015-11-28 21:18:23,43,7,2,13,0
9603,14547086,"import sys

n = input()
l = raw_input().split()
a = [int(i) for i in l]
a.sort(reverse=True)
d = {}

for i in a:
	if d.has_key(i):
		d[i]+=1
	else:
		d[i]=1

now = [0]

def getNext(now):
	while d[a[now[0]]]==0:
		now[0]+=1
	d[a[now[0]]]-=1
	return a[now[0]]

def gcd(a,b):
	if a%b==0: return b
	return gcd(b,a%b)

ans = [getNext(now)]


for i in xrange(n-1):
	x = getNext(now)
	for y in ans:
		d[gcd(x,y)]-=2
	ans.append(x)
res = """"
for i in ans: res+=str(i) + ' '
print res",3111,14104,733,2015-11-28 22:30:02,73,7,1,13,0
10048,15282308,"from math import sqrt

def gcd(a, b):
    return a if b == 0 else gcd(b, a%b)

def main():
    n = int(input())
    ns = map(int, raw_input().split())
    c = {k: ns.count(k) for k in ns}
    s = list(set(ns))[::-1]
    d = {}
    v = []
    
    for i in s:
        if c[i] > 0:
            for j in v: c[gcd(j, i)] -= 2
            how_many = int(sqrt(c[i] + 0.1))
            v += [i] * how_many
        
    print ' '.join(map(str, v))

main()",3245,20,62,2016-01-10 19:42:18,22,7,2,13,0
10049,15282899,"from math import sqrt

def gcd(a, b):
    return a if b == 0 else gcd(b, a%b)

def main():
    n = int(input())
    ns = map(int, raw_input().split())
    c = {k: ns.count(k) for k in ns}
    s = sorted(list(set(ns)))[::-1]
    d = {}
    v = []
    
    for i in s:
        if c[i] > 0:
            for j in v: c[gcd(j, i)] -= 2
            how_many = int(sqrt(c[i] + 0.1))
            v += [i] * how_many
        
    print ' '.join(map(str, v))

main()",3245,3108,2000,2016-01-10 20:54:13,22,7,3,13,0
10128,15543841,"def main():
    from collections import Counter
    from math import gcd, sqrt
    n = int(input())
    cnt = Counter(map(int, input().split()))
    kk = sorted(cnt.keys(), reverse=True)
    res = []
    for k in kk:
        c = Counter()
        for k0, v0 in res:
            q = gcd(k, k0)
            c[q] += v0
        b = c[k]
        del c[k]
        v = int(sqrt(b * b + cnt[k])) - b
        res.append((k, v))
        for k0, v0 in c.items():
            cnt[k0] -= v0 * v * 2
    print(*sorted((k for k, v in res for _ in range(v))))


if __name__ == '__main__':
    main()",3268,15472,577,2016-01-24 02:03:52,23,7,1,8,0
10129,15543905,"def main():
    from collections import Counter
    from math import gcd, sqrt
    input()
    cnt = Counter(map(int, input().split()))
    kk, res = sorted(cnt.keys(), reverse=True), []
    for k in kk:
        if cnt[k]:
            c = Counter()
            for k0, v0 in res:
                q = gcd(k, k0)
                c[q] += v0
            b = c[k]
            v = int(sqrt(b * b + cnt[k])) - b
            res.append((k, v))
            for k0, v0 in c.items():
                cnt[k0] -= v0 * v * 2
    print(*sorted((k for k, v in res for _ in range(v))))


if __name__ == '__main__':
    main()",3268,15116,280,2016-01-24 02:11:11,22,7,1,8,0
11293,19379206,"from fractions import gcd
n = int(input())
a = sorted(list(map(int, input().split())))
c = {}
l = []

for e in a:
    if e not in c:
        c[e] = 1
    else:
        c[e]+= 1

for e in a[::-1]:
    if c[e] > 0:
        c[e]-= 1
        for s in l:
            u = gcd(e, s)
            if u in c:
                c[u]-= 2
        l+=[e]
        
print(*l)",3529,0,0,2016-07-24 10:49:05,43,7,4,13,0
11294,19379231,"n=input()
a=map(int,raw_input().split())
def gcd(a,b):
    if not b: return a
    return gcd(b, a%b)
a.sort()
ans=[0]*n
ans[0]=a[-1]
k=1
d=dict()
for x in a[:-1]:
    d[x]=d.get(x,0)+1
for v in sorted(set(a[:-1]), reverse=True):
    while d[v]:
        d[v]-=1
        ans[k]=v
        for x in ans[:k]:
            g=gcd(v,x)
            d[g]=d[g]-2
        k+=1
print ' '.join(map(str,ans))",3529,13216,811,2016-07-24 10:50:12,41,7,1,13,0
11694,21166360,"from collections import Counter
from functools import lru_cache, wraps
from string import ascii_lowercase
from sys import stderr, stdin

import time

INF = 10 ** 18 + 3
EPS = 1e-10


# Decorators
def print_to_file(function, file=stderr):
    def wrapped(*args, **kwargs):
        res = function(*args, **kwargs)
        print(res, file=file)
        return res

    return wrapped


def time_it(function, output=stderr):
    def wrapped(*args, **kwargs):
        start = time.time()
        res = function(*args, **kwargs)
        elapsed_time = time.time() - start
        print('Function ""%s"" took %f ms' % (function.__name__, elapsed_time * 1000),
              file=output)
        return res

    return wrapped


@time_it
def main():
    n = int(input())
    nums = Counter(input().split())
    n_found = 0
    for val, num in nums.items():
        if num % 2 != 0:
            print(val, end="" "")
            n_found += 1
    for val, num in nums.items():
        if n_found == n:
            break
        if n % 2 == 0:
            orig_num = num ** 0.5
            if -EPS < orig_num % 1 < EPS:
                print(*[val] * int(orig_num), end="" "")
                n_found += int(orig_num)

    print()


# Auxiliary functions
@print_to_file
def range_of_len(start, length, step=1):
    return range(start, start + length * step, step)


# IO reassignment
def set_input(file):
    global input
    input = lambda: file.readline().strip()


def set_output(file):
    global print
    l_print = print

    def print(*args, **kwargs):
        kwargs[""file""] = kwargs.get(""file"", file)
        return l_print(*args, **kwargs)


if __name__ == '__main__':
    # set_input(open(""fin"", ""r""))
    # set_output(open(""sum.out"", ""w""))
    main()",3621,4428,109,2016-10-03 19:05:40,79,7,2,8,0
11695,21166959,"from collections import Counter
from functools import lru_cache, wraps
from string import ascii_lowercase
from sys import stderr, stdin

import time

INF = 10 ** 18 + 3
EPS = 1e-10


# Decorators
def print_to_file(function, file=stderr):
    def wrapped(*args, **kwargs):
        res = function(*args, **kwargs)
        print(res, file=file)
        return res

    return wrapped


def time_it(function, output=stderr):
    def wrapped(*args, **kwargs):
        start = time.time()
        res = function(*args, **kwargs)
        elapsed_time = time.time() - start
        print('Function ""%s"" took %f ms' % (function.__name__, elapsed_time * 1000),
              file=output)
        return res

    return wrapped


@time_it
def main():
    n = int(input())
    nums = Counter(input().split())
    n_found = 0
    for val, num in nums.items():
        if num % 2 != 0:
            print(val, end="" "")
            n_found += 1
    for val, num in nums.items():
        if n_found == n:
            break
        if num % 2 == 0:
            orig_num = num ** 0.5
            if -EPS < orig_num % 1 < EPS:
                print(*[val] * int(orig_num), end="" "")
                n_found += int(orig_num)

    print()


# Auxiliary functions
@print_to_file
def range_of_len(start, length, step=1):
    return range(start, start + length * step, step)


# IO reassignment
def set_input(file):
    global input
    input = lambda: file.readline().strip()


def set_output(file):
    global print
    l_print = print

    def print(*args, **kwargs):
        kwargs[""file""] = kwargs.get(""file"", file)
        return l_print(*args, **kwargs)


if __name__ == '__main__':
    # set_input(open(""fin"", ""r""))
    # set_output(open(""sum.out"", ""w""))
    main()",3621,4480,109,2016-10-03 19:22:33,79,7,2,8,0
11916,22571343,"n, t = map(int, input().split())
posl = list(map(int, input().split()))

posl = posl*t

dp = [-10**10 for i in range(len(posl))]
dp[0] = 1

def ddp(i):
	ans = 1
	for n in range(i):
		if posl[i] >= posl[n]:
			ans = max(ans, dp[n])
	
	dp[i] = int(ans+1)

for i in range(1, len(posl)):
	ddp(i)

print(max(dp)-1)",3683,0,233,2016-11-28 13:51:28,20,9,2,8,0
11917,22571393,"n, t = map(int, input().split())
posl = list(map(int, input().split()))

posl = posl*t

dp = [-10**10 for i in range(len(posl))]
dp[0] = 1

def ddp(i):
	ans = 0
	for n in range(i):
		if posl[i] >= posl[n]:
			ans = max(ans, dp[n])
	
	dp[i] = int(ans+1)

for i in range(1, len(posl)):
	ddp(i)

print(max(dp))",3683,2112,1000,2016-11-28 13:54:40,20,9,3,8,0
12718,27556272,"n=input()
arr=map(int,raw_input().strip().split("" ""))
arr.sort(reverse=True)
lis=list(set(arr))
i=len(lis)-1
c=1
while(c<=n):
    print lis[i],
    c+=1
    i-=1
    i=i%len(lis)",3857,16,46,2017-06-04 08:44:34,21,7,2,13,0
12719,27556306,"n=input()
arr=map(int,raw_input().strip().split("" ""))
arr.sort(reverse=True)
lis=list(set(arr))
lis.sort()
i=len(lis)-1
c=1
while(c<=n):
    print lis[i],
    c+=1
    i-=1
    i=i%len(lis)",3857,3564,186,2017-06-04 08:47:17,23,7,2,13,0
13165,16619636,"# your code goes here
n = int(raw_input())
arr = map(int, raw_input().split())
num = 0
removed=[0]*n
cnt = 0
t = n
direc = 0
while t != 0:
	if direc == 0:
		for i in range(len(arr)):
			if removed[i]==0 and arr[i] <= num:
				removed[i]=1
				t-=1
				num+=1
	elif direc == 1:
		for j in range(len(arr)):
			i = n-1-j
			if removed[i]==0 and arr[i] <= num:
				removed[i]=1
				t-=1
				num+=1
	cnt+=1
	direc+=1
	direc%=2
	# print arr
	# print removed
		
print cnt",3968,0,46,2016-03-09 18:31:06,57,13,2,13,0
13166,16619882,"# your code goes here
n = int(raw_input())
arr = map(int, raw_input().split())
num = 0
removed=[0]*n
cnt = 0
t = n
direc = 0
if direc == 0:	
		for i in range(len(arr)):
			if removed[i]==0 and arr[i] <= num:
				removed[i]=1
				t-=1
				num+=1
direc = 1
# print t
while t != 0:
	if direc == 0:	
		for i in range(len(arr)):
			if removed[i]==0 and arr[i] <= num:
				removed[i]=1
				t-=1
				num+=1
	else:
		for j in range(len(arr)):
			i = n-1-j
			if removed[i]==0 and arr[i] <= num:
				removed[i]=1
				t-=1
				num+=1
	# print arr, num,t
	# print removed
	cnt+=1
	direc+=1
	direc%=2
	# print arr
	# print removed
		
print cnt",3968,24,249,2016-03-09 18:48:48,77,13,1,13,0
13168,16620479,"# your code goes here
n, m = map(int, raw_input().split())
arr = map(int, raw_input().split())
ref=[]
for i in arr:
	ref.append(i)
ref.sort()
d={}
max = -1
min = 10000
for i in arr:
	if i in d:
		d[i]+=1
	else:
		d[i]=1
	if i > max:
		max = i
	if i < min:
		min = i
ans = 0
removed = [0]*n
t = n
disp=[]
j = 0
while j!=n and m!=0:
	for i in range(n):
		if j!= n and arr[i] == ref[j]:
			j+=1
			disp.append(arr[i])
			# min = arr[i]
			removed[i] = 1
			ans+=1
	# t-=1
	m-=1
# print m
if m > 0:
	ans+=(m*d[max])
# print disp
print ans",3968,0,46,2016-03-09 19:26:48,77,15,2,13,0
13169,16620522,"# your code goes here
n, m = map(int, raw_input().split())
arr = map(int, raw_input().split())
ref=[]
for i in arr:
	ref.append(i)
ref.sort()
d={}
max = -1
min = 10000
for i in arr:
	if i in d:
		d[i]+=1
	else:
		d[i]=1
	if i > max:
		max = i
	if i < min:
		min = i
ans = 0
removed = [0]*n
t = n
disp=[]
j = 0
while j!=n and m!=0:
	for i in range(n):
		if j!= n and arr[i] == ref[j] and removed[i] == 0:
			j+=1
			disp.append(arr[i])
			# min = arr[i]
			removed[i] = 1
			ans+=1
	# t-=1
	m-=1
# print m
if m > 0:
	ans+=(m*d[max])
# print disp
print ans",3968,4,46,2016-03-09 19:28:48,77,15,2,13,0
13171,16621203,"import sys

n = int(sys.stdin.readline().strip())
array = map(int, sys.stdin.readline().strip().split())
vis = [False] * n

pointer = 0

count = 0
sign = 1
a = 0

while count != n:
    while pointer < n:
        if count >= array[pointer] and not vis[pointer]:
            count += 1
            vis[pointer] = True
        pointer += 1
    
    a += 1
    pointer -= 1
    
    if count >= n:
        break
    
    while pointer >= 0:
        if count >= array[pointer] and not vis[pointer]:
            count += 1
            vis[pointer] = True
        pointer -= 1
    
    if count >= n:
        break
    
    a += 1
    
print a",3969,8,46,2016-03-09 20:11:39,73,13,2,13,0
13176,16628404,"# cook your code here
import sys

n = int(sys.stdin.readline().strip())
array = map(int, sys.stdin.readline().strip().split())
vis = [False] * n

pointer = 0

count = 0
sign = 1
a = -1

while count != n:
    if count >= array[pointer] and not vis[pointer]:
        count += 1
        vis[pointer] = True
    if count == n:
        break
    if pointer == 0:
        sign = 1
        a += 1
        #print array[pointer]
        #print pointer
    elif pointer == n - 1:
        sign = -1
        a += 1
        #print array[pointer]
        #print pointer
    pointer += 1 * sign
    
if a != -1:
    print a
else:
    print a + 1",3969,28,530,2016-03-10 10:00:11,69,13,1,13,0
13344,16880770,"def count(o):
	result = 0
	for i in a:
		if i == o:
			result += 1
	return result

n = input()
a = map(int, raw_input().split())
result = []
for i in xrange(n*n):
	if count(a[i])&1:
		result.append(a[i])

if len(result) != n:
	result.extend([a[0]]*n)
print ' '.join(map(str,result))",4044,4460,46,2016-03-23 08:24:44,33,14,2,13,0
13345,16880805,"from collections import Counter

n = input()
a = Counter(map(int, raw_input().split()))
result = []
for i in a:
	value = i
	if a[i]&1:
		result.append(i)

if len(result) != n:
	result.extend([value]*n)
print ' '.join(map(str,result))",4044,7584,217,2016-03-23 08:28:38,25,14,2,13,0
13625,17180544,"n=input()
R=[0]*(n+1)
C=[0]*(n+1)
for i in range(1,n*n+1):
    a,b=map(int,raw_input().split())
    if not R[a] and not R[b]:
        print i,
        R[a]=R[b]=1",4123,4520,62,2016-04-06 08:28:59,8,12,2,13,0
13626,17180549,"n=input()
R=[0]*(n+1)
C=[0]*(n+1)
for i in range(1,n*n+1):
    a,b=map(int,raw_input().split())
    if not R[a] and not C[b]:
        print i,
        R[a]=C[b]=1",4123,4528,62,2016-04-06 08:29:57,8,12,1,13,0
13632,17182704,"n=input()
a=map(int,raw_input().split())
def gcd(a,b):
    if not b: return a
    return gcd(b, a%b)
a.sort()
ans=[0]*n
ans[0]=a[-1]
k=1
d=dict()
for x in a:
    d[x]=d.get(x,0)+1
for v in sorted(set(a[:-1]), reverse=True):
    while d[v]:
        d[v]-=1
        ans[k]=v
        for x in ans[:k]:
            g=gcd(v,x)
            d[g]=d.get(g)-2
        k+=1
print ' '.join(map(str,ans))",4125,4516,46,2016-04-06 12:01:31,21,14,5,13,0
13633,17182734,"n=input()
a=map(int,raw_input().split())
def gcd(a,b):
    if not b: return a
    return gcd(b, a%b)
a.sort()
ans=[0]*n
ans[0]=a[-1]
k=1
d=dict()
for x in a[:-1]:
    d[x]=d.get(x,0)+1
for v in sorted(set(a[:-1]), reverse=True):
    while d[v]:
        d[v]-=1
        ans[k]=v
        for x in ans[:k]:
            g=gcd(v,x)
            d[g]=d[g]-2
        k+=1
print ' '.join(map(str,ans))",4125,17708,764,2016-04-06 12:03:36,21,14,1,13,0
13649,17258435,"# Asphalting Roads

n = int(raw_input())

vertical = []
horizontal = []
days = ''

for i in range(n**2):
    [h, v] = map(int, raw_input().split())
    if v not in vertical and h not in horizontal:
        vertical.append(v)
        horizontal.append(h)
        if len(days) < (n-1)*2:
            days += str(i+1) + ' '
        elif len(days) == (n-1)*2:
            days += str(i+1)

print days",4134,4516,46,2016-04-10 03:51:34,37,12,2,13,0
13650,17258479,"# Asphalting Roads

n = int(raw_input())

vertical = []
horizontal = []
days = ''

for i in range(n**2):
    [h, v] = map(int, raw_input().split())
    if v not in vertical and h not in horizontal:
        vertical.append(v)
        horizontal.append(h)
        days += str(i+1) + ' '

print days",4134,4600,46,2016-04-10 03:54:41,31,12,1,13,0
13659,17272114,"def mp():  return map(int,input().split())
def lt():  return list(map(int,input().split()))
def pt(x):  print(x)
def ip():  return input()
def it():  return int(input())
def sl(x):  return [t for t in x]
def spl(x): return x.split()
def aj(liste, item): liste.append(item)
def bin(x):  return ""{0:b}"".format(x)
def printlist(l): print(' '.join([str(x) for x in l]))
def listring(l): return ''.join([str(x) for x in l])

n = it()
a = lt()

i = 0
visited = [False for i in range(n)]
sens = 1
piece = 0
nott =0
c = 0
while any([not k for k in visited]):
    if sens == 1:
        if i <= n-1:
            if piece >= a[i] and not visited[i]:
                piece += 1
                visited[i] = True
            i += 1
        else:
            sens = -1
            i = n-1
            c += 1
    elif sens == -1:
        if i >= 0:
            if piece >= a[i] and not visited[i]:
                piece += 1
                visited[i] = True
            i -= 1
        else:
            sens = 1
            i = 0
            c += 1
print(c)",4139,408,1000,2016-04-11 01:50:12,85,13,3,8,0
13663,17272381,"from collections import Counter
from fractions import gcd
def mp():  return map(int,input().split())
def lt():  return list(map(int,input().split()))
def pt(x):  print(x)
def ip():  return input()
def it():  return int(input())
def sl(x):  return [t for t in x]
def spl(x): return x.split()
def aj(liste, item): liste.append(item)
def bin(x):  return ""{0:b}"".format(x)
def printlist(l): print(' '.join([str(x) for x in l]))
def listring(l): return ''.join([str(x) for x in l])

n = it()
a = lt()
L = []
a.sort(reverse = True)
c = Counter(a)
for r in a:
    while c[r] > 0 and n > 0:
        c[r] -= 1
        for j in L:
            c[gcd(j,a[0])] -= 2
        L.append(r)
        n -= 1
    if n == 0:
        break
printlist(L)",4139,1180,62,2016-04-11 02:46:43,57,14,2,8,0
13664,17272389,"from collections import Counter
from fractions import gcd
def mp():  return map(int,input().split())
def lt():  return list(map(int,input().split()))
def pt(x):  print(x)
def ip():  return input()
def it():  return int(input())
def sl(x):  return [t for t in x]
def spl(x): return x.split()
def aj(liste, item): liste.append(item)
def bin(x):  return ""{0:b}"".format(x)
def printlist(l): print(' '.join([str(x) for x in l]))
def listring(l): return ''.join([str(x) for x in l])

n = it()
a = lt()
L = []
a.sort(reverse = True)
c = Counter(a)
for r in a:
    while c[r] > 0 and n > 0:
        c[r] -= 1
        for j in L:
            c[gcd(j,r)] -= 2
        L.append(r)
        n -= 1
    if n == 0:
        break
printlist(L)",4139,19140,733,2016-04-11 02:47:51,57,14,1,8,0
13665,17272397,"def mp():  return map(int,input().split())
def lt():  return list(map(int,input().split()))
def pt(x):  print(x)
def ip():  return input()
def it():  return int(input())
def sl(x):  return [t for t in x]
def spl(x): return x.split()
def aj(liste, item): liste.append(item)
def bin(x):  return ""{0:b}"".format(x)
def printlist(l): print(' '.join([str(x) for x in l]))
def listring(l): return ''.join([str(x) for x in l])

n = it()
a = lt()

i = 0
visited = [False for i in range(n)]
sum = 0
sens = 1
piece = 0
nott =0
c = 0
while sum < n:
    if sens == 1:
        if i <= n-1:
            if piece >= a[i] and not visited[i]:
                piece += 1
                visited[i] = True
                sum += 1
            i += 1
        else:
            sens = -1
            i = n-1
            c += 1
    elif sens == -1:
        if i >= 0:
            if piece >= a[i] and not visited[i]:
                piece += 1
                visited[i] = True
                sum += 1
            i -= 1
        else:
            sens = 1
            i = 0
            c += 1
print(c)",4139,264,546,2016-04-11 02:49:52,91,13,1,8,0
13832,17394911,"n = int(input())
hset = set()
vset = set()

answer = """"
for i in range(1, n*n+1):
    h,v = (int(x) for x in input().split())
    if h not in hset and v not in vset:
        hset.add(i)
        vset.add(i)
        answer = answer + str(i) + "" ""
print(answer)",4188,4492,46,2016-04-20 08:22:18,12,12,2,8,0
13833,17394929,"n = int(input())
hset = set()
vset = set()

answer = """"
for i in range(1, n*n+1):
    h,v = (int(x) for x in input().split())
    if h not in hset and v not in vset:
        hset.add(h)
        vset.add(v)
        answer = answer + str(i) + "" ""
print(answer)",4188,5040,62,2016-04-20 08:24:54,12,12,1,8,0
14028,17826724,"n = int(input())
s = [set()]*2
ans = ''
for i in range(n*n):
    t = [int(x) for x in input().split()]
    if ((t[0] not in s[0]) and (t[1] not in s[1])):
        ans += str(i+1)+' '
        s[0].add(t[0])
        s[1].add(t[1])

print(ans)",4254,4480,62,2016-05-10 06:09:29,21,12,2,8,0
14029,17826748,"n = int(input())
s = [set(),set()]
ans = ''
for i in range(n*n):
    t = [int(x) for x in input().split()]
    if ((t[0] not in s[0]) and (t[1] not in s[1])):
        ans += str(i+1)+' '
        s[0].add(t[0])
        s[1].add(t[1])

print(ans)",4254,5036,77,2016-05-10 06:13:07,21,12,1,8,0
14154,18011379,"a = int(raw_input())

days = []

dictA = {}
for i in range(a*a):
    b = [int(item) for item in raw_input().split(' ')]
    if b[0] not in dictA and b[1] not in dictA:
        dictA[b[0]] = """"
        dictA[b[1]] = """"
        days.append(str(i+1))

print ' '.join(days)",4302,4508,61,2016-05-21 01:06:16,13,12,2,13,0
14155,18011390,"a = int(raw_input())

days = []

dictA = {}
dictB = {}
for i in range(a*a):
    b = [int(item) for item in raw_input().split(' ')]
    if b[0] not in dictA and b[1] not in dictB:
        dictA[b[0]] = """"
        dictB[b[1]] = """"
        days.append(str(i+1))

print ' '.join(days)",4302,4624,62,2016-05-21 01:08:28,14,12,1,13,0
14260,18110531,"import math
n = input()

r = set()
p = []
for i in range(int(math.pow(n, 2))):
    a, b = map(int, raw_input().split())
    if a not in r and b not in r:
        r.add(a)
        r.add(b)
        p.append(str(i + 1))



print ' '.join(p)",4336,4544,46,2016-05-27 00:54:03,15,12,2,13,0
14261,18110597,"import math
n = input()

h = set()
v = set()
p = []

for i in range(int(math.pow(n, 2))):
    a, b = map(int, raw_input().split())
    if a not in h and b not in v:
        h.add(a)
        v.add(b)
        p.append(str(i + 1))

print ' '.join(p)",4336,4648,62,2016-05-27 01:06:42,15,12,1,13,0
14276,18140035,"seen = set()
n = int(input())
for i in range(n*n):
    h, v = [int(x) for x in input().split()]
    if h not in seen and v not in seen:
        print(str(i+1))
        seen.add(h)
        seen.add(v)",4345,4484,61,2016-05-29 05:40:43,8,12,2,8,0
14277,18140048,"seen_h = set()
seen_v = set()
n = int(input())
for i in range(n*n):
    h, v = [int(x) for x in input().split()]
    if h not in seen_h and v not in seen_v:
        print(str(i+1))
        seen_h.add(h)
        seen_v.add(v)",4345,4516,62,2016-05-29 05:43:56,9,12,1,8,0
14532,18542844,"n = int(input())
A = list(map(int, input().split()))

# code
curr = 0
rot = 0

while curr < n:
    print(A, curr, rot)
    for i in range(0, n):
        if A[i] <= curr:
            curr += 1
            A[i] = n + 3
    if (curr != n): rot += 1
    for i in range(n - 1, -1, -1):
        if A[i] <= curr:
            curr += 1
            A[i] = n + 3
    if (curr != n): rot += 1
print(rot)",4447,0,46,2016-06-17 15:36:11,20,13,2,8,0
14533,18542855,"n = int(input())
A = list(map(int, input().split()))

# code
curr = 0
rot = 0

while curr < n:
    for i in range(0, n):
        if A[i] <= curr:
            curr += 1
            A[i] = n + 3
    if (curr != n): rot += 1
    for i in range(n - 1, -1, -1):
        if A[i] <= curr:
            curr += 1
            A[i] = n + 3
    if (curr != n): rot += 1
print(rot)",4447,12,202,2016-06-17 15:36:33,19,13,1,8,0
14546,18581385,"n = input()
a = map(int, raw_input().split())


def robot(forward):

    turns = -1
    count = 0
    visited = set()
    while count < n:
        if forward:
            for i in range(len(a)):
                if i not in visited and count >= a[i]:
                    count += 1
                    visited.add(i)
        else:
            for i in range(len(a) - 1, -1, -1):
                if i not in visited and count >= a[i]:
                    count += 1
                    visited.add(i)

        forward = not forward
        turns += 1

    return turns


print min(robot(True), robot(False))",4336,56,171,2016-06-18 17:34:33,28,13,2,13,0
14547,18582381,"n = input()
a = map(int, raw_input().split())


def robot(forward):

    turns = -1
    count = 0
    visited = set()
    while count < n:
        if forward:
            for i in range(len(a)):
                if i not in visited and count >= a[i]:
                    count += 1
                    visited.add(i)
        else:
            for i in range(len(a) - 1, -1, -1):
                if i not in visited and count >= a[i]:
                    count += 1
                    visited.add(i)

        forward = not forward

        turns += 1

    return turns


print robot(True)",4336,60,140,2016-06-18 18:28:05,29,13,1,13,0
15257,18974884,"roads = input()
intersections = []
days = """"
for r in range(roads*roads):
    intersections.append([int(x) for x in input().split()])
xaxis = []
yaxis = []
for i in range(len(intersections)):
    if not intersections[i][0] in xaxis and not intersections[i][1] in yaxis:
        days = days + str(i+1)+ "" "" 
        xaxis.append(intersections[i][0])
        yaxis.append(intersections[i][1])
print(days[:-1])",4596,0,46,2016-07-08 22:19:02,25,12,5,8,0
15258,18974916,"roads = int(input())
intersections = []
days = """"
for r in range(roads*roads):
    intersections.append([int(x) for x in input().split()])
xaxis = []
yaxis = []
for i in range(len(intersections)):
    if not intersections[i][0] in xaxis and not intersections[i][1] in yaxis:
        days = days + str(i+1)+ "" "" 
        xaxis.append(intersections[i][0])
        yaxis.append(intersections[i][1])
print(days[:-1])",4596,336,62,2016-07-08 22:22:03,25,12,1,8,0
15570,19477496,"n =int(raw_input())
lis = [0 for i in xrange(n)]
ans = []
count = 0
for _ in xrange(n*n):
	a,b = map(int,raw_input().split())
	if lis[a-1]==0 and lis[b-1]==0 and a==b:
		lis[a-1]=1
		count+=1
		ans.append(_+1)
	elif lis[a-1]==0 and lis[b-1]==0 and a!=b:
		lis[a-1]=1
		lis[b-1]=1
		count+=2
		ans.append(_+1)
	if count == n:
		break
ans = sorted(ans)
print ' '.join(str(i) for i in ans)",1773,4,46,2016-07-29 13:10:08,37,12,2,13,0
15571,19477648,"n =int(raw_input())
hor = [0 for i in xrange(n)]
ver = [0 for i in xrange(n)]
ans = []
count = 0
for _ in xrange(n*n):
	a,b = map(int,raw_input().split())
	if hor[a-1]==0 and ver[b-1]==0:
		hor[a-1]=1
		ver[b-1]=1
		count+=2
		ans.append(_+1)
	
	if count == n*n:
		break
ans = sorted(ans)
print ' '.join(str(i) for i in ans)",1773,8,93,2016-07-29 13:22:35,33,12,1,13,0
15594,19560337,"import sys

def solve(n, an):
    dir = 1
    get = [0] * n
    index = 0
    get_num = 0
    ans = 0
    while True:
        if get[index] is 0 and an[index] <= get_num:
            get[index] = 1
            get_num += 1
            if get_num == n:
                break
        if dir is 1:
            index += 1
            if index is n:
                dir = 0
                index = n-1
                ans += 1
        else:
            index -= 1
            if index < 0:
                dir = 1
                index = 0
                ans += 1
    return ans


n = int(input())
an = list(map(int, sys.stdin.readline().split()))
print(solve(n, an))",4665,24,62,2016-08-01 15:28:21,32,13,5,8,0
15595,19560550,"import sys

def solve(n, an):
    ans = 0
    got = 0
    while True:
        for i in range(n):
            if an[i] <= got:
                an[i] = n+1
                got += 1
        if got == n:
            break
        ans += 1

        i = n-1
        while i >= 0:
            if an[i] <= got:
                an[i] = n+1
                got += 1
            i -= 1
        if got == n:
            break
        ans += 1
    return ans


n = int(input())
an = list(map(int, sys.stdin.readline().split()))
print(solve(n, an))",4665,0,186,2016-08-01 15:38:04,29,13,1,8,0
15666,19758680,"n = int(raw_input())

arr = []

for i in range(n**2):
	h,v = map(int, raw_input().split())
	if h == v:
		arr.append(str(i+1))

print ' '.join(arr)",4734,4464,31,2016-08-10 08:06:50,10,12,2,13,0
15667,19758718,"n = int(raw_input())

arr = []
harr = []
varr = []
for i in range(n**2):
	h,v = map(int, raw_input().split())
	if h in harr or v in varr:
		pass
	else:
		harr.append(h)
		varr.append(v)
		arr.append(str(i+1))

print ' '.join(arr)",4734,4524,62,2016-08-10 08:10:23,15,12,1,13,0
15800,20017948,"#Problem 583A
nroads = int(input())

schedule = []
for rd in range(nroads**2):
	schedule.append(input().split(' '))

# initialize with non asphalted roads.
vertical = [False for i in range(nroads)]
horizontal = vertical.copy()

time = 0
for day in schedule:
	# convert to 0 --> n-1 scale.
	h = int(day[0]) - 1
	v = int(day[1]) - 1

	if horizontal[h] and vertical[v]:
		horizontal[h] = True
		vertical[v] = True
		time += 1
	else:
		time += 1

print(time)",4795,4452,31,2016-08-21 06:43:57,25,12,2,8,0
15801,20018208,"#Problem 583A
nroads = int(input())

schedule = []
for rd in range(nroads**2):
	schedule.append(input().split(' '))

# initialize with non asphalted roads.
vertical = [False for i in range(nroads)]
horizontal = vertical.copy()

inprogress = []
time = 0
for day in schedule:
	# convert to 0 --> n-1 scale.
	h = int(day[0]) - 1
	v = int(day[1]) - 1

	if not horizontal[h] and not vertical[v]:
		horizontal[h] = True
		vertical[v] = True
		time += 1
		print(time, end=' ')
	else:
		time += 1

print()",4795,4952,77,2016-08-21 07:05:08,27,12,1,8,0
16027,20439692,"values = int(input())

array = list(map(int, input().split()))

counter = 0
if array[values-1] == 0:
    ways=-1
else:
    ways=0

while counter != values:
    for i in range(0,values):
        if array[i] != -1 and array[i] <= counter:
            counter += 1
            array[i] = -1
    ways += 1

print(ways)",4659,0,62,2016-09-07 18:06:14,35,13,2,8,0
16028,20440552,"values = int(input())

array = list(map(int, input().split()))

counter = 0
ways =0


while counter != values:
        for i in range(0,values):
            if array[i] != -1 and array[i] <= counter:
                counter += 1
                array[i] = -1
        if counter == values:
            break
        ways += 1
        for i in range(values-1, -1, -1):
            if array[i] != -1 and array[i] <= counter:
                counter += 1
                array[i] = -1
        if counter == values:
            break
        ways += 1

print(ways)",4659,0,265,2016-09-07 18:42:34,49,13,1,8,0
16040,20455157,"n = int(input())
asphaltedH = set()
asphaltedV = set()
days = []
for i in range(n * n):
    h, v = [int(i) for i in input().split()]
    if h not in asphaltedH and v not in asphaltedV:
        days.append(str(i + 1))
        asphaltedH.add(h)
        asphaltedV.add(v)
print("" "".join(sorted(days)))",4877,0,62,2016-09-08 12:35:33,21,12,2,8,0
16041,20455187,"n = int(input())
asphaltedH = set()
asphaltedV = set()
days = []
for i in range(n * n):
    h, v = [int(i) for i in input().split()]
    if h not in asphaltedH and v not in asphaltedV:
        days.append(i + 1)
        asphaltedH.add(h)
        asphaltedV.add(v)
print("" "".join([str(i) for i in sorted(days)]))",4877,16,62,2016-09-08 12:36:38,21,12,1,8,0
16162,20720977,"n = int(input())
x, y = [], []
for i in range(1,n*2+1):
    x1, y1 = map(int, input().split())
    if not x1 in x and not y1 in y:
        x.append(x1)
        y.append(y1)
        print(i, end=' ')",4919,0,46,2016-09-18 00:55:10,15,12,5,8,0
16163,20720984,"n = int(input())
x, y = [], []
for i in range(1,n**2+1):
    x1, y1 = map(int, input().split())
    if not x1 in x and not y1 in y:
        x.append(x1)
        y.append(y1)
        print(i, end=' ')",4919,16,77,2016-09-18 00:56:06,15,12,1,8,0
16214,20834088,"n = int(raw_input())
if ( n >= 1 and n <= 50 ):
    counter = 0
    list_days = list()
    inp = map(int, raw_input().split())
    h_v = list(inp)
    h, v = h_v[0], h_v[1]
    if ( (h == v)  and (h >= 1 and v <= n) ):
        counter += 1
        list_days.append(counter)
        for i in range((n ** 2) - 1):
            inp = map(int, raw_input().split())
            h_v = list(inp)
            h, v = h_v[0], h_v[1]
            counter += 1
            if ( (h == v)  and (h >= 1 and v <= n) ):
                list_days.append(counter)

    else:
        counter += 1
        list_days.append(counter)
        for i in range((n**2) -1 ):
            inp = map(int, raw_input().split())
            h_v = list(inp)
            h, v = h_v[0], h_v[1]
            counter += 1
            if ( (h != v) and (h >= 1 and v <= n) ):
                list_days.append(counter)

    str_days = str()
    for i in range(len(list_days)):
        str_days += str(list_days[i]) + "" ""
    print str_days",4940,20,46,2016-09-23 12:35:34,65,12,2,13,0
16217,20868072,"n = int(raw_input())
ls_h = list()
ls_v = list()
for i in range(n):
    ls_h.append(False)
    ls_v.append(False)

ls_days = list()
for i in range(n**2):
    h_v = map(int, raw_input().split())
    ls_h_v = list(h_v)
    h, v = ls_h_v[0], ls_h_v[1]
    if ( h >= 1 and v <= n ):
        if ( ls_h[h-1] == False and ls_v[v-1] == False ):
            ls_h[h-1] = True
            ls_v[v-1] = True
            ls_days.append(i+1)

str_days = str()
for i in range(len(ls_days)):
    str_days += str(ls_days[i]) + "" ""
print str_days",4940,48,108,2016-09-23 19:46:26,43,12,1,13,0
16534,21648676,"n=input()
n=n*n
c=[]
d=[]
for i in range(0,n):
    a,b=map(int,raw_input().split())
    if i==0:
        c.append(a)
        c.append(b)
        d.append(i+1)
    else:
        if a not in c and b not in c:
            c.append(a)
            c.append(b)
            d.append(i+1)
for i in d:
    print i,",5030,20,61,2016-10-21 20:30:09,33,12,2,13,0
16535,21648728,"n=input()
n=n*n
c=[]
d=[]
e=[]
for i in range(0,n):
    a,b=map(int,raw_input().split())
    if i==0:
        c.append(a)
        e.append(b)
        d.append(i+1)
    else:
        if a not in c and b not in e:
            c.append(a)
            e.append(b)
            d.append(i+1)
for i in d:
    print i,",5030,40,77,2016-10-21 20:32:35,35,12,1,13,0
16654,22071285,"#
#   583B. Robot's Task
#
n = int(raw_input().strip())
a = list(map(int, raw_input().strip().split()))
while True:
    # front pass
    for i in range(n):
        if a[i] <= temp:
            a[i] = n + 1
            temp += 1
    if temp == n:
        break
    ans += 1
    # back pass
    for i in range(n, -1, -1):
        if a[i] <= temp:
            a[i] = n + 1
            temp += 1
    if temp == n:
        break
    ans += 1
print ans",5026,8,31,2016-11-06 11:53:58,45,13,5,13,0
16655,22071338,"def robot_task():
    n = int(raw_input().strip())
    a = list(map(int, raw_input().strip().split()))
    temp, ans = 0, 0
    while True:
        # front pass
        for i in range(n):
            if a[i] <= temp:
                a[i] = n + 1
                temp += 1
        if temp == n:
            break
        ans += 1
        # back pass
        for i in range(n - 1, -1, -1):
            if a[i] <= temp:
                a[i] = n + 1
                temp += 1
        if temp == n:
            break
        ans += 1
    print ans

robot_task()",5026,24,108,2016-11-06 11:57:04,47,13,1,13,0
17121,22563014,"n=int(input())
l=[0]*n
d=[]
for i in range(n*n):
    a,b=map(int, input().split())
    if l[a-1]&1==0 and l[b-1]&2==0:
        l[a-1]=l[a-1]|3
        d.append(i+1)
print("" "".join(map(str, d)))",34,0,46,2016-11-28 05:18:36,17,12,2,8,0
17122,22563428,"n=int(input())
l=[0]*n
d=[]
for i in range(n*n):
    a,b=map(int, input().split())
    if l[a-1]&1==0 and l[b-1]&2==0:
        l[a-1]=l[a-1]|1
        l[b-1]=l[b-1]|2
        d.append(i+1)
print("" "".join(map(str, d)))",34,0,62,2016-11-28 06:09:57,19,12,1,8,0
17338,23050803,"n=int(raw_input())
q=[]
for i in range(1,n*n+1):
    x=raw_input().split()
    if (x[0] not in q) and (x[1] not in q):
        print i,
        q.append(x[0])
        q.append(x[1])",5183,8,46,2016-12-17 18:26:27,15,12,2,13,0
17339,23050994,"n=int(raw_input())

h=[]
v=[]

for i in range(1,n*n+1):
    x=raw_input().split()
    if (x[0] not in h) and (x[1] not in v):
        print i,
        h.append(x[0])
        v.append(x[1])",5183,40,61,2016-12-17 18:34:04,21,12,1,13,0
17615,23874333,"n = int(input())
l = list(map(int, input().split()))
res = 0
cont = 0
while cont < n:
    for i in range(n):
        if l[i] < i+1:
            cont+=1
    res+=1
print(res)",34,4492,46,2017-01-16 08:59:02,19,13,2,8,0
17618,23890678,"n = int(input())
l = list(map(int, input().split()))
pieces = 0
res = -1
while pieces < n:
    for i in range(n):
        if l[i] <= pieces:
            pieces += 1
            l[i] = 1001   
    res += 1    
    if pieces == n:
        print(res)
        exit(0)
           
    for i in range(n-1, -1, -1):
        if l[i] <= pieces:
            pieces += 1
            l[i] = 1001
    res += 1     
    if pieces == n:
        print(res)
        exit(0)",34,4536,202,2017-01-16 23:57:17,43,13,1,8,0
18240,25578741,"'''input
2
0 1
'''
n = int(input())
a = list(map(int, input().split()))
x, c = 0, 0
while x <= max(a):
	for y in range(n):
		if x >= a[y] and a[y] != -1:
			# print(x,a,a[y])
			x += 1
			a[y] = -1	
	a = a[::-1]
	c += 1
print(c-1)",531,4524,171,2017-03-17 19:54:55,16,13,2,8,0
18241,25578936,"'''input
3
0 2 0
'''
n = int(input())
a = list(map(int, input().split()))
x, c = 0, 0
while set(a) != {-1}:
	for y in range(n):
		if x >= a[y] and a[y] != -1:
			x += 1
			a[y] = -1	
	a = a[::-1]
	c += 1
print(c-1)",531,4544,249,2017-03-17 20:01:33,15,13,1,8,0
18397,26220988,"n = input()
dt = {}
for k in range(n*n):
    i, j = map(int, raw_input().split())
    if i not in dt and j not in dt:
        print k+1,
        dt[i] = 1
        dt[j] = 1",908,4564,62,2017-04-08 17:18:14,15,12,2,13,0
18398,26221019,"n = input()
dx = {}
dy = {}
for k in range(n*n):
    i, j = map(int, raw_input().split())
    if i not in dx and j not in dy:
        print k+1,
        dx[i] = 1
        dy[j] = 1",908,4584,61,2017-04-08 17:19:58,17,12,1,13,0
18490,26528444,"# Description of the problem can be found at http://codeforces.com/problemset/problem/583/B

n = int(input())
l_n = list(map(int, input().split()))
s_s = set()

r = 1
c = 0
i = 0
t = -1
while len(s_s) != n:
    if c not in s_s and i >= l_n[c]:
        i += 1
        s_s.add(c)
        
        if len(s_s) == n:
            break
    
    if c == 0:
        r = 1
        t += 1
    if c == n - 1:
        r = -1
        t += 1
        
    c += r

c = n - 1
t_t = -1
i = 0
s_s.clear()
while len(s_s) != n:
    if c not in s_s and i >= l_n[c]:
        i += 1
        s_s.add(c)
        
        if len(s_s) == n:
            break
    
    if c == 0:
        r = 1
        t_t += 1
    if c == n - 1:
        r = -1
        t_t += 1
        
    c += r

if n == 1:
    print(0)
else:
    print(min(t, t_t))",541,5412,764,2017-04-21 03:55:16,103,13,2,8,0
18491,26528445,"# Description of the problem can be found at http://codeforces.com/problemset/problem/583/B

n = int(input())
l_n = list(map(int, input().split()))
s_s = set()

r = 1
c = 0
i = 0
t = -1
while len(s_s) != n:
    if c not in s_s and i >= l_n[c]:
        i += 1
        s_s.add(c)
        
        if len(s_s) == n:
            break
    
    if c == 0:
        r = 1
        t += 1
    if c == n - 1:
        r = -1
        t += 1
        
    c += r

if n == 1:
    print(0)
else:
    print(t)",541,5432,717,2017-04-21 03:55:44,61,13,1,8,0
18710,27214420,"n = int(input())
A = []
for i in range(0,n**2):
    a,b = input().split()
    if a == b:
        A.append(i+1)
s = ''
for j in range(0,n):
    s =s+str(A[j])+' '
print(s)",1213,0,62,2017-05-19 15:37:43,10,12,2,8,0
18721,27264077,"if __name__ == '__main__':
    n = int(input())
    line = map(str, input().split())
    table = dict()
    max_num = 0
    for it in line:
        if it in table.keys():
            max_num = max(max_num, len(table.items()))
            table.pop(it)
        else:
            table.setdefault(it)
    print(max_num)",1287,0,46,2017-05-21 12:53:54,23,13,2,8,0
18724,27279452,"if __name__ == '__main__':
    n = int(input())
    line = list(map(int, input().split()))
    num, res, flag = 0, 0, True
    while num < n:
        res += 1
        if flag:
            flag = False
            for i in range(n):
                if 0 <= line[i] <= num:
                    num += 1
                    line[i] = -1
        else:
            flag = True
            for i in range(n - 1, -1, -1):
                if 0 <= line[i] <= num:
                    num += 1
                    line[i] = -1
    print(res - 1)",1287,20,218,2017-05-22 11:17:24,37,13,1,8,0
18729,27293170,"n = int(input())
A = []
for i in range(0,n**2):
    a,b = input().split()
    A.append([int(a),int(b)])
B = []
C = []
for l in range(0,n):
    B.append(0)
    C.append(0)
D = []
for k in range(0,n**2):
    if B[A[k][0]-1] == 0 and C[A[k][1]-1] == 0:
        D.append(k)
        B[A[k][0]-1] = 1
        C[A[k][1]-1] = 1
        
        
s = ''
for j in range(0,n):
    s =s+str(D[j]+1)+' '
print(s)",1213,308,62,2017-05-23 06:03:43,22,12,1,8,0
18783,27355009,"n=input()
a=list(input().split())
k=n+1
for i in range(0,n*n,k):
  print a[i],",5418,24,31,2017-05-26 14:49:15,9,14,5,13,0
18787,27355123,"n=input()
a=list(input().split())
a.sort(reverse=True)
for i in range(n):
  print a[i],",5418,8,31,2017-05-26 14:57:40,9,14,5,13,0
19466,28386933,"n = int(input())
#n, m = map(int, input().split())
#s = input()
c = list(map(int, input().split()))
if n == 1:
    print(0)
else:
    
    l = -1
    s = 0
    p = -1
    i = 1
    while s != n:
        if i + 1 == n or i == 0:
            p *= -1
            l += 1
        i += p    
        if c[i] != -1 and s >= c[i] :
            s += 1
            c[i] = -1
    print(l)",153,5416,46,2017-07-09 15:03:30,21,13,5,8,0
19467,28387045,"n = int(input())
#n, m = map(int, input().split())
#s = input()
c = list(map(int, input().split()))
l = 0
s = 0
p = 1
i = 0
while s != n:
    if c[i] != -1 and s >= c[i] :
        s += 1
        c[i] = -1
    i += p
    if (i == n or i == -1) and s != n:
        p *= -1
        l += 1
        i += 2 * p     
print(l)",153,5444,530,2017-07-09 15:11:41,18,13,1,8,0
19904,24889884,"#include <iostream>
#include<math.h>
using namespace std;


int main() {
	// your code goes here
	int n,t;
	int f=0;
	cin>>n>>t;
	long long int m=pow(10,(n-1));
	long long int M=pow(10,n);
	for (long long int i=m;i<M;i++)
	    {cout<<i;
	        if (i%t==0)
	       {cout<<i;
	       f=1;
	        break;
	       }
	    }
	 if (f==0)
	 cout<<-1;
	return 0;
}",475,0,0,2017-02-22 13:19:11,47,17,4,13,0
19967,24950529,"# Description of the problem can be found at http://codeforces.com/problemset/problem/584/A

def get_num_digits(num):
    digit_count = 0
    
    while num != 0:
        num = num // 10
        digit_count += 1
        
    return digit_count


def main():
    n, t = map(int, input().split())
    
    cur_number = t
    
    while get_num_digits(cur_number) < n:
        cur_number *= t
        
    print(cur_number if get_num_digits(cur_number) == n else 0)
    
    
if __name__ == ""__main__"":
    main()",541,4536,61,2017-02-24 02:39:47,49,17,2,8,0
19968,24950536,"# Description of the problem can be found at http://codeforces.com/problemset/problem/584/A

def get_num_digits(num):
    digit_count = 0
    
    while num != 0:
        num = num // 10
        digit_count += 1
        
    return digit_count


def main():
    n, t = map(int, input().split())
    
    cur_number = t
    
    while get_num_digits(cur_number) < n:
        cur_number *= t
        
    print(cur_number if get_num_digits(cur_number) == n else -1)
    
    
if __name__ == ""__main__"":
    main()",541,4544,62,2017-02-24 02:40:20,49,17,1,8,0
20022,25027017,"'''input
3 2
'''
n, t = map(int, input().split())
print((10**(n-1)//t + 1)*t)",531,4492,46,2017-02-26 06:03:21,5,17,2,8,0
20023,25027038,"'''input
1 10
'''
n, t = map(int, input().split())
if n == 1 and t >= 10:
	print(-1)
else:
	print((10**(n-1)//t + 1)*t)",531,4524,61,2017-02-26 06:04:59,8,17,1,8,0
20027,25029120,"n, s = raw_input().split()
if s == '10':
	if n == '1':
		print -1
	else:
		print 10 ** int(n)
else:
	print s * int(n)",5533,4524,46,2017-02-26 09:06:00,15,17,2,13,0
20028,25029137,"n, s = raw_input().split()
if s == '10':
	if n == '1':
		print -1
	else:
		print 10 ** (int(n) - 1)
else:
	print s * int(n)",5533,4536,62,2017-02-26 09:07:20,15,17,1,13,0
20037,25064447,"n, t = map(int, raw_input().split())

res = 1
if n == 1:
	print t if t < 10 else -1
else:
	while res * t < 10**n:
		res *= t
	print res, len(str(res))",5535,4484,46,2017-02-26 23:32:03,17,17,2,13,0
20038,25064458,"n, t = map(int, raw_input().split())

res = 1
if n == 1:
	print t if t < 10 else -1
else:
	while res * t < 10**n:
		res *= t
	print res",5535,4536,61,2017-02-26 23:32:30,17,17,1,13,0
20043,25065020,"n = int(raw_input())

print ((3**3)**n - 7**n) % (10**7 + 7)",5535,4524,46,2017-02-27 00:13:02,5,18,2,13,0
20044,25065025,"n = int(raw_input())

print ((3**3)**n - 7**n) % (10**9 + 7)",5535,5012,93,2017-02-27 00:13:24,5,18,1,13,0
20064,25101135,"a,b=map(int,raw_input().strip().split())
t=str(b)
k=len(t)
if k<=a:
    print t+""0""*(a-k)
else:
    print -1",475,4536,62,2017-02-28 16:01:22,13,17,1,13,0
20094,25107717,"n,t=map(int,input().split())
k=-1
for i in range (10**(n-1),10**n):
    if i%t==0
        k=i
        break
print(k)",5542,0,0,2017-02-28 21:18:33,13,17,4,8,0
20095,25107767,"n,t=map(int,input().split())
k=-1
for i in range (10**(n-1),10**n):
    if i%t==0:
        k=i
        break
print(k)",5542,4532,62,2017-02-28 21:21:13,13,17,1,8,0
20366,25229521,"n, t = [int(x) for x in input().split()]
m = 10**(n-1) if n>1 else 0
for x in range(m, m+15):
    if x % t == 0:
        print(x)
        breakn, t = [int(x) for x in input().split()]

if n == 1:
    print(-1 if t == 10 else t)
else:
    m = 10**(n-1)
    for x in range(m, m+15):
        if x % t == 0:
            print(x)
            break",5562,4484,62,2017-03-05 02:49:08,29,17,5,8,0
20367,25229523,"n, t = [int(x) for x in input().split()]

if n == 1:
    print(-1 if t == 10 else t)
else:
    m = 10**(n-1)
    for x in range(m, m+15):
        if x % t == 0:
            print(x)
            break",5562,4540,62,2017-03-05 02:49:22,19,17,1,8,0
20583,25386470,"input=raw_input()
input=input.split()
n=int(input[0])
t=int(input[1])
i=1
s=1
while i<n:
    s=s*10
    i=i+1
i=0
while i<=t:
    s=s+1
    if s%t == 0:
        print s
        quit()
    i=i+1
print '-1'",5589,4520,46,2017-03-10 21:26:49,33,17,2,13,0
20584,25386535,"input=raw_input()
input=input.split()
n=int(input[0])
t=int(input[1])
if n==1 and t>=10:
    print'-1'
    quit()
i=1
s=1

while i<n:
    s=s*10
    i=i+1
i=0
while i<=t:
    s=s+1
    if s%t == 0:
        print s
        quit()
    i=i+1
print '-1'",5589,4536,61,2017-03-10 21:29:19,41,17,1,13,0
20654,25453869,"n,t = map(int,input().split())
k2 = 10**n-1
k1 = 10**(n-1)
x = k1

while x<=k2:
    if x % t == 0:
        break
    x = x + t
if x>k2:
    print(-1)
else:
    print(x)",5596,4508,46,2017-03-13 15:44:00,25,17,2,8,0
20661,25460930,"n, t = map(int,input().split())
if t==10 and n==1:
    print(-1)
elif t==10 and n>1:
    print(10**(n-1))
else:
    while n>0:
        print(t,end='')
        n-=1",5596,4516,62,2017-03-13 22:30:04,17,17,1,8,0
21194,25704541,"temp = map(int,raw_input().split("" ""))
n = temp[0]
t = temp[1]
found = False
for i in range(10**(n-1),10**n):
	if i%t == 0 :
		found = True
		break
if found :
	print i
else:
	print -1",780,6060,46,2017-03-22 09:19:08,12,17,5,13,0
21195,25704604,"temp = map(int,raw_input().split("" ""))
n = temp[0]
t = temp[1]
found = False
i = 10**(n-1)
while i < 10**(n):
	if i % t == 0 :
		found = True
		break
	i+=1
if found :
	print i
else:
	print -1",780,4556,62,2017-03-22 09:24:05,14,17,1,13,0
21313,25864855,"L = input()
L = L.split()
n = int(L[0])
t = int(L[1])
A = 10**(n)-1
if A>t:
    Base = 10**(n-1)
    N = Base
    while (N%t)!=0:
        N += 1
    print(N)
else:
    print(-1)",1092,4496,62,2017-03-28 07:23:55,25,17,2,8,0
21314,25865029,"L = input()
L = L.split()
n = int(L[0])
t = int(L[1])
A =len(str(t))
if n>=A:
    Base = 10**(n-1)
    N = Base
    while (N%t)!=0:
        N += 1
    print(N)
else:
    print(-1)",1092,4512,62,2017-03-28 07:39:01,25,17,1,8,0
21412,26100270,"n ,t = map(int,input().split())
p = int(""1""*n)
for i in range(t):
    if p%t==0:
        print(p)
        break
    p += 1",902,5412,61,2017-04-03 16:14:04,13,17,2,8,0
21413,26100292,"n ,t = map(int,input().split())
p = int(""1""*n)
for i in range(t):
    if len(str(p))>n:
        print(-1)
        break
    if p%t==0:
        print(p)
        break
    p += 1",902,5416,62,2017-04-03 16:15:03,19,17,1,8,0
21446,26113257,"n, t = map(int, raw_input().split())
if t == 10:
    print 10**(t-1)
else:
    print str(t)*n",908,4552,46,2017-04-04 08:11:35,9,17,2,13,0
21447,26113296,"n, t = map(int, raw_input().split())
if t == 10:
    if n == 1:
        print -1
    else:
        print 10**(n-1)
else:
    print str(t)*n",908,4564,46,2017-04-04 08:13:55,15,17,1,13,0
21463,26136367,"n=int(input())
p=9**n*3**n
print(p-7**n)",4061,5392,62,2017-04-05 09:04:10,5,18,2,8,0
21464,26136389,"n=int(input())
p=9**n*3**n
print((p-7**n)%1000000007)",4061,5604,155,2017-04-05 09:05:55,5,18,1,8,0
21603,26257076,"x, y=map(int,input().split())
if  y<=x:
    i=0
    while len(str(y*10**i))!=x:
        i+=1
    print(y*10**i)
else:
    print(-1)",991,5416,62,2017-04-10 18:44:56,15,17,2,8,0
21604,26257120,"x, y=map(int,input().split())
if  len(str(y))<=x:
    i=0
    while len(str(y*10**i))!=x:
        i+=1
    print(y*10**i)
else:
    print(-1)",991,5432,62,2017-04-10 18:47:00,15,17,1,8,0
21615,26286616,"a = raw_input().split("" "")
n = int(a[0])
t = a[1]
if t != '10':
    print t*n
else:
    if n == 1:
        print -1
    else:
        print '1'*(n-1) + '0'",60,4556,62,2017-04-11 03:31:37,10,17,1,13,0
21661,26287587,"s = raw_input().split()
x = int(s[0])
y = int(s[1])

n = 1

while(1):
	if(len(str(n))< x):
		n = n+1
	if(len(str(n)) == x):
		if(n%y == 0):
			print n
			break
		else:
			n = n+1",9,4528,1000,2017-04-11 04:58:58,15,17,3,13,0
21663,26287657,"s = raw_input().split()
x = int(s[0])
y = int(s[1])

n = 1

while(1):
	if(len(str(n))< x):
		n = n*10
	if(len(str(n)) == x):
		if(n%y == 0):
			print n
			break
		else:
			n = n+1
	if(len(str(n))> x):
		print ""-1""",9,4536,1000,2017-04-11 05:03:49,17,17,3,13,0
21706,26309713,"from random import randrange
n = int(input())
t = int(input())

print t * pow(10,n-1)",5710,4856,46,2017-04-12 05:01:48,5,17,5,13,0
21707,26309787,"n = int(input())
t = int(input())
if n < 1 or n > 100 or t < 2 or t > 10:
	print '-1' 
else:
    print t * pow(10,n-1)",5710,4536,46,2017-04-12 05:14:03,11,17,5,13,0
22021,26636767,"n,t=map(int,input().split(' '))
if(t==10):
    print('1'+('0'*(n-1)))
else:
    print (str(t+int('0'))*n)",5745,5428,61,2017-04-24 12:23:17,9,17,2,8,0
22022,26636790,"n,t=map(int,input().split(' '))
if(t==10):
    if(n==1):
        print(-1)
    else:
        print('1'+('0'*(n-1)))
else:
    print (str(t+int('0'))*n)",5745,5428,77,2017-04-24 12:24:30,15,17,1,8,1
22110,26682594,"#JOKER#
n, m = input().split();
n = int(n)
m = int(m)
if(m == 10):
	if(n == 1) :
		print(-1)
		exit()
	else :
		print(""1"", end = """")
		for i in range(1, int(n)):
			print(""0"", end = """")
else :
	for i in range(0, int(n)):
			print(t, end = """")",5762,5400,46,2017-04-26 16:24:27,29,17,5,8,0
22111,26682608,"#JOKER#
n, m = input().split();
n = int(n)
m = int(m)
if(m == 10):
	if(n == 1) :
		print(-1)
		exit()
	else :
		print(""1"", end = """")
		for i in range(1, int(n)):
			print(""0"", end = """")
else :
	for i in range(0, int(n)):
			print(m, end = """")",5762,5420,62,2017-04-26 16:25:01,29,17,1,8,0
22296,26872242,"n, t = map(int,input().split())
e= 10**(n) -1//t*t
if e>=(10**(n-1)):
    print(e)
else:
    print(-1)",5790,0,46,2017-05-05 07:11:34,11,17,2,8,0
22297,26872266,"n, t = map(int,input().split())
e= (10**(n) -1)//t*t
if e>=(10**(n-1)):
    print(e)
else:
    print(-1)",5790,0,62,2017-05-05 07:13:09,11,17,1,8,0
22376,26914539,"n,t = input().split()
n = int(n)
t = int(t)
print(t*(10**(n-1)))",1213,0,61,2017-05-07 05:13:18,4,17,2,8,0
22377,26914554,"n,t = input().split()
n = int(n)
t = int(t)
if t != 10:
    print(t*(10**(n-1)))
else:
    if n != 1:
        print(10**(n-1))
    else:
        print(-1)",1213,4,62,2017-05-07 05:16:31,10,17,1,8,0
22411,26961812,"n,t=map(int,input().split())
x=t
i=(10**(n-1))//t
f=0
if len(str(i*t))==n:
    print(i*t)
else:
    while f==0:
        i+=1
        x=t*i
        if len(str(x))==n:
            f=1
        elif len(str(x))>n:
            f=1
    if n==len(str(x)):
        print(x)
    else:
        print(-1)",1151,0,46,2017-05-08 20:44:17,35,17,2,8,0
22412,26961847,"n,t=map(int,input().split())
x=t
i=(10**(n-1))//t
f=0
if len(str(i*t))==n and i!=0:
    print(i*t)
else:
    while f==0:
        i+=1
        x=t*i
        if len(str(x))==n:
            f=1
        elif len(str(x))>n:
            f=1
    if n==len(str(x)):
        print(x)
    else:
        print(-1)",1151,0,62,2017-05-08 20:45:35,35,17,1,8,0
22638,27153058,"numbers = [int(x) for x in input().split("" "")]
olesya_digits, rodion_divider = numbers[0], numbers[1]
begin = 10**(olesya_digits-1)

for i in range(begin, begin + 9):
    if i % rodion_divider == 0:
        print(i)
        break",5834,4,62,2017-05-16 10:44:01,15,17,2,8,0
22639,27153108,"numbers = [int(x) for x in input().split("" "")]
olesya_digits, rodion_divider = numbers[0], numbers[1]
begin = 10**(olesya_digits-1)
result = -1
for i in range(begin, begin + 9):
    if i % rodion_divider == 0:
        result = i
        break
print(result)",5834,4,62,2017-05-16 10:45:54,17,17,1,8,0
22679,27181020,"n, t = map(int, input().split())
i = 10 ** (n - 1)
while True:
    if len(str(i)) > n:
        print('- 1')
        break
    elif i % t == 0:
        print(i)
        break
    else:
        i += 1",1255,0,46,2017-05-17 16:51:32,21,17,2,8,0
22680,27181048,"n, t = map(int, input().split())
i = 10 ** (n - 1)
while True:
    if len(str(i)) > n:
        print('-1')
        break
    elif i % t == 0:
        print(i)
        break
    else:
        i += 1",1255,4,62,2017-05-17 16:53:11,21,17,1,8,0
22944,27400171,"N, T = map(int, input().split())


def rec(x, maxv):
    if x % T == 0:
        return x
    if x > maxv:
        return -1
    return rec(x + 1, maxv)


print(rec(10 ** (N - 1), 10 ** N - 1))",1401,0,61,2017-05-28 06:44:31,12,17,2,8,0
22945,27400189,"N, T = map(int, input().split())


def rec(x, maxv):
    if x % T == 0:
        return x
    if x >= maxv:
        return -1
    return rec(x + 1, maxv)


print(rec(10 ** (N - 1), 10 ** N - 1))",1401,0,62,2017-05-28 06:45:59,12,17,1,8,0
23000,27437587,"n = int(input())
t = int(input())
out = """"
for i in range(1,11):
    for j in range(1,11):
        k = i*j
        if k%t == 0 and len(str(k)) <= n:
            out = str(k)
            break
if out == """":
    print (-1)
else:
    for j in range(1, n+1-len(str(k))):
        out = out + ""0""
print (out)",5876,4,46,2017-05-30 03:17:34,29,17,5,8,0
23020,27455614,"n = int(input())
t = int(input())
out = """"
for i in range(1,11):
    for j in range(1,11):
        k = i*j
        if k%t == 0 and len(str(k)) <= n:
            out = str(k)
            break
    if out != """":
        break
if out == """":
    print (-1)
else:
    for j in range(1, n+1-len(str(k))):
        out = out + ""0""
print (out)",5876,0,46,2017-05-30 23:55:46,33,17,5,8,0
23047,27470000,"n,t=map(int,input().split())
print((10**(n-1)-1)*t if n > 1 else t)",5885,0,46,2017-05-31 18:22:12,2,17,2,8,0
23048,27470028,"n,t=map(int,input().split())
if n==1 and t==10:print(-1)
else:print((10**(n-1)-1)*t if n > 1 else t)",5885,20,62,2017-05-31 18:23:30,3,17,1,8,0
23266,27599977,"a,b=tuple(input().split("" ""))
a=int(a)
b=int(b)
if a is 1 and b is 10:
    print(-1)
    exit(0)
print(b*(10**(a-1)))",1460,8,62,2017-06-05 23:00:43,13,17,2,8,0
23267,27599994,"a,b=tuple(input().split("" ""))
a=int(a)
b=int(b)
if a is 1 and b is 10:
    print(-1)
    exit(0)
if b is 10:
    a-=1
print(b*(10**(a-1)))",1460,12,62,2017-06-05 23:02:12,17,17,1,8,0
23416,27672826,"n,t=map(int,(input().split("" "")))
s=int(""1""+(""0"")*(n-1))
k=int(""1""+(""0"")*n)
for j in range(s,k):
        l=str(j)
        if(len(l)==n):
            if(j%t==0):
                print(j)
                break
            else:
                print(""-1"")
                break",5930,0,46,2017-06-08 16:56:41,23,17,2,8,0
23417,27673060,"n,t=map(int,(input().split("" "")))
s=int(""1""+(""0"")*(n-1))
k=int(""1""+(""0"")*n)
for j in range(s,k):
        l=str(j)
        if(len(l)==n):
            if(j%t==0):
                k=1
                print(j)
                break
if(k!=1):
    print(""-1"")",5930,0,62,2017-06-08 17:08:25,23,17,1,8,0
23616,27743141,"a=list(map(int, input().strip().split(' ')))
b=0
if(a[1]==10):
    if(a[0]==1):
        print(""-1"")
    else:
        for i in range(0, a[0]-1):
            b+=(a[1]*(10**i))   
            b*=10
        print(b)
else:
    for i in range(0, a[0]):
        b+=(a[1]*(10**i))
    print(b)",1518,4,62,2017-06-12 21:20:42,27,17,2,8,0
23652,27759518,"def power(a,b):
	k=1;
	while(b>0):
		k*=a;
		b-=1;
	return k

z=raw_input()
z=int(z)
k=int(raw_input())
m=power(10,(z-1))
counter=0
while(m<power(10,z)):
	if(m%k==0):
		print m
		counter+=1
		break
if(counter==0):
	print -1",1384,12,31,2017-06-13 19:45:01,37,17,5,13,0
23653,27759582,"def power(a,b):
	k=1;
	while(b>0):
		k*=a;
		b-=1;
	return k

z,k=raw_input().split()
z=int(z)
k=int(k)
m=power(10,(z-1))
counter=0
while(m<power(10,z)):
	if(m%k==0):
		print m
		counter+=1
		break
if(counter==0):
	print -1",1384,0,1000,2017-06-13 19:49:10,37,17,3,13,0
23663,27760550,"found = False
n, t = input().split("" "")
if n == ""1"" and t != ""1"":
    found = True
    print(-1)
n = int(n)
t = int(t)

for j in range(10**(n-1), 10**(n) + 1):
    if found:
        break
    num = j
    if num % t ==0 and not found:
        print(num)
        found = True
        break
if not found:
    print(-1)",5955,0,62,2017-06-13 20:54:31,18,17,2,8,0
23664,27760594,"found = False
n, t = input().split("" "")
n = int(n)
t = int(t)

for j in range(10**(n-1), 10**(n) + 1):
    if 10**(n) == t:
        found = True
        print(-1)
        break
    num = j
    if num % t ==0 and not found:
        print(num)
        found = True
        break
if not found:
    print(-1)",5955,24,62,2017-06-13 20:57:29,17,17,1,8,0
23702,27783331,"# Description of the problem can be found at http://codeforces.com/problemset/problem/584/B

n = int(input())

print(3**(3*n) - 7**n)",541,0,62,2017-06-15 02:46:44,9,18,2,8,0
23703,27783510,"# Description of the problem can be found at http://codeforces.com/problemset/problem/584/B

n = int(input())

print((3**(3*n) - 7**n) % (int(1e9) + 7))",541,384,124,2017-06-15 03:11:31,9,18,1,8,0
23780,27823074,"x, y = list(map(int, input().split()))
a = 1 * (10 ** (x - 1))
b = (1 * (10 ** x)) - 1
c = 0
for i in range(a, b):
    if (i % y) == 0:
        c += i
        break
if c == 0:
    print(-1)
else:
    print(c)",5969,12,62,2017-06-16 13:56:50,23,17,2,8,0
23781,27823095,"x, y = list(map(int, input().split()))
a = 1 * (10 ** (x - 1))
b = (1 * (10 ** x))
c = 0
for i in range(a, b):
    if (i % y) == 0:
        c += i
        break
if c == 0:
    print(-1)
else:
    print(c)",5969,16,62,2017-06-16 13:58:03,23,17,1,8,0
23877,27886405,"string = input()
numbers = string.split("" "")
n = int(numbers[0])
t = int(numbers[1])
s = 10 ** (n - 1)
if s % t != 0:
    s = int(s / t) * t
    while s < 10 ** (n - 1):
        s += t
    if s >= 10 ** n:
        s = -1
print(s)",1633,8,1000,2017-06-18 17:36:05,23,17,3,8,0
23878,27886599,"string = input()
numbers = string.split("" "")
n = int(numbers[0])
t = int(numbers[1])
s = 10 ** (n - 1)
if s % t != 0:
    s -= s % t
    s += t
    if s >= 10 ** n:
        s = -1
print(s)",1633,12,62,2017-06-18 17:48:15,21,17,1,8,0
23916,27892586,"n=input()
print((3**(3*n)-7**n)%1000000007)",1594,0,46,2017-06-19 02:53:03,3,18,5,8,0
23917,27892591,"n=input()
print((3**(3*n)-7**n)%1000000007)",1594,568,109,2017-06-19 02:54:47,3,18,1,13,0
23926,27898360,"n, t = map(int,raw_input().split())
if(n==1):
    ans = t
else:
    ans = (10**(n-1) - 1) * t
print ans",1638,4,46,2017-06-19 10:30:21,11,17,2,13,0
23927,27898410,"n, t = map(int,raw_input().split())
if(n==1):
    ans = t
else:
    ans = (10**(n-1) - 1) * t
print ans if len(str(ans)) == n else -1",1638,12,62,2017-06-19 10:32:23,11,17,1,13,0
23945,27918365,"#!/bin/python3

import random

n, t = map(int, input().split())
c = ''

while len(c) < n:
	c += str(random.randint(1, 9))
	
c = int(c)

while c%t != 0:
	c += 1
	
print(c if ( (c>0) and (len(str(c)) == n)) else -1)",1653,888,77,2017-06-20 09:17:27,31,17,1,8,0
23946,27918389,"#!/bin/python3

import random

n, t = map(int, input().split())
c = 1

while len(str(c)) < n:
	c *= 10
	
while c%t != 0:
	c += 1
	
print(c if ( (c>0) and (len(str(c)) == n)) else -1)",1653,900,77,2017-06-20 09:19:40,27,17,1,8,0
23967,27929143,"l=list()
def prime(N):
	count=0
	i=1
	while(i*i<=N):
		if i*i==N:
			count=count+1
		elif N%i==0:
			count=count+2
		if count>2:
			return 0
		i=i+1
	if count==2:
		return 1
	else:
		return 0
n=int(input())
if n%2==0:
	for j in range(2,n):
		s=prime(j)
		t=prime(n-j)
		if s==1 and t==1:
			l.append(j)
			l.append(n-j)
			break
else:
	l.append(3)
	n=n-3
	for j in range(2,n):
		s=prime(j)
		t=prime(n-j)
		if s==1 and t==1:
			l.append(j)
			l.append(n-j)
			break
print(len(l))
print(*l)",1369,5436,93,2017-06-20 19:48:00,37,20,2,8,0
23968,27929278,"l=list()
def prime(N):
	count=0
	i=1
	while(i*i<=N):
		if i*i==N:
			count=count+1
		elif N%i==0:
			count=count+2
		if count>2:
			return 0
		i=i+1
	if count==2:
		return 1
	else:
		return 0
n=int(input())
if n%2==0:
	for j in range(2,n):
		s=prime(j)
		t=prime(n-j)
		if s==1 and t==1:
			l.append(j)
			l.append(n-j)
			break
else:
	l.append(3)
	if n-3==0:
		l=[3]
	elif n-3>2:
		n=n-3
		for j in range(2,n):
			s=prime(j)
			t=prime(n-j)
			if s==1 and t==1:
				l.append(j)
				l.append(n-j)
				break
	else:
		l=[5]
		n=n-5
		if n>2:
			for j in range(2,n):
				s=prime(j)
				t=prime(n-j)
				if s==1 and t==1:
					l.append(j)
					l.append(n-j)
					break
print(len(l))
print(*l)",1369,5436,311,2017-06-20 19:56:35,51,20,1,8,0
24001,27944030,"# codeforces584a.py
n,t=map(int,raw_input().split())
ans=str(t/10+t%10)
for i in xrange(0,n-1):
	ans+=str(t%10)
print ans",1642,4564,61,2017-06-21 13:59:37,6,17,2,13,0
24002,27944055,"# codeforces584a.py
n,t=map(int,raw_input().split())
ans=str(t/10+t%10)
for i in xrange(0,n-1):
	ans+=str(t%10)
if n<len(str(t)):
	ans=""-1""
print ans",1642,4568,46,2017-06-21 14:00:52,8,17,1,13,0
24069,27983008,"n_t = [int(x) for x in input().split()]
n = n_t[0]
t = n_t[1]

if 2<=t<=9:
    ans = str(t)*n
elif t==10 and n==-1:
    ans = '-1'
else:
    ans = str(10) + '0'*(n-2)

print(ans)",1362,5408,46,2017-06-23 13:56:43,23,17,2,8,0
24070,27983020,"n_t = [int(x) for x in input().split()]
n = n_t[0]
t = n_t[1]

if 2<=t<=9:
    ans = str(t)*n
elif t==10 and n==1:
    ans = '-1'
else:
    ans = str(10) + '0'*(n-2)

print(ans)",1362,5424,77,2017-06-23 13:57:25,23,17,1,8,0
24320,28181710,"n, t = map(int, input().split())
print(str(t) + '0' * (n-len(str(t))))",1762,5416,61,2017-07-01 03:41:45,3,17,2,8,0
24321,28181713,"n, t = raw_input().split()

if len(t) == 1:
    print t * int(n)
else:
    print ""1"" + ""0"" * (int(n) - 1)",1761,4556,61,2017-07-01 03:41:52,11,17,2,13,0
24322,28181719,"n, t = raw_input().split()

if n == '1' and t == '10':
    print -1
elif len(t) == 1:
    print t * int(n)
else:
    print ""1"" + ""0"" * (int(n) - 1)",1761,4568,62,2017-07-01 03:42:27,15,17,1,13,0
24323,28181722,"n,t = input().split()
n = int(n)
while len(t) < n: t += '0'
print(-1 if len(t) > n else t)",1762,5424,62,2017-07-01 03:42:42,7,17,1,8,0
24510,28351165,"n,t = map(int, raw_input().split())
num = str(t)
num = num*n
print num",1829,4560,62,2017-07-07 17:22:40,7,17,2,13,0
24512,28351251,"n,t = raw_input().split()
if (n == '1' and t == '10'):
    print -1
elif(len(t) == 1):
    print t*int(n)
else:
    print ""1"" + ""0""*(int(n)-1)",1829,4572,62,2017-07-07 17:29:00,13,17,1,13,0
24522,28358212,"n,t=map(int,input().split())
if t==10:
    if n=1:
        o=-1
    else:
        o='1'
        for i in range(n-1):
            o=o+'0'
else:
    o=str(t)
    for i in range(n-1):
        o=o+str(t)
print(o)",6023,0,0,2017-07-08 03:00:42,25,17,4,8,0
24523,28358216,"n,t=map(int,input().split())
if t==10:
    if n==1:
        o=-1
    else:
        o='1'
        for i in range(n-1):
            o=o+'0'
else:
    o=str(t)
    for i in range(n-1):
        o=o+str(t)
print(o)",6023,5432,77,2017-07-08 03:01:59,25,17,1,8,0
24525,28362056,"n, t = map(int, input().split())
x = 10**(n-1)
if n==1:
    print(t)
else:
    if t==3 or t==6 or t==9:
        print(x+8)
    elif t==1 or t==2 or t ==5 or t==10:
        print(x)
    elif t==4:
        if n==2:
            print(12)
        else:
            print(x)
    elif t==8:
        if n==2:
            print(16)
        elif n==3:
            print(104)
        else:
            print(x)
    else:
        for i in range(x, (10**n)):
            if i%t==0:
                print(i)
                break",6048,5440,46,2017-07-08 09:19:18,51,17,2,8,0
24526,28362098,"n, t = map(int, input().split())
x = 10**(n-1)
if n==1:
    if t==10:
        print(-1)
    else:
        print(t)
else:
    if t==3 or t==6 or t==9:
        print(x+8)
    elif t==1 or t==2 or t ==5 or t==10:
        print(x)
    elif t==4:
        if n==2:
            print(12)
        else:
            print(x)
    elif t==8:
        if n==2:
            print(16)
        elif n==3:
            print(104)
        else:
            print(x)
    else:
        for i in range(x, (10**n)):
            if i%t==0:
                print(i)
                break",6048,5440,62,2017-07-08 09:21:38,57,17,1,8,0
24601,28411465,"n, t = [int(i) for i in input().split()]
if n == 1 and t == 10:
    print(-1)
else:
    num = int('1' * n)
    while num % t != 0:
        num += 1
print(num)",1861,5428,61,2017-07-10 19:07:02,15,17,5,8,0
24602,28411487,"n, t = [int(i) for i in input().split()]
if n == 1 and t == 10:
    print(-1)
else:
    num = int('1' * n)
    while num % t != 0:
        num += 1
    print(num)",1861,5432,62,2017-07-10 19:08:46,15,17,1,8,0
24603,28413148,"a=raw_input()
b=int(a[a.find(' '):])
a=int(a[:a.find(' ')])
for i in range(10**a,10*10**a):
     if i%b==0:
          print i
          exit()
print -1",6059,4644,61,2017-07-10 20:59:14,15,17,2,13,0
24604,28413161,"a=raw_input()
b=int(a[a.find(' '):])
a=int(a[:a.find(' ')])
for i in range(10**a/10,10**a):
     if i%b==0:
          print i
          exit()
print -1",6059,6104,61,2017-07-10 21:00:40,15,17,5,13,0
24629,28423183,"n, t = map(int, input().split())
ans = 10 ** n
upper = 10 ** (n + 1)
while ans < upper:
    if ans % t == 0:
        print(ans)
        break
    ans += 1
if ans == upper:
    print(-1)",1865,4456,46,2017-07-11 11:25:55,19,17,2,8,0
24632,28425466,"n, t = map(int, input().split())
ans = 10 ** (n - 1)
upper = 10 ** n
while ans < upper:
    if ans % t == 0:
        print(ans)
        break
    ans += 1
if ans == upper:
    print(-1)",1865,5448,62,2017-07-11 14:52:34,19,17,1,8,0
24672,28501906,"n = [eval(i) for i in input().split()]
t = n[1]
n = 10**(n[0]-1)
for i in range(20):
    if (n+i)%t == 0:
        print(n+i)
        exit()",1878,4540,62,2017-07-13 15:21:54,13,17,2,8,0
24673,28501926,"n = [eval(i) for i in input().split()]
t = n[1]
n = 10**(n[0]-1)
if n == 1 and t == 10:
    print(-1)
    exit()
for i in range(20):
    if (n+i)%t == 0:
        print(n+i)
        exit()",1878,5440,61,2017-07-13 15:22:57,19,17,1,8,0
24733,28554443,"a=list(map(int, input().strip().split(' ')))

if(a[1]==10):
    if(a[0]==1):
        print(""-1"")
    else:
        for i in range(0, a[0]-1):
            print(""1"", end='', sep='')
        print(""0"")
else:
    for i in range(0,a[0]):
        print(a[1], end='', sep='')",1518,5424,77,2017-07-14 20:32:38,23,17,1,8,0
24762,28577652,"m, n = [int(i) for i in input().split()]
if n == 10:
    print ('10' + '0'*(m-2))
else:
    print (str(n) + '0'*(m-1))",1899,5424,61,2017-07-15 18:58:03,9,17,2,8,0
24763,28577674,"m, n = [int(i) for i in input().split()]
if n == 10:
    if(m==1):
        print(-1)
    else:
        print ('10' + '0'*(m-2))
else:
    print (str(n) + '0'*(m-1))",1899,5424,62,2017-07-15 18:59:08,15,17,1,8,0
24784,28585400,"n,t = map(int,raw_input().split())
i = 10**(n-1)
j = 10 **n +1
for x in range(i,j):
	if x%t == 0:
		print x
		break",1904,6092,61,2017-07-16 05:47:24,7,17,5,13,0
24785,28585436,"n,t = map(int,raw_input().split())
i = 10**(n-1)
j = 10 **n
fl =0
while i<j:
	if i%t == 0:
		print i
		break
	i+=1
if i ==j:
	print ""-1""",1904,4572,62,2017-07-16 05:51:07,11,17,1,13,0
24876,28668812,"n,t=map(int,input().split(' '))
i=10**n
i-=1
while 1:
    if i%t==0:
        print(i)
        break
    if i==0:
        print(""-1"")
        break
    i-=1",6095,4508,62,2017-07-18 16:05:51,21,17,2,8,0
24877,28668897,"n,t=map(int,input().split(' '))
i=10**n
i-=1
while 1:
    if i==0:
        print(""-1"")
        break
    if i%t==0:
        print(i)
        break
   
    i-=1",6095,4512,61,2017-07-18 16:08:39,23,17,1,8,0
24958,28761804,"s=input()
s=s.split()
n=int(s[0])
k=int(s[1])
a=10**(n-1)
x=a+(k-a%k)
if k>=a :
    print(""-1"")
else :
    print(x)",6106,4516,62,2017-07-21 21:23:26,19,17,2,8,0
24959,28761836,"s=input()
s=s.split()
n=int(s[0])
k=int(s[1])
a=10**(n-1)
x=a+(k-a%k)
if k>=10**n :
    print(""-1"")
else :
    print(x)",6106,4512,62,2017-07-21 21:24:53,19,17,1,8,0
25034,28804442,"n, t = map(int, input().split())
i = int(""9""*n)
while i > int(""1""+""0""*(n-1)):
    i = i - 1
    if i % t == 0:
        print(i)
        exit(0)
print(""-1"")",1991,4528,46,2017-07-23 18:47:29,15,17,2,8,0
25035,28804463,"n, t = map(int, input().split())
i = int(""9"" * n)
while i > int(""1"" + ""0"" * (n - 1)):
    if i % t == 0:
        print(i)
        exit(0)
    i = i - 1
print(""-1"")",1991,4532,62,2017-07-23 18:49:13,15,17,1,8,0
25067,28823246,"def check(n):
    d = 2
    while d*d <= n:
        if n % d == 0: return False
        d += 1
    return True
n = int(input())
flag = False
if check(n) and n > 10: print(n)
elif n >= 9:
    Ans = [3]
    n -= 3
    for i in range(2,n):
        if check(i) and check(n-i):
            print(3)
            print(3, i , n-i)
            break
elif n == 3: print(1,'\n',3)
elif n == 5: print(1,'\n',5)
elif n == 7: print(1,'\n',7)",6123,4500,62,2017-07-24 14:43:26,39,20,2,8,0
25068,28823266,"def check(n):
    d = 2
    while d*d <= n:
        if n % d == 0: return False
        d += 1
    return True
n = int(input())
flag = False
if check(n) and n > 10: print(1,'\n',n)
elif n >= 9:
    Ans = [3]
    n -= 3
    for i in range(2,n):
        if check(i) and check(n-i):
            print(3)
            print(3, i , n-i)
            break
elif n == 3: print(1,'\n',3)
elif n == 5: print(1,'\n',5)
elif n == 7: print(1,'\n',7)",6123,4532,77,2017-07-24 14:44:19,39,20,1,8,0
25108,28871170,"[n,t] = [int(x) for x in input().split()]
start = 10^(n-1)
# factorize t
factorList = []
i = 2
num = t
while num != 1:
    if num % i == 0:
        factorList.append(i)
        while num % i == 0:
            num /= i
    i += 1
a = 1
for factor in factorList:
    a *= factor
while len(str(a)) < n:
    a *= factorList[0]
if len(str(a)) == n:
    print(a)
else:
    print(-1)",2005,4512,62,2017-07-25 12:12:24,41,17,2,8,0
25109,28871245,"[n,t] = [int(x) for x in input().split()]
start = 10^(n-1)
# factorize t
factorList = []
i = 2
num = t
while num != 1:
    if num % i == 0:
        factorList.append(i)
        while num % i == 0:
            num /= i
    i += 1
a = 1
for factor in factorList:
    a *= factor
while len(str(a)) < n:
    a *= factorList[0]
if len(str(a)) == n:
    while len(str(a)) == n and a % t != 0:
        a *= factorList[0]
    print(a)
else:
    print(-1)",2005,4524,62,2017-07-25 12:15:34,45,17,1,8,0
25208,28967406,"x,y = map(int,input().split())

a = 10 ** (x-1)
b = 10 ** x-1
while(b>a):
    if(a%y==0):
        break
    a += 1
print(a)",2047,4504,62,2017-07-29 12:26:27,17,17,2,8,0
25209,28968084,"x,y = map(int,input().split())

a = 10 ** (x-1)
b = 10 ** x-1
while(b>a):
    if(a%y==0):
        break
    a += 1

if(a == y-1):
    print(""-1"")
else:
    print(a)",2047,4516,62,2017-07-29 13:49:54,25,17,1,8,0
25240,29045828,"n, t = [int(x) for x in input().split()]
left = '0'
right = '9'
answer = False
if n >= 2:
    left = '1'
for i in range(1, n):
    left += '0'
    right += '9'
left = int(left)
right = int(right)
for i in range (left, right + 1):
    if i % t == 0:
        print(i)
        answer = True
        break
if not answer:
    print(-1)",2072,4512,61,2017-07-31 13:57:17,35,17,2,8,0
25241,29045859,"n, t = [int(x) for x in input().split()]
answer = False
left = '1'
right = '9'
for i in range(1, n):
    left += '0'
    right += '9'
left = int(left)
right = int(right)
for i in range (left, right + 1):
    if i % t == 0:
        print(i)
        answer = True
        break
if not answer:
    print(-1)",2072,4524,62,2017-07-31 13:58:50,31,17,1,8,0
25352,29141920,"a=list(map(int,input().split()))
b=10**(a[0]-1)
c=(10**a[0])
d=True
for r in range(b,c):
    if(r%a[1]==0):
        print(r)
        d=False
        break
if(d):
    print(""-1"")",2085,4516,78,2017-08-03 03:43:27,21,17,1,8,0
25353,29141945,"a=list(map(int,input().split()))
b=10**(a[0]-1)
c=(10**a[0])
k=True
for r in range(b,c):
    if(r%a[1]==0):
        print(r)
        k=False
        break
if(k):
    print(""-1"")",2085,4520,62,2017-08-03 03:45:45,21,17,1,8,0
25421,29175319,"inputs=[int(i) for i in input().split()]
n,k=(inputs[0],inputs[1])
max_no=str()
for i in range(n):
    max_no+='9'

min_no=max_no[1:] if n > 1 else 0
min_no=int(min_no)
max_no=int(max_no)
while max_no > min_no:
    if max_no % k == 0:
        print(max_no)
        break
    max_no-=1
if max_no %k != 0 :
    print(-1)",6166,4508,77,2017-08-03 21:29:19,16,17,2,8,0
25422,29175375,"inputs=[int(i) for i in input().split()]
n,k=(inputs[0],inputs[1])
max_no=str()
for i in range(n):
    max_no+='9'

min_no=max_no[1:] if n > 1 else 0
min_no=int(min_no)
max_no=int(max_no)
while max_no > min_no:
    if max_no % k == 0:
        print(max_no)
        break
    max_no-=1
if max_no == min_no :
    print(-1)",6166,4520,77,2017-08-03 21:32:08,16,17,1,8,0
25432,29177244,"n=int(input(''));
t=int(input(''));
a=10**(n-1);
b=10**n-1;
c=0;
for a in range(a,b+1):
    if(a%t==0):
        print(a);
        c=c+1;
        break;

if(c==0):
    print('-1');",60,4480,62,2017-08-03 23:17:29,13,17,5,8,0
25442,29178376,"def generate(n):
	if n == 1:
		return 1

	return 10 * generate(n-1)

n, k = input().split()

ans = generate(int(n))
end = generate(int(n)+1)

state = False

while ans <= end:
	if ans % int(k) == 0:
		state = True
		break
	ans+=1

if state:	
	print(ans)
else:
	print(-1)",2160,4532,62,2017-08-04 00:46:26,45,17,2,8,0
25443,29178400,"def generate(n):
	if n == 1:
		return 1

	return 10 * generate(n-1)

n, k = input().split()

ans = generate(int(n))
end = generate(int(n)+1)

state = False

while ans < end:
	if ans % int(k) == 0:
		state = True
		break
	ans+=1

if state:	
	print(ans)
else:
	print(-1)",2160,4532,77,2017-08-04 00:48:26,45,17,1,8,0
25468,29211197,"n,t=map(int,input().split())
if(t==2):
    print(int('4'*(n-1)+'2'))
elif(t==3):
    print(int('3'*n))
elif(t==4):
    print(int('4'*n))
elif(t==5):
    print(int('5'*n))
elif(t==6):
    print(int('6'*n))
elif(t==7):
    print(int('7'*n))
elif(t==8):
    print(int('8'*n))
elif(t==9):
    print(int('9'*n))
elif(t==10):
    print(int('1'*n+'0'))",2102,4524,62,2017-08-05 09:30:20,37,17,2,8,0
25469,29211296,"n,t=map(int,input().split())
if(t==2):
    print(int('4'*(n-1)+'2'))
elif(t==3):
    print(int('3'*n))
elif(t==4):
    print(int('4'*n))
elif(t==5):
    print(int('5'*n))
elif(t==6):
    print(int('6'*n))
elif(t==7):
    print(int('7'*n))
elif(t==8):
    print(int('8'*n))
elif(t==9):
    print(int('9'*n))
elif(t==10):
    if(n==1):
        print('-1');
    else:
        print(int('1'*(n-1)+'0'))",2102,4520,62,2017-08-05 09:35:10,43,17,1,8,0
25482,29223522,"#Digits =list ({'1','2','3','4','5','6','7','8','9'})
n,t=map (int,input ().split ())
s=""""
#print (s)
if t==10:
    s+='1'+(n-1)*'0'
else:
    s+=str (t)+(n-1)*'0'

print (s)",1846,4512,62,2017-08-05 19:40:28,19,17,2,8,0
25483,29223573,"#Digits =list ({'1','2','3','4','5','6','7','8','9'})
n,t=map (int,input ().split ())
s=""""
#print (s)
if t==10:
    if n>1:
        s+='1'+(n-1)*'0'
    else:
        s+=""-1""
else:
    s+=str (t)+(n-1)*'0'

print (s)",1846,4516,77,2017-08-05 19:42:44,25,17,1,8,0
25681,29350423,"n=list(map(int, input().split()))
smallest_number=10**(n[0]-1)
for i in range(smallest_number):
    if smallest_number%n[1]==0:
        print(smallest_number)
        break
    smallest_number+=1",6202,4516,61,2017-08-11 13:22:43,13,17,2,8,0
25685,29350720,"n=list(map(int, input().split()))
smallest_number=10**(n[0]-1)
if n[0]==1:
    if n[1]<10:
        print(n[1])
    else:
        print(""-1"")
else:
    for i in range(smallest_number):
        if smallest_number%n[1]==0:
            print(smallest_number)
            break
        smallest_number+=1",6202,4516,62,2017-08-11 13:40:23,25,17,1,8,0
25693,29355900,"n = int(raw_input())
print pow(3, 3 * n) - pow(7, n) % (pow(10,9) + 7)",6206,4564,62,2017-08-11 17:56:48,2,18,2,13,0
25694,29355961,"n = int(raw_input())
print (pow(3, 3 * n) - pow(7, n)) % (pow(10,9) + 7)",6206,5108,108,2017-08-11 17:59:08,2,18,1,13,0
25697,29357848,"//ana gayb el fekr2 bs 7w2r el python d2 ely mgnny
n=input()
print (3**(n*3)-(7**n))%(1000000007)",207,0,0,2017-08-11 19:27:28,5,18,4,13,0
25698,29357857,"n=input()
print (3**(n*3)-(7**n))%(1000000007)",207,5104,93,2017-08-11 19:28:11,3,18,1,13,0
26188,13610655,"def updatenoise(k):
    for i in range(len(list)):
        if k-i <= 0:
            break
        list[i][2] -= k-i
def check():
    if len(list) < 0:
        return
    for i in range(len(list)):
        print(list)
        if list[i][2]<0:
            d = list[i][1]
            list.remove(list[i])
            scream(i, d)
            check()
            return

def scream(start, vol):
    for i in range(start, len(list)):
        list[i][2] -= vol

n = int(input())
list = []
visit = []
for i in range(n):
    temp = [int(item) for item in input().split()]
    temp.append(i+1)
    list.append(temp)
while len(list)>0:
    visit.append(list[0][3])
    v = list[0][0]
    list.remove(list[0])
    if len(list) < 0:
        break
    updatenoise(v)
    check()
print(len(visit))
print(' '.join(map(str,visit)))",6293,0,46,2015-10-14 19:42:15,75,22,2,8,0
26189,13610680,"def updatenoise(k):
    for i in range(len(list)):
        if k-i <= 0:
            break
        list[i][2] -= k-i
def check():
    if len(list) < 0:
        return
    for i in range(len(list)):
        if list[i][2]<0:
            d = list[i][1]
            list.remove(list[i])
            scream(i, d)
            check()
            return

def scream(start, vol):
    for i in range(start, len(list)):
        list[i][2] -= vol

n = int(input())
list = []
visit = []
for i in range(n):
    temp = [int(item) for item in input().split()]
    temp.append(i+1)
    list.append(temp)
while len(list)>0:
    visit.append(list[0][3])
    v = list[0][0]
    list.remove(list[0])
    if len(list) < 0:
        break
    updatenoise(v)
    check()
print(len(visit))
print(' '.join(map(str,visit)))",6293,988,935,2015-10-14 19:43:46,73,22,5,8,0
26237,13611936,"n = input()
I = lambda: map(int, raw_input().split())
a = []
for i in range(n):
    a.append(I())
l = []
for i in range(n):
    if a[i][2] < 0:
        for j in range(i + 1, n):
            a[j][2] -= a[i][1]
    else:
        l.append(i + 1)
        for j in range(i + 1, n):
            a[j][2] -= max(a[i][0] - j + i + 1, 0)

print len(l)
print ' '.join(map(str, l))",6302,24,62,2015-10-14 21:03:24,17,22,2,13,0
26243,13612518,"n = input()
I = lambda: map(int, raw_input().split())
a = []
for i in range(n):
    a.append(I())
l = []
i = 0
while(i < len(a)):
    if a[i][2] < 0:
        for j in range(i + 1, len(a)):
            a[j][2] -= a[i][1]
        del a[i]
    else:
        l.append(i + 1)
        for j in range(i + 1, len(a)):
            a[j][2] -= max(a[i][0] - j + i + 1, 0)

    i += 1
print len(l)
print ' '.join(map(str, l))",6302,20,46,2015-10-14 21:09:08,20,22,2,13,0
26646,13625616,"import io
import math

n=list(map(int,input().split()))
koldet=n[0]
spisokdet=[]
res=0
spisokvosh=[]
for i in range(koldet):
    spisokdet.append(list(map(int,input().split())))
for i in range(koldet):
    if spisokdet[i][2]>=0:
        res+=1
        spisokvosh.append(i+1)
        v=spisokdet[i][0]
        for g in range(i+1,i+v+1 if i+1+v<=koldet else koldet):
            spisokdet[g][2]-=(v-(g-i-1))
    else:
        for e in range (i+1,koldet):
            spisokdet[e][2]-=spisokdet[i][1]
print(res)
for i in range(res):
    print( str( spisokvosh[i]),end=' ')",6372,8,62,2015-10-15 18:18:29,45,22,2,8,0
26656,13626390,"import io
import math

n=list(map(int,input().split()))
koldet=n[0]
spisokdet=[]
res=0
spisokvosh=[]
for i in range(koldet):
    spisokdet.append(list(map(int,input().split())))
for i in range(koldet):
    if spisokdet[i][2]>=0:
        res+=1
        spisokvosh.append(i+1)
        v=spisokdet[i][0]
        g=i+1
        while(v>0 and g<koldet):
            if (spisokdet[g][2]>=0):
                spisokdet[g][2]-=v
                v-=1
            g+=1
    else:
        for e in range (i+1,koldet):
            spisokdet[e][2]-=spisokdet[i][1]
print(res)
for i in range(res):
    print( str( spisokvosh[i]),end=' ')",6372,0,61,2015-10-15 19:11:30,53,22,2,8,0
26664,13626460,"ans = []

def gcd(x, y):
    while(True):
        if x == y:
            if x == 1:
                return True;
            else:
                return False;
        elif x > y:
            t = x // y;
            if y == 1:
                t -= 1
            ans.append(-t)
            x -= t * y
        else:
            t = y // x
            if x == 1:
                t -= 1
            ans.append(t)
            y -= t * x

x, y = map(long, raw_input().split())
if gcd(x, y) == False:
    print 'Impossible'
else:
    s = ''
    for t in ans:
        if t < 0:
            s += str(-t) + 'A'
        else:
            s += str(t) + 'B'
    print s",2986,8,62,2015-10-15 19:17:03,65,24,5,13,0
26666,13626525,"n = input()
if n % 4 == 0:
    print(4)
else:
    print(0)",6384,16,46,2015-10-15 19:22:26,5,27,2,13,1
26667,13626532,"n = input()
if n % 4 == 0:
    print(4)
else:
    print(0)",6384,4,31,2015-10-15 19:22:45,5,27,2,13,1
26669,13626565,"ans = []

def gcd(x, y):
    while(True):
        if x == y:
            if x == 1:
                return True;
            else:
                return False;
        elif x > y:
            t = (x-1) // y;
            ans.append(-t)
            x -= t * y
        else:
            t = (y-1) // x
            ans.append(t)
            y -= t * x

x, y = map(long, raw_input().split())
if gcd(x, y) == False:
    print 'Impossible'
else:
    s = ''
    for t in ans:
        if t < 0:
            s += str(-t) + 'A'
        else:
            s += str(t) + 'B'
    print s",2986,4,62,2015-10-15 19:25:51,57,24,1,13,0
26940,13668792,"n = int(input())

t = []
for i in range(n):
	t.append(list(map(int, input().split())))

can = []
generated = [(0, 0, 0)]
how = ['']

for i in range(n):
	q = len(generated)
	for n in range(q):
		now = generated[n]
		nowh = how[n]
		#LMW
		generated.append(( now[0] + t[i][0], now[1] + t[i][1], now[2] ))
		how.append(nowh+'LM\n')

		generated.append(( now[0] + t[i][0], now[1], now[2] + t[i][2] ))
		how.append(nowh+'LW\n')

		generated.append(( now[0], now[1] + t[i][1], now[2] + t[i][2] ))
		how.append(nowh+'MW\n')

	generated = generated[q:]
	how = how[q:]


ok = False
for key, i in enumerate(generated):
	if i[0] == i[1] == i[2]:
		print(how[key][:-1])
		ok = True
		break

if not ok:
	print('Impossible')",3683,252,61,2015-10-16 19:46:02,75,23,2,8,0
26944,13668881,"n = int(input())

ms = None

t = []
for i in range(n):
	t.append(list(map(int, input().split())))

	if ms is None: ms = t[-1][0]
	ms = min(t[-1]+[ms])

can = []
generated = [(0, 0, 0)]
how = ['']

for i in range(n):
	q = len(generated)
	for n in range(q):
		now = generated[n]
		nowh = how[n]
		#LMW
		generated.append(( now[0] + t[i][0], now[1] + t[i][1], now[2] ))
		how.append(nowh+'LM\n')

		generated.append(( now[0] + t[i][0], now[1], now[2] + t[i][2] ))
		how.append(nowh+'LW\n')

		generated.append(( now[0], now[1] + t[i][1], now[2] + t[i][2] ))
		how.append(nowh+'MW\n')

	generated = generated[q:]
	how = how[q:]


mw = None

for key, i in enumerate(generated):
	if i[0] == i[1] == i[2] and i[0] >= ms:
		ms = i[0]
		mw = key		

if mw is not None:
	print(how[mw])
else:
	print('Impossible')",3683,262144,2012,2015-10-16 19:52:03,89,23,6,8,0
27031,13679769,"from sys import stdin, stdout
from collections import deque

kids_corridor = deque([])
n = int(stdin.readline().rstrip())
screams_deque = deque([])

for number in xrange(1, n+1):
    vi, di, pi = map(int, stdin.readline().rstrip().split())
    kids_corridor.append((number, vi, di, pi))

healthy = deque([])




def resolve_screams_deque(screams_deque, kids_corridor):
    for scream in screams_deque:
        if scream[0] == 'cab':
            kids_corridor = scream_cabinet(scream[1], kids_corridor)
        elif scream[0] == 'cor':
            kids_corridor = scream_corridor(scream[1], kids_corridor)
    return kids_corridor


def scream_cabinet(scream_loudness, kids_corridor):
    kids_corridor_new = deque([])
    for i, kid in enumerate(kids_corridor):
        if scream_loudness - i > 0:
            kids_corridor_new.append((kid[0], kid[1], kid[2], kid[3] - (scream_loudness-i)))
        else:
            kids_corridor_new.append(kid)
    return kids_corridor_new


def scream_corridor(scream_loudness, kids_corridor):
    kids_corridor_new = deque([])
    for i, kid in enumerate(kids_corridor):
        kids_corridor_new.append((kid[0], kid[1], kid[2], kid[3] - scream_loudness))
    return kids_corridor_new

def check_runners(kids_corridor):
    screams_deque = deque([])
    kids_corridor_new = deque([])
    for i, kid in enumerate(kids_corridor):
        if kid[3] >= 0:
            kids_corridor_new.append(kid)
        else:
            screams_deque.append(('cor', kid[2]))
    return kids_corridor_new, screams_deque


while len(kids_corridor) > 0:
    scream_loudness = kids_corridor[0][1]
    healthy.append(kids_corridor.popleft())
    screams_deque.append(('cab', scream_loudness))
    while len(screams_deque) > 0:
        kids_corridor = resolve_screams_deque(screams_deque, kids_corridor)
        kids_corridor, screams_deque = check_runners(kids_corridor)




    # loudness = kids[0][1]
    # healthy.append(kids[0])
    # kids.popleft()
    # kids = scream_office(loudness, kids)


print len(healthy)
for kid in healthy:
    print kid[0],",6422,632,61,2015-10-17 11:35:31,143,22,2,13,1
27059,13685316,"from sys import stdin, stdout
from collections import deque

kids_corridor = deque([])
n = int(stdin.readline().rstrip())
screams_deque = deque([])

for number in xrange(1, n+1):
    vi, di, pi = map(int, stdin.readline().rstrip().split())
    kids_corridor.append((number, vi, di, pi))

healthy = deque([])




def resolve_screams_deque(screams_deque, kids_corridor):
    for scream in screams_deque:
        if scream[0] == 'cab':
            kids_corridor = scream_cabinet(scream[1], kids_corridor)
        elif scream[0] == 'cor':
            kids_corridor = scream_corridor(scream[1], kids_corridor)
    return kids_corridor


def scream_cabinet(scream_loudness, kids_corridor):
    kids_corridor_new = deque([])
    for i, kid in enumerate(kids_corridor):
        if scream_loudness - i > 0:
            kids_corridor_new.append((kid[0], kid[1], kid[2], kid[3] - (scream_loudness-i)))
        else:
            kids_corridor_new.append(kid)
    return kids_corridor_new


def scream_corridor(scream_loudness, kids_corridor):
    kids_corridor_new = deque([])
    for i, kid in enumerate(kids_corridor):
        kids_corridor_new.append((kid[0], kid[1], kid[2], kid[3] - scream_loudness))
    return kids_corridor_new

def check_runners(kids_corridor):
    screams_deque = deque([])
    kids_corridor_new = deque([])
    for i, kid in enumerate(kids_corridor):
        if kid[3] >= 0:
            kids_corridor_new.append(kid)
        else:
            screams_deque.append(('cor', kid[2]))
    return kids_corridor_new, screams_deque


while len(kids_corridor) > 0:
    scream_loudness = kids_corridor[0][1]
    healthy.append(kids_corridor.popleft())
    screams_deque.append(('cab', scream_loudness))
    while len(screams_deque) > 0:
        kids_corridor = resolve_screams_deque(screams_deque, kids_corridor)
        kids_corridor, screams_deque = check_runners(kids_corridor)




    # loudness = kids[0][1]
    # healthy.append(kids[0])
    # kids.popleft()
    # kids = scream_office(loudness, kids)


print len(healthy)
for kid in healthy:
    print kid[0],",6422,628,46,2015-10-17 13:01:56,143,22,2,13,1
27283,13723859,"import fractions
import sys

a, b = map(int, raw_input().split())
result = ''
while True:
	if fractions.gcd(a, b) != 1:
		print 'Impossible'
		sys.exit(0)
	c, d = a, b
	if a > b:
		r = a/b
		a, b = a - b*r, b
	else:
		r = b/a
		a, b = a, b - a*r
	result += str(r) + ('B' if c < d else 'A')
	
	if (a, b) == (1, 1):
		break
	if a == 1:
		result += str(b - a) + 'B'
		break
	elif b == 1:
		result += str(a - b) + 'A'
		break
	
print result",6462,5176,109,2015-10-19 11:26:01,28,24,2,13,0
27286,13723881,"import fractions
import sys

a, b = map(int, raw_input().split())
result = ''
while True:
	if fractions.gcd(a, b) != 1:
		print 'Impossible'
		sys.exit(0)
	if (a, b) == (1, 1):
		break
	if a == 1:
		result += str(b - a) + 'B'
		break
	elif b == 1:
		result += str(a - b) + 'A'
		break
	
	c, d = a, b
	if a > b:
		r = a/b
		a, b = a - b*r, b
	else:
		r = b/a
		a, b = a, b - a*r
	result += str(r) + ('B' if c < d else 'A')
	
print result",6462,5228,124,2015-10-19 11:27:44,28,24,1,13,0
27892,13853931,"def gcd(m, n):
    if m < n:
        m, n = n, m
    r = m % n
    while r:
        m, n = n, r
        r = m % n
    return n


def search(x, y):
    while True:
        if x == 1:
            ans.extend( [] if y == 1 else (str(y - 1) + 'B') )
            return
        if y == 1:
            ans.extend( [] if x == 1 else (str(x - 1) + 'A') )
            return
        if x < y:
            ans.append(str(y // x) + 'B')
            x, y = x, y % x
        else:
            ans.append(str(x // y) + 'A')
            x, y = x % y, y

a, b = [ int(i) for i in input().split() ]

if gcd(a, b) != 1:
    print(""Impossible"")
else:
    ans = []
    search(a, b)
    
    i, length = 0, len(ans)
    print(''.join(ans))",6547,12,46,2015-10-25 16:08:57,69,24,1,8,0
27895,13854071,"def gcd(m, n):
    if m < n:
        m, n = n, m
    r = m % n
    while r:
        m, n = n, r
        r = m % n
    return n

def search(x, y):
    global ans
    while True:
        if x == 1:
            ans = ans + ("""" if y == 1 else str(y - 1) + 'B')
            return
        if y == 1:
            ans = ans + ("""" if x == 1 else str(x - 1) + 'A')
            return
        if x < y:
            ans = ans + str(y // x) + 'B'
            x, y = x, y % x
        else:
            ans = ans + str(x // y) + 'A'
            x, y = x % y, y

a, b = [ int(i) for i in input().split() ]

if gcd(a, b) != 1:
    print(""Impossible"")
else:
    ans = """"
    search(a, b)
    print(ans)",6547,0,62,2015-10-25 16:24:36,65,24,1,8,0
28084,13911480,"def dfs(x,y):
    global f
    pos.append((x,y))
    y+=1
    if f or str(gr[x][y]).isalpha():
        return
    if y>=q-1:
        f=True
        return
    if not str(gr[x][y+1]).isalpha():
        if not str(gr[x][y+2]).isalpha():
            if (x,y+2) not in pos:
                dfs(x,y+2)
    if x>0:
        if not str(gr[x-1][y]).isalpha():
            if not str(gr[x-1][y+1]).isalpha():
                if not str(gr[x-1][y+2]).isalpha():
                    if (x-1,y+2) not in pos:
                        dfs(x-1,y+2)
    if x<2:
        if not str(gr[x+1][y]).isalpha():
            if not str(gr[x+1][y+1]).isalpha():
                if not str(gr[x+1][y+2]).isalpha():
                    if (x+1,y+2) not in pos:
                        dfs(x+1,y+2)


n=int(input())
for i in range(n):
    q,w=[int(i) for i in input().split()]
    gr=[]
    gr.append(input()+"" "")
    gr.append(input()+"" "")
    gr.append(input()+"" "")
    pos=[]
    f=False
    for i in range(3):
        if gr[i][0]=='s':
            gr[i]="" ""+gr[i][1:]
            dfs(i,0)
            break
    if f:
        print(""YES"")
    else:
        print(""NO"")",6576,240,62,2015-10-28 12:18:35,89,25,5,8,0
28085,13911548,"def dfs(x,y):
    global f
    pos.append((x,y))
    y+=1
    if f or str(gr[x][y]).isalpha():
        return
    if y>=q-1:
        f=True
        return
    if not str(gr[x][y+1]).isalpha():
        if not str(gr[x][y+2]).isalpha():
            if (x,y+2) not in pos:
                dfs(x,y+2)
    if x>0:
        if not str(gr[x-1][y]).isalpha():
            if not str(gr[x-1][y+1]).isalpha():
                if not str(gr[x-1][y+2]).isalpha():
                    if (x-1,y+2) not in pos:
                        dfs(x-1,y+2)
    if x<2:
        if not str(gr[x+1][y]).isalpha():
            if not str(gr[x+1][y+1]).isalpha():
                if not str(gr[x+1][y+2]).isalpha():
                    if (x+1,y+2) not in pos:
                        dfs(x+1,y+2)


n=int(input())
for i in range(n):
    q,w=[int(i) for i in input().split()]
    gr=list()
    gr.append(input()+""     "")
    gr.append(input()+""     "")
    gr.append(input()+""     "")
    pos=[]
    f=False
    for i in range(3):
        if gr[i][0]=='s':
            gr[i]="" ""+gr[i][1:]
            dfs(i,0)
            break
    if f:
        print(""YES"")
    else:
        print(""NO"")",6576,248,62,2015-10-28 12:24:43,89,25,1,8,0
28092,13912943,"n = input()
v = []
d = []
p = []
while (n>0):
    v1, d1, p1 = map(int, raw_input().split())
    v.append(v1)
    d.append(d1)
    p.append(p1)
    n-=1

ans = []
i = 0
tooth = 0
run = 0
minus = 0
minl = []
for i in range(len(p)):
    minl = [ x-1 for x in minl if x>0] 
    minus = sum(minl)
    temp = p[i] - (minus) - (run)
    if temp >= 0:       
        minl.append(v[i]+1)
        tooth +=1
        ans.append(i+1)
    else:
        run+=d[i]
print len(ans)
for x in ans:
    print x,",6578,28,46,2015-10-28 14:06:50,30,22,2,13,0
28096,13913370,"n = input()
v = []
d = []
p = []
while (n>0):
    v1, d1, p1 = map(int, raw_input().split())
    v.append(v1)
    d.append(d1)
    p.append(p1)
    n-=1

ans = []
i = 0
tooth = 0
run = 0
minus = 0
minl = []
j = 0
while (p!=[]):
    j+=1
    p0 = p.pop(0)
    d0 = d.pop(0)
    v0 = v.pop(0)
    if p0 >= 0:
        i=0
        while (i<len(p) and v0>0):
            if p[i]>0:
                p[i]-=v0
                v0-=1
            i+=1
        ans.append(j)
    else:
        p = [ x - d0 for x in p]
    
print len(ans)
for x in ans:
    print x,",6578,28,46,2015-10-28 14:31:33,37,22,2,13,0
28217,13950509,"n = int(input())
children = []
counter = 0
children_index = []
for _ in range(n):
    children.append(list(map(int, input().split())))
for i in range(len(children)):
    y = i + 1
    temp = children[i][0]
    if children[i][2] >= 0:
        counter += 1
        children_index.append(i + 1)
        while y < len(children) and y <= children[i][0]:
            if not children[y][2] < 0:
                children[y][2] -= temp
                if children[y][2] < 0:
                    for z in range(y + 1, len(children)):
                        children[z][2] -= children[y][1]
                if  temp > 0:
                    temp -= 1
            y += 1
print(counter)
print(' '.join(str(children_index[i]) for i in range(len(children_index))))",6596,0,46,2015-10-30 13:56:48,45,22,2,8,0
28220,13950695,"n = int(input())
children = []
counter = 0
children_index = []
for _ in range(n):
    children.append(list(map(int, input().split())))
for i in range(len(children)):
    y = i + 1
    temp = children[i][0]
    if children[i][2] >= 0:
        counter += 1
        children_index.append(i + 1)
        while y < len(children) and temp >= 0:
            children[y][2] -= temp
            temp -= 1
            y += 1
    else:
        for z in range(y, len(children)):
            children[z][2] -= children[i][1]
print(counter)
print(' '.join(str(children_index[i]) for i in range(len(children_index))))",6596,0,62,2015-10-30 14:08:50,41,22,2,8,0
28338,14008377,"import sys
# read = lambda: list(map(int, sys.stdin.read().split('\n')))

class Child:
    def __init__(self, cry, leave, cond):
        self.cry = cry
        self.leave = leave
        self.cond = cond
        self.alive = True

N = int(input())
queue = list()
raw_lst = sys.stdin.read().split('\n')
for lst in raw_lst:
    if lst:
        lst = list(map(int, lst.split()))
        queue.append(Child(lst[0], lst[1], lst[2]))

for i in range(N):
    if not queue[i].alive:
        continue
    cry, leave = queue[i].cry, 0
    j = i + 1
    while j < N:
        if queue[j].alive:
            queue[j].cond -= (cry + leave)
            if queue[j].cond < 0:
                queue[j].alive = False
                leave += queue[j].leave
            if cry:
                cry -= 1
        # Point 1
        if cry == 0 and leave == 0:
            break
        j += 1

ans = [ i for i in range(N) if queue[i].alive]
length = len(ans)
print(length)
i = 0
while i < length - 1:
    print(ans[i] + 1, end="" "")
    i += 1
print(ans[-1] + 1)",6547,1372,1000,2015-11-01 16:14:06,87,22,3,8,0
28340,14008509,"import sys
# read = lambda: list(map(int, sys.stdin.read().split('\n')))

class Child:
    def __init__(self, cry, leave, cond):
        self.cry = cry
        self.leave = leave
        self.cond = cond
        self.alive = True

    def __str__(self):
        return self.cyr + "" "" + self.leave + "" "" + self.cond

N = int(input())
raw_lst = [ lst.split() for lst in sys.stdin.read().split('\n') if lst ]
queue = [ list(map(Child, [int(lst[0])], [int(lst[1])], [int(lst[2])]))[0] for lst in raw_lst ]

for i in range(N):
    if not queue[i].alive:
        continue
    cry, leave = queue[i].cry, 0
    j = i + 1
    while j < N:
        if queue[j].alive:
            queue[j].cond -= (cry + leave)
            if queue[j].cond < 0:
                queue[j].alive = False
                leave += queue[j].leave
            if cry:
                cry -= 1
        # Point 1
        if cry == 0 and leave == 0:
            break
        j += 1

ans = [ i for i in range(N) if queue[i].alive]
length = len(ans)
print(length)
i = 0
while i < length - 1:
    print(ans[i] + 1, end="" "")
    i += 1
print(ans[-1] + 1)",6547,1796,1000,2015-11-01 16:21:36,85,22,3,8,0
28613,14128960,"import sys,math
input=sys.stdin
write=sys.stdout.write
n=int(input.readline())
A=[]
s=[]
for i in range(n):
    s=input.readline().split()
    l=[int(a) for a in s]
    A.append([i+1]+l)
s=[]
while len(A)>0:
    x=A[0]
    s.append(A[0][0])
    sub=0
    del A[0]
    for j in range(len(A)):
        A[j][3]-=max(0,(x[1]-j))
        A[j][3]-=sub
        if A[j][3]<0:
            sub+=A[j][2]
    L=len(A)
    for j in range(L):
        k=L-1-j
        if A[k][3]<0:
            del A[k]
L=len(s)
write(str(L)+'\n')
for j in s:
    write(str(j)+' ')",6648,688,1000,2015-11-07 21:31:33,30,22,3,13,0
28614,14128966,"import sys,math
input=sys.stdin
write=sys.stdout.write
n=int(input.readline())
A=[]
s=[]
for i in range(n):
    s=input.readline().split()
    l=[int(a) for a in s]
    A.append([i+1]+l)
s=[]
while len(A)>0:
    x=A[0]
    s.append(A[0][0])
    sub=0
    del A[0]
    for j in xrange(len(A)):
        A[j][3]-=max(0,(x[1]-j))
        A[j][3]-=sub
        if A[j][3]<0:
            sub+=A[j][2]
    L=len(A)
    for j in xrange(L):
        k=L-1-j
        if A[k][3]<0:
            del A[k]
L=len(s)
write(str(L)+'\n')
for j in s:
    write(str(j)+' ')",6648,628,1000,2015-11-07 21:32:06,30,22,3,13,0
28663,14178159,"n = int(input())
a, k = [list(map(int, input().split())) + [i + 1] for i in range(n)], []
while a:
    cur = a.pop(0)
    k.append(cur[3])
    for i in range(min(len(a), cur[0])):
        a[i][2] -= cur[0] - i
        if a[i][2] < 0:
            for j in range(i + 1, len(a)):
                a[j][2] -= a[i][1]
    a = [x for x in a if x[2] >= 0]
print(len(k))
print(' '.join(map(str, k)))",2461,40,62,2015-11-10 01:26:15,25,22,2,8,0
28705,14186630,"n = int(input())
a, k = [list(map(int, input().split())) + [i + 1] for i in range(n)], []
while a:
    cur = a.pop(0)
    k.append(cur[3])
    for i in range(len(a)):
        a[i][2] -= max(0, cur[0] - i)
        if a[i][2] < 0:
            for j in range(i + 1, len(a)):
                a[j][2] -= a[i][1]
    a = [x for x in a if x[2] >= 0]
print(len(k))
print(' '.join(map(str, k)))",2461,712,1000,2015-11-10 18:40:15,25,22,3,8,0
29221,14571908,"import random

__author__ = ""runekri3""


class Kid:
    remaining_kids = []
    kids_cured = []  # kid_i + 1

    def __init__(self, kid_i, office_volume, hall_volume, confidence):
        self.kid_i = kid_i
        self.office_volume = office_volume
        self.hall_volume = hall_volume
        self._confidence = confidence
        self.in_line = True

    def __repr__(self):
        return "" "".join(map(str, (self.kid_i, self.office_volume, self.hall_volume, self.confidence)))

    @property
    def confidence(self):
        return self._confidence

    @confidence.setter
    def confidence(self, val):
        self._confidence = val
        if val < 0 and self.in_line:
            # print(str(self.kid_i) + "" is fleeing"")
            self_index = Kid.remaining_kids.index(self)
            kids_to_reduce_confidence_of = Kid.remaining_kids[self_index + 1:]
            for kid in kids_to_reduce_confidence_of:
                # print(str(self.kid_i) + "" fled and reduced "" + str(kid.kid_i))
                if kid.in_line:
                    kid.confidence -= self.hall_volume
            Kid.remaining_kids.remove(self)
            self.in_line = False

    @staticmethod
    def cure_next_kid():
        kid_being_cured = Kid.remaining_kids.pop(0)
        cur_cry_volume = kid_being_cured.office_volume
        kids_to_reduce_confidence_of = Kid.remaining_kids[:kid_being_cured.office_volume]
        for kid in kids_to_reduce_confidence_of:
            # print(str(kid_being_cured.kid_i) + "" yelled and reduced "" + str(kid.kid_i))
            kid.confidence -= cur_cry_volume
            cur_cry_volume -= 1
        Kid.kids_cured.append(kid_being_cured.kid_i + 1)


# n = int(input())
# for kid_i in range(n):
#     Kid.remaining_kids.append(Kid(*[kid_i] + list(map(int, input().split()))))
n = 4000
for kid_i in range(n):
    random_ints = [random.randint(1, 20000), random.randint(1, 20000), random.randint(1, 20000)]
    Kid.remaining_kids.append(Kid(*[kid_i] + random_ints))

while Kid.remaining_kids:
    Kid.cure_next_kid()
    # print(Kid.remaining_kids)

print(len(Kid.kids_cured))
print("" "".join(map(str, Kid.kids_cured)))",6731,5144,405,2015-11-30 17:27:49,125,22,2,8,0
29222,14571926,"import random

__author__ = ""runekri3""


class Kid:
    remaining_kids = []
    kids_cured = []  # kid_i + 1

    def __init__(self, kid_i, office_volume, hall_volume, confidence):
        self.kid_i = kid_i
        self.office_volume = office_volume
        self.hall_volume = hall_volume
        self._confidence = confidence
        self.in_line = True

    def __repr__(self):
        return "" "".join(map(str, (self.kid_i, self.office_volume, self.hall_volume, self.confidence)))

    @property
    def confidence(self):
        return self._confidence

    @confidence.setter
    def confidence(self, val):
        self._confidence = val
        if val < 0 and self.in_line:
            # print(str(self.kid_i) + "" is fleeing"")
            self_index = Kid.remaining_kids.index(self)
            kids_to_reduce_confidence_of = Kid.remaining_kids[self_index + 1:]
            for kid in kids_to_reduce_confidence_of:
                # print(str(self.kid_i) + "" fled and reduced "" + str(kid.kid_i))
                if kid.in_line:
                    kid.confidence -= self.hall_volume
            Kid.remaining_kids.remove(self)
            self.in_line = False

    @staticmethod
    def cure_next_kid():
        kid_being_cured = Kid.remaining_kids.pop(0)
        cur_cry_volume = kid_being_cured.office_volume
        kids_to_reduce_confidence_of = Kid.remaining_kids[:kid_being_cured.office_volume]
        for kid in kids_to_reduce_confidence_of:
            # print(str(kid_being_cured.kid_i) + "" yelled and reduced "" + str(kid.kid_i))
            kid.confidence -= cur_cry_volume
            cur_cry_volume -= 1
        Kid.kids_cured.append(kid_being_cured.kid_i + 1)


n = int(input())
for kid_i in range(n):
    Kid.remaining_kids.append(Kid(*[kid_i] + list(map(int, input().split()))))
# n = 4000
# for kid_i in range(n):
#     random_ints = [random.randint(1, 20000), random.randint(1, 20000), random.randint(1, 20000)]
#     Kid.remaining_kids.append(Kid(*[kid_i] + random_ints))

while Kid.remaining_kids:
    Kid.cure_next_kid()
    # print(Kid.remaining_kids)

print(len(Kid.kids_cured))
print("" "".join(map(str, Kid.kids_cured)))",6731,1748,1000,2015-11-30 17:28:59,125,22,3,8,0
29278,14646167,"import sys
flag = False
t = int(input())
for kek in range(t):
    n, k = [int(i) for i in input().split()]
    if t == 10 and n == 95 and k == 6:
        flag = True
    a = [[0] * n for i in range(3)]
    for i in range(3):
        a[i] = [i for i in input()]

    dp = [[False] * n for i in range(3)]
    l = 0
    if a[0][0] == 's':
        l = 0
    if a[1][0] == 's':
        l = 1
    if a[2][0] == 's':
        l = 2

    dp[l][0] = True
    first = [[False] * n for i in range(3)]
    bad = [True] * 3
    for i in range(1, n):
        if 3 * i < n and a[0][3 * i] == '.' and a[0][3 * i - 2] == '.':
            if (dp[0][i - 1] or first[0][i - 1]) or (a[1][3 * i - 2] == '.' and dp[1][i - 1]):
                dp[0][i] = True
        elif 3 * i >= n > 3 * i - 2:
            if (dp[0][i - 1] and a[0][3 * i - 2] == '.') or (dp[1][i - 1] and a[1][3 * i - 2] == '.'):
                dp[0][i] = True
        elif 3 * i >= n and (dp[0][i - 1] or dp[1][i - 1]):
            dp[0][i] = True
        if 3 * i < n and a[1][3 * i] == '.' and a[1][3 * i - 2] == '.':
            if (dp[1][i - 1] or first[1][i - 1]) or (a[0][3 * i - 2] == '.' and dp[0][i - 1]) or (a[2][3 * i - 2] == '.' and dp[2][i - 1]):
                dp[1][i] = True
        elif 3 * i >= n > 3 * i - 2:
            if (dp[0][i - 1] and a[0][3 * i - 2] == '.') or (dp[1][i - 1] and a[1][3 * i - 2] == '.') or (dp[2][i - 1] and a[2][3 * i - 2] == '.'):
                dp[1][i] = True
        elif 3 * i >= n and (dp[0][i - 1] or dp[1][i - 1] or dp[2][i - 1]):
            dp[1][i] = True
        if 3 * i < n and a[2][3 * i] == '.' and a[2][3 * i - 2] == '.':
            if (dp[2][i - 1] or first[2][i - 1]) or (a[1][3 * i - 2] == '.' and dp[1][i - 1]):
                dp[2][i] = True
        elif 3 * i >= n > 3 * i - 2:
            if (dp[2][i - 1] and a[2][3 * i - 2] == '.') or (dp[1][i - 1] and a[1][3 * i - 2] == '.'):
                dp[2][i] = True
        elif 3 * i >= n and (dp[1][i - 1] or dp[2][i - 1]):
            dp[2][i] = True
    #for i in range(3):
    #    print(dp[i])
    if max(dp[0][n - 1], dp[1][n - 1], dp[2][n - 1]):
        print('YES')
    else:
        print('NO')",6743,252,62,2015-12-04 14:01:29,107,25,1,8,0
29279,14646179,"t = int(input())
for kek in range(t):
    n, k = [int(i) for i in input().split()]
    a = [[0] * n for i in range(3)]
    for i in range(3):
        a[i] = [i for i in input()]
    dp = [[False] * n for i in range(3)]
    l = 0
    if a[0][0] == 's':
        l = 0
    if a[1][0] == 's':
        l = 1
    if a[2][0] == 's':
        l = 2
    dp[l][0] = True
    first = [[False] * n for i in range(3)]
    for i in range(1, n):
        if 3 * i < n and a[0][3 * i] == '.' and a[0][3 * i - 2] == '.':
            if (dp[0][i - 1] or first[0][i - 1]) or (a[1][3 * i - 2] == '.' and dp[1][i - 1]):
                dp[0][i] = True
        elif 3 * i >= n > 3 * i - 2:
            if (dp[0][i - 1] and a[0][3 * i - 2] == '.') or (dp[1][i - 1] and a[1][3 * i - 2] == '.'):
                dp[0][i] = True
        elif 3 * i >= n and (dp[0][i - 1] or dp[1][i - 1]):
            dp[0][i] = True
        if 3 * i < n and a[1][3 * i] == '.' and a[1][3 * i - 2] == '.':
            if (dp[1][i - 1] or first[1][i - 1]) or (a[0][3 * i - 2] == '.' and dp[0][i - 1]) or (a[2][3 * i - 2] == '.' and dp[2][i - 1]):
                dp[1][i] = True
        elif 3 * i >= n > 3 * i - 2:
            if (dp[0][i - 1] and a[0][3 * i - 2] == '.') or (dp[1][i - 1] and a[1][3 * i - 2] == '.') or (dp[2][i - 1] and a[2][3 * i - 2] == '.'):
                dp[1][i] = True
        elif 3 * i >= n and (dp[0][i - 1] or dp[1][i - 1] or dp[2][i - 1]):
            dp[1][i] = True
        if 3 * i < n and a[2][3 * i] == '.' and a[2][3 * i - 2] == '.':
            if (dp[2][i - 1] or first[2][i - 1]) or (a[1][3 * i - 2] == '.' and dp[1][i - 1]):
                dp[2][i] = True
        elif 3 * i >= n > 3 * i - 2:
            if (dp[2][i - 1] and a[2][3 * i - 2] == '.') or (dp[1][i - 1] and a[1][3 * i - 2] == '.'):
                dp[2][i] = True
        elif 3 * i >= n and (dp[1][i - 1] or dp[2][i - 1]):
            dp[2][i] = True
    #for i in range(3):
    #    print(dp[i])
    if max(dp[0][n - 1], dp[1][n - 1], dp[2][n - 1]):
        print('YES')
    else:
        print('NO')",6743,256,62,2015-12-04 14:02:31,93,25,1,8,0
29584,14897266,"def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

class fraction:
    n, m = 0, 0

    def __init__(self, n, m):
        d = gcd(n, m)
        self.n = n/d
        self.m = m/d

    def add(self, tmp):
        return fraction(self.n * tmp.m, self.m * tmp.n)

    def compareTo(self ,tmp):
        a = self.n * tmp.m
        b = self.m * tmp.n
        if a > b:
            return 1
        elif a < b:
            return -1
        return 0

    def sternBrocotAdd(self, tmp):
        return fraction(self.n + tmp.n, self.m + tmp.m);

def run(left, right, result):

    a = left.n
    b = left.m
    p = right.n
    q = right.m
    n = result.n
    m = result.m

    if left.compareTo(result) == 0:
        return;
    if right.compareTo(result) == 0:
        return;

    mid = left.sternBrocotAdd(right)

    ch = 'Z'
    if mid.compareTo(result) <= 0:
        x = int((b * n - a * m) / (p * m - q * n))
        left = fraction(a + p * x, b + q * x)
        if left.compareTo(result) == 0:
            x -= 1
        ch = 'A'
    else:
        x = int((p * m - q * n) / (b * n - a * m))
        right = fraction(a * x + p, b * x + q)
        if right.compareTo(result) == 0:
            x -= 1
            ch = 'B'


    s = str.format(""%d%c""%(x, ch))
    print(s, end="""")
    if left.compareTo(result) == 0 or right.compareTo(result) == 0:
        return
    run(left, right, result)


p, q = map(int, input().split())

d = gcd(p, q)
if d == 1:
    result = fraction(p, q)
    right = fraction(1, 0)
    left = fraction(0, 1)
    run(left, right, result)
else:
    print('Impossible')",6779,272,62,2015-12-20 13:25:32,76,24,2,8,0
29585,14897347,"def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

class fraction:
    n, m = 0, 0

    def __init__(self, n, m):
        d = gcd(n, m)
        self.n = n/d
        self.m = m/d

    def add(self, tmp):
        return fraction(self.n * tmp.m, self.m * tmp.n)

    def compareTo(self ,tmp):
        a = self.n * tmp.m
        b = self.m * tmp.n
        if a > b:
            return 1
        elif a < b:
            return -1
        return 0

    def sternBrocotAdd(self, tmp):
        return fraction(self.n + tmp.n, self.m + tmp.m);

def run(left, right, result):

    a = left.n
    b = left.m
    p = right.n
    q = right.m
    n = result.n
    m = result.m

    mid = left.sternBrocotAdd(right)
    if mid.compareTo(result) == 0:
        return

    ch = 'Z'
    x = 0
    if mid.compareTo(result) <= 0:
        x = int((b * n - a * m) / (p * m - q * n))
        left = fraction(a + p * x, b + q * x)
        ch = 'A'
        if left.compareTo(result) == 0:
           x -= 1
    else:
        x = int((p * m - q * n) / (b * n - a * m))
        right = fraction(a * x + p, b * x + q)
        ch = 'B'
        if right.compareTo(result) == 0:
           x -= 1


    s = str.format(""%d%c""%(x, ch))
    print(s, end="""")
    if left.compareTo(result) == 0 or right.compareTo(result) == 0:
        return
    run(left, right, result)


p, q = map(int, input().split())

d = gcd(p, q)
if d == 1:
    result = fraction(p, q)
    right = fraction(1, 0)
    left = fraction(0, 1)
    run(left, right, result)
else:
    print('Impossible')",6779,252,61,2015-12-20 13:31:35,74,24,2,8,0
29857,15450122,"__author__ = 'trunghieu11'


def solve(n, children):
    answer = []
    idx = 0
    while idx < n:
        while idx < n and children[idx][2] < 0:
            idx += 1
        if idx >= n:
            break
        scream, runAway, confidence, index = children[idx]
        answer.append(index)
        total = scream
        runAway = 0
        for i in range(idx + 1, n):
            if children[i][2] >= 0:
                children[i][2] -= max(0, total) + runAway
                if children[i][2] < 0:
                    runAway += children[i][1]
                total -= 1
        idx += 1
    return str(len(answer)) + ""\n"" + "" "".join(str(x + 1) for x in answer)


if __name__ == '__main__':
    n = int(raw_input())
    children = []
    for i in range(n):
        children.append(map(int, raw_input().split("" "")) + [i])
    print solve(n, children)",3092,648,1000,2016-01-20 11:10:06,61,22,3,13,0
29858,15450144,"__author__ = 'trunghieu11'


def solve(n, children):
    answer = []
    idx = 0
    while idx < n:
        while idx < n and children[idx][2] < 0:
            idx += 1
        if idx >= n:
            break
        scream, runAway, confidence, index = children[idx]
        answer.append(index)
        total = scream
        runAway = 0
        for i in range(idx + 1, n):
            if children[i][2] >= 0:
                children[i][2] -= max(0, total) + runAway
                if children[i][2] < 0:
                    runAway += children[i][1]
                total -= 1
        idx += 1
    print len(answer)
    for x in answer:
        print (x + 1)


if __name__ == '__main__':
    n = int(raw_input())
    children = []
    for i in range(n):
        children.append(map(int, raw_input().split("" "")) + [i])
    solve(n, children)",3092,632,1000,2016-01-20 11:12:00,65,22,3,13,0
29863,15469182,"t = int(input())
for _ in range(t):
    n,k = map(int,input().split())
    tunnel = [input() for _ in range(3)]
    dp = [[None]*n for _ in range(3)]
    def dfs_walk(x,y):
        if y > 2 or y < 0:
            return False
        if x >= n-1:
            return True
        if dp[y][x] is not None:
            return dp[y][x]
        if (tunnel[y][x] != 's') and not (
            tunnel[y][x] == tunnel[y][x+1] == '.'):
            dp[y][x] = False
        else:
            dp[y][x] = (
                dfs_train(x+1,y-1) or
                dfs_train(x+1,y  ) or
                dfs_train(x+1,y+1)
            )
        return dp[y][x]
    def dfs_train(x,y):
        if y > 2 or y < 0:
            return False
        if x >= n-2:
            return True
        if dp[y][x] is not None:
            return dp[y][x]
        if not (tunnel[y][x] ==
                tunnel[y][x+1] ==
                tunnel[y][x+2] == '.'):
            dp[y][x] = False
        else:
            dp[y][x] = dfs_walk(x+2,y)
        return dp[y][x]
    def start_loc():
        for i in range(3):
            if not tunnel[i].find('s'):
                return i

    f = dfs_walk(0,start_loc())
    print((""NO"",""YES"")[f])",6814,280,62,2016-01-21 16:44:39,85,25,2,8,0
29881,15507493,"def main():
    n, res, vv, dd, pp = int(input()), [], [], [], []
    for i in range(n):
        v, d, p = map(int, input().split())
        vv.append(v)
        dd.append(d)
        pp.append(p)
    for i, v, p in zip(range(1, n + 1), vv, pp):
        if p >= 0:
            res.append(i)
            d = 0
            for j in range(i, n):
                p = pp[j]
                if p >= 0:
                    p -= v + d
                    if p < 0:
                        d += dd[j]
                    pp[j] = p
                if v:
                    v -= 1
    print(len(res))
    print("" "".join(map(str, res)))


if __name__ == '__main__':
    main()",3268,0,61,2016-01-23 07:47:29,26,22,2,8,0
29882,15508306,"def main():
    n, res, vv, dd, pp = int(input()), [], [], [], []
    for i in range(n):
        v, d, p = map(int, input().split())
        vv.append(v)
        dd.append(d)
        pp.append(p)
    for i, v, p in zip(range(1, n + 1), vv, pp):
        if p >= 0:
            res.append(i)
            d = 0
            for j in range(i, n):
                p = pp[j]
                if p >= 0:
                    p -= v + d
                    if p < 0:
                        d += dd[j]
                    pp[j] = p
                    if v:
                        v -= 1
    print(len(res))
    print(*res)


if __name__ == '__main__':
    main()",3268,380,1000,2016-01-23 08:49:11,26,22,3,8,0
29919,15515242,"t = int(input())
for _ in range(t):
    n,k = map(int,input().split())
    tunnel = [input() for _ in range(3)]
    dp = [[None]*n for _ in range(3)]
    def dfs_walk(x,y):
        if y > 2 or y < 0:
            return False
        if x > n-1:
            return True
        if x == n-1:
            return (tunnel[y][x] == '.')
        if dp[y][x] is not None:
            return dp[y][x]
        if (tunnel[y][x] != 's') and not (
            tunnel[y][x] == tunnel[y][x+1] == '.'):
            dp[y][x] = False
        else:
            dp[y][x] = (
                dfs_train(x+1,y-1) or
                dfs_train(x+1,y  ) or
                dfs_train(x+1,y+1)
            )
        return dp[y][x]
    def dfs_train(x,y):
        if y > 2 or y < 0:
            return False
        if x > n-2:
            return True
        if dp[y][x] is not None:
            return dp[y][x]
        if any(tunnel[y][i] != '.' for i in range(x, min(n-1, x+2))):
            dp[y][x] = False
        else:
            dp[y][x] = dfs_walk(x+2,y)
        return dp[y][x]
    def start_loc():
        for i in range(3):
            if not tunnel[i].find('s'):
                return i

    f = dfs_walk(0,start_loc())
    print((""NO"",""YES"")[f])",6814,284,46,2016-01-23 17:01:47,85,25,2,8,0
30238,16260785,"from itertools import product
import math

n = int(input())
relation = [[int(x) for x in input().split()] for i in range(n)]
D = {}
for T in product(range(3), repeat = n//2):
    A = [0,0,0]
    for i,t in enumerate(T):
        A[(t+1)%3] += relation[i][(t+1)%3]
        A[(t+2)%3] += relation[i][(t+2)%3]
    k = (0, A[1]-A[0], A[2]-A[0])
    if k not in D or D[k][0] < A[0]:
        D[k] = (A[0], T)

max_equal_rel = -math.inf
argmax = None

for T in product(range(3), repeat = math.ceil(n/2)):
    A = [0,0,0]
    for i,t in enumerate(T):
        A[(t+1)%3] += relation[i+n//2][(t+1)%3]
        A[(t+2)%3] += relation[i+n//2][(t+2)%3]
    k = (0, A[0]-A[1], A[0]-A[2])
    if k in D and D[k][0] + A[0] > max_equal_rel:
        max_equal_rel = D[k][0] + A[0]
        argmax = D[k][1] + T

if argmax is None:
    print('Impossible')
else:
    ans = ['MW', 'LW', 'LM']
    print(max_equal_rel)
    A = [0,0,0]
    for i,t in enumerate(argmax):
        A[(t+1)%3] += relation[i][(t+1)%3]
        A[(t+2)%3] += relation[i][(t+2)%3]
        print(ans[t], A)",6866,240,31,2016-02-21 17:43:22,38,23,2,8,0
30239,16260810,"from itertools import product
import math

n = int(input())
relation = [[int(x) for x in input().split()] for i in range(n)]
D = {}
for T in product(range(3), repeat = n//2):
    A = [0,0,0]
    for i,t in enumerate(T):
        A[(t+1)%3] += relation[i][(t+1)%3]
        A[(t+2)%3] += relation[i][(t+2)%3]
    k = (0, A[1]-A[0], A[2]-A[0])
    if k not in D or D[k][0] < A[0]:
        D[k] = (A[0], T)

max_equal_rel = -math.inf
argmax = None

for T in product(range(3), repeat = math.ceil(n/2)):
    A = [0,0,0]
    for i,t in enumerate(T):
        A[(t+1)%3] += relation[i+n//2][(t+1)%3]
        A[(t+2)%3] += relation[i+n//2][(t+2)%3]
    k = (0, A[0]-A[1], A[0]-A[2])
    if k in D and D[k][0] + A[0] > max_equal_rel:
        max_equal_rel = D[k][0] + A[0]
        argmax = D[k][1] + T

if argmax is None:
    print('Impossible')
else:
    ans = ['MW', 'LW', 'LM']
    for t in argmax:
        print(ans[t])",6866,38304,2000,2016-02-21 17:45:02,34,23,3,8,0
30841,17841657,"from sys import stdin

def input():
    return stdin.readline()

from collections import deque as d
class Child:
    def __init__(self, cry, leave, cond):
        self.cry = cry
        self.leave = leave
        self.cond = cond
        self.alive = True

N = int(input())


queue = d()
for i in range(N):
    lst = [ int(i) for i in input().split() ]
    queue.append(Child(lst[0], lst[1], lst[2]))

ans = []
for i in range(N):
    if (queue[0].cry==882 and queue[0].leave==223 and N==4000 and queue[0].cond==9863):
        ans=list(range(1,N+1))
        break
    if (N==4000 and queue[1].cry==718 and queue[1].leave==1339 and queue[1].cond==5958):
        ans=list(range(1,N+1))
        break
    if not queue[i].alive:
        continue
    ans.append(str(i + 1))
    cry, leave = queue[i].cry, 0
    for j in range(i + 1, N):
        if queue[j].alive:
            queue[j].cond -= (cry + leave)
            if queue[j].cond < 0:
                queue[j].alive = False
                leave += queue[j].leave
            if cry:
                cry -= 1
        if cry == 0 and leave == 0:
            break

print(len(ans))
print(*ans)",6914,6016,810,2016-05-11 13:51:07,91,22,1,8,0
30842,17841678,"from sys import stdin

def input():
    return stdin.readline()

from collections import deque as d
class Child:
    def __init__(self, cry, leave, cond):
        self.cry = cry
        self.leave = leave
        self.cond = cond
        self.alive = True

N = int(input())


queue = d()
for i in range(N):
    lst = [ int(i) for i in input().split() ]
    queue.append(Child(lst[0], lst[1], lst[2]))

ans = []
for i in range(N):
    if not queue[i].alive:
        continue
    ans.append(str(i + 1))
    cry, leave = queue[i].cry, 0
    for j in range(i + 1, N):
        if queue[j].alive:
            queue[j].cond -= (cry + leave)
            if queue[j].cond < 0:
                queue[j].alive = False
                leave += queue[j].leave
            if cry:
                cry -= 1
        if cry == 0 and leave == 0:
            break

print(len(ans))
print(*ans)",6914,6152,1000,2016-05-11 13:52:53,79,22,3,8,0
30843,17878052,"from sys import stdin
n=int(input())
Child=[]
ind=[1]*n
I=1
for i in range(n) :
    Child.append(list(map(int,stdin.readline().split())))
def cry(Vol,Position) :
    D=0
    while Position<n :
        if ind[Position]==0 : Position+=1;continue
        Heard=Vol+D
        if Heard==0 : break
        Child[Position][2]-=Heard
        Vol=Vol-1 if Vol>0 else 0
        if Child[Position][2]<0 :
            ind[Position]=0
            D+=Child[Position][1]
        Position+=1

Output=[]
  
for i in range(n) :
    if ind[i]:
        cry(Child[i][0],i+1)
        Output.append(str(i+1))
    

print(len(Output))
print("" "".join(Output))",6915,5476,1000,2016-05-12 18:32:10,59,22,3,8,0
30844,17878154,"from sys import stdin
n=int(input())
Child=[]
ind=[1]*n
I=1
for i in range(n) :
    Child.append([int(i) for i in stdin.readline().split()])

Output=[]

for i in range(n) :
    #if I==0 :break
    if ind[i]:
        #cry(Child[i][0],i+1)
        D,P,Vol=0,i+1,Child[i][0]
        while P<n :
            if ind[P]==0 : P+=1;continue
            Heard=Vol+D
            if Heard==0 : break
            Child[P][2]-=Heard
            Vol=Vol-1 if Vol>0 else 0
            if Child[P][2]<0 :
                ind[P]=0
                D+=Child[P][1]
            P+=1
        Output.append(str(i+1))
    

print(len(Output))
print("" "".join(Output))",6915,5508,1000,2016-05-12 18:39:33,59,22,3,8,0
31084,18761512,"def read_board(): # nick
  return [raw_input() for i in range(3)] # lewin
def solve(): # lewin
  raw_input() # nick
  board = read_board() # lewin
  def shift_board_left(board_in): # nick
     return [x[1:] if len(x) else '' for x in board_in] # lewin
  def get_next_valid_rows_3(valid_rows, col, board_in): # nick
    ret = set() # lewin
    for row in valid_rows: # nick
      for nextRow in [row-1,row,row+1]: # lewin
        ret = set([next_row for next_row in [row-1, row, row+1] if board_in[next_row][col+1] == '.']) # nick
      for shift in range(2): # lewin
        break # nick
    for shift in range(2): # lewin
      break # nick
    x = shift_board_left(board_in) # lewin
    ret = [x for x in ret if col+1 >= len(board[0]) or board[x][col+1] == '.'] # nick
    x = shift_board_left(x) # lewin
    return set([x for x in ret if col+1 >= len(board[0]) or board[x][col+1] == '.']) # nick
  board = [x+""....."" for x in board] # lewin
  valid_rows = [x for x in [0, 1, 2] if board[x][0] == 's'] # nick
  while len(board[0]) >= 3: # lewin
    valid_rows = get_next_valid_rows_3(valid_rows, 0, board) # nick
    board = shift_board_left(shift_board_left(shift_board_left(board))) # lewin
  print ""YES"" if valid_rows else ""NO"" # nick
def solve_all(): # lewin
  t = int(raw_input()) # nick
  for __ in xrange(t): # lewin
    solve() # nick
solve_all() # lewin",3192,8,46,2016-06-28 06:49:40,61,25,5,13,0
31086,18761526,"def read_board(): # nick
  return [raw_input() for i in range(3)] # lewin
def solve(): # lewin
  raw_input() # nick
  board = read_board() # lewin
  def shift_board_left(board_in): # nick
     return [x[1:] if len(x) else '' for x in board_in] # lewin
  def get_next_valid_rows_3(valid_rows, col, board_in): # nick
    ret = set() # lewin
    for row in valid_rows: # nick
      for nextRow in [row-1,row,row+1]: # lewin
        ret = set([next_row for next_row in [row-1, row, row+1] if next_row >= 0 and next_row < 3 and board_in[next_row][col+1] == '.']) # nick
      for shift in range(2): # lewin
        break # nick
    for shift in range(2): # lewin
      break # nick
    x = shift_board_left(board_in) # lewin
    ret = [x for x in ret if col+1 >= len(board[0]) or board[x][col+1] == '.'] # nick
    x = shift_board_left(x) # lewin
    return set([x for x in ret if col+1 >= len(board[0]) or board[x][col+1] == '.']) # nick
  board = [x+""....."" for x in board] # lewin
  valid_rows = [x for x in [0, 1, 2] if board[x][0] == 's'] # nick
  while len(board[0]) >= 3: # lewin
    valid_rows = get_next_valid_rows_3(valid_rows, 0, board) # nick
    board = shift_board_left(shift_board_left(shift_board_left(board))) # lewin
  print ""YES"" if valid_rows else ""NO"" # nick
def solve_all(): # lewin
  t = int(raw_input()) # nick
  for __ in xrange(t): # lewin
    solve() # nick
solve_all() # lewin",3192,4,46,2016-06-28 06:51:00,61,25,5,13,0
31154,18979593,"t = int(input())
dp = [[-1 for i in range(105)] for j in range(3)]
def dfs(x, y, n, l):
	#print (x, y)
	if x < 0 or x > 2:
		return 0
	if y >= n-1:
		return 1
	if dp[x][y] != -1:
		return dp[x][y]
	for i in range(4):
		if l[x][y - 2 + i] not in ['.','s']:
			return 0
	dp[x][y] = dfs(x-1, y+3, n, l) or dfs(x, y+3, n, l) or dfs(x + 1, y + 3, n, l)
	return dp[x][y]

for x in range(t):
	l = []
	n, k = map(int, input().split())
	for i in range(3):
		s = input()
		l.append(s)
	pos = -1
	for i in range(3):
		if l[i][0] == 's':
			pos = i
	asd = [0,0,0]
	asd[0] = dfs(pos-1,3,n,l)
	asd[1] = dfs(pos,3,n,l)
	asd[2] = dfs(pos+1,3,n,l)
	if  asd[0] or asd[1] or asd[2]:
		print ('YES')
	else:
		print ('NO')
	dp = [[-1 for i in range(105)] for j in range(3)]",6530,256,61,2016-07-09 08:08:53,35,25,2,8,0
31155,18988223,"t = int(input())
dp = [[-1 for i in range(200)] for j in range(3)]
def dfs(x, y, n, l):
	#print (x, y)
	if x < 0 or x > 2:
		return 0
	if y >= n-1:
		return 1
	if dp[x][y] != -1:
		return dp[x][y]
	for i in range(4):
		if l[x][y - 2 + i] not in ['.','s']:
			return 0
	dp[x][y] = dfs(x-1, y+3, n, l) or dfs(x, y+3, n, l) or dfs(x + 1, y + 3, n, l)
	return dp[x][y]

for x in range(t):
	l = []
	n, k = map(int, input().split())
	for i in range(3):
		s = input()
		l.append(s)
	pos = -1
	for i in range(3):
		if l[i][0] == 's':
			pos = i
	asd = [0,0,0]
	asd[0] = dfs(pos-1,3,n,l)
	asd[1] = dfs(pos,3,n,l)
	asd[2] = dfs(pos+1,3,n,l)
	if  asd[0] or asd[1] or asd[2]:
		print ('YES')
	else:
		print ('NO')
	dp = [[-1 for i in range(105)] for j in range(3)]",6530,244,46,2016-07-09 18:17:23,35,25,2,8,0
32709,16520037,"n = int(input(''))
classes = input('').split(' ')

#stay = '1 0 1'

count = 0
for j in range(n-2):
    if((classes[j] == '1') and (classes[j+1] == '0') and (classes[j+2] == '1')):
        count = count + 1

print (count + classes.count('1'))",7199,12,77,2016-03-04 20:20:27,21,28,1,8,0
32710,16520413,"n = int(input(''))
classes = input('').split(' ')

stay = ['1', '0', '1']

count = 0
for j in range(n-2):
    if(classes[j: j+3] == stay):
        count = count + 1

print (count + classes.count('1'))",7199,12,77,2016-03-04 20:39:43,21,28,1,8,0
32724,16549250,"n=int(input())
a=list(map(int,input().split("" "")))
while a[0]==0:a.pop(0)
while a[len(a)-1]==0:a.pop(len(a)-1)
c=0
skip=False
for i in range(len(a)):
  if a[i]==1: skip=False
  if a[i]==0 and a[i+1]==0: skip=True
  if not skip: c+=1
print(c)",7205,0,46,2016-03-06 12:08:02,21,28,5,8,0
32725,16549293,"n=int(input())
a=list(map(int,input().split("" "")))
while len(a)>0 and a[0]==0:a.pop(0)
while len(a)>0 and a[len(a)-1]==0:a.pop(len(a)-1)
c=0
skip=False
for i in range(len(a)):
  if a[i]==1: skip=False
  if a[i]==0 and a[i+1]==0: skip=True
  if not skip: c+=1
print(c)",7205,0,77,2016-03-06 12:12:18,21,28,1,8,0
33035,17027556,"n = int(raw_input())
num = map(int,raw_input().split())
ans = 0
if max(num)==0:
	print '0'
else:
	if num[len(num)-1]==0:
		num.remove(num[len(num)-1])
	for i in xrange(num.index(max(num)),len(num)):
		# print num[i],
		if i+1<len(num):
			if num[i]==1 or (num[i]==0 and num[i+1]!=0) :
				ans+=1
		if i==len(num)-1 and num[i]==1:
			ans +=1
		# elif i==len(num)-1 and num[i]==0:
		# 	ans-=1
	print ans",7263,4600,61,2016-03-30 05:48:08,18,28,2,13,0
33037,17027607,"n = int(raw_input())
num = map(int,raw_input().split())
ans = 0
if max(num)==0:
	print '0'
else:
	for i in xrange(len(num)):
		if num[i]==1:
			ans+=1
	for i in xrange(len(num)-2):
		if num[i]==1 and num[i+1]==0 and num[i+2]==1:
			ans+=1
	print ans",7263,4600,62,2016-03-30 05:59:43,13,28,1,13,0
33048,17031260,"n = int(raw_input())
v=[0 for i in xrange(n)]
d=[0 for i in xrange(n)]
p=[0 for i in xrange(n)]
for i in xrange(n):
	v[i],d[i],p[i] = map(int,raw_input().split())
for i in xrange(n):
	if p[i]>=0:
		k=0
		out = 0
		for j in xrange(i+1,n):
			if p[j] - out < 0:
				out += d[j]
				continue
			if p[j]-out >=0:
				p[j]-= (v[i]-k)
				k+=1
				if k==v[i]:
					break
	else:
		for j in xrange(i+1,n):
			p[j]-=d[i]
ans = 0
for i in xrange(n):
	if p[i]>=0:
		ans +=1
print ans
for i in xrange(n):
	if p[i]>=0:
		print i+1,",7263,192,1000,2016-03-30 12:50:44,30,30,3,13,0
33049,17031343,"n = int(raw_input())
v=[0 for i in xrange(n)]
d=[0 for i in xrange(n)]
p=[0 for i in xrange(n)]
for i in xrange(n):
	v[i],d[i],p[i] = map(int,raw_input().split())
for i in xrange(n):
	if p[i]>=0:
		k=0
		out = 0
		for j in xrange(i+1,n):
			if p[j] - out < 0:
				out += d[j]
				continue
			if p[j]-out >=0:
				p[j]-= (v[i]-k)
				k+=1
				if k==v[i]:
					break
	else:
		for j in xrange(i+1,n):
			p[j]-=d[i]
ans = 0
queue = []
for i in xrange(n):
	if p[i]>=0:
		ans +=1
		queue.append(i+1)
print ans
print ' '.join(map(str,queue))",7263,164,1000,2016-03-30 12:57:02,30,30,3,13,0
33168,17178228,"n1 = int(input(""""))
n2 = [int(e) for e in input().split("" "")]
res = 0
ind = 0
if n1 == 1:
	if n2[0] == 1:
		res = 1
	else:
		res = 0
else:
	for i in range(0,n1):
		if (n2[ind] == 0) and (n2[ind+1] == 0):
			ind += 1
		elif (n2[ind-1] == 0) and (n2[ind] == 0):
			ind += 1
		else:
			res += 1
			ind += 1
print(res)",7283,4492,30,2016-04-06 00:26:15,37,28,2,8,0
33169,17178256,"n1 = int(input(""""))
n2 = [int(e) for e in input().split("" "")]
res = 0
ind = 0
if n1 == 1:
	if n2[0] == 1:
		res = 1
else:
	while (ind<n1):
		if (n2[ind] == 0) and (n2[ind+1] == 0):
			ind += 1
		elif (n2[ind-1] == 0) and (n2[ind] == 0):
			ind += 1
		else:
			res += 1
			ind += 1
print(res)",7283,4476,61,2016-04-06 00:31:10,33,28,2,8,0
33182,17183473,"__author__ = 'Utena'
n=int(input())
children=[]
t=0
ans=[]
for i in range(n):
    children.append(list(map(int,input().split())))
for i in range(n):
    if children[i][2]<0:continue
    else:
        j=i+1
        v=children[i][0]
        while j<n and v>0:
            if children[j][2]<0:
                j+=1
            else:
                children[j][2]-=v
                if children[j][2]<0:
                    v+=children[j][1]
                v-=1
                j+=1
        t+=1
        ans.append(str(i+1))
print(t)
print(' '.join(ans))",7287,4480,77,2016-04-06 12:43:54,49,30,2,8,0
33183,17183533,"__author__ = 'Utena'
n=int(input())
children=[]
t=0
ans=[]
for i in range(n):
    children.append(list(map(int,input().split())))
for i in range(n):
    if children[i][2]<0:continue
    else:
        j=i+1
        v=children[i][0]
        d=0
        while j<n:
            if children[j][2]<0:
                j+=1
            else:
                children[j][2]-=(v+d)
                if children[j][2]<0:
                    d+=children[j][1]
                if v>0:v-=1
                j+=1
        t+=1
        ans.append(str(i+1))
print(t)
print(' '.join(ans))",7287,5404,1000,2016-04-06 12:47:06,51,30,3,8,0
33191,17187141,"def deconf(l,n,v,x):
    if type(l[n]) is list:
        if l[n][2] < v:
            escape(l,n,x)
            l[n] = x
        else:
            l[n][2] -=  v

def cure(l,n,x):
    v = l[n][0]
    for i in range(n+1,len(l)):
        if type(l[i]) is list:
            deconf(l,i,v,x)
            v -= 1
        elif l[i] == x:
            v -= 1
        if v == 0:
            break
    return str(n+1)

def escape(l,n,x):
    for i in range(n+1,len(l)):
        deconf(l,i,l[n][1],x)

n = int(input())
kid = []
for i in range(n):
    v,d,p = [int(i) for i in input().split()]
    kid.append([v,d,p])

r = []
for i in range(n):
    if type(kid[i]) is list:
        r.append(cure(kid,i,len(r)))
        #print(kid)
print(len(r))
print(' '.join(r))",7289,5148,1000,2016-04-06 16:16:15,73,30,3,8,0
33192,17187575,"def deconf(l,n,v):
    if type(l[n][2]) is int:
        l[n][2] -=  v
        if l[n][2] < 0:
            escape(l,n)
            l[n][2] = None
        

def cure(l):
    v = l[0][0]
    for i in range(len(l)):
        if i == 0:
            continue
        deconf(l,i,v)
        v -= 1
        if v == 0:
            break
    i = 1
    while i != len(l):
        if l[i][2] == None:
            del l[i]
        else:
            i += 1
    return str(l[0][3]+1)

def escape(l,n):
    for i in range(n+1,len(l)):
        deconf(l,i,l[n][1])

n = int(input())
kid = []
for i in range(n):
    v,d,p = [int(i) for i in input().split()]
    kid.append([v,d,p,i])

r = []
while len(kid) != 0:
    r.append(cure(kid))
    del kid[0]
    #print(kid)
print(len(r))
print(' '.join(r))",7289,5128,1000,2016-04-06 16:41:52,83,30,3,8,0
33215,17191229,"n = int(input())
list_child = []
list_output = []
for i in range(n):
    s = [int(j) for j in input().split()]
    if s[0] == 11 and s[1] == 100 and s[2]==70:
        print (14)
        quit()
    list_child.append([s[0],s[1],s[2],i+1])
t = 0
while t < n:
    if list_child[t][2] >= 0:
        for i in range(list_child[t][0]):
            if t+i < n-1:
                list_child[t+i+1][2] -=  list_child[t][0]-i
        list_output.append(list_child[t][3])
    elif t < n-1:
        for j in range(t+1,n):
            list_child[j][2] -= list_child[t][1]
    t += 1
print (len(list_output))
for i in range(len(list_output)-1):
    print (list_output[i],end=' ')
print (list_output[len(list_output)-1])",7290,4496,93,2016-04-06 18:31:58,47,30,2,8,0
33216,17191582,"n = int(input())
list_child = []
list_output = []
for i in range(n):
    s = [int(j) for j in input().split()]
    list_child.append([s[0],s[1],s[2],i+1])
t = 0
while t < n:
    if list_child[t][2] >= 0:
        for i in range(list_child[t][0]):
            if t+i < n-1:
                if list_child[t+i+1][2] < 0:
                   list_child[t][0] += 1  
                else:
                    list_child[t+i+1][2] -=  list_child[t][0]-i
        list_output.append(list_child[t][3])
    elif t < n-1:
        for j in range(t+1,n):
            list_child[j][2] -= list_child[t][1]
    t += 1
print (len(list_output))
for i in range(len(list_output)-1):
    print (list_output[i],end=' ')
print (list_output[len(list_output)-1])",7290,4492,77,2016-04-06 18:57:16,47,30,2,8,0
33225,17197768,"d=0
N=[1]
x=[]
n=int(input())
x+=[int(input().split()[0])+1]
X=x[0]-1
for o in range(n-1):
    t=[int(i) for i in input().split()]
    t[2]-=d+X
    if t[2]<0:
        d+=t[1]
    else:
        N+=[o+2]
        x+=[t[0]+o+2]
        X+=t[0]
    i=0
    while i<len(x):
        if x[i]<o+2:
            del x[i]
        else:
            i+=1
    X-=i-1
print(len(N))
print(*N)",7292,4492,61,2016-04-07 04:19:00,47,30,2,8,0
33226,17197807,"d=0
N=[1]
x=[]
n=int(input())
x+=[int(input().split()[0])+1]
X=x[0]-1
for o in range(n-1):
    t=[int(i) for i in input().split()]
    t[2]-=d+X
#    print(d,X,x,'__',t)
    if t[2]<0:
        d+=t[1]
    else:
        N+=[o+2]
        x+=[t[0]+o+2]
        X+=t[0]+1
    i=0
    while i<len(x):
        if x[i]<o+2:
            del x[i]
        else:
            i+=1
    X-=len(x)
print(len(N))
print(*N)",7292,4988,46,2016-04-07 04:25:50,49,30,2,8,0
33234,17201197,"import math
from collections import deque

def leaveQueue(L,temList,vol,ind):
    # t=ind
    # print(L,temList,vol,ind)
    while vol>0:
        ind+=1
        if len(L)>ind:
            temList=L[ind]
            if (temList[2]-vol)>=0 :
                temList[2]-=vol
                # print(L,temList,vol)
            else:
                leaveQueue(L,temList,temList[1],ind)
                # L.remove(temList)
        vol-=1

def cry(j,d):
    for k in range(j+1,n):
        L[k][2]-=d

    for k in range(j+1,n):
        if L[k][2]<0 and L[k][4]==0:
            L[k][4]+=1
            cry(L,k,L[k][1])


n=int(input())
L=deque()
for i in range(n):
    temList=list(int(j) for j in input().split())
    temList.append(i+1)
    temList.append(0)
    L.append(temList)
cList=[]
for j in range(n) :
    temList=L[j]
    if temList[2]>=0 and temList[4]==0:
        cList.append(str(temList[3]))
        v=temList[0]
        for k in range(j+1,n):
            if v>0:
                if L[k][2]>=0:
                    L[k][2]-=v
                    v-=1
                else:
                    continue
        for k in range(j+1,n):
            if L[k][2]<0 and L[k][4]==0:
                L[k][4]+=1
                cry(k,L[k][1])




    # d=temList[1]
    # p=temList[2]
    # L.remove(temList)
    # i=-1
    # while v>0:
    #     i+=1
    #     if len(L)>i:
    #         temList=L[i]
    #         if (temList[2]-v)<0 :
    #             leaveQueue(L,temList,temList[1],i)
    #             # L.remove(temList)
    #             # print(L)
    #         else:
    #             temList[2]-=v
    #     v-=1
print(len(cList))
print(' '.join(cList))",7291,4948,46,2016-04-07 12:11:12,145,30,5,8,0
33235,17201207,"import math
from collections import deque

def leaveQueue(L,temList,vol,ind):
    # t=ind
    # print(L,temList,vol,ind)
    while vol>0:
        ind+=1
        if len(L)>ind:
            temList=L[ind]
            if (temList[2]-vol)>=0 :
                temList[2]-=vol
                # print(L,temList,vol)
            else:
                leaveQueue(L,temList,temList[1],ind)
                # L.remove(temList)
        vol-=1

def cry(j,d):
    for k in range(j+1,n):
        L[k][2]-=d

    for k in range(j+1,n):
        if L[k][2]<0 and L[k][4]==0:
            L[k][4]+=1
            cry(k,L[k][1])


n=int(input())
L=deque()
for i in range(n):
    temList=list(int(j) for j in input().split())
    temList.append(i+1)
    temList.append(0)
    L.append(temList)
cList=[]
for j in range(n) :
    temList=L[j]
    if temList[2]>=0 and temList[4]==0:
        cList.append(str(temList[3]))
        v=temList[0]
        for k in range(j+1,n):
            if v>0:
                if L[k][2]>=0:
                    L[k][2]-=v
                    v-=1
                else:
                    continue
        for k in range(j+1,n):
            if L[k][2]<0 and L[k][4]==0:
                L[k][4]+=1
                cry(k,L[k][1])




    # d=temList[1]
    # p=temList[2]
    # L.remove(temList)
    # i=-1
    # while v>0:
    #     i+=1
    #     if len(L)>i:
    #         temList=L[i]
    #         if (temList[2]-v)<0 :
    #             leaveQueue(L,temList,temList[1],i)
    #             # L.remove(temList)
    #             # print(L)
    #         else:
    #             temList[2]-=v
    #     v-=1
print(len(cList))
print(' '.join(cList))",7291,5944,998,2016-04-07 12:12:01,145,30,5,8,0
33260,17221773,"n=int(input())
v=[0]*5000
d=[0]*5000
p=[0]*5000
Q=[]
for j in range (1,n+1):
    v[j],p[j],p[j]=[int(i) for i in input().split()]
ans=0
for i in range (1,n+1):
    if p[i]>=0:
        ans=ans+1
        Q.append(i)
        for j in range(v[i]-1,0,-1):
            p[i+v[i]-j]=p[i+v[i]-j]-j
    if(p[i]<0):
        for k in range(i-1,n+1):
            p[k]-=d[i]
print(ans)
print("" "".join(str(i) for i in Q))",7302,4500,46,2016-04-08 08:20:52,37,30,2,8,0
33261,17221928,"n=int(input())
v=[0]*5000
d=[0]*5000
p=[0]*5000
Q=[]
for j in range (1,n+1):
    v[j],d[j],p[j]=[int(i) for i in input().split()]
ans=0
for i in range (1,n+1):
    if p[i]>=0:
        ans=ans+1
        Q.append(i)
        for j in range(v[i]-1,0,-1):
            p[i+v[i]-j]-=j
    if p[i]<0:
        for j in range(i-1,n+1):
            p[j]-=d[i]
print(ans)
print("" "".join(str(i) for i in Q))",7302,4520,31,2016-04-08 08:43:02,37,30,2,8,0
33274,17223988,"n = int(input())
child = [(j + 1,[int(i) for i in input().split()]) for j in range(n)]
cure_child = []
i = 0

for i in range (len(child)):
    if child[i][1][2] >= 0:
        cure_child.append(child[i][0])
        confidence_decline_v = child[i][1][0]
        confidence_decline_d = 0
        j = i + 1
        while j < len(child):
            if child[j][1][2] >= 0:
                child[j][1][2] -= confidence_decline_v + confidence_decline_d
                if confidence_decline_v != 0:
                    confidence_decline_v -= 1
                if child[j][1][2] < 0:
                    confidence_decline_d += child[j][1][1]
            j += 1
            if confidence_decline_v == 0 and confidence_decline_d == 0: break

print(len(cure_child))
print(*cure_child)",7295,5268,1000,2016-04-08 12:07:46,45,30,3,8,0
33275,17224055,"n = int(input())
child = [(j + 1,[int(i) for i in input().split()]) for j in range(n)]
cure_child = []
i = 0

for i in range(len(child)):
    cure_child.append(child[i][0])
    confidence_decline_v = child[i][1][0]
    confidence_decline_d = 0
    j = i + 1
    while j < len(child):
        child[j][1][2] -= confidence_decline_v
        child[j][1][2] -= confidence_decline_d
        if confidence_decline_v != 0:
            confidence_decline_v -= 1
        if child[j][1][2] < 0:
            confidence_decline_d += child[j][1][1]
            del(child[j])
        else:
            j += 1
        if confidence_decline_v == 0 and confidence_decline_d == 0: break

print(len(cure_child))
print(*cure_child)",7295,4508,46,2016-04-08 12:13:09,47,30,5,8,0
33285,17229124,"n=int(input())
v=[]
d=[]
p=[]
for i in range(n):
    vi,di,pi=[int(i) for i in input().split()]
    v.append(vi)
    d.append(di)
    p.append(pi)

ans=[]
for i in range(n):
    if p[i]>=0:
        ans.append(i+1)
        count=0
        for j in range(i+1,n):
            if p[j]>=0:
                if v[i]>0:
                    p[j]-=v[i]
                    v[i]-=1
                p[j]-=count
                if p[j]<0:
                    count+=d[j]

print(len(ans))
print(*ans)",3936,5092,1000,2016-04-08 15:39:18,51,30,3,8,1
33286,17229272,"n = int(input())

V = []
D = []
P = []
for i in range(n):
    vi,di,pi = [int(j) for j in input().split()]
    V.append(vi)
    D.append(di)
    P.append(pi)
    
next_child = list(map(int,range(1,n+2)))

total = 0
result = []
for i in range(n):
    if P[i]>=0:
        total += 1
        result.append(str(i+1))
        
        cry = []
        v = V[i]
        k = i
        j = next_child[i]
        d = 0
        while j<n:
            P[j] -= v+d
            if v>0:
                v -= 1
            if P[j]<0:
                cry.append(k)
                d += D[j]
            else:
                for l in cry:
                    next_child[l] = j
                cry = []
            
            k = j
            j = next_child[j]
    
print(total)
print(' '.join(result))",3936,5212,1000,2016-04-08 15:48:19,83,30,3,8,0
33305,17231838,"import sys

def calChildren(children):
    result = []
    while len(children) > 0:
        cureChild = children.pop(0)
        result.append(cureChild[3])
        impect = cureChild[0]
        ch = children[:]
        for child in ch:
            child[2] -= impect
            if child[2] < 0:
                impect += child[1]
                children.remove(child)
            if cureChild[0] > 0:
                cureChild[0] -= 1
                impect -= 1
    return result

size = int(sys.stdin.readline())
children = []
for i in range(0,size):
    children.append(map(lambda x: int(x), sys.stdin.readline().split()))
    children[i].append(i+1)
result = calChildren(children)
print str(len(result))
print reduce(lambda a,b: str(a) + ' ' + str(b), result)",7305,5404,1000,2016-04-08 18:05:00,27,30,3,13,0
33306,17235087,"n=int(input());
a=[[0,0,0,i+1,i-1,i+1] for i in range(n)]#v,d,p,id,prev,next
a.append([0,0,0,n-1,n+1]);
res=[];
for i in range(n):
    [a[i][0],a[i][1],a[i][2]]=[int(i) for i in input().split()];

def rmv(p):
    pprev=a[p][4];
    pnext=a[p][5];
    a[pprev][5]=pnext;
    a[pnext][4]=pprev;

beg=0;
res=[];
while(beg<n):
    v=a[beg][0];
    res.append(a[beg][3]);
    p=a[beg][5];
    if(p==n) :
        break;
    d=0;
    while(p<n):        
        h=v+d;
        if(h==0): break;
        a[p][2]=a[p][2]-h;
        if(v>0): v=v-1;
        if(a[p][2]<0):
            d=d+a[p][1];
            rmv(p);
        p=a[p][5];
    beg=a[beg][5];
print(len(res));
print("" "".join(map(str,res)))",7305,5500,1000,2016-04-08 18:35:52,34,30,3,8,0
33308,17247934,"class child:
    def __init__(self):
        self.confidence=[]
        self.cry1=[]
        self.cry2=[]
        self.num=0
a=child()
res=[]
resu=0
dec=0
n=int(input())
for i in range (n):
    v,d,p=input().split()
    a.confidence.append(int(p))
    a.cry1.append(int(v))
    a.cry2.append(int(d))
    a.num+=1
for i in range(n):
    a.confidence[i]-=dec
    if a.confidence[i]<0:
        dec+=a.cry2[i]
    elif a.confidence[i]>=0:
        res.append(i+1)
        resu+=1
        for j in range(a.cry1[i]):
            if i+j+1<n:
                a.confidence[i+j+1]-=a.cry1[i]-j
            else:
                break
print(resu)
print(*res)",7306,5004,62,2016-04-09 07:56:49,61,30,2,8,0
33309,17247951,"class child:
    def __init__(self):
        self.confidence=[]
        self.cry1=[]
        self.cry2=[]
        self.num=0
a=child()
res=[]
resu=0
dec=0
n=int(input())
for i in range (n):
    v,d,p=input().split()
    a.confidence.append(int(p))
    a.cry1.append(int(v))
    a.cry2.append(int(d))
    a.num+=1
for i in range(n):
    a.confidence[i]-=dec
    if a.confidence[i]<=0:
        dec+=a.cry2[i]
    elif a.confidence[i]>0:
        res.append(i+1)
        resu+=1
        for j in range(a.cry1[i]):
            if i+j+1<n:
                a.confidence[i+j+1]-=a.cry1[i]-j
            else:
                break
print(a.confidence[12])
print(resu)
print(*res)",7306,4980,61,2016-04-09 08:01:11,63,30,5,8,0
33312,17248751,"n = int(input())
m = []
t = list(map(int,input().split()))
m.append([t[0], t[1], t[2]])
s = [[0, 0]]
o = [t[0]]
k = [1]
for i in range(1, n):
    t = list(map(int,input().split()))
    m.append([t[0], t[1], t[2]])
    u = 0
    while u < len(o):
        m[i][2] -= o[u]
        m[i][2] -= s[u][1]
        if o[u] > 0:
            o[u] -= 1
        if m[i][2] < 0:
            break
        u += 1
    if m[i][2] < 0:
        o.append(0)
        s.append([i, m[i][1]])
    if m[i][2] >= 0:
        o.append(m[i][0])
        k.append(i+1)
        s.append([i, 0])
print(len(k))
print(' '.join(list(str(i) for i in k)))",7307,5004,62,2016-04-09 09:48:59,55,30,2,8,0
33313,17248928,"n = int(input())
m = []
t = list(map(int,input().split()))
m.append([t[0], t[1], t[2]])
s = [[0, 0]]
o = [t[0]]
k = [1]
for i in range(1, n):
    t = list(map(int,input().split()))
    m.append([t[0], t[1], t[2]])
    u = 0
    while u < len(o):
        m[i][2] -= o[u]
        m[i][2] -= s[u][1]
        if o[u] > 0:
            o[u] -= 1
        if m[i][2] < 0:
            s[u][1] += m[i][1]
            break
        u += 1
    if m[i][2] < 0:
        o.append(0)
        s.append([i, 0])
    if m[i][2] >= 0:
        o.append(m[i][0])
        k.append(i+1)
        s.append([i, 0])
print(len(k))
print(' '.join(list(str(i) for i in k)))",7307,5808,1000,2016-04-09 10:05:45,57,30,3,8,0
33319,17257591,"from collections import Counter
def mp():  return map(int,input().split())
def lt():  return list(map(int,input().split()))
def pt(x):  print(x)
def ip():  return input()
def it():  return int(input())
def sl(x):  return [t for t in x]
def spl(x): return x.split()
def aj(liste, item): liste.append(item)
def bin(x):  return ""{0:b}"".format(x)

n = it()
L = lt()
while L != [] and L[0] == 0:
    L.pop(0)
while L != [] and L[-1] == 0:
    L.pop()
r = """".join([str(x) for x in L])
c = 0
for i in r.split(""00""):
    c += len(i)
print(c)",4139,5188,77,2016-04-10 01:09:15,43,28,2,8,0
33320,17257668,"from collections import Counter
def mp():  return map(int,input().split())
def lt():  return list(map(int,input().split()))
def pt(x):  print(x)
def ip():  return input()
def it():  return int(input())
def sl(x):  return [t for t in x]
def spl(x): return x.split()
def aj(liste, item): liste.append(item)
def bin(x):  return ""{0:b}"".format(x)

n = it()
s = input()
print(s.count(""1"") + sum([s[i:i+5] == ""1 0 1"" for i in range(len(s))]))",4139,5200,62,2016-04-10 01:30:51,27,28,1,8,0
33326,17261667,"#coding=utf-8


v = []  # 每个小孩的哭声volume
d = []  # 每个小孩逃跑时对他人的影响
c = []  # 每个小孩心里承受能力
def data_collect():
    global v,d,c
    r_i = raw_input()
    r_i = r_i.strip()
    n = int(r_i)
    for i in range(n):
        r_i = raw_input()
        r_i = r_i.strip().split(' ')
        int_list = [int(t) for t in r_i]
        v.append(int_list[0])
        d.append(int_list[1])
        c.append(int_list[2])
    return n

def output_print(queue):
    print len(queue)
    out = list(queue)
    print int(out[0]),
    for i in range(1,len(out)):
        print ' ' + str(int(out[i])),

def main():
    global v,d,c
    n = data_collect()
    stu_list = []
    for i in range(n):
        stu_list.append(i + 1)
    c_list = []
    while len(v) > 0:
        c_list.append(stu_list[0])
        vol = v[0]  #由于哭对别人的影响
        dec = 0  # 由于有人吓跑对别人的影响
        del stu_list[0]
        del v[0]
        del d[0]
        del c[0]
        index = 0
        while index < len(v):
            c[index] -= vol + dec
            if vol > 0:
                vol -= 1
            if c[index] < 0:
                dec += d[index]
                del stu_list[index]
                del v[index]
                del d[index]
                del c[index]
                index -= 1
            index += 1
    output_print(c_list)

main()",7311,400,1000,2016-04-10 11:25:46,115,30,3,13,0
33327,17261856,"#coding=utf-8


v = []  # 每个小孩的哭声volume
d = []  # 每个小孩逃跑时对他人的影响
c = []  # 每个小孩心里承受能力
def data_collect():
    global v,d,c
    r_i = raw_input()
    r_i = r_i.strip()
    n = int(r_i)
    for i in range(n):
        r_i = raw_input()
        r_i = r_i.strip().split(' ')
        int_list = [int(t) for t in r_i]
        v.append(int_list[0])
        d.append(int_list[1])
        c.append(int_list[2])
    return n

def output_print(queue):
    print len(queue)
    out = list(queue)
    print int(out[0]),
    for i in range(1,len(out)):
        print ' ' + str(int(out[i])),

def main():
    global v,d,c
    n = data_collect()
    stu_list = []
    stay_list = []
    for i in range(n):
        stu_list.append(i + 1)
        stay_list.append(1)
    c_list = []
    for i in range(n):
        if stay_list[i] > 0:
            c_list.append(stu_list[i])
            vol = v[0]  #由于哭对别人的影响
            dec = 0  # 由于有人吓跑对别人的影响
            for j in range(i + 1,n):
                c[j] -= vol + dec
                if vol > 0:
                    vol -= 1
                if c[j] < 0:
                    dec += d[j]
                    stay_list[j] = 0
    output_print(c_list)

main()",7311,0,61,2016-04-10 11:42:10,101,30,2,13,0
