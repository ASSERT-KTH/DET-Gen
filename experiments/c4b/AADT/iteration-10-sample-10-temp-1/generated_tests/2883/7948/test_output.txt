CompletedProcess(args=['python', 'temp_test_case.py'], returncode=1, stdout=b'', stderr=b'...E....F....EE.E........F....F..\n======================================================================\nERROR: test11 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 78, in test11\n    self.assertEqual(patched_source(input_11), original_source(input_11))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_acc_qb.py", line 4, in patched_func\n    [x1, y1, x2, y2] = [int(x) for x in args[0].split()]\nValueError: too many values to unpack (expected 4)\n\n======================================================================\nERROR: test20 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 132, in test20\n    self.assertEqual(patched_source(input_20), original_source(input_20))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_acc_qb.py", line 4, in patched_func\n    [x1, y1, x2, y2] = [int(x) for x in args[0].split()]\nValueError: too many values to unpack (expected 4)\n\n======================================================================\nERROR: test21 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 138, in test21\n    self.assertEqual(patched_source(*input_21), original_source(*input_21))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_acc_qb.py", line 4, in patched_func\n    [x1, y1, x2, y2] = [int(x) for x in args[0].split()]\nValueError: not enough values to unpack (expected 4, got 2)\n\n======================================================================\nERROR: test23 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 150, in test23\n    self.assertEqual(patched_source(*input_23), original_source(*input_23))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_acc_qb.py", line 4, in patched_func\n    [x1, y1, x2, y2] = [int(x) for x in args[0].split()]\nValueError: not enough values to unpack (expected 4, got 2)\n\n======================================================================\nFAIL: test16 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 108, in test16\n    self.assertEqual(patched_source(*input_16), original_source(*input_16))\nAssertionError: Lists differ: [\'NO\'] != [\'YES\']\n\nFirst differing element 0:\n\'NO\'\n\'YES\'\n\n- [\'NO\']\n+ [\'YES\']\n\n======================================================================\nFAIL: test31 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 198, in test31\n    self.assertEqual(patched_source(*input_31), original_source(*input_31))\nAssertionError: Lists differ: [\'NO\'] != [\'YES\']\n\nFirst differing element 0:\n\'NO\'\n\'YES\'\n\n- [\'NO\']\n+ [\'YES\']\n\n======================================================================\nFAIL: test7 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 54, in test7\n    self.assertEqual(patched_source(*input_7), original_source(*input_7))\nAssertionError: Lists differ: [\'NO\'] != [\'YES\']\n\nFirst differing element 0:\n\'NO\'\n\'YES\'\n\n- [\'NO\']\n+ [\'YES\']\n\n----------------------------------------------------------------------\nRan 33 tests in 0.003s\n\nFAILED (failures=3, errors=4)\n')