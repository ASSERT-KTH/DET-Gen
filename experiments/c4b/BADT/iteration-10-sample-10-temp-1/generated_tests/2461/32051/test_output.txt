CompletedProcess(args=['python', 'temp_test_case.py'], returncode=1, stdout=b'', stderr=b'EEEE.EEE..\n======================================================================\nERROR: test0 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 12, in test0\n    self.assertEqual(patched_source(input_0), original_source(input_0))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_bug_qb.py", line 12, in original_func\n    global_list.append(\'s\', _, x, y)\nTypeError: list.append() takes exactly one argument (4 given)\n\n======================================================================\nERROR: test1 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 18, in test1\n    self.assertEqual(patched_source(input_1), original_source(input_1))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_bug_qb.py", line 12, in original_func\n    global_list.append(\'s\', _, x, y)\nTypeError: list.append() takes exactly one argument (4 given)\n\n======================================================================\nERROR: test2 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 24, in test2\n    self.assertEqual(patched_source(input_2), original_source(input_2))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_bug_qb.py", line 12, in original_func\n    global_list.append(\'s\', _, x, y)\nTypeError: list.append() takes exactly one argument (4 given)\n\n======================================================================\nERROR: test3 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 30, in test3\n    self.assertEqual(patched_source(input_3), original_source(input_3))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_bug_qb.py", line 12, in original_func\n    global_list.append(\'s\', _, x, y)\nTypeError: list.append() takes exactly one argument (4 given)\n\n======================================================================\nERROR: test5 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 42, in test5\n    self.assertEqual(patched_source(input_5), original_source(input_5))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_bug_qb.py", line 12, in original_func\n    global_list.append(\'s\', _, x, y)\nTypeError: list.append() takes exactly one argument (4 given)\n\n======================================================================\nERROR: test6 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 48, in test6\n    self.assertEqual(patched_source(input_6), original_source(input_6))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_bug_qb.py", line 12, in original_func\n    global_list.append(\'s\', _, x, y)\nTypeError: list.append() takes exactly one argument (4 given)\n\n======================================================================\nERROR: test7 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 54, in test7\n    self.assertEqual(patched_source(input_7), original_source(input_7))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_bug_qb.py", line 12, in original_func\n    global_list.append(\'s\', _, x, y)\nTypeError: list.append() takes exactly one argument (4 given)\n\n----------------------------------------------------------------------\nRan 10 tests in 0.001s\n\nFAILED (errors=7)\n')