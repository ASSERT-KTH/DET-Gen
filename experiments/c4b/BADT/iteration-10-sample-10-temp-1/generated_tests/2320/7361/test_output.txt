CompletedProcess(args=['python', 'temp_test_case.py'], returncode=1, stdout=b'', stderr=b'E...F.E.E.\n======================================================================\nERROR: test0 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 12, in test0\n    self.assertEqual(patched_source(*input_0), original_source(*input_0))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_acc_qb.py", line 27, in patched_func\n    mm = (sl[0] + sl[1])\nIndexError: list index out of range\n\n======================================================================\nERROR: test6 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 48, in test6\n    self.assertEqual(patched_source(input_6), original_source(input_6))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_acc_qb.py", line 5, in patched_func\n    nl = list(map(int, args[0].split()))\nValueError: invalid literal for int() with base 10: \'+\'\n\n======================================================================\nERROR: test8 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 60, in test8\n    self.assertEqual(patched_source(*input_8), original_source(*input_8))\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_acc_qb.py", line 29, in patched_func\n    mm = (sl[0] * sl[1])\nIndexError: list index out of range\n\n======================================================================\nFAIL: test4 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen/temp_test_case.py", line 36, in test4\n    self.assertEqual(patched_source(*input_4), original_source(*input_4))\nAssertionError: Lists differ: [10000000000000] != [1000000000]\n\nFirst differing element 0:\n10000000000000\n1000000000\n\n- [10000000000000]\n?            ----\n\n+ [1000000000]\n\n----------------------------------------------------------------------\nRan 10 tests in 0.002s\n\nFAILED (failures=1, errors=3)\n')