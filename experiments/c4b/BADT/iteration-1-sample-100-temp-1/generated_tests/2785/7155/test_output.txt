CompletedProcess(args=['python', 'temp_test_case.py'], returncode=1, stdout=b'', stderr=b'/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:8: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if (i is 0):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:10: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((f is \'K\') and (data[(i - 1)] is \'V\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:10: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((f is \'K\') and (data[(i - 1)] is \'V\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:13: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if (i is 0):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:15: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((f is \'V\') and (data[(i - 1)] is \'V\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:15: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((f is \'V\') and (data[(i - 1)] is \'V\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:16: SyntaxWarning: "is not" with a literal. Did you mean "!="?\n  if (((i + 1) < len(data)) and (data[(i + 1)] is not \'K\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:22: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  elif (f is \'K\'):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:23: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if (data[(i - 1)] is \'V\'):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_acc_qb.py:25: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((i > 1) and (data[(i - 2)] is \'K\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:8: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if (i is 0):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:10: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((f is \'K\') and (data[(i - 1)] is \'V\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:10: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((f is \'K\') and (data[(i - 1)] is \'V\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:13: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if (i is 0):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:15: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((f is \'V\') and (data[(i - 1)] is \'V\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:15: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((f is \'V\') and (data[(i - 1)] is \'V\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:16: SyntaxWarning: "is not" with a literal. Did you mean "!="?\n  if (((i + 1) < len(data)) and (data[(i + 1)] is not \'K\')):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:22: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  elif (f is \'K\'):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:23: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if (data[(i - 1)] is \'V\'):\n/home/khashayar/projs/det-gen/DET-Gen2/temp_bug_qb.py:25: SyntaxWarning: "is" with a literal. Did you mean "=="?\n  if ((i > 1) and (data[(i - 2)] is \'K\')):\n..F...F.........F..F..FF..............................F.......F.............................F.......\n======================================================================\nFAIL: test10 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 72, in test10\n    self.assertEqual(patched_source(input_10), original_source(input_10))\nAssertionError: Lists differ: [2] != [3]\n\nFirst differing element 0:\n2\n3\n\n- [2]\n+ [3]\n\n======================================================================\nFAIL: test14 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 96, in test14\n    self.assertEqual(patched_source(input_14), original_source(input_14))\nAssertionError: Lists differ: [2] != [3]\n\nFirst differing element 0:\n2\n3\n\n- [2]\n+ [3]\n\n======================================================================\nFAIL: test23 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 150, in test23\n    self.assertEqual(patched_source(input_23), original_source(input_23))\nAssertionError: Lists differ: [1] != [2]\n\nFirst differing element 0:\n1\n2\n\n- [1]\n+ [2]\n\n======================================================================\nFAIL: test26 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 168, in test26\n    self.assertEqual(patched_source(input_26), original_source(input_26))\nAssertionError: Lists differ: [1] != [2]\n\nFirst differing element 0:\n1\n2\n\n- [1]\n+ [2]\n\n======================================================================\nFAIL: test29 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 186, in test29\n    self.assertEqual(patched_source(input_29), original_source(input_29))\nAssertionError: Lists differ: [1] != [2]\n\nFirst differing element 0:\n1\n2\n\n- [1]\n+ [2]\n\n======================================================================\nFAIL: test3 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 30, in test3\n    self.assertEqual(patched_source(input_3), original_source(input_3))\nAssertionError: Lists differ: [1] != [2]\n\nFirst differing element 0:\n1\n2\n\n- [1]\n+ [2]\n\n======================================================================\nFAIL: test58 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 360, in test58\n    self.assertEqual(patched_source(input_58), original_source(input_58))\nAssertionError: Lists differ: [1] != [2]\n\nFirst differing element 0:\n1\n2\n\n- [1]\n+ [2]\n\n======================================================================\nFAIL: test65 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 402, in test65\n    self.assertEqual(patched_source(input_65), original_source(input_65))\nAssertionError: Lists differ: [2] != [3]\n\nFirst differing element 0:\n2\n3\n\n- [2]\n+ [3]\n\n======================================================================\nFAIL: test92 (__main__.TestFunctions)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/home/khashayar/projs/det-gen/DET-Gen2/temp_test_case.py", line 564, in test92\n    self.assertEqual(patched_source(input_92), original_source(input_92))\nAssertionError: Lists differ: [1] != [2]\n\nFirst differing element 0:\n1\n2\n\n- [1]\n+ [2]\n\n----------------------------------------------------------------------\nRan 100 tests in 0.006s\n\nFAILED (failures=9)\n')