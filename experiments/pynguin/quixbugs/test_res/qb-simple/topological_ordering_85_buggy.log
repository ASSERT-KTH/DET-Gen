============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.4, pluggy-1.4.0
rootdir: /home/khashayar/projs/det-gen
plugins: anyio-4.3.0
collected 5 items

pynguin-qb-simple-res/topological_ordering/85/test_transformed_topological_ordering.py . [ 20%]
...F                                                                     [100%]

=================================== FAILURES ===================================
_________________________________ test_case_4 __________________________________

    def test_case_4():
        str_0 = "I8r@fY%)0Mi}"
        none_type_0 = None
        node_0 = module_0.Node(str_0, none_type_0, none_type_0, incoming_nodes=str_0)
        assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
        assert node_0.value == "I8r@fY%)0Mi}"
        assert node_0.successor is None
        assert node_0.successors is None
        assert node_0.predecessors == []
        assert node_0.incoming_nodes == "I8r@fY%)0Mi}"
        assert node_0.outgoing_nodes == []
        dict_0 = {node_0: node_0, node_0: str_0}
        node_1 = module_0.Node(node_0, successors=node_0, outgoing_nodes=dict_0)
        assert f"{type(node_1).__module__}.{type(node_1).__qualname__}" == "node.Node"
        assert (
            f"{type(node_1.value).__module__}.{type(node_1.value).__qualname__}"
            == "node.Node"
        )
        assert node_1.successor is None
        assert (
            f"{type(node_1.successors).__module__}.{type(node_1.successors).__qualname__}"
            == "node.Node"
        )
        assert node_1.predecessors == []
        assert node_1.incoming_nodes == []
        assert (
            f"{type(node_1.outgoing_nodes).__module__}.{type(node_1.outgoing_nodes).__qualname__}"
            == "builtins.dict"
        )
        assert len(node_1.outgoing_nodes) == 1
        tuple_0 = (node_1,)
        var_0 = module_1.topological_ordering(tuple_0)
        node_2 = module_0.Node(var_0, var_0, var_0)
        assert f"{type(node_2).__module__}.{type(node_2).__qualname__}" == "node.Node"
        assert (
            f"{type(node_2.value).__module__}.{type(node_2.value).__qualname__}"
            == "builtins.list"
        )
>       assert len(node_2.value) == 1
E       assert 2 == 1
E        +  where 2 = len([<node.Node object at 0x7f577708e710>, <node.Node object at 0x7f577708e2f0>])
E        +    where [<node.Node object at 0x7f577708e710>, <node.Node object at 0x7f577708e2f0>] = <node.Node object at 0x7f577708e350>.value

pynguin-qb-simple-res/topological_ordering/85/test_transformed_topological_ordering.py:162: AssertionError
=========================== short test summary info ============================
FAILED pynguin-qb-simple-res/topological_ordering/85/test_transformed_topological_ordering.py::test_case_4
========================= 1 failed, 4 passed in 0.10s ==========================
