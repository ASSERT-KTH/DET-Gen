============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.4, pluggy-1.4.0
rootdir: /home/khashayar/projs/det-gen
plugins: anyio-4.3.0
collected 3 items

pynguin-qb-simple-res/breadth_first_search/48/test_transformed_breadth_first_search.py . [ 33%]
.F                                                                       [100%]

=================================== FAILURES ===================================
_________________________________ test_case_2 __________________________________

    def test_case_2():
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        node_0 = module_1.Node(successors=list_0, outgoing_nodes=list_0)
        assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
        assert node_0.value is None
        assert node_0.successor is None
        assert node_0.successors == [True, True, True, True]
        assert node_0.predecessors == []
        assert node_0.incoming_nodes == []
        assert node_0.outgoing_nodes == [True, True, True, True]
        list_1 = [list_0, node_0, node_0, bool_0]
        var_0 = module_1.Node(incoming_nodes=bool_0, outgoing_nodes=bool_0)
        assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
        assert var_0.value is None
        assert var_0.successor is None
        assert var_0.successors == []
        assert var_0.predecessors == []
        assert var_0.incoming_nodes is True
        assert var_0.outgoing_nodes is True
        float_0 = 2385.1006
        node_1 = module_1.Node(list_1, incoming_nodes=float_0)
        assert f"{type(node_1).__module__}.{type(node_1).__qualname__}" == "node.Node"
        assert (
            f"{type(node_1.value).__module__}.{type(node_1.value).__qualname__}"
            == "builtins.list"
        )
        assert len(node_1.value) == 4
        assert node_1.successor is None
        assert node_1.successors == []
        assert node_1.predecessors == []
        assert node_1.incoming_nodes == pytest.approx(2385.1006, abs=0.01, rel=0.01)
        assert node_1.outgoing_nodes == []
>       var_1 = module_0.breadth_first_search(node_1, node_0)

pynguin-qb-simple-res/breadth_first_search/48/test_transformed_breadth_first_search.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

startnode = <node.Node object at 0x7f1f6c7f9cf0>
goalnode = <node.Node object at 0x7f1f6c7fa320>

    def breadth_first_search(startnode, goalnode):
        queue = Queue()
        queue.append(startnode)
    
        nodesseen = set()
        nodesseen.add(startnode)
    
        while True:
>           node = queue.popleft()
E           IndexError: pop from an empty deque

pynguin-qb-simple-res/breadth_first_search/48/breadth_first_search.py:12: IndexError
=========================== short test summary info ============================
FAILED pynguin-qb-simple-res/breadth_first_search/48/test_transformed_breadth_first_search.py::test_case_2
========================= 1 failed, 2 passed in 0.07s ==========================
