# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_length as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.shortest_path_length(none_type_0, none_type_0, none_type_0)
    assert var_0 == 0


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "Cx]PE>g/0\nL"
#    module_0.get(str_0, str_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.get(dict_0, dict_0)
    assert var_0 == 0


def test_case_3():
    set_0 = set()
    node_0 = module_1.Node(predecessors=set_0)
    var_0 = module_0.shortest_path_length(node_0, node_0, set_0)
    assert var_0 == pytest.approx(1e309, abs=0.01, rel=0.01)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"k\xdc"
#    module_0.insert_or_update(bytes_0, bytes_0)


def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    dict_0 = {tuple_0: tuple_0}
    var_0 = module_0.insert_or_update(dict_0, tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = -1205.55
    bool_0 = False
    tuple_0 = (float_0, bool_0)
    dict_0 = {}
#    module_0.insert_or_update(dict_0, tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    dict_0 = {tuple_0: tuple_0}
    var_0 = module_0.insert_or_update(dict_0, tuple_0)
#    module_0.get(dict_0, var_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    set_0 = set()
    list_0 = [set_0]
    node_0 = module_1.Node(set_0, set_0, list_0, incoming_nodes=list_0)
#    module_0.shortest_path_length(node_0, node_0, list_0)


#@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = False
    var_0 = module_0.shortest_path_length(bool_0, bool_0, bool_0)
    assert var_0 == 0
    tuple_0 = (bool_0, bool_0)
    dict_0 = {tuple_0: tuple_0}
    var_1 = module_0.get(dict_0, bool_0)
    assert var_1 is False
#    module_0.insert_or_update(bool_0, var_1)
