# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "aY"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.shortest_paths(str_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xcbd\xa4\xcd\x12\x05\xdb\xff\x1b\xd1\x11\xf3\x8effc\x11"
    none_type_0 = None
    module_0.shortest_paths(bytes_0, none_type_0)


def test_case_2():
    tuple_0 = ()
    node_0 = module_1.Node(successors=tuple_0, predecessors=tuple_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor is None
    assert node_0.successors == ()
    assert node_0.predecessors == ()
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == []
    var_0 = module_0.shortest_paths(node_0, tuple_0)
