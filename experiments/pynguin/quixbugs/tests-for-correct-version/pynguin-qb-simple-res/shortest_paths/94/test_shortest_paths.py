# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "u07IMxV~$WBf<H@p)_}"
    list_0 = [str_0, str_0, str_0]
    module_0.shortest_paths(list_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.shortest_paths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b'"Y'
    tuple_0 = (bytes_0, bytes_0)
    module_0.shortest_paths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    bytes_0 = b"\xab\x80"
    var_0 = module_0.shortest_paths(bytes_0, tuple_0)
    module_0.shortest_paths(bytes_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    bytes_0 = b"\xab\x80"
    tuple_1 = (bytes_0, bytes_0)
    var_0 = module_0.shortest_paths(tuple_1, tuple_0)
    var_1 = module_0.shortest_paths(tuple_0, var_0)
    var_2 = module_0.shortest_paths(tuple_0, var_0)
    var_2.successors()
