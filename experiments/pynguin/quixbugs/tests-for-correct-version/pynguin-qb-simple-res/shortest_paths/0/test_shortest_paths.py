# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"!s\xc8wkK\x85\xec\xefj8\xe1**"
    module_0.shortest_paths(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.shortest_paths(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "=f"
    set_0 = {str_0, str_0, str_0}
    module_0.shortest_paths(str_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    str_0 = "=f"
    var_0 = module_0.shortest_paths(str_0, tuple_0)
    module_0.shortest_paths(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)
    var_1 = module_0.shortest_paths(tuple_0, tuple_0)
    str_0 = ">>"
    var_2 = module_0.shortest_paths(str_0, tuple_0)
    var_3 = module_0.shortest_paths(str_0, var_2)
    var_1.successor()
