# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    str_0 = "$@rf3A"
    module_0.possible_change(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -456
    bool_0 = False
    var_0 = module_0.possible_change(int_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.possible_change(int_0, bool_0)
    assert var_1 == 1
    var_2 = module_0.possible_change(bool_0, int_0)
    assert var_2 == 0
    var_3 = module_0.possible_change(int_0, int_0)
    assert var_3 == 0
    bytes_0 = b"?\xf8\xa3\xeb\xc6W:\xbe\xb5\xf4\xad \xcc"
    none_type_0 = None
    var_4 = module_0.possible_change(none_type_0, var_1)
    assert var_4 == 0
    var_5 = module_0.possible_change(var_3, var_3)
    assert var_5 == 1
    module_0.possible_change(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 995
    module_0.possible_change(int_0, int_0)
