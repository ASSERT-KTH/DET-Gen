# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    object_0 = module_1.object()
    module_0.possible_change(bool_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1638
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.possible_change(list_0, int_0)
    assert var_0 == 0
    complex_0 = -2552 + 2081.37j
    none_type_0 = None
    module_0.possible_change(complex_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    bytes_0 = b"\x11\xcc\xdd"
    none_type_0 = None
    var_0 = module_0.possible_change(none_type_0, bool_0)
    assert var_0 == 0
    module_0.possible_change(bool_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 2224.7042
    module_0.possible_change(float_0, float_0)
