# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


def test_case_0():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, dict_0)
    var_0 = module_0.possible_change(tuple_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = 2773.0
    module_0.possible_change(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "j,m"
    complex_0 = -302.299 - 1218.9099j
    float_0 = -5996.895885
    bytes_0 = b"\xa7U\x16!T\x0e,X\x7f\x91\xa9y\xd0\xf3\x02\xf5"
    tuple_0 = (str_0, complex_0, float_0, bytes_0)
    var_0 = module_0.possible_change(float_0, float_0)
    assert var_0 == 0
    module_0.possible_change(tuple_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.possible_change(bool_0, var_0)
    assert var_1 == 0
    var_2 = module_0.possible_change(bool_0, bool_0)
    assert var_2 == 1
    var_3 = module_0.possible_change(bool_0, bool_0)
    assert var_3 == 1
    module_0.possible_change(var_0, var_3)
