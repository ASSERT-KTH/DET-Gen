# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1982
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(int_0, int_0)
    assert var_1 == 0
    var_2 = module_0.possible_change(var_1, var_1)
    assert var_2 == 1
    var_3 = module_0.possible_change(var_0, var_1)
    assert var_3 == 1
    var_4 = module_0.possible_change(var_1, var_1)
    assert var_4 == 1
    module_0.possible_change(var_2, var_3)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_0.possible_change(set_0, set_0)


def test_case_2():
    float_0 = -117.78438
    var_0 = module_0.possible_change(float_0, float_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(float_0, float_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    bool_0 = True
    var_0 = module_0.possible_change(none_type_0, bool_0)
    assert var_0 == 0
    str_0 = "[Fyw-[Kj_S;Q\n@E6"
    bytes_0 = b"A\xe7%!E\xdc"
    dict_0 = {str_0: str_0, str_0: str_0, bytes_0: bytes_0, str_0: bytes_0}
    module_0.possible_change(dict_0, bytes_0)
