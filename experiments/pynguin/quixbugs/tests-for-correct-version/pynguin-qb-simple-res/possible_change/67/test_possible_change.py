# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.possible_change(bool_0, bool_0)
    assert var_1 == 1
    bool_1 = True
    none_type_0 = None
    module_0.possible_change(bool_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    module_0.possible_change(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xf1\xdff\x06\x12=wL\xe3\x9e\xfb\x8f"
    bool_0 = True
    int_0 = 154
    tuple_0 = (bytes_0, bool_0, bool_0, int_0)
    none_type_0 = None
    float_0 = -2454.4528
    var_0 = module_0.possible_change(bool_0, float_0)
    assert var_0 == 0
    module_0.possible_change(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 54.252
    float_1 = 2331.076706
    module_0.possible_change(float_0, float_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    none_type_0 = None
    var_1 = module_0.possible_change(none_type_0, bool_0)
    assert var_1 == 1
    var_2 = module_0.possible_change(none_type_0, var_0)
    assert var_2 == 0
    module_0.possible_change(none_type_0, none_type_0)
