# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


def test_case_0():
    bytes_0 = b"\xc1\xb0\xb4\xee\xe0g_\x00W\x0ffY\xb6\xaf)"
    bool_0 = False
    var_0 = module_0.possible_change(bytes_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xae\xd95\xab{\xedtQ\x1e"
    module_0.possible_change(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2982
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    set_0 = {int_0}
    int_1 = 737
    module_0.possible_change(set_0, int_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    module_0.possible_change(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    none_type_0 = None
    var_0 = module_0.possible_change(none_type_0, bool_0)
    assert var_0 == 1
    tuple_0 = (var_0,)
    var_1 = module_0.possible_change(tuple_0, var_0)
    assert var_1 == 1
    module_0.possible_change(none_type_0, none_type_0)
