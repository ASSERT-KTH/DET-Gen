# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2003
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(var_0, int_0)
    assert var_1 == 0
    var_2 = module_0.possible_change(var_0, int_0)
    assert var_2 == 0
    var_3 = module_0.possible_change(var_2, var_1)
    assert var_3 == 1
    bool_0 = False
    str_0 = "T9a\x0c^ZL\n"
    tuple_0 = (bool_0, str_0)
    var_4 = module_0.possible_change(var_1, var_1)
    assert var_4 == 1
    var_5 = module_0.possible_change(str_0, var_0)
    assert var_5 == 1
    module_0.possible_change(tuple_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    module_0.possible_change(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 1183.0749
    dict_0 = {float_0: float_0}
    var_0 = module_0.possible_change(dict_0, float_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.possible_change(float_0, none_type_0)
