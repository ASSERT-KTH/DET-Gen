# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    list_0 = []
    module_0.possible_change(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ":1"
    module_0.possible_change(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -29
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(int_0, var_0)
    assert var_1 == 1
    tuple_0 = (int_0,)
    var_2 = module_0.possible_change(var_1, int_0)
    assert var_2 == 0
    list_0 = [int_0, int_0, tuple_0]
    str_0 = "\\d"
    dict_0 = {str_0: int_0, str_0: int_0, str_0: str_0}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    module_0.possible_change(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.possible_change(list_0, bool_0)
    assert var_0 == 3
    module_0.possible_change(bool_0, bool_0)
