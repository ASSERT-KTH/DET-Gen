# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = 958.5 + 2586.2926j
    module_0.possible_change(complex_0, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ".}v4"
    int_0 = -386
    var_0 = module_0.possible_change(str_0, int_0)
    assert var_0 == 0
    int_1 = 2552
    module_0.possible_change(int_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    module_0.possible_change(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -2512
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    bytes_0 = b"\xe0-\x87\xee"
    var_1 = module_0.possible_change(int_0, int_0)
    assert var_1 == 0
    var_2 = module_0.possible_change(var_1, var_0)
    assert var_2 == 1
    tuple_0 = (bytes_0, int_0)
    var_3 = module_0.possible_change(var_1, var_2)
    assert var_3 == 0
    module_0.possible_change(int_0, tuple_0)
