# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "/gj 4\x0c[@A_Y[Q&q2p_"
    module_0.possible_change(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.possible_change(bool_0, var_0)
    assert var_1 == 0
    str_0 = "?:edD'FuJBuWQ"
    var_2 = module_0.possible_change(var_1, var_0)
    assert var_2 == 0
    var_3 = module_0.possible_change(str_0, bool_0)
    assert var_3 == 1
    set_0 = {str_0}
    none_type_0 = None
    var_4 = module_0.possible_change(none_type_0, var_2)
    assert var_4 == 1
    int_0 = -356
    var_5 = module_0.possible_change(var_0, int_0)
    assert var_5 == 0
    list_0 = [set_0, set_0, set_0, str_0]
    module_0.possible_change(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xa1\r"
    int_0 = 75
    list_0 = [bytes_0, int_0, int_0]
    module_0.possible_change(list_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    int_0 = 1510
    bool_1 = False
    var_1 = module_0.possible_change(bool_1, int_0)
    assert var_1 == 0
    module_0.possible_change(int_0, int_0)
