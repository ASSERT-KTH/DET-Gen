# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "4,:0PE'.\nxtF&2f:U+'&"
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    bool_1 = False
    var_1 = module_0.possible_change(str_0, bool_1)
    assert var_1 == 1
    module_0.possible_change(var_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xcf)\xa8\xad|\xfb\xdbs"
    module_0.possible_change(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -478
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    bool_0 = False
    var_1 = module_0.possible_change(var_0, var_0)
    assert var_1 == 1
    var_2 = module_0.possible_change(var_0, var_0)
    assert var_2 == 1
    var_3 = module_0.possible_change(bool_0, bool_0)
    assert var_3 == 1
    var_4 = module_0.possible_change(bool_0, bool_0)
    assert var_4 == 1
    bytes_0 = b"\xc7Mmd\xb7\xe4GLD\xb1\x86\xf7\xebx=5]\x1f"
    module_0.possible_change(var_4, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    int_0 = 913
    module_0.possible_change(bool_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    bool_1 = True
    var_1 = module_0.possible_change(bool_0, bool_1)
    assert var_1 == 0
    none_type_0 = None
    module_0.possible_change(bool_0, none_type_0)
