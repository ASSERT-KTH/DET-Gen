# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    float_0 = 461.77293
    dict_0 = {float_0: float_0}
    tuple_0 = (float_0, dict_0)
    module_0.possible_change(float_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    none_type_0 = None
    module_0.possible_change(object_0, none_type_0)


def test_case_2():
    float_0 = -3444.92
    float_1 = -4735.89097
    var_0 = module_0.possible_change(float_0, float_1)
    assert var_0 == 0
    var_1 = module_0.possible_change(float_0, float_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "BH\"DbH'"
    bool_0 = True
    module_0.possible_change(str_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xc4\xb2\xc4)w\xfc\xf6\x0c\xf5\x19@"
    int_0 = -1575
    var_0 = module_0.possible_change(bytes_0, int_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(int_0, int_0)
    assert var_1 == 0
    list_0 = [bytes_0, int_0, var_0]
    var_2 = module_0.possible_change(list_0, var_0)
    assert var_2 == 1
    bool_0 = False
    var_3 = module_0.possible_change(bytes_0, var_0)
    assert var_3 == 1
    var_4 = module_0.possible_change(bool_0, var_0)
    assert var_4 == 1
    dict_0 = {}
    var_5 = module_0.possible_change(int_0, var_0)
    assert var_5 == 1
    var_6 = module_0.possible_change(bool_0, var_2)
    assert var_6 == 0
    tuple_0 = (bytes_0, int_0, bool_0, dict_0)
    var_7 = module_0.possible_change(tuple_0, int_0)
    assert var_7 == 0
    module_0.possible_change(tuple_0, tuple_0)
