# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xd7i\x08Z"
    bool_0 = False
    list_0 = [bytes_0, bytes_0, bool_0, bytes_0]
    none_type_0 = None
    var_0 = module_0.possible_change(none_type_0, bool_0)
    assert var_0 == 1
    module_0.possible_change(bytes_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "Vm\x0b"
    module_0.possible_change(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -589
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(int_0, int_0)
    assert var_1 == 0
    var_2 = module_0.possible_change(int_0, var_0)
    assert var_2 == 1
    var_3 = module_0.possible_change(var_2, int_0)
    assert var_3 == 0
    var_4 = module_0.possible_change(int_0, int_0)
    assert var_4 == 0
    var_5 = module_0.possible_change(var_4, var_4)
    assert var_5 == 1
    var_6 = module_0.possible_change(int_0, var_4)
    assert var_6 == 1
    str_0 = "idBw[#Xs]66]}\\!j\\2(,"
    module_0.possible_change(var_2, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 151
    module_0.possible_change(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    bool_1 = True
    var_0 = module_0.possible_change(bool_0, bool_1)
    assert var_0 == 0
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)
