# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_spanning_tree as module_0
import node as module_1


def test_case_0():
    bytes_0 = b"\x03\x83\xeaP\xc3i\xb5 `"
    tuple_0 = (bytes_0, bytes_0)
    dict_0 = {tuple_0: bytes_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.minimum_spanning_tree(none_type_0)


def test_case_2():
    bytes_0 = b"_\x83\xeai\xb5 `"
    node_0 = module_1.Node(successors=bytes_0, outgoing_nodes=bytes_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor is None
    assert node_0.successors == b"_\x83\xeai\xb5 `"
    assert node_0.predecessors == []
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == b"_\x83\xeai\xb5 `"
    tuple_0 = (bytes_0, node_0)
    dict_0 = {tuple_0: bytes_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)
