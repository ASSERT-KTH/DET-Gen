# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_spanning_tree as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.minimum_spanning_tree(none_type_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.minimum_spanning_tree(list_0)


def test_case_2():
    bytes_0 = b"\x97\x07"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "'z0"
    tuple_0 = (str_0, str_0)
    str_1 = ""
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: str_1}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    none_type_0 = None
    node_0 = module_1.Node(predecessors=none_type_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor is None
    assert node_0.successors == []
    assert node_0.predecessors is None
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == []
    module_0.minimum_spanning_tree(node_0)
