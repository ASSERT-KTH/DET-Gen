# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_spanning_tree as module_0


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.minimum_spanning_tree(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x7f\x87"
    module_0.minimum_spanning_tree(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    tuple_0 = (bool_0,)
    module_0.minimum_spanning_tree(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x90K\x19\x1c\x05\x13@\xcd\x98ZY\xb0\x04\xfbg\xd1\xdfm"
    str_0 = "{3h >DyN1"
    tuple_0 = (bytes_0, str_0)
    dict_0 = {tuple_0: tuple_0, tuple_0: str_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    var_0.successor()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x90K\x19\x1c\x05\x13@\xcd\x98ZY\xb0\x04\xfbg\xd1\xdfm"
    tuple_0 = (bytes_0, bytes_0)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    var_0.successor()
