# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_spanning_tree as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    complex_0 = 156.839 + 2667.1j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    module_0.minimum_spanning_tree(dict_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.minimum_spanning_tree(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.minimum_spanning_tree(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x80@\xf2c"
    tuple_0 = (bytes_0, bytes_0)
    dict_0 = {tuple_0: tuple_0, bytes_0: tuple_0}
    module_0.minimum_spanning_tree(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"@c"
    tuple_0 = (bytes_0, bytes_0)
    dict_0 = {tuple_0: tuple_0, bytes_0: tuple_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    var_0.successors()
