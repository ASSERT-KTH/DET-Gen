# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_spanning_tree as module_0
import node as module_1


def test_case_0():
    str_0 = ">u"
    dict_0 = {str_0: str_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.minimum_spanning_tree(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1932
    module_0.minimum_spanning_tree(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "[["
    dict_0 = {str_0: str_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    node_0 = module_1.Node()
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor is None
    assert node_0.successors == []
    assert node_0.predecessors == []
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == []
    var_1 = module_0.minimum_spanning_tree(dict_0)
    node_0.predecessors()
