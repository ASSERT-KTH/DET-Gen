# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "tcJ\t\x0bq;B,6/_ih"
    none_type_0 = None
    node_0 = module_1.Node(
        successor=str_0,
        successors=str_0,
        predecessors=str_0,
        incoming_nodes=none_type_0,
    )
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor == "tcJ\t\x0bq;B,6/_ih"
    assert node_0.successors == "tcJ\t\x0bq;B,6/_ih"
    assert node_0.predecessors == "tcJ\t\x0bq;B,6/_ih"
    assert node_0.incoming_nodes is None
    assert node_0.outgoing_nodes == []
    module_0.depth_first_search(node_0, str_0)


def test_case_2():
    none_type_0 = None
    node_0 = module_1.Node(incoming_nodes=none_type_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor is None
    assert node_0.successors == []
    assert node_0.predecessors == []
    assert node_0.incoming_nodes is None
    assert node_0.outgoing_nodes == []
    var_0 = module_0.depth_first_search(node_0, none_type_0)
    assert var_0 is False
