# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    str_0 = "tLDoFy\t[)SnuO("
    var_0 = module_0.depth_first_search(str_0, str_0)
    assert var_0 is True


def test_case_1():
    none_type_0 = None
    node_0 = module_1.Node(none_type_0, outgoing_nodes=none_type_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor is None
    assert node_0.successors == []
    assert node_0.predecessors == []
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes is None
    var_0 = module_0.depth_first_search(node_0, none_type_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "DGDhp@@D2G-%o("
    node_0 = module_1.Node(str_0, successors=str_0, predecessors=str_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value == "DGDhp@@D2G-%o("
    assert node_0.successor is None
    assert node_0.successors == "DGDhp@@D2G-%o("
    assert node_0.predecessors == "DGDhp@@D2G-%o("
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == []
    module_0.depth_first_search(node_0, str_0)
