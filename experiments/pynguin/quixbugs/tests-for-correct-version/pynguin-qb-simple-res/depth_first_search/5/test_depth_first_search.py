# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    int_0 = 853
    var_0 = module_0.depth_first_search(int_0, int_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    node_0 = module_1.Node(predecessors=none_type_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor is None
    assert node_0.successors == []
    assert node_0.predecessors is None
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == []
    var_0 = module_0.depth_first_search(node_0, node_0)
    assert var_0 is True
    set_0 = {none_type_0, none_type_0, none_type_0}
    var_1 = module_0.depth_first_search(node_0, set_0)
    assert var_1 is False
    var_2 = module_0.depth_first_search(var_1, var_1)
    assert var_2 is True
    none_type_0.successor()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.depth_first_search(bool_0, bool_0)
    assert var_0 is True
    module_0.depth_first_search(bool_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "d6cR89;\rj\nBWw-XW+(0V"
    set_0 = {str_0, str_0}
    var_0 = module_0.depth_first_search(set_0, set_0)
    assert var_0 is True
    bool_0 = False
    var_1 = module_0.depth_first_search(bool_0, bool_0)
    assert var_1 is True
    str_1 = "SGk{#h88/{,Y"
    node_0 = module_1.Node(successors=str_1, predecessors=str_1)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value is None
    assert node_0.successor is None
    assert node_0.successors == "SGk{#h88/{,Y"
    assert node_0.predecessors == "SGk{#h88/{,Y"
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == []
    str_2 = "VC.Swk T"
    module_0.depth_first_search(node_0, str_2)
