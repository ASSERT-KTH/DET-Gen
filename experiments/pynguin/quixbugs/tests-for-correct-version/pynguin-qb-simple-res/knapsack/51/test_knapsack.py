# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "5Cg8s\n8;z:;v"
    set_0 = {str_0, str_0, str_0}
    module_0.knapsack(str_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    str_0 = "u>"
    var_0 = module_0.knapsack(str_0, list_0)
    assert var_0 == 0
    module_0.knapsack(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    complex_0 = -590.79 + 1110.1j
    none_type_0 = None
    module_0.knapsack(complex_0, none_type_0)


def test_case_3():
    str_0 = "`\t"
    tuple_0 = (str_0, str_0, str_0)
    bool_0 = False
    var_0 = module_0.knapsack(bool_0, tuple_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "`\t"
    tuple_0 = (str_0, str_0, str_0)
    bool_0 = True
    module_0.knapsack(bool_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "Ps"
    bytes_0 = b"\x80{"
    tuple_0 = (bytes_0, str_0, str_0)
    bool_0 = True
    module_0.knapsack(bool_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    list_0 = []
    str_0 = "Ps"
    var_0 = module_0.knapsack(str_0, list_0)
    assert var_0 == 0
    bytes_0 = b"w{"
    tuple_0 = (bytes_0, var_0, var_0)
    int_0 = 175
    module_0.knapsack(int_0, tuple_0)
