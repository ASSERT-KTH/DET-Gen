# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x8f\x0e\xc3\xc6d3j\xfc\x1bII=\xef\xa7\x88i)\x07"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -1958
    float_0 = -99.3
    tuple_0 = (int_0, float_0, float_0, float_0)
    list_0 = []
    var_0 = module_0.knapsack(float_0, list_0)
    assert var_0 == 0
    set_0 = {tuple_0}
    module_0.knapsack(set_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -1142
    bytes_0 = b"\x1f\x00\xbc\x11\x87(\xeb\x85UV\x98v\xe2\xb4d+"
    tuple_0 = (int_0, bytes_0)
    list_0 = [tuple_0, int_0, int_0]
    module_0.knapsack(int_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 405
    bytes_0 = b"\xd4\xe5\xf4\xd2\x04U\xa8\xaf\x97"
    tuple_0 = (int_0, bytes_0)
    list_0 = [tuple_0, int_0, int_0]
    module_0.knapsack(int_0, list_0)
