# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "S95To{U\x0b,Sy~eT6RF$_o"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = "1?HlG!4diBp"
    module_0.knapsack(bytes_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.knapsack(bool_0, bool_0)


def test_case_3():
    str_0 = "\x0br"
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0]
    int_0 = -1964
    var_0 = module_0.knapsack(int_0, list_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "\x0br"
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0]
    int_0 = 20
    module_0.knapsack(int_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    tuple_0 = (list_0, bool_0)
    module_0.knapsack(bool_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    bytes_0 = b"q\xef"
    tuple_0 = (bytes_0, bool_0, bool_0)
    module_0.knapsack(bool_0, tuple_0)
