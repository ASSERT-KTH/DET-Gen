# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import knapsack as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    object_0 = module_0.object()
    list_0 = [none_type_0, object_0, none_type_0, none_type_0]
    module_1.knapsack(none_type_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    str_0 = "X|<0sn=5Xg<:zm[tkT"
    var_0 = module_1.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    module_1.knapsack(bytes_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_1.knapsack(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    var_0 = module_1.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = "}("
    tuple_0 = (str_0, var_0, bytes_0)
    module_1.knapsack(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    float_0 = -1644.7
    dict_0 = {
        bool_0: float_0,
        bool_0: float_0,
        bool_0: bool_0,
        bool_0: float_0,
        float_0: float_0,
        float_0: float_0,
    }
    tuple_0 = (dict_0,)
    var_0 = module_1.knapsack(bool_0, tuple_0)
    assert var_0 == 0
    module_1.knapsack(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    float_0 = 25.1
    dict_0 = {float_0: bool_0, bool_0: bool_0, float_0: float_0}
    tuple_0 = (dict_0,)
    var_0 = module_1.knapsack(bool_0, tuple_0)
    assert var_0 == 0
    object_0 = module_0.object()
    object_1 = module_0.object()
    module_1.knapsack(bool_0, float_0)
