# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x8e?ia\xacY\x16\x94"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = "X>\tNnE\t25"
    module_0.knapsack(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.knapsack(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    set_0 = {bytes_0, bytes_0, var_0}
    tuple_0 = (set_0, var_0)
    module_0.knapsack(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    set_0 = {var_0, var_0, bytes_0}
    tuple_0 = (set_0, bytes_0)
    bool_0 = True
    module_0.knapsack(bool_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xd7\xde"
    str_0 = '\t"(FKnbnWYL\x0cyo'
    bool_0 = False
    tuple_0 = (bool_0, str_0)
    tuple_1 = (str_0, tuple_0)
    list_0 = [bytes_0, tuple_1, tuple_1]
    bool_1 = True
    module_0.knapsack(bool_1, list_0)
