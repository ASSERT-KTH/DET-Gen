# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    complex_0 = 1204.991 - 710.55332j
    list_0 = [complex_0]
    module_0.knapsack(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    tuple_0 = (bytes_0, var_0)
    list_0 = [tuple_0, var_0, bytes_0]
    module_0.knapsack(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "LW3vw@h]"
    none_type_0 = None
    module_0.knapsack(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b'\xc8"'
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0]
    bool_0 = True
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0
    module_0.knapsack(bytes_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    tuple_0 = (var_0, var_0)
    list_0 = [tuple_0, var_0, var_0, var_0, tuple_0, bytes_0, var_0, var_0]
    bool_0 = True
    module_0.knapsack(bool_0, list_0)
