# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\rFO\xcf5\xe1\x94<\x0e^\xb0P\xbc"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {var_0, var_0}
    module_0.knapsack(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {tuple_0, tuple_0, var_0}
    list_0 = [set_0, tuple_0, var_0, set_0, tuple_0, var_0, var_0]
    module_0.knapsack(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {tuple_0, var_0}
    list_0 = [set_0, var_0, var_0, var_0]
    bool_0 = True
    module_0.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 729
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    list_0 = [tuple_0, bool_0, bool_0, bool_0, bool_0, bool_0, tuple_0, bool_0, bool_0]
    module_0.knapsack(int_0, list_0)
