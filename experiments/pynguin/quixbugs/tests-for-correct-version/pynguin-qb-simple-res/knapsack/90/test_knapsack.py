# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "%Cqy2n1;"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = ">@y\\"
    module_0.knapsack(str_0, str_0)


def test_case_2():
    str_0 = "$y"
    list_0 = [str_0, str_0, str_0, str_0]
    bool_0 = False
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "$y"
    list_0 = [str_0, str_0, str_0, str_0]
    bool_0 = True
    module_0.knapsack(bool_0, list_0)


def test_case_4():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_0, bool_1, bool_0, bool_0}
    tuple_0 = (set_0,)
    var_0 = module_0.knapsack(bool_0, tuple_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 906
    tuple_0 = (int_0, int_0)
    tuple_1 = (tuple_0,)
    var_0 = module_0.knapsack(int_0, tuple_1)
    assert var_0 == 906
    none_type_0 = None
    module_0.knapsack(int_0, none_type_0)
