# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"s\x1e"
    module_0.knapsack(bytes_0, bytes_0)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "@3m*x(WJvJI`rr"
    bytes_0 = b"\xf0\xd9"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: bytes_0}
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"^\xf2"
    bool_0 = False
    dict_0 = {bool_0: bytes_0}
    bool_1 = True
    var_0 = module_0.knapsack(bool_1, dict_0)
    assert var_0 == 0
    module_0.knapsack(dict_0, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b".M"
    bool_0 = False
    dict_0 = {bool_0: bytes_0}
    int_0 = 1123
    var_0 = module_0.knapsack(int_0, dict_0)
    assert var_0 == 77
    module_0.knapsack(var_0, var_0)
