# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "m$g\x0cFdVkcyZ"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    str_0 = "m$g\x0cFdVkcyZ"
    module_0.knapsack(str_0, str_0)


def test_case_2():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"s\n"
    tuple_1 = (bytes_0, bytes_0)
    var_1 = module_0.knapsack(var_0, tuple_1)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"(\n"
    tuple_0 = (bytes_0, bytes_0)
    bool_0 = True
    var_0 = module_0.knapsack(bool_0, tuple_0)
    assert var_0 == 0
    module_0.knapsack(bool_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x07\n"
    tuple_0 = (bytes_0, bytes_0)
    bool_0 = True
    var_0 = module_0.knapsack(bool_0, tuple_0)
    assert var_0 == 0
    int_0 = 637
    var_1 = module_0.knapsack(int_0, tuple_0)
    assert var_1 == 20
    module_0.knapsack(var_1, var_1)
