# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "-qq!/C"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = "-qq!/C"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = ";6"
    dict_0 = {str_0: var_0, bytes_0: bytes_0, var_0: str_0}
    module_0.knapsack(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = ";6"
    dict_0 = {str_0: var_0, bytes_0: bytes_0, var_0: str_0}
    bool_0 = True
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = "7"
    int_0 = 2613
    str_1 = "25\tvxP(i8!~gLfUCPn"
    dict_0 = {var_0: var_0, int_0: str_1, var_0: int_0}
    bool_0 = False
    dict_1 = {str_0: str_1, str_1: dict_0, bool_0: dict_0, str_1: int_0}
    module_0.knapsack(int_0, dict_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = "7"
    int_0 = 2613
    int_1 = -676
    str_1 = "25\tvxP(i8!~gLfUCPn"
    dict_0 = {int_0: var_0, int_0: str_1, int_1: int_0}
    bool_0 = False
    var_1 = module_0.knapsack(var_0, bytes_0)
    assert var_1 == 0
    dict_1 = {str_0: int_1, int_1: dict_0, bool_0: dict_0, str_1: int_0}
    module_0.knapsack(int_0, dict_1)
