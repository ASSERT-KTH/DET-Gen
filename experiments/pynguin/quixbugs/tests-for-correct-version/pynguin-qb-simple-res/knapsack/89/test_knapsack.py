# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xbd2(\xd1h\xdc@g\x17\xb9\xf1"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"\xd3\xa2!\tl\xcf\xac\nR \xae\x8e"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    tuple_0 = (list_0, bool_0)
    module_0.knapsack(bool_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 678
    bool_0 = False
    dict_0 = {int_0: int_0, bool_0: bool_0, int_0: int_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 0
    tuple_1 = ()
    var_1 = module_0.knapsack(tuple_1, tuple_1)
    assert var_1 == 0
    bool_1 = True
    list_0 = [bool_1, bool_1]
    module_0.knapsack(list_0, var_1)
