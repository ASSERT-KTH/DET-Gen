# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1926
    set_0 = {int_0, int_0}
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    module_0.knapsack(int_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = -3433.21
    module_0.knapsack(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1076
    str_0 = "\x0c1"
    bytes_0 = b"\r\xc3\xa1\xa2\xc9Pc\x9b\xaa\xbf\xfb\xc0"
    tuple_0 = (str_0, str_0, bytes_0)
    module_0.knapsack(int_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    str_0 = "\x0c1"
    bytes_1 = b"\xf1\t\x05\xf9\xa4H\xec~"
    tuple_0 = (str_0, str_0, bytes_1)
    module_0.knapsack(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1076
    bytes_0 = b"\x16("
    tuple_0 = (bytes_0,)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 40
    bytes_1 = b"\xf1\t\x05\xf9\xa4H\xec~"
    tuple_1 = (bytes_1, bytes_1, bytes_1)
    module_0.knapsack(int_0, tuple_1)
