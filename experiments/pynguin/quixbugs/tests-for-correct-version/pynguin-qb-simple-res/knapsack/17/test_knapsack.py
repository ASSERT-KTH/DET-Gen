# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xc4\xb8\xc0$\x80dd\x07\x8b-\rw,<\\\xb0"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"\xc4\xb8\xc0$\x80dd\x07\x8b-\rw,<\\\xb0"
    module_0.knapsack(var_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.knapsack(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"\x8d="
    bytes_1 = b"\xb6,\x037\x0eL\x80G\xa4\xdf\xae"
    tuple_1 = (bytes_0, bytes_1, var_0)
    module_0.knapsack(var_0, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"\x8d="
    bytes_1 = b"\xb6,\x037\x0eL\x80G\xa4\xdf\xae"
    tuple_1 = (bytes_0, bytes_1, var_0)
    int_0 = 1190
    module_0.knapsack(int_0, tuple_1)
