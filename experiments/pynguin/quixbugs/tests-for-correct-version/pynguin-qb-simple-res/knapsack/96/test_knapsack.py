# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    set_0 = {var_0, str_0}
    module_0.knapsack(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    module_0.knapsack(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    set_0 = {str_0, str_0, var_0, var_0, str_0}
    list_0 = [set_0, var_0]
    module_0.knapsack(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    set_0 = {str_0, str_0, var_0, var_0, str_0}
    list_0 = [set_0, var_0]
    int_0 = 4313
    module_0.knapsack(int_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    bytes_0 = b",$\xc0"
    tuple_0 = (bool_0, bytes_0)
    list_0 = [tuple_0]
    module_0.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    bytes_0 = b",2"
    list_0 = [bytes_0]
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0
    int_0 = -4282
    list_1 = [var_0, int_0, bytes_0, var_0]
    module_1.object(*list_1)
