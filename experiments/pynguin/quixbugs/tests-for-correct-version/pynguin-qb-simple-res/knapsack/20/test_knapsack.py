# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 460
    dict_0 = {int_0: int_0}
    module_0.knapsack(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    bytes_0 = b"rZ\xae\x08A"
    var_0 = module_0.knapsack(bytes_0, set_0)
    assert var_0 == 0
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.knapsack(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 460
    str_0 = "sq"
    tuple_0 = (str_0, int_0)
    module_0.knapsack(int_0, tuple_0)


def test_case_4():
    int_0 = -3631
    str_0 = "sq"
    tuple_0 = (str_0, str_0)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -3568
    str_0 = "QU"
    tuple_0 = (str_0, str_0)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 0
    int_1 = 477
    set_0 = {var_0, int_1}
    dict_0 = {str_0: int_1, int_1: var_0, var_0: set_0}
    module_0.knapsack(int_1, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -3568
    str_0 = "QU"
    tuple_0 = (str_0, str_0)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 0
    int_1 = 477
    bytes_0 = b"Vib\x96"
    set_0 = {str_0, int_1}
    dict_0 = {str_0: int_1, int_1: bytes_0, var_0: set_0}
    module_0.knapsack(int_1, dict_0)
