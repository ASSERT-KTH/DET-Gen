# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "1P\x0c~@aOU,\r:o5"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"\x92I\xe9\xc5\x80IB5U\xdc\r\xfd\xbd\xce\x8d\\\x99"
    module_0.knapsack(var_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    tuple_1 = (var_0, var_0)
    tuple_2 = (tuple_1, var_0, tuple_0)
    module_0.knapsack(var_0, tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    tuple_1 = (var_0, var_0)
    tuple_2 = (tuple_1, var_0, tuple_0)
    bool_0 = True
    module_0.knapsack(bool_0, tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bool_0 = True
    bytes_0 = b"\x92I\xe9\xc5\x80IB5U\xdc\r\xfd\xbd\xce\x8d\\\x99"
    bytes_1 = b"m\xd9"
    tuple_1 = (bytes_1, bytes_0)
    module_0.knapsack(bool_0, tuple_1)
