# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = -255.113974
    set_0 = {float_0, float_0, float_0, float_0}
    module_0.knapsack(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    list_0 = [var_0, var_0, var_0]
    module_0.knapsack(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    dict_0 = {var_0: list_0, var_0: list_0}
    var_1 = module_0.knapsack(var_0, dict_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    list_0 = [tuple_0, tuple_0]
    bool_0 = True
    dict_0 = {var_0: list_0, bool_0: var_0}
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    list_0 = [var_0, tuple_0]
    dict_0 = {var_0: list_0, var_0: list_0}
    int_0 = 742
    module_0.knapsack(int_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = 329.0
    bool_0 = True
    set_0 = {float_0, bool_0, float_0, float_0}
    list_0 = [set_0, set_0, set_0]
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0
    module_0.knapsack(list_0, float_0)
