# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import knapsack as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    tuple_0 = (object_0, object_0)
    list_0 = [tuple_0]
    bool_0 = True
    set_0 = {bool_0}
    module_1.knapsack(list_0, set_0)


def test_case_1():
    set_0 = set()
    bool_0 = True
    var_0 = module_1.knapsack(bool_0, set_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    tuple_0 = (bool_0,)
    module_1.knapsack(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_0.object()
    tuple_0 = (object_0, object_0)
    list_0 = [tuple_0]
    bool_0 = True
    module_1.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    object_0 = module_0.object()
    tuple_0 = (object_0, object_0)
    list_0 = [tuple_0]
    bool_0 = False
    var_0 = module_1.knapsack(bool_0, list_0)
    assert var_0 == 0
    module_1.knapsack(list_0, var_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    tuple_1 = (var_0, var_0)
    list_0 = [tuple_1]
    bool_0 = True
    var_1 = module_1.knapsack(bool_0, list_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_6():
    tuple_0 = ()
    tuple_1 = (tuple_0, tuple_0)
    list_0 = [tuple_1, tuple_0]
    bool_0 = True
    int_0 = 3241
    tuple_2 = (int_0, list_0)
    list_1 = [tuple_2, tuple_2, list_0]
    module_1.knapsack(bool_0, list_1)
