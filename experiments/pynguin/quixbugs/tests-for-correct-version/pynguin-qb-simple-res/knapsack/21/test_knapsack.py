# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xe7g?\xbb\x16W\xccB\x18\x96F\xa0\x88\xba"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    module_0.knapsack(list_0, list_0)


def test_case_2():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    tuple_1 = (var_0, tuple_0)
    dict_0 = {tuple_0: tuple_0, var_0: tuple_0, tuple_0: tuple_1}
    dict_1 = {var_0: var_0, var_0: dict_0}
    var_1 = module_0.knapsack(var_0, dict_1)
    assert var_1 == 0
    object_0 = module_1.object()
    object_1 = module_1.object()
    var_2 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    dict_0 = {
        var_0: tuple_0,
        tuple_0: tuple_0,
        var_0: tuple_0,
        var_0: tuple_0,
        tuple_0: var_0,
    }
    dict_1 = {var_0: var_0, var_0: dict_0}
    bool_0 = True
    module_0.knapsack(bool_0, dict_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1627
    list_0 = [int_0, int_0]
    list_1 = [list_0, list_0, int_0]
    module_0.knapsack(int_0, list_1)
