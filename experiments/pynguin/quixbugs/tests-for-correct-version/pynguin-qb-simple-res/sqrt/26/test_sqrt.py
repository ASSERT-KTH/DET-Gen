# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1649
    var_0 = module_0.sqrt(int_0, int_0)
    assert var_0 == pytest.approx(44.226343265036796, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(int_0, int_0)
    assert var_1 == pytest.approx(44.226343265036796, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(int_0, var_0)
    assert var_2 == pytest.approx(40.75590668883967, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(var_1, var_2)
    assert var_3 == pytest.approx(7.862408467005077, abs=0.01, rel=0.01)
    var_4 = module_0.sqrt(var_2, int_0)
    assert var_4 == pytest.approx(20.377953344419836, abs=0.01, rel=0.01)
    var_5 = module_0.sqrt(var_0, int_0)
    assert var_5 == pytest.approx(22.113171632518398, abs=0.01, rel=0.01)
    var_6 = module_0.sqrt(int_0, var_1)
    assert var_6 == pytest.approx(40.75590668883967, abs=0.01, rel=0.01)
    str_0 = "awd|U,QfWJ`fK<~0Q;e"
    var_7 = module_0.sqrt(var_1, int_0)
    assert var_7 == pytest.approx(22.113171632518398, abs=0.01, rel=0.01)
    list_0 = [int_0, var_0, str_0]
    module_0.sqrt(list_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(var_0, bool_0)
    assert var_1 == pytest.approx(0.0, abs=0.01, rel=0.01)
    list_0 = [bool_0]
    var_2 = module_0.sqrt(bool_0, var_0)
    assert var_2 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(var_1, var_1)
    assert var_3 == pytest.approx(0.0, abs=0.01, rel=0.01)
    module_0.sqrt(list_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x80\xb6/ \xb8"
    float_0 = 3415.4
    module_0.sqrt(bytes_0, float_0)
