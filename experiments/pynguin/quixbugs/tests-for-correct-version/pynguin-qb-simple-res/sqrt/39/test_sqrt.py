# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 1227.60486
    var_0 = module_0.sqrt(float_0, float_0)
    assert var_0 == pytest.approx(48.44784280743989, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(float_0, var_0)
    assert var_1 == pytest.approx(35.08388139493767, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(var_0, var_0)
    assert var_2 == pytest.approx(8.403447862046283, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(float_0, float_0)
    assert var_3 == pytest.approx(48.44784280743989, abs=0.01, rel=0.01)
    var_4 = module_0.sqrt(var_1, var_0)
    assert var_4 == pytest.approx(6.680797213129147, abs=0.01, rel=0.01)
    var_5 = module_0.sqrt(var_1, float_0)
    assert var_5 == pytest.approx(17.541940697468835, abs=0.01, rel=0.01)
    var_6 = module_0.sqrt(float_0, float_0)
    assert var_6 == pytest.approx(48.44784280743989, abs=0.01, rel=0.01)
    str_0 = "vh/"
    var_7 = module_0.sqrt(var_3, float_0)
    assert var_7 == pytest.approx(24.223921403719945, abs=0.01, rel=0.01)
    var_8 = module_0.sqrt(var_5, var_1)
    assert var_8 == pytest.approx(5.385485174367209, abs=0.01, rel=0.01)
    var_9 = module_0.sqrt(var_0, var_8)
    assert var_9 == pytest.approx(7.084340899842092, abs=0.01, rel=0.01)
    module_0.sqrt(var_3, str_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.sqrt(none_type_0, none_type_0)
