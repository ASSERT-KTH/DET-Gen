# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    int_0 = 4743
    var_1 = module_0.sqrt(int_0, int_0)
    assert var_1 == pytest.approx(94.29173838947756, abs=0.01, rel=0.01)
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_2 = module_0.sqrt(int_0, var_1)
    assert var_2 == pytest.approx(68.95066944062842, abs=0.01, rel=0.01)
    module_0.sqrt(var_2, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(bool_0, bool_0)
    assert var_1 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(var_1, var_1)
    assert var_2 == pytest.approx(0.0, abs=0.01, rel=0.01)
    none_type_0 = None
    var_3 = module_0.sqrt(var_1, var_2)
    assert var_3 == pytest.approx(0.0, abs=0.01, rel=0.01)
    module_0.sqrt(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "(d%w-aq,v"
    int_0 = -910
    module_0.sqrt(str_0, int_0)
