# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1729
    var_0 = module_0.sqrt(int_0, int_0)
    assert var_0 == pytest.approx(45.58456640830795, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(var_0, var_0)
    assert var_1 == pytest.approx(8.036730275558783, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(var_1, var_1)
    assert var_2 == pytest.approx(3.009182568889696, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(int_0, var_0)
    assert var_3 == pytest.approx(41.75703527081928, abs=0.01, rel=0.01)
    var_4 = module_0.sqrt(int_0, int_0)
    assert var_4 == pytest.approx(45.58456640830795, abs=0.01, rel=0.01)
    none_type_0 = None
    module_0.sqrt(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(bool_0, bool_0)
    assert var_1 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(var_0, bool_0)
    assert var_2 == pytest.approx(0.0, abs=0.01, rel=0.01)
    bytes_0 = b"\x01k\xe6kb=\r\xc6\xd2*\x16t"
    module_0.sqrt(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    none_type_0 = None
    module_0.sqrt(object_0, none_type_0)
