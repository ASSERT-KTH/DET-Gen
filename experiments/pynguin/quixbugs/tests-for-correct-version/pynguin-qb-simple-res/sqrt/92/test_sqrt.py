# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = 164.76 + 2247.073846j
    dict_0 = {}
    module_0.sqrt(complex_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 3222.85673
    var_0 = module_0.sqrt(float_0, float_0)
    assert var_0 == pytest.approx(70.06320745788624, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(float_0, float_0)
    assert var_1 == pytest.approx(70.06320745788624, abs=0.01, rel=0.01)
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    module_0.sqrt(dict_0, dict_0)
