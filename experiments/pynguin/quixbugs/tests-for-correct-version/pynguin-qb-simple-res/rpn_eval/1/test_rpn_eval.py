# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import rpn_eval as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "3`1l*V=w X"
    module_0.rpn_eval(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    module_0.rpn_eval(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.rpn_eval(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -730.313
    str_0 = ""
    tuple_0 = (float_0, float_0, str_0)
    module_0.rpn_eval(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -732.5991146223349
    str_0 = "+"
    tuple_0 = (float_0, float_0, str_0)
    var_0 = module_0.rpn_eval(tuple_0)
    assert var_0 == pytest.approx(-1465.1982292446698, abs=0.01, rel=0.01)
    str_1 = "V!Q6"
    module_0.rpn_eval(str_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = -730.313
    str_0 = "*"
    tuple_0 = (float_0, float_0, str_0)
    var_0 = module_0.rpn_eval(tuple_0)
    assert var_0 == pytest.approx(533357.077969, abs=0.01, rel=0.01)
    str_1 = "V!Q6"
    module_0.rpn_eval(str_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = -730.313
    str_0 = "/"
    tuple_0 = (float_0, float_0, str_0)
    var_0 = module_0.rpn_eval(tuple_0)
    assert var_0 == pytest.approx(1.0, abs=0.01, rel=0.01)
    str_1 = "V!Q6"
    module_0.rpn_eval(str_1)
