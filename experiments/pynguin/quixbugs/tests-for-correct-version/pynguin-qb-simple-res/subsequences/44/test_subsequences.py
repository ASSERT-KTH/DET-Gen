# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import subsequences as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"Y\xcc\xc0\xe5y\xb0\x0c@>\xb4lG\x86"
    bytes_1 = b"\xe1\xbd\xa6B\xef\x8e\x19\xef\x01Z\xfe\xfbp\x11\xe4\xbdb\x8e\x80"
    none_type_0 = None
    bool_0 = False
    var_0 = module_0.subsequences(none_type_0, bytes_1, bool_0)
    module_0.subsequences(bool_0, bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"(-\x94\x8b\x12=\xa8\xcb\x07\x85"
    module_0.subsequences(bytes_0, bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_1.object()
    bool_1 = True
    var_1 = module_0.subsequences(var_0, var_0, bool_0)
    var_2 = module_0.subsequences(bool_0, bool_1, bool_1)
    module_0.subsequences(bool_1, var_0, bool_1)


def test_case_3():
    bool_0 = True
    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)
