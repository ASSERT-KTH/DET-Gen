# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import subsequences as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)
    var_1 = module_0.subsequences(var_0, var_0, bool_0)
    bool_1 = True
    list_0 = [var_0, bool_1, bool_0, var_0]
    none_type_0 = None
    module_0.subsequences(bool_0, list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xd4"
    module_0.subsequences(bytes_0, bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    int_0 = 462
    var_0 = module_0.subsequences(bool_0, int_0, int_0)
    complex_0 = 251.60549 - 1380.9j
    module_0.subsequences(var_0, var_0, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -1765
    module_0.subsequences(int_0, int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)
    none_type_0 = None
    module_0.subsequences(none_type_0, none_type_0, none_type_0)
