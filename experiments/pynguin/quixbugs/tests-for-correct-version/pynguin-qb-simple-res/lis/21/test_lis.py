# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lis as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    bool_0 = True
    tuple_0 = (dict_0, dict_0, bool_0)
    module_0.lis(tuple_0)


def test_case_1():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    var_0 = module_0.lis(set_0)
    assert var_0 == 1
    var_1 = module_0.lis(set_0)
    assert var_1 == 1
    var_2 = module_0.lis(set_0)
    assert var_2 == 1


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    module_0.lis(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x9eQ\xcc&D\xde$='\xa0<>\xe1\x93e\\%\xc4\n"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 6
    var_1 = module_0.lis(bytes_0)
    assert var_1 == 6
    var_2 = module_0.lis(bytes_0)
    assert var_2 == 6
    module_0.lis(var_2)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xe4\xc1\x1a\xc9\x9b\xbbJ\xce\x8f\xeb\xac\x1bTT\xd8\x87"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 5
    bytes_1 = b"\x94\x8b\xeaq\xf6{\xa0$C"
    var_1 = module_0.lis(bytes_1)
    assert var_1 == 3
    module_0.lis(var_1)
