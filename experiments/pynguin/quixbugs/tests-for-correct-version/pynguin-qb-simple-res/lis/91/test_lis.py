# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lis as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "{:d}"
    set_0 = {str_0, str_0, str_0}
    var_0 = module_0.lis(set_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.lis(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"/\xfe#\x01\xc5\x8b\xea.\x9c\x99JV\x99\xfc\x9f\xea\xc1\x08\xcaT"
    bytes_1 = b"\xa8u"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 8
    var_1 = module_0.lis(bytes_1)
    assert var_1 == 1
    var_2 = module_0.lis(bytes_0)
    assert var_2 == 8
    var_3 = module_0.lis(bytes_0)
    assert var_3 == 8
    var_4 = module_0.lis(bytes_0)
    assert var_4 == 8
    var_5 = module_0.lis(bytes_0)
    assert var_5 == 8
    module_0.lis(var_4)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.lis(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    var_0 = module_0.lis(list_0)
    assert var_0 == 0
    var_1 = module_0.lis(list_0)
    assert var_1 == 0
    list_1 = [list_0, list_0]
    var_2 = module_0.lis(list_1)
    assert var_2 == 1
    var_3 = module_0.lis(list_1)
    assert var_3 == 1
    var_4 = module_0.lis(list_0)
    assert var_4 == 0
    none_type_0 = None
    module_0.lis(none_type_0)
