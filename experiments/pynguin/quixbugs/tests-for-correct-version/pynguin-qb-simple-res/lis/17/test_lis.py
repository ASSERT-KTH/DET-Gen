# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lis as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "e9dd_^\tO.x"
    str_1 = "R[z%a3B^W1ah;~B"
    set_0 = {str_0, str_0}
    tuple_0 = (str_1, set_0)
    module_0.lis(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.lis(dict_0)
    assert var_0 == 0
    complex_0 = -1486.557319 + 1351j
    module_0.lis(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.lis(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "7U{XD{k\t"
    set_0 = {str_0}
    var_0 = module_0.lis(set_0)
    assert var_0 == 1
    var_1 = module_0.lis(str_0)
    assert var_1 == 4
    module_0.lis(var_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xaf\x8d"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 1
    bool_0 = True
    module_0.lis(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 4000
    list_0 = [int_0, int_0]
    var_0 = module_0.lis(list_0)
    assert var_0 == 1
    module_0.lis(var_0)
