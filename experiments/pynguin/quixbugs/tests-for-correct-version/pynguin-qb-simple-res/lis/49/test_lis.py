# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lis as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"`U^\xd73\x04xK\xc6q\xe7\x08\x1d"
    str_0 = "4xNq'e\"tMj)f3NM`4P"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 5
    dict_0 = {bytes_0: bytes_0, bytes_0: str_0}
    var_1 = module_0.lis(dict_0)
    assert var_1 == 1
    int_0 = -2636
    module_0.lis(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.lis(list_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.lis(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.lis(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.lis(list_0)
    assert var_0 == 1
    bool_1 = False
    set_0 = {bool_1}
    var_1 = module_0.lis(set_0)
    assert var_1 == 1
    tuple_0 = (set_0,)
    list_1 = [set_0]
    tuple_1 = (bool_1, tuple_0, list_1)
    var_2 = module_0.lis(list_1)
    assert var_2 == 1
    module_0.lis(tuple_1)
