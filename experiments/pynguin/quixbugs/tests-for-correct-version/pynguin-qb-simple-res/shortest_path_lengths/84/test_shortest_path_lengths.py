# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0
import node as module_1
import collections as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -519.731326
    module_0.shortest_path_lengths(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    var_0 = module_1.Node(bool_0, incoming_nodes=bool_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is True
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors == []
    assert var_0.incoming_nodes is True
    assert var_0.outgoing_nodes == []
    defaultdict_0 = module_2.defaultdict()
    assert (
        f"{type(defaultdict_0).__module__}.{type(defaultdict_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(defaultdict_0) == 0
    assert (
        f"{type(module_2.defaultdict.default_factory).__module__}.{type(module_2.defaultdict.default_factory).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_1 = module_0.shortest_path_lengths(bool_0, defaultdict_0)
    assert (
        f"{type(var_1).__module__}.{type(var_1).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_1) == 1
    bool_1 = False
    module_0.shortest_path_lengths(bool_1, bool_1)
