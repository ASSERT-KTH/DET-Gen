# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0
import collections as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1487
    module_0.shortest_path_lengths(int_0, int_0)


def test_case_1():
    int_0 = -1235
    str_0 = "z >jB#>>"
    dict_0 = {str_0: int_0, str_0: str_0, str_0: str_0}
    defaultdict_0 = module_1.defaultdict(**dict_0)
    assert (
        f"{type(defaultdict_0).__module__}.{type(defaultdict_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(defaultdict_0) == 1
    assert (
        f"{type(module_1.defaultdict.default_factory).__module__}.{type(module_1.defaultdict.default_factory).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = module_0.shortest_path_lengths(int_0, defaultdict_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 1


def test_case_2():
    int_0 = 99
    str_0 = "z >jB#>>"
    dict_0 = {str_0: int_0, str_0: str_0, str_0: str_0}
    defaultdict_0 = module_1.defaultdict(**dict_0)
    assert (
        f"{type(defaultdict_0).__module__}.{type(defaultdict_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(defaultdict_0) == 1
    assert (
        f"{type(module_1.defaultdict.default_factory).__module__}.{type(module_1.defaultdict.default_factory).__qualname__}"
        == "builtins.member_descriptor"
    )
    tuple_0 = ()
    var_0 = module_0.shortest_path_lengths(int_0, tuple_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 9801
