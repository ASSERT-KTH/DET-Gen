# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0
import collections as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 233
    module_0.shortest_path_lengths(int_0, int_0)


def test_case_1():
    int_0 = -127
    set_0 = set()
    var_0 = module_0.shortest_path_lengths(int_0, set_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 0
    assert (
        f"{type(module_1.defaultdict.default_factory).__module__}.{type(module_1.defaultdict.default_factory).__qualname__}"
        == "builtins.member_descriptor"
    )


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 46
    set_0 = set()
    var_0 = module_0.shortest_path_lengths(int_0, set_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 2116
    assert (
        f"{type(module_1.defaultdict.default_factory).__module__}.{type(module_1.defaultdict.default_factory).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_1 = module_0.shortest_path_lengths(int_0, set_0)
    assert (
        f"{type(var_1).__module__}.{type(var_1).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_1) == 2116
    module_0.shortest_path_lengths(var_1, set_0)
