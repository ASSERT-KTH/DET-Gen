# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import collections as module_0
import shortest_path_lengths as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    defaultdict_0 = module_0.defaultdict()
    assert (
        f"{type(defaultdict_0).__module__}.{type(defaultdict_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(defaultdict_0) == 0
    assert (
        f"{type(module_0.defaultdict.default_factory).__module__}.{type(module_0.defaultdict.default_factory).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_0 = 51
    var_0 = module_1.shortest_path_lengths(int_0, defaultdict_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 2601
    var_0.successor()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    none_type_0 = None
    module_1.shortest_path_lengths(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    tuple_0 = (bool_0,)
    module_1.shortest_path_lengths(tuple_0, bool_0)
