# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import collections as module_0
import shortest_path_lengths as module_1


def test_case_0():
    int_0 = 71
    str_0 = "t;&x["
    set_0 = set()
    str_1 = "E1+\x0bLOitV`e!\t*\x0c\x0bUk"
    dict_0 = {str_0: str_0, str_0: set_0, str_1: set_0}
    defaultdict_0 = module_0.defaultdict(**dict_0)
    assert (
        f"{type(defaultdict_0).__module__}.{type(defaultdict_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(defaultdict_0) == 2
    assert (
        f"{type(module_0.defaultdict.default_factory).__module__}.{type(module_0.defaultdict.default_factory).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = module_1.shortest_path_lengths(int_0, defaultdict_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 5043


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    module_1.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2383
    module_1.shortest_path_lengths(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    module_1.shortest_path_lengths(list_0, list_0)
