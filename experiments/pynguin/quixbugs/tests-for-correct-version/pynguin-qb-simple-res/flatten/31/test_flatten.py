# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xf5\xb2W\x88\xd7\x0b3k&xI\xc2\x04"
    var_0 = module_0.flatten(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"a,\xce\x04\xdb.\x86\xcd\xac"
    var_0 = module_0.flatten(bytes_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.flatten(bool_0)
    var_1 = module_0.flatten(bool_0)
    int_0 = -702
    dict_0 = {var_1: var_1}
    list_0 = []
    list_1 = [int_0, bool_0, dict_0, list_0]
    var_2 = module_0.flatten(list_1)
    bool_1 = True
    tuple_0 = (var_1, bool_1)
    var_3 = module_0.flatten(tuple_0)
    var_4 = module_0.flatten(var_3)
    var_5 = module_0.flatten(var_2)
    var_6 = module_0.flatten(var_4)
    var_7 = module_0.flatten(int_0)
    module_1.object(*var_2)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    var_0 = module_0.flatten(bool_0)
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = False
    var_1 = module_0.flatten(bool_1)
    var_2 = module_0.flatten(var_1)
    var_3 = module_0.flatten(set_0)
    var_4 = module_0.flatten(var_1)
    var_5 = module_0.flatten(var_4)
    int_0 = -702
    dict_0 = {var_5: var_1}
    list_0 = [var_0, bool_0, int_0]
    list_1 = [set_0, bool_0, dict_0, list_0]
    var_6 = module_0.flatten(list_1)
    bool_2 = True
    tuple_0 = (var_5, bool_2)
    var_7 = module_0.flatten(tuple_0)
    var_8 = module_0.flatten(dict_0)
    var_9 = module_0.flatten(var_7)
    var_10 = module_0.flatten(var_6)
    var_11 = module_0.flatten(tuple_0)
    var_12 = module_0.flatten(var_9)
    var_13 = module_0.flatten(tuple_0)
    var_14 = module_0.flatten(int_0)
    var_15 = module_0.flatten(var_14)
    module_1.object(*var_6)
