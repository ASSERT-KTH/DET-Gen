# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.flatten(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "p#3c1eYK^l[)7;b]G0"
    var_0 = module_0.flatten(str_0)
    module_1.object(*var_0)


def test_case_2():
    list_0 = []
    var_0 = module_0.flatten(list_0)
    int_0 = 448
    var_1 = module_0.flatten(var_0)
    list_1 = [list_0, list_0]
    var_2 = module_0.flatten(int_0)
    var_3 = module_0.flatten(list_1)
    var_4 = module_0.flatten(var_3)
    object_0 = module_1.object(*var_4)
    var_5 = module_0.flatten(var_1)
    object_1 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -2640
    var_0 = module_0.flatten(int_0)
    list_0 = [var_0, int_0, var_0]
    var_1 = module_0.flatten(int_0)
    bool_0 = False
    var_2 = module_0.flatten(var_0)
    var_3 = module_0.flatten(list_0)
    var_4 = module_0.flatten(var_0)
    var_5 = module_0.flatten(var_4)
    int_1 = 448
    var_6 = module_0.flatten(var_3)
    var_7 = module_0.flatten(int_1)
    var_8 = module_0.flatten(bool_0)
    list_1 = [list_0, list_0]
    var_9 = module_0.flatten(int_1)
    var_10 = module_0.flatten(list_0)
    var_11 = module_0.flatten(var_9)
    var_12 = module_0.flatten(list_1)
    var_13 = module_0.flatten(var_12)
    module_1.object(*var_13)
