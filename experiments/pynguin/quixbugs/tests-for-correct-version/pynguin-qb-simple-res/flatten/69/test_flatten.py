# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


def test_case_0():
    int_0 = 1887
    var_0 = module_0.flatten(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xd2SH\xba\xa4\xedi\xc9N\xc3\xe5\xc3\x86\x13j\x8c!{\x0c"
    var_0 = module_0.flatten(bytes_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_0.flatten(none_type_0)
    list_0 = []
    var_1 = module_0.flatten(list_0)
    list_1 = [var_1, list_0, list_0, var_1]
    var_2 = module_0.flatten(list_1)
    none_type_1 = None
    var_3 = module_0.flatten(var_2)
    var_4 = module_0.flatten(none_type_1)
    var_5 = module_0.flatten(var_0)
    module_1.object(*var_2)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.flatten(none_type_0)
    list_0 = [none_type_0]
    var_1 = module_0.flatten(list_0)
    var_2 = module_0.flatten(var_1)
    var_3 = module_0.flatten(var_1)
    list_1 = [var_1, list_0, list_0, var_1]
    var_4 = module_0.flatten(list_1)
    none_type_1 = None
    var_5 = module_0.flatten(var_4)
    var_6 = module_0.flatten(none_type_1)
    var_7 = module_0.flatten(none_type_1)
    var_8 = module_0.flatten(var_0)
    var_9 = module_0.flatten(none_type_1)
    var_10 = module_0.flatten(var_9)
    module_1.object(*var_4)
