# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    str_0 = "CMUd:G}WxF-O`9"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.is_valid_parenthesization(dict_0)
    assert var_0 is True
    bytes_0 = b"\x0c\x7f\xe8C\xf3\x1b\xd3\xbd\x82"
    var_1 = module_0.is_valid_parenthesization(bytes_0)
    assert var_1 is False
    none_type_0 = None
    module_0.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "y\r.>'m!XA&lda<|WD@Y"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    str_1 = "(qARDby_LV XH"
    var_1 = module_0.is_valid_parenthesization(str_1)
    assert var_1 is False
    bool_0 = True
    module_1.object(*bool_0)
