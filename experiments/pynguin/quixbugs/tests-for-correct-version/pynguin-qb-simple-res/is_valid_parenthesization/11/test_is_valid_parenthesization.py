# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"B\x06\xe2\xec\x96\xa2:,[\x12\xb9\xa8R\xb6:\xc4}\xf8\xa3"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.is_valid_parenthesization(dict_0)
    assert var_0 is True
    module_0.is_valid_parenthesization(var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 168
    module_0.is_valid_parenthesization(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(jj(0&B ,qVV7"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    module_1.object(*var_0, **str_0)
