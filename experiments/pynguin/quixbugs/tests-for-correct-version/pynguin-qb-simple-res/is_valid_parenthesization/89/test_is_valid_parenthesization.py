# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0


def test_case_0():
    str_0 = "bGik}x7Tl@]RQxV"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.is_valid_parenthesization(set_0)
    assert var_0 is True
    none_type_0 = None
    module_0.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -580
    module_0.is_valid_parenthesization(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(i'\"UuIA?*"
    list_0 = [str_0]
    var_0 = module_0.is_valid_parenthesization(list_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is False
    str_1 = "D~R?."
    var_2 = module_0.is_valid_parenthesization(str_1)
    assert var_2 is False
    var_3 = module_0.is_valid_parenthesization(str_1)
    assert var_3 is False
    bytes_0 = b"\x11\xc5\xb2\x1eIT\x8e!>|"
    var_4 = module_0.is_valid_parenthesization(bytes_0)
    assert var_4 is False
    module_0.is_valid_parenthesization(var_2)
