# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0


def test_case_0():
    bytes_0 = b"\x94X\x82\xadI\x85o\xc4!\xa8\x8a\xe4\xc0N7P\x96\x11d"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.is_valid_parenthesization(dict_0)
    assert var_0 is True
    none_type_0 = None
    module_0.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "(`ls,,=NSi?0dOlk'OP"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    str_1 = "Q{XC(&%$\nF0GESrK"
    var_1 = module_0.is_valid_parenthesization(str_1)
    assert var_1 is False
    module_0.is_valid_parenthesization(var_1)
