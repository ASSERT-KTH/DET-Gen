# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"nO7\xc3h\xf7\x1a,\xbe\xc5T\x1bY\x9e\xc1\x8e}D"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.is_valid_parenthesization(tuple_0)
    assert var_0 is True
    var_1 = module_0.is_valid_parenthesization(tuple_0)
    assert var_1 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    dict_0 = {}
    var_0 = module_0.is_valid_parenthesization(dict_0)
    assert var_0 is True
    str_0 = "(Lxk}[Xn[|"
    var_1 = module_1.object()
    list_0 = [str_0]
    var_2 = module_0.is_valid_parenthesization(list_0)
    assert var_2 is False
    var_3 = module_0.is_valid_parenthesization(str_0)
    assert var_3 is False
    object_0 = module_1.object()
    module_0.is_valid_parenthesization(var_2)
