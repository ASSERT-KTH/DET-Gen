# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import is_valid_parenthesization as module_1


def test_case_0():
    str_0 = "hRN5@"
    object_0 = module_0.object()
    list_0 = [str_0, object_0]
    var_0 = module_1.is_valid_parenthesization(list_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_1.is_valid_parenthesization(tuple_0)
    assert var_0 is True
    var_1 = module_1.is_valid_parenthesization(tuple_0)
    assert var_1 is True
    module_1.is_valid_parenthesization(var_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_1.is_valid_parenthesization(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(!>KrB,pwpa5g*\n\r1-d3"
    var_0 = module_1.is_valid_parenthesization(str_0)
    assert var_0 is False
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    tuple_0 = (dict_0, bool_0, bool_0)
    var_1 = module_1.is_valid_parenthesization(tuple_0)
    assert var_1 is False
    complex_0 = -911.436 + 1482.2j
    module_1.is_valid_parenthesization(complex_0)
