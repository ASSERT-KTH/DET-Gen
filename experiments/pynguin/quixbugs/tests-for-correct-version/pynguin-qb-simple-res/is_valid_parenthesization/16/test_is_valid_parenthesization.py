# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x0b \x1b\xd5\x08-"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xc8\xc0\x02\xff\x9c:\xa4\x1b/\x87A\xf8F"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(bytes_0)
    assert var_1 is False
    str_0 = ""
    var_2 = module_0.is_valid_parenthesization(str_0)
    assert var_2 is True
    module_0.is_valid_parenthesization(var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "((="
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is False
    var_2 = module_1.object()
    module_0.is_valid_parenthesization(var_0)
