# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x84\xd2\x19\x9b\xac\x1d\x99T\xb1\xcc\xc0\xb4\xc4\xd8\xb5\xff"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.is_valid_parenthesization(set_0)
    assert var_0 is True
    module_0.is_valid_parenthesization(var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "(wGiY8Yf8!p"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    list_0 = [object_0]
    int_0 = -4252
    tuple_0 = (list_0, int_0)
    var_1 = module_0.is_valid_parenthesization(tuple_0)
    assert var_1 is False
    module_0.is_valid_parenthesization(int_0)
