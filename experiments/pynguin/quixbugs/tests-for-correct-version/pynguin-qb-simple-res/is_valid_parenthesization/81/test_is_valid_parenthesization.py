# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0


def test_case_0():
    str_0 = "Jvc($"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is False


def test_case_1():
    str_0 = "S G~7epm&\\ql"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.is_valid_parenthesization(dict_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(dict_0)
    assert var_1 is False
    list_0 = []
    var_2 = module_0.is_valid_parenthesization(str_0)
    assert var_2 is False
    var_3 = module_0.is_valid_parenthesization(list_0)
    assert var_3 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(D)ux~%tDiVIf1o]"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    float_0 = -2868.1
    module_0.is_valid_parenthesization(float_0)
