# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import to_base as module_0
import enum as module_1
import re as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 1570.49
    module_0.to_base(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    none_type_0 = None
    var_0 = module_0.to_base(bool_0, none_type_0)
    assert var_0 == ""
    bool_1 = False
    none_type_1 = None
    module_0.to_base(none_type_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    enum_dict_0 = module_1._EnumDict()
    assert (
        f"{type(enum_dict_0).__module__}.{type(enum_dict_0).__qualname__}"
        == "enum._EnumDict"
    )
    assert len(enum_dict_0) == 0
    none_type_0 = None
    module_2.sub(enum_dict_0, enum_dict_0, enum_dict_0, flags=none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2800
    var_0 = module_0.to_base(int_0, int_0)
    assert var_0 == "10"
    var_1 = module_0.to_base(int_0, int_0)
    assert var_1 == "10"
    var_0.__delitem__(var_1)
