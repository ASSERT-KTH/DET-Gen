# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import to_base as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    none_type_0 = None
    module_0.to_base(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xb0\xd3>\x96\x93\xed\xbck\xe77X\xf7+\x94"
    int_0 = -2374
    var_0 = module_0.to_base(int_0, int_0)
    assert var_0 == ""
    var_0.vformat(bytes_0, bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xa1!\xd4nc\xf8\x17\xa9\x85\xa1\xfb\x06\x90\x18~K\xd8"
    module_0.to_base(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 218
    var_0 = module_0.to_base(int_0, int_0)
    assert var_0 == "10"
    var_1 = var_0.__contains__(var_0)
    assert var_1 is True
    list_0 = [int_0]
    module_0.to_base(int_0, list_0)
