# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import to_base as module_0
import collections as module_1


def test_case_0():
    int_0 = 701
    var_0 = module_0.to_base(int_0, int_0)
    assert var_0 == "10"


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.to_base(bool_0, bool_0)
    assert var_0 == ""
    var_1 = module_0.to_base(bool_0, bool_0)
    assert var_1 == ""
    chain_map_0 = module_1.ChainMap()
    assert (
        f"{type(chain_map_0).__module__}.{type(chain_map_0).__qualname__}"
        == "collections.ChainMap"
    )
    assert len(chain_map_0) == 0
    assert (
        f"{type(module_1.ChainMap.fromkeys).__module__}.{type(module_1.ChainMap.fromkeys).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_1.ChainMap.parents).__module__}.{type(module_1.ChainMap.parents).__qualname__}"
        == "builtins.property"
    )
    module_0.to_base(chain_map_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.to_base(none_type_0, none_type_0)
