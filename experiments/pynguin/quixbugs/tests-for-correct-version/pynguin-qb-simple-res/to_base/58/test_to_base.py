# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import enum as module_0
import to_base as module_1
import re as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0._EnumDict()
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "enum._EnumDict"
    assert len(var_0) == 0
    int_0 = 858
    var_1 = module_1.to_base(int_0, int_0)
    assert var_1 == "10"
    var_0.__call__(none_type_0, var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "wTlz}"
    module_2.subn(str_0, str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    var_0 = module_1.to_base(bool_0, bool_0)
    assert var_0 == ""
    module_1.to_base(none_type_0, bool_0)
