# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x85\xfb\x86\r\xd9|v`\xfd\xd1\xb6k\x99v"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_1():
    str_0 = "JGMOx"
    list_0 = [str_0]
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(list_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\\\x9d\x9aU\x01\xb7+.\xc1\xc3\xe9+"
    int_0 = -2262
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, bytes_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_0, bytes_0)
    assert var_2 == ""
    list_0 = [bytes_0, bytes_0]
    var_3 = module_0.longest_common_subsequence(bytes_0, list_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_3, var_1)
    assert var_4 == ""
    none_type_1 = None
    var_5 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(var_5, none_type_1)
    assert var_6 == ""
    tuple_0 = ()
    var_7 = module_0.longest_common_subsequence(tuple_0, var_4)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(var_5, tuple_0)
    assert var_8 == ""
    var_9 = module_0.longest_common_subsequence(var_8, var_8)
    assert var_9 == ""
    var_10 = module_0.longest_common_subsequence(none_type_1, var_5)
    assert var_10 == ""
    module_0.longest_common_subsequence(int_0, list_0)
