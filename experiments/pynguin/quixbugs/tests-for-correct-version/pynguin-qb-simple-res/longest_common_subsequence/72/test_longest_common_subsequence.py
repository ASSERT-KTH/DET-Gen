# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    int_0 = 374
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""


def test_case_2():
    str_0 = "Z95IcRL\r07ppGB~Z1M"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "Z95IcRL\r07ppGB~Z1M"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "Z95IcRL\r07ppGB~Z1M"
    var_2 = module_0.longest_common_subsequence(str_0, var_1)
    assert var_2 == "Z95IcRL\r07ppGB~Z1M"


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "R"
    bytes_0 = b"\xc4\x12<\xae "
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(bytes_0, str_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(str_0, bytes_0)
    assert var_2 == ""
    bool_0 = False
    var_3 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_3, bool_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(var_1, none_type_0)
    assert var_5 == ""
    int_0 = 885
    var_6 = module_0.longest_common_subsequence(var_1, int_0)
    assert var_6 == ""
    module_0.longest_common_subsequence(int_0, int_0)
