# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = "^f"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xd8\xba'\xb0V\xa2L\x1c\xc7\x078%\x93\xe7v\xdf"
    dict_0 = {}
    var_0 = module_0.longest_common_subsequence(dict_0, bytes_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(dict_0, var_0)
    assert var_1 == ""
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_4():
    tuple_0 = ()
    str_0 = "^Ig\tm\t"
    list_0 = [tuple_0, tuple_0, str_0]
    list_1 = [tuple_0, list_0, str_0, str_0]
    str_1 = ")Sa&*+<k/|5M</I#="
    var_0 = module_0.longest_common_subsequence(list_1, str_1)
    assert var_0 == ""
