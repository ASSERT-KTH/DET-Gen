# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    int_0 = 1614
    list_0 = [int_0, int_0, int_0]
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(list_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(dict_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 1158.0
    module_0.longest_common_subsequence(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""
    bytes_0 = b"\xa1m\x04\xb4\x0b\xb4\xb2%\xbd\xf9 m\xe0\x19z\xd5\x00"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_4():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    bytes_0 = b"\x17R^\xeewK\xee\x1b<\x14\xc0=\x9fG\x030\xb7"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_1 = module_0.longest_common_subsequence(list_0, bytes_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_3 == ""
