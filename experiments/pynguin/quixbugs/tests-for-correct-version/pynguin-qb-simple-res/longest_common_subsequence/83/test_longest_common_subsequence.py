# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"3`\xda\xf3"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_0 == ""
    str_0 = "7iu9d"
    set_0 = {str_0}
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(set_0, none_type_0)
    assert var_1 == ""
    float_0 = -4373.90436
    module_0.longest_common_subsequence(set_0, float_0)


def test_case_2():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    complex_0 = -724.85 + 899j
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    list_0 = [complex_0]
    var_2 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_2 == ""
    none_type_1 = None
    var_3 = module_0.longest_common_subsequence(none_type_1, complex_0)
    assert var_3 == ""
    str_0 = "D"
    dict_0 = {str_0: list_0}
    tuple_0 = (complex_0, complex_0, str_0, dict_0)
    list_1 = [list_0, list_0, tuple_0, tuple_0]
    var_4 = module_0.longest_common_subsequence(list_1, list_0)
    assert var_4 == ""
