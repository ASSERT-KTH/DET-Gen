# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    bytes_0 = b"J\x84\\J|\x97S\x8d\xae\x8cG\x8b\xdb?\x07/\x1986"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(bytes_0, none_type_1)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"okK*,\xf7\xdd:"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x10}\xa5_*\xa9\x1f"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.longest_common_subsequence(list_0, bytes_0)
    assert var_0 == ""
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_2 == ""
    bool_0 = True
    float_0 = -1599.196
    module_0.longest_common_subsequence(float_0, bool_0)
