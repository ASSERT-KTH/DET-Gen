# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""


def test_case_2():
    str_0 = "]7C/I-@qV:y:\x0ci%iw]wF"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"3.\x02\xab\xb1\xa6\xdcU\xa9e"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_4():
    str_0 = "\\U}Kg"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "\\U}Kg"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "\\U}Kg"
    list_0 = [var_1, var_1, str_0]
    var_2 = module_0.longest_common_subsequence(list_0, var_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_1, list_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_1, var_2)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_5 == "\\U}Kg"
    var_6 = module_0.longest_common_subsequence(var_2, var_5)
    assert var_6 == ""
    var_7 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_7 == "\\U}Kg\\U}Kg\\U}Kg"
    var_8 = module_0.longest_common_subsequence(list_0, var_6)
    assert var_8 == ""
    var_9 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_9 == "\\U}Kg"
    bool_0 = False
    var_10 = module_0.longest_common_subsequence(bool_0, var_7)
    assert var_10 == ""
    var_11 = module_0.longest_common_subsequence(var_9, var_1)
    assert var_11 == "\\U}Kg"
