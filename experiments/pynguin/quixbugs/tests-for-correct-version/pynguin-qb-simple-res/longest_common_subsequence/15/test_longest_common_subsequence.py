# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_1.longest_common_subsequence(dict_0, dict_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""


def test_case_2():
    dict_0 = {}
    tuple_0 = (dict_0,)
    var_0 = module_1.longest_common_subsequence(tuple_0, dict_0)
    assert var_0 == ""


def test_case_3():
    str_0 = "-MH$\\@9_["
    var_0 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_0 == "-MH$\\@9_["
    var_1 = module_1.longest_common_subsequence(var_0, str_0)
    assert var_1 == "-MH$\\@9_["


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "_&"
    var_0 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_0 == "_&"
    str_1 = "&{WQT [ #("
    var_1 = module_1.longest_common_subsequence(str_1, var_0)
    assert var_1 == "&"
    object_0 = module_0.object()
    object_1 = module_0.object()
    module_1.longest_common_subsequence(var_1, object_0)
