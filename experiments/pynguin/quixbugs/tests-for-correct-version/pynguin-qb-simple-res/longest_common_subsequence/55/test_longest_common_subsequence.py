# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = -3060.8732
    set_0 = {float_0, float_0, float_0, float_0}
    module_0.longest_common_subsequence(set_0, float_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.longest_common_subsequence(tuple_0, tuple_0)
    assert var_0 == ""
    list_0 = [var_0]
    var_1 = module_0.longest_common_subsequence(tuple_0, list_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(tuple_0, var_0)
    assert var_2 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    bool_0 = True
    var_2 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_2 == ""
    module_0.longest_common_subsequence(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -547
    float_0 = 313.2834
    dict_0 = {int_0: int_0, int_0: int_0, int_0: float_0}
    str_0 = "`[y)$V3+V4"
    tuple_0 = (int_0, dict_0, str_0)
    module_0.longest_common_subsequence(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'":-a\x85\xbe,\x1f\xd9\xe9~\xaa\x7f'
    bytes_1 = b"I\xadJ\xa1\xbc\xc1$\xd3"
    var_0 = module_0.longest_common_subsequence(bytes_0, bytes_1)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""
    module_0.longest_common_subsequence(bytes_0, bytes_0)
