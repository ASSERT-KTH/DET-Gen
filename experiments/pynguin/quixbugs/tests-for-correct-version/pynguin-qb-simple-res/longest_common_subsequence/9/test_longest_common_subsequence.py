# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1275
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(dict_0, none_type_0)
    assert var_0 == ""
    list_0 = [dict_0, dict_0, object_0, var_0]
    module_0.longest_common_subsequence(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "z9}s9adQQ v4<\n^\\5I"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "z9}s9adQQ v4<\n^\\5I"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "z9}s9adQQ v4<\n^\\5I"
    int_0 = 2031
    complex_0 = -572.70739 + 260.34j
    list_0 = [int_0, complex_0, int_0, complex_0]
    str_1 = "q'hsCQ8&\"P0H s?9Hdf>"
    var_2 = module_0.longest_common_subsequence(list_0, str_1)
    assert var_2 == ""
    module_0.longest_common_subsequence(complex_0, list_0)
