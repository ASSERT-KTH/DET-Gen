# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    bool_0 = True
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""
    none_type_1 = None
    var_1 = module_1.longest_common_subsequence(bool_0, none_type_1)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x87\xbb\x1d~\x1b\x91,\x80\xbd,tX\xc1:%(\xfeT"
    module_1.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x9f\x1e(\x9f\x05\x08\xa4\xf4\x0fv\x9f\xb7"
    list_0 = [bytes_0]
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(bytes_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(list_0, bytes_0)
    assert var_1 == ""
    module_1.longest_common_subsequence(list_0, list_0)
