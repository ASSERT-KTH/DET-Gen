# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_2 == ""


def test_case_2():
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    dict_0 = {none_type_0: none_type_0, var_0: var_0, var_0: none_type_0}
    var_1 = module_1.longest_common_subsequence(dict_0, var_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -1001
    list_0 = [int_0]
    module_1.longest_common_subsequence(list_0, list_0)


def test_case_4():
    bool_0 = False
    var_0 = module_1.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    int_0 = 2782
    set_0 = {bool_0, int_0, bool_0, int_0}
    tuple_0 = (set_0, bool_0, bool_0, bool_0)
    list_0 = [tuple_0]
    none_type_0 = None
    var_1 = module_1.longest_common_subsequence(list_0, none_type_0)
    assert var_1 == ""
    tuple_1 = ()
    var_2 = module_1.longest_common_subsequence(tuple_1, tuple_1)
    assert var_2 == ""
    var_3 = module_1.longest_common_subsequence(var_1, none_type_0)
    assert var_3 == ""
    str_0 = "]~EpJxU6"
    list_1 = [str_0]
    var_4 = module_1.longest_common_subsequence(var_2, str_0)
    assert var_4 == ""
    none_type_1 = None
    var_5 = module_1.longest_common_subsequence(bool_0, list_1)
    assert var_5 == ""
    var_6 = module_1.longest_common_subsequence(str_0, none_type_1)
    assert var_6 == ""
    var_7 = module_1.longest_common_subsequence(list_1, str_0)
    assert var_7 == ""
