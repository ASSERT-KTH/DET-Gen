# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    object_0 = module_0.object()
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(object_0, none_type_0)
    assert var_0 == ""
    bytes_0 = b""
    none_type_1 = None
    var_1 = module_1.longest_common_subsequence(bytes_0, none_type_1)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "\t"
    var_0 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_0 == "\t"
    var_1 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_1 == "\t"
    bytes_0 = b"lv?e\x06\xbb9>\x99\xeeh"
    module_1.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "6U4}"
    str_1 = "II A52ix|89Q:V"
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(str_0, str_1)
    assert var_1 == ""
    str_2 = "F"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    module_0.object(**dict_0)
