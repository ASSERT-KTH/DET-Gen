# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    int_0 = -1224
    var_1 = module_0.longest_common_subsequence(var_0, bool_0)
    assert var_1 == ""
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_1 == ""


def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""
    bool_0 = True
    var_2 = module_0.longest_common_subsequence(none_type_0, bool_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_3 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ""
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == ""
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(var_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_0, str_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_0, var_2)
    assert var_3 == ""
    bytes_0 = b"i9\x84\xde\xfe\x18\xf4\xb4w"
    object_0 = module_1.object()
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -1849.5
    set_0 = {float_0, float_0, float_0, float_0}
    float_1 = -622.3
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(float_1, bool_0)
    assert var_0 == ""
    str_0 = "W"
    list_0 = [var_0, float_1]
    var_1 = module_0.longest_common_subsequence(str_0, list_0)
    assert var_1 == ""
    module_0.longest_common_subsequence(set_0, set_0)
