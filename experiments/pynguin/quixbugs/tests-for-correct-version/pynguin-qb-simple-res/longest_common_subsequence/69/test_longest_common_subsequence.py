# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_1, var_2)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_2, var_2)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_5 == ""


def test_case_2():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    str_0 = "VbUL.)~d1"
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(str_0, bool_0)
    assert var_3 == ""
    none_type_0 = None
    var_4 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(bool_0, str_0)
    assert var_5 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"q\n\xd3\x17\xc7\x0b\xf1gO0FD\x8bW\xce\xfe="
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_4():
    str_0 = "F&Isnvi!s4HyYF%Q~aOQ"
    tuple_0 = (str_0,)
    var_0 = module_0.longest_common_subsequence(tuple_0, str_0)
    assert var_0 == ""
    bool_0 = False
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(tuple_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(bool_0, var_3)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(bool_0, var_3)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(var_5, var_5)
    assert var_6 == ""
    set_0 = {bool_0}
    var_7 = module_0.longest_common_subsequence(none_type_0, set_0)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(var_2, var_6)
    assert var_8 == ""
