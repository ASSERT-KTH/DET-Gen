# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    list_0 = []
    tuple_0 = (none_type_0, list_0)
    var_0 = module_0.longest_common_subsequence(none_type_0, tuple_0)
    assert var_0 == ""
    bool_0 = False
    list_1 = [bool_0, bool_0, bool_0]
    var_1 = module_0.longest_common_subsequence(list_1, bool_0)
    assert var_1 == ""


def test_case_2():
    str_0 = "0MDq+99.yg\x0cmhz604j"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "0MDq+99.yg\x0cmhz604j"
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(str_0, var_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(none_type_0, var_2)
    assert var_3 == ""
    none_type_1 = None
    set_0 = {none_type_1}
    var_4 = module_0.longest_common_subsequence(none_type_1, set_0)
    assert var_4 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xcb\xfd\x92\x06?2\xc3\x8fC\x8bk\x96\xb9FGu\x08\x12|"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.longest_common_subsequence(bytes_0, list_0)
    assert var_0 == ""
    bytes_1 = b"\xc6B\xbd\x99\xa5P\xec\x8f\xfb7\xfcv\x80\x0c\xf9\x1e\t$8\x81"
    module_0.longest_common_subsequence(bytes_1, bytes_1)
