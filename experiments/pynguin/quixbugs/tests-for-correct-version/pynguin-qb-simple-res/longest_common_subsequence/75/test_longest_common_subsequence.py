# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    bytes_0 = b"~\x89\xf0H{\xe6\xb0\x85'"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    bytes_0 = b"3\x17\xf9\x83\r\xcf\x7f\x12x\xd1\xb3\x1b\xfb\x08\xfc"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_3():
    str_0 = "kn\x0c;?"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "kn\x0c;?"
    list_0 = [var_0]
    var_1 = module_0.longest_common_subsequence(var_0, list_0)
    assert var_1 == ""
    bytes_0 = b"\xaa"
    none_type_0 = None
    var_2 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_2 == ""
    bool_0 = False
    list_1 = [var_1, var_2, var_2, bool_0]
    list_2 = [list_1]
    var_3 = module_0.longest_common_subsequence(list_2, var_2)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_1, list_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(list_2, list_0)
    assert var_6 == ""
    var_7 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_7 == ""
