# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -53
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    str_0 = "fnxim0 pJ_UX,\x0b]"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_0, str_0)
    assert var_2 == ""


def test_case_2():
    complex_0 = -115 - 2315.73j
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(complex_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ";cM6z~f9Fi"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == ";cM6z~f9Fi"
    set_0 = {var_0, var_0, var_0}
    module_0.longest_common_subsequence(set_0, str_0)


def test_case_4():
    str_0 = "\x0bI&3mXzRL'Du&6ru4A\r"
    bool_0 = False
    bytes_0 = b"wo|\xa2~n"
    var_0 = module_0.longest_common_subsequence(bytes_0, str_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(bool_0, var_1)
    assert var_2 == ""
    dict_0 = {}
    var_3 = module_0.longest_common_subsequence(dict_0, dict_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_1, var_3)
    assert var_4 == ""
    str_1 = ""
    var_5 = module_0.longest_common_subsequence(var_3, var_1)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(dict_0, var_4)
    assert var_6 == ""
    var_7 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(str_1, str_1)
    assert var_8 == ""
    var_9 = module_0.longest_common_subsequence(var_8, str_1)
    assert var_9 == ""
    var_10 = module_0.longest_common_subsequence(var_9, var_1)
    assert var_10 == ""
    var_11 = module_0.longest_common_subsequence(var_8, var_3)
    assert var_11 == ""
    none_type_0 = None
    var_12 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_12 == ""
    var_13 = module_0.longest_common_subsequence(str_1, dict_0)
    assert var_13 == ""
    var_14 = module_0.longest_common_subsequence(var_9, var_12)
    assert var_14 == ""
    bool_1 = True
    var_15 = module_0.longest_common_subsequence(bool_1, var_1)
    assert var_15 == ""
    int_0 = -1519
    var_16 = module_0.longest_common_subsequence(var_11, int_0)
    assert var_16 == ""
