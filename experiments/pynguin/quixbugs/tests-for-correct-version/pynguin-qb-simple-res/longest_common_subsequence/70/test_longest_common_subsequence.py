# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"S\x8b"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "R!s\\q@Y3qW,-GeISGR"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    str_1 = "/d(O45E\ni9G3TOoN:jkj"
    var_1 = module_0.longest_common_subsequence(var_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(str_1, str_1)
    assert var_2 == "/d(O45E\ni9G3TOoN:jkj"
    bool_0 = True
    var_3 = module_0.longest_common_subsequence(var_2, var_0)
    assert var_3 == ""
    module_0.longest_common_subsequence(str_1, bool_0)


def test_case_2():
    str_0 = "R!s\\q@Y3qW,-GeISGR"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_1 == ""
    int_0 = 223
    var_2 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_2 == ""
    str_1 = "/d(O45E\ni9G3TOoN:jkj"
    var_3 = module_0.longest_common_subsequence(var_1, none_type_0)
    assert var_3 == ""
    set_0 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert set_0 == ""
    var_4 = module_0.longest_common_subsequence(var_1, set_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(none_type_0, var_1)
    assert var_5 == ""
    str_2 = ";L}s#"
    list_0 = [str_2, str_1]
    bytes_0 = b"\xbdx\xef\xb1\x1d\xe0\xcch\x8f\xb2"
    var_6 = module_0.longest_common_subsequence(list_0, bytes_0)
    assert var_6 == ""
    var_7 = module_0.longest_common_subsequence(set_0, var_6)
    assert var_7 == ""
