# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    bool_0 = True
    set_0 = {bool_0}
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(set_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    list_0 = []
    var_0 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bool_1 = True
    var_0 = module_0.longest_common_subsequence(bool_0, bool_1)
    assert var_0 == ""
    str_0 = "A\t/pT9l#$)"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "A\t/pT9l#$)"
    var_2 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_2 == "A\t/pT9l#$)"
    var_3 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_3 == "A\t/pT9l#$)"
    bytes_0 = b"s\xb4"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "<}?+,"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "<}?+,"
    int_0 = 1354
    bytes_0 = b"\xa8"
    list_0 = [bytes_0, bytes_0]
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "<}?+,"
    var_2 = module_0.longest_common_subsequence(list_0, bytes_0)
    assert var_2 == ""
    bool_0 = False
    var_3 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(int_0, bool_0)
    assert var_4 == ""
    int_1 = -3113
    var_5 = module_0.longest_common_subsequence(int_1, var_2)
    assert var_5 == ""
    int_2 = -2422
    module_0.longest_common_subsequence(int_2, int_0)
