# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    tuple_0 = (bool_0,)
    module_0.longest_common_subsequence(tuple_0, tuple_0)


def test_case_3():
    bytes_0 = b"\xdfMv\xe6\xdd"
    bool_0 = False
    tuple_0 = (bytes_0, bool_0)
    var_0 = module_0.longest_common_subsequence(tuple_0, bool_0)
    assert var_0 == ""
    str_0 = "EEGT\r 0Hv[vnS3"
    var_1 = module_0.longest_common_subsequence(bytes_0, tuple_0)
    assert var_1 == ""
    none_type_0 = None
    var_2 = module_0.longest_common_subsequence(none_type_0, str_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_3, bool_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_5 == "EEGT\r 0Hv[vnS3"
    var_6 = module_0.longest_common_subsequence(str_0, var_5)
    assert var_6 == "EEGT\r 0Hv[vnS3"
    var_7 = module_0.longest_common_subsequence(var_5, str_0)
    assert var_7 == "EEGT\r 0Hv[vnS3"
