# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1975
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, var_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    bool_0 = True
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(bool_0, none_type_1)
    assert var_1 == ""
    module_0.longest_common_subsequence(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -318.971
    set_0 = {float_0, float_0, float_0}
    tuple_0 = (float_0, set_0)
    module_0.longest_common_subsequence(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    bool_0 = True
    float_0 = -4668.85496
    str_0 = 'r"v=3PNe7jRN(/$7H'
    list_0 = [float_0, bool_0, str_0]
    tuple_2 = (tuple_1, tuple_1, bool_0, list_0)
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(float_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(str_0, list_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(tuple_2, str_0)
    assert var_2 == ""
    module_1.object(**var_1)
