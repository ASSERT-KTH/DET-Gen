# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = "YX8yhI!AM~U"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "YX8yhI!AM~U"
    var_1 = module_0.longest_common_subsequence(var_0, str_0)
    assert var_1 == "YX8yhI!AM~U"


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(list_0, none_type_0)
    assert var_0 == ""
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_2 == ""


def test_case_3():
    str_0 = "a\\uDGxd=M,n4\t"
    list_0 = [str_0, str_0]
    list_1 = [str_0, list_0]
    var_0 = module_0.longest_common_subsequence(list_0, list_1)
    assert var_0 == "a\\uDGxd=M,n4\t"
    bool_0 = False
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_2 == ""
    none_type_1 = None
    var_3 = module_0.longest_common_subsequence(none_type_1, bool_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_4 == ""
