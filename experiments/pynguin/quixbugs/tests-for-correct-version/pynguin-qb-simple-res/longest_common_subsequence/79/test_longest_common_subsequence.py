# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


def test_case_0():
    str_0 = "|Dxda'_`BuaKxHY?H"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "|Dxda'_`BuaKxHY?H"


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    object_0 = module_1.object()
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(object_0, none_type_1)
    assert var_1 == ""
    list_0 = [none_type_1]
    var_2 = module_0.longest_common_subsequence(var_1, list_0)
    assert var_2 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, bool_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(none_type_0, var_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(list_0, bool_0)
    assert var_3 == ""
    list_1 = [list_0, bool_0, bool_0, bool_0]
    bool_1 = True
    var_4 = module_0.longest_common_subsequence(bool_1, var_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(bool_0, var_2)
    assert var_5 == ""
    module_0.longest_common_subsequence(list_1, list_0)
