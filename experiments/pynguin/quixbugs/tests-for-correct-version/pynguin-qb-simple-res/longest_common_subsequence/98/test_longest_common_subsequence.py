# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""


def test_case_2():
    object_0 = module_1.object()
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(object_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"H\x10\x0b\xe8(Lf#\xb9\xb0\xcf\x8a\xe11Ec\xe3\xd5\x9e"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "T,"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "T,"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "T,"
    var_2 = module_0.longest_common_subsequence(var_1, str_0)
    assert var_2 == "T,"
    var_3 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_3 == "T,"
    bytes_0 = b"\xdb\xf2]Yq\x1e\x84\x1f\x05\x14\xf3ej\xdb\xc9\xff\xba"
    var_4 = module_0.longest_common_subsequence(bytes_0, var_2)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(var_4, bytes_0)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(var_2, var_3)
    assert var_6 == "T,"
    var_7 = module_0.longest_common_subsequence(var_1, str_0)
    assert var_7 == "T,"
    module_0.longest_common_subsequence(bytes_0, bytes_0)
