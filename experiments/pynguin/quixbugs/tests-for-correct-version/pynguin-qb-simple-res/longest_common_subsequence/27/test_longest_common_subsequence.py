# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 2228
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""


def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    object_0 = module_1.object()
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(object_0, none_type_1)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_2 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    bytes_0 = b"\x01"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    float_0 = 4871.28566
    tuple_0 = (dict_0, float_0, bool_0)
    list_0 = [tuple_0, bool_0]
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, float_0)
    assert var_0 == ""
    module_0.longest_common_subsequence(list_0, tuple_0)
