# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""


def test_case_2():
    none_type_0 = None
    int_0 = -2072
    var_0 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, var_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xf3\x00|Cz(\xbb\xd8d\x1f\xd5\x90\x84\x0e`\xdd\xaf\xaem\xea"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "$x!C \nG_w'{>X#@"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "$x!C \nG_w'{>X#@"
    bytes_0 = b"\x8e\xc5Yg\xf5\x8et\xa2\xff!N\xf1R"
    float_0 = -2349.9
    tuple_0 = (bytes_0, float_0)
    var_1 = module_0.longest_common_subsequence(str_0, tuple_0)
    assert var_1 == ""
    tuple_1 = (var_1,)
    module_0.longest_common_subsequence(tuple_1, float_0)
