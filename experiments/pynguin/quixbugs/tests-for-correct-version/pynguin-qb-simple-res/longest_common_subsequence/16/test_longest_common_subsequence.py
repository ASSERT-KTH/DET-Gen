# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.longest_common_subsequence(list_0, list_0)


def test_case_2():
    float_0 = -703.6
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(float_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "A"
    var_0 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_0 == "A"
    str_1 = "$P72[vA[$i}(l\\2^)OH8"
    var_1 = module_1.longest_common_subsequence(var_0, var_0)
    assert var_1 == "A"
    var_2 = module_1.longest_common_subsequence(var_1, str_1)
    assert var_2 == "A"
    var_3 = module_1.longest_common_subsequence(var_2, str_0)
    assert var_3 == "A"
    var_4 = module_1.longest_common_subsequence(str_1, str_1)
    assert var_4 == "$P72[vA[$i}(l\\2^)OH8"
    var_5 = module_1.longest_common_subsequence(var_1, var_0)
    assert var_5 == "A"
    var_6 = module_1.longest_common_subsequence(var_0, str_1)
    assert var_6 == "A"
    int_0 = -5044
    module_1.longest_common_subsequence(str_1, int_0)
