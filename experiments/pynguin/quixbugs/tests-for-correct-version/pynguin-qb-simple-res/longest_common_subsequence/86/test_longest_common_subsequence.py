# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    list_0 = []
    object_0 = module_1.object(*list_0)
    var_0 = module_0.longest_common_subsequence(object_0, list_0)
    assert var_0 == ""


def test_case_3():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    str_0 = "5)K}282)XD#MR35yjUP\x0c"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "5)K}282)XD#MR35yjUP\x0c"
    var_2 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_2 == ""


@pytest.mark.xfail(strict=True)
def test_case_4():
    object_0 = module_1.object()
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(object_0, none_type_0)
    assert var_0 == ""
    float_0 = 2129.984
    var_1 = module_0.longest_common_subsequence(none_type_0, var_0)
    assert var_1 == ""
    set_0 = {float_0, float_0}
    list_0 = [set_0, float_0, set_0]
    var_2 = module_0.longest_common_subsequence(object_0, none_type_0)
    assert var_2 == ""
    tuple_0 = (float_0, float_0, set_0, list_0)
    module_0.longest_common_subsequence(tuple_0, list_0)
