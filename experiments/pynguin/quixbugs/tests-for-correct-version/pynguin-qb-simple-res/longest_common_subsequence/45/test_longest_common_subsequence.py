# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "MK"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, str_0)
    assert var_0 == ""
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(str_0, none_type_1)
    assert var_1 == ""
    bytes_0 = b"\xfd\xe4\x12\xb53\x0bT`~\xe7\xbb"
    none_type_2 = None
    var_2 = module_0.longest_common_subsequence(none_type_2, bytes_0)
    assert var_2 == ""
    set_0 = {str_0, str_0, bytes_0}
    module_0.longest_common_subsequence(set_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0]
    module_0.longest_common_subsequence(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    str_0 = ""
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(tuple_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""
    bool_0 = True
    dict_0 = {tuple_0: tuple_0, tuple_0: str_0, tuple_0: bool_0}
    tuple_1 = (tuple_0, str_0, dict_0)
    bytes_0 = b""
    tuple_2 = (bool_0, bytes_0, dict_0)
    module_0.longest_common_subsequence(tuple_1, tuple_2)
