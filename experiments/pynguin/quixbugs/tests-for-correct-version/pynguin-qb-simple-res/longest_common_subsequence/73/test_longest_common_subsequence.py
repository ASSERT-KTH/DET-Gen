# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 1096.0
    module_0.longest_common_subsequence(float_0, float_0)


def test_case_1():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(dict_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    str_0 = 'L1],k@"?#U\x0csg)N>\x0b[y\x0b'
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "6"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    list_0 = [str_0]
    var_1 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_1 == "6"
    set_0 = {str_0, str_0}
    module_0.longest_common_subsequence(list_0, set_0)


def test_case_4():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""
    dict_0 = {none_type_0: none_type_0}
    var_2 = module_0.longest_common_subsequence(none_type_0, dict_0)
    assert var_2 == ""
    str_0 = "re6vD.X5L(7\x0cC/~?rZk("
    none_type_1 = None
    list_0 = [str_0, none_type_0]
    var_3 = module_0.longest_common_subsequence(str_0, list_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(str_0, none_type_1)
    assert var_4 == ""
