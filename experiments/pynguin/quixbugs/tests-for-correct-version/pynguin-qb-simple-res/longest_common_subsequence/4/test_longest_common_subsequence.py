# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_0.longest_common_subsequence(set_0, set_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    int_0 = -999
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(int_0, none_type_1)
    assert var_1 == ""
    str_0 = "V"
    module_0.longest_common_subsequence(int_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xe8\t\xd4\xdap~<Bh\xda"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ";6"
    str_1 = "2\nNnDe9{b/'h6K"
    var_0 = module_0.longest_common_subsequence(str_1, str_0)
    assert var_0 == "6"
    var_1 = module_0.longest_common_subsequence(str_0, str_1)
    assert var_1 == "6"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_2 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_2 == "6"
    module_0.longest_common_subsequence(dict_0, str_0)
