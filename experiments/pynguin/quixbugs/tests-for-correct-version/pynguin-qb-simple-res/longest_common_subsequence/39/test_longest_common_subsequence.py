# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.longest_common_subsequence(dict_0, dict_0)
    assert var_0 == ""


def test_case_2():
    bytes_0 = b":+\x7f\xf5\xf0"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xc7\xa8\xf5\xfa\r"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "Wqp^/"
    dict_0 = {str_0: str_0}
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "Wqp^/"
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == "Wqp^/"
    list_0 = [str_0, var_0, var_1]
    var_2 = module_0.longest_common_subsequence(str_0, list_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_0, list_0)
    assert var_3 == ""
    module_0.longest_common_subsequence(str_0, dict_0)
