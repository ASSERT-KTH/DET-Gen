# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


def test_case_1():
    set_0 = set()
    var_0 = module_1.longest_common_subsequence(set_0, set_0)
    assert var_0 == ""


def test_case_2():
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    list_0 = [var_0, var_0]
    var_1 = module_1.longest_common_subsequence(list_0, none_type_0)
    assert var_1 == ""
    var_2 = module_1.longest_common_subsequence(none_type_0, var_1)
    assert var_2 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"9\nx\xcf\xe7\x98"
    module_1.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "[hMh:WwZwy)"
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_1 == "[hMh:WwZwy)"
    var_2 = module_1.longest_common_subsequence(var_0, var_0)
    assert var_2 == ""
    var_3 = module_1.longest_common_subsequence(var_1, var_1)
    assert var_3 == "[hMh:WwZwy)"
    int_0 = 728
    float_0 = -2701.745185
    bool_0 = False
    dict_0 = {int_0: float_0, int_0: var_2, none_type_0: int_0, bool_0: none_type_0}
    list_0 = [float_0, dict_0]
    module_1.longest_common_subsequence(dict_0, list_0)
