# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1327
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, var_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_2 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x9f"
    str_0 = "vIARz^<@=\t9NrGC*pR"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(bytes_0, none_type_1)
    assert var_1 == ""
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    dict_0 = {}
    list_0 = [tuple_0, tuple_0, tuple_0]
    tuple_1 = (dict_0, list_0, tuple_0)
    module_0.longest_common_subsequence(tuple_1, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 3121
    list_0 = [int_0]
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(list_0, none_type_0)
    assert var_0 == ""
    bool_0 = False
    list_1 = [int_0, bool_0, int_0, bool_0]
    var_1 = module_0.longest_common_subsequence(int_0, var_0)
    assert var_1 == ""
    str_0 = "SEVKq9<"
    var_2 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(list_1, str_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(none_type_0, var_1)
    assert var_5 == ""
    module_0.longest_common_subsequence(list_1, list_0)
