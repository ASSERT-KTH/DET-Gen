# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import longest_common_subsequence as module_0


def test_case_0():
    int_0 = -65
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    bytes_0 = b"\x16M\xf4\xf0\xcd\x80#\xa1\x96\xc6\xa3VZ\x08\x8f8"
    tuple_0 = (bytes_0,)
    var_0 = module_0.longest_common_subsequence(tuple_0, bytes_0)
    assert var_0 == ""
    bool_0 = False
    var_1 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_1 == ""


def test_case_2():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    str_0 = "XS`"
    var_2 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_2 == "XS`"
    var_3 = module_0.longest_common_subsequence(str_0, var_1)
    assert var_3 == ""
