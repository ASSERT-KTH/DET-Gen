# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xb4\xf0\xac)]\xca\x03r\xc4Q\xec\x01\x8e\x84k%d"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_1():
    str_0 = 'r{e>z@<*JGX Re"#zD'
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    str_0 = 'r{e>z@<*JGX Re"#zD'
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == 'r{e>z@<*JGX Re"#zD'
    str_1 = '\x0c"M'
    var_1 = module_0.longest_common_subsequence(str_1, var_0)
    assert var_1 == '"'
    var_2 = module_0.longest_common_subsequence(str_1, var_0)
    assert var_2 == '"'
    var_3 = module_0.longest_common_subsequence(var_0, none_type_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_0, var_3)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(var_0, none_type_0)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(str_1, var_0)
    assert var_6 == '"'
    var_7 = module_0.longest_common_subsequence(var_3, var_4)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(str_0, var_6)
    assert var_8 == '"'
