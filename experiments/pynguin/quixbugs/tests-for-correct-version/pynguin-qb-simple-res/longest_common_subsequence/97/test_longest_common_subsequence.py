# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import longest_common_subsequence as module_0
import builtins as module_1


def test_case_0():
    str_0 = "Xm7r+U/gHF*Ks(.:!"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "Xm7r+U/gHF*Ks(.:!"


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    list_0 = []
    object_0 = module_1.object(*list_0)
    var_1 = module_0.longest_common_subsequence(object_0, list_0)
    assert var_1 == ""
    str_0 = "A&y{Sy.ndNnfy}A]|"
    var_2 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_2 == "A&y{Sy.ndNnfy}A]|"


def test_case_3():
    str_0 = "j0"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "j0"
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    str_1 = "#j"
    var_2 = module_0.longest_common_subsequence(str_1, str_1)
    assert var_2 == "#j"
    var_3 = module_0.longest_common_subsequence(var_2, var_2)
    assert var_3 == "#j"
    var_4 = module_0.longest_common_subsequence(var_3, str_1)
    assert var_4 == "#j"
    str_2 = "!=WQ@gyprA5)YKj9f"
    var_5 = module_0.longest_common_subsequence(str_2, str_2)
    assert var_5 == "!=WQ@gyprA5)YKj9f"
    var_6 = module_0.longest_common_subsequence(var_5, var_2)
    assert var_6 == "j"
    var_7 = module_0.longest_common_subsequence(var_5, var_5)
    assert var_7 == "!=WQ@gyprA5)YKj9f"
    var_8 = module_0.longest_common_subsequence(var_6, var_5)
    assert var_8 == "j"
