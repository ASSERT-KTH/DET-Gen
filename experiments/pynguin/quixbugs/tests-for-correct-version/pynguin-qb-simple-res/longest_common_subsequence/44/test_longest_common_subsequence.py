# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = "p~Ri"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "p~Ri"


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    bool_0 = True
    var_1 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_1 == ""
    module_0.longest_common_subsequence(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "~$Uhr\x0bG~cN"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "~$Uhr\x0bG~cN"
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    bytes_0 = b"\xcaD\x11\x90\x9e\xdb\x0clt"
    var_2 = module_0.longest_common_subsequence(var_0, bytes_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(none_type_0, var_1)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_1, none_type_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(var_0, var_1)
    assert var_6 == ""
    var_7 = module_0.longest_common_subsequence(var_4, none_type_0)
    assert var_7 == ""
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)
