# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


def test_case_0():
    str_0 = "^\nTw1[{l{"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "^\nTw1[{l{"


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    object_0 = module_1.object()
    dict_0 = {bool_0: object_0, object_0: object_0, object_0: bool_0, bool_0: object_0}
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, object_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(dict_0, var_0)
    assert var_1 == ""
    module_0.longest_common_subsequence(object_0, object_0)


def test_case_3():
    str_0 = 'n$yby:jqD"F5.|'
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == 'n$yby:jqD"F5.|'
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == 'n$yby:jqD"F5.|'
    var_2 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_2 == 'n$yby:jqD"F5.|'
    var_3 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_3 == 'n$yby:jqD"F5.|'
    var_4 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_4 == 'n$yby:jqD"F5.|'
    set_0 = set()
    var_5 = module_0.longest_common_subsequence(set_0, set_0)
    assert var_5 == ""
    int_0 = -1182
    none_type_0 = None
    var_6 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_6 == ""
    list_0 = [int_0]
    none_type_1 = None
    bytes_0 = b"S\x9b\xa9\xb6]\x18\xa9\xb4\xb0\xb4\x93\xe3\xa5\xb7x\xd2"
    tuple_0 = (list_0, bytes_0, var_6)
    var_7 = module_0.longest_common_subsequence(tuple_0, var_1)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(var_1, var_6)
    assert var_8 == ""
    list_1 = []
    var_9 = module_0.longest_common_subsequence(var_0, list_1)
    assert var_9 == ""
    var_10 = module_0.longest_common_subsequence(var_6, var_8)
    assert var_10 == ""
    var_11 = module_0.longest_common_subsequence(var_1, var_9)
    assert var_11 == ""
    var_12 = module_0.longest_common_subsequence(str_0, none_type_1)
    assert var_12 == ""
    var_13 = module_0.longest_common_subsequence(set_0, str_0)
    assert var_13 == ""
    var_14 = module_0.longest_common_subsequence(list_1, var_5)
    assert var_14 == ""
    var_15 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_15 == ""
    object_0 = module_1.object()
    dict_0 = {object_0: var_4}
    var_16 = module_0.longest_common_subsequence(dict_0, var_11)
    assert var_16 == ""
