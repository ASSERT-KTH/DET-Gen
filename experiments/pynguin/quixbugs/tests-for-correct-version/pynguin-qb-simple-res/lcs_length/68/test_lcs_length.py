# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"|\xbf0i\\\r\xc9\xa3"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 8
    module_0.lcs_length(var_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    int_0 = -2850
    var_0 = module_0.lcs_length(set_0, int_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    module_0.lcs_length(list_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    dict_0 = {}
    bytes_0 = b"\xd7\x00\xfco\xa1;"
    int_0 = -648
    tuple_0 = (bytes_0,)
    tuple_1 = (dict_0, bytes_0, int_0, tuple_0)
    var_0 = module_0.lcs_length(tuple_1, bytes_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)
