# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.lcs_length(tuple_0, tuple_0)
    assert var_0 == 1
    bool_1 = True
    module_0.lcs_length(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"e;\xbd\xbf\xa6!\x8dbh\xed\x0c\x97\xa6\xc5\xc3"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 15
    str_0 = "#&C)m6`0\\*\x0c,XVK,l"
    var_1 = module_0.lcs_length(str_0, str_0)
    assert var_1 == 17
    bytes_1 = b"z\xe1\xc5\x1f\x80\xa8\xd8U\xf6\xbf\xd6H"
    int_0 = -2330
    tuple_0 = (var_0, var_0, var_0, int_0)
    var_2 = module_0.lcs_length(bytes_1, tuple_0)
    assert var_2 == 0
    bool_0 = True
    module_0.lcs_length(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xfd\x1a\xbb\xb8D.3\\\xa4(\xbe}\xbcY8]"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 16
    module_0.lcs_length(var_0, bytes_0)
