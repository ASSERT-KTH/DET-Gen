# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0


def test_case_0():
    bytes_0 = b"\xa4\xb9\x03\xef.\xdf\xe2\x85~\xe1\xff\xe3>\xe4>7\x9d\xfd"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 18
    str_0 = "!K[&c"
    var_1 = module_0.lcs_length(bytes_0, str_0)
    assert var_1 == 0
    var_2 = module_0.lcs_length(str_0, str_0)
    assert var_2 == 5


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.lcs_length(dict_0, dict_0)
    assert var_0 == 0
    module_0.lcs_length(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "MU#V$)Q"
    none_type_0 = None
    module_0.lcs_length(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


def test_case_4():
    float_0 = 201.022
    set_0 = set()
    dict_0 = {float_0: set_0}
    var_0 = module_0.lcs_length(dict_0, set_0)
    assert var_0 == 0
