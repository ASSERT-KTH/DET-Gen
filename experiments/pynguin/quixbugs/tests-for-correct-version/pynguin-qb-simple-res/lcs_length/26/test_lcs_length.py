# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0


def test_case_0():
    str_0 = "\x0bwp;5"
    list_0 = [str_0, str_0]
    var_0 = module_0.lcs_length(list_0, list_0)
    assert var_0 == 2


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'tmy"@&0^Zxx'
    list_0 = [str_0, str_0]
    var_0 = module_0.lcs_length(str_0, list_0)
    assert var_0 == 0
    complex_0 = 319.6 + 2552.893j
    bool_0 = True
    tuple_0 = (list_0, complex_0, bool_0)
    var_1 = module_0.lcs_length(tuple_0, tuple_0)
    assert var_1 == 3
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\n\x82\x9f\xce\x96\x89=\x82\xc8_4L@&\xf5\xb2\xdc"
    none_type_0 = None
    module_0.lcs_length(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 869
    module_0.lcs_length(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xb0\xe2\xc4\x98\xc60^|\x14\xdc\r\x16\x13@m\x1d5f\x7f\x92"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 20
    var_1 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_1 == 20
    module_0.lcs_length(var_0, var_1)
