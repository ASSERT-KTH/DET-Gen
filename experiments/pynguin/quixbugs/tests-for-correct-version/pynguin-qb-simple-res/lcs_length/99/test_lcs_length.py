# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "BZ)hI}='er.YjV1I\t\x0b"
    var_0 = module_0.lcs_length(str_0, str_0)
    assert var_0 == 18
    set_0 = {str_0, str_0}
    module_0.lcs_length(var_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    bytes_0 = b"\xa5\x86u\x8f,\x9e\xc4\xcb\x88\x13O\x84"
    tuple_0 = (set_0, bytes_0)
    none_type_0 = None
    module_0.lcs_length(tuple_0, none_type_0)


def test_case_2():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    bytes_0 = b"\xa5\x86u\x8f,\x9e\xc4\xcb\x88\x13O\x84"
    list_0 = []
    var_0 = module_0.lcs_length(list_0, bytes_0)
    assert var_0 == 0
    var_1 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_1 == 12
    var_2 = module_0.lcs_length(set_0, bytes_0)
    assert var_2 == 0
    var_3 = module_0.lcs_length(set_0, var_0)
    assert var_3 == 0
    var_4 = module_0.lcs_length(list_0, var_0)
    assert var_4 == 0
    module_0.lcs_length(var_1, set_0)
