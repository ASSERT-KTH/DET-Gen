# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.lcs_length(tuple_0, tuple_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.lcs_length(list_0, list_0)
    assert var_0 == 0
    bytes_0 = b"\xc3\x08\xb2\xcbq"
    var_1 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_1 == 5
    var_2 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_2 == 5
    none_type_0 = None
    module_1.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    complex_0 = 549 + 2029.248892j
    module_0.lcs_length(complex_0, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"T\xb8\x9d\xf8Q\x8b\xa3$\x12;):"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 12
    object_0 = module_1.object()
    module_0.lcs_length(object_0, object_0)
