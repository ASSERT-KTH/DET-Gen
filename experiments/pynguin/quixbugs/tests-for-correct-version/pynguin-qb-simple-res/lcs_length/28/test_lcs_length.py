# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xd6"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 1
    var_1 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_1 == 1
    bytes_1 = b"\xe3Ui\x8f"
    var_2 = module_0.lcs_length(bytes_1, bytes_1)
    assert var_2 == 4
    float_0 = 303.0
    module_0.lcs_length(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.lcs_length(tuple_0, tuple_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"A\x12\x14d\xf8\x8ci\x9c|\xe4\xbe\xde\xf8"
    none_type_0 = None
    module_0.lcs_length(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    tuple_0 = ()
    str_0 = "HD*E"
    dict_0 = {}
    tuple_1 = (list_0, tuple_0, str_0, dict_0)
    tuple_2 = (bool_0, tuple_1, list_0, bool_0)
    var_0 = module_0.lcs_length(tuple_2, str_0)
    assert var_0 == 0
    int_0 = 4664
    module_0.lcs_length(int_0, int_0)
