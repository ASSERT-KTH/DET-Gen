# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"#\xde\xd7n\xaa[\xf0\n\x14\xd0\xd8g\x00\xf5$\xae\xd6\xc6\xca"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.lcs_length(list_0, list_0)
    assert var_0 == 4


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.lcs_length(list_0, list_0)
    assert var_0 == 0
    var_1 = module_0.lcs_length(list_0, var_0)
    assert var_1 == 0
    object_0 = module_1.object()
    module_0.lcs_length(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    module_0.lcs_length(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "PdX7*As:xr}>Yx"
    var_0 = module_0.lcs_length(str_0, str_0)
    assert var_0 == 14
    var_1 = module_0.lcs_length(str_0, str_0)
    assert var_1 == 14
    tuple_0 = (var_1, var_1, var_1)
    module_0.lcs_length(var_1, tuple_0)
