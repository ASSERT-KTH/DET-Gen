# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1149
    list_0 = [int_0]
    module_0.kth(list_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x95\xfc\x1fM\xd1\x92\xa4\xbdO\xee"
    bool_0 = True
    tuple_0 = (bytes_0, bool_0)
    module_0.kth(tuple_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2954
    str_0 = "b"
    module_0.kth(str_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = -1004.60807 + 1268.53584j
    module_0.kth(complex_0, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'iIv7;X~"Wf0f'
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "''9qU*\\yJ(("
    list_0 = [str_0, str_0]
    bool_0 = False
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 == "''9qU*\\yJ(("
    module_0.kth(var_0, var_0)
