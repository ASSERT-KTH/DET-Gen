# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    bool_1 = True
    module_0.kth(dict_0, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    list_0 = [dict_0, dict_0, dict_0]
    list_1 = []
    str_0 = ")&[J$z;6_| l#m~t $N"
    list_2 = [list_0, list_0, list_1, str_0]
    module_0.kth(list_2, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.kth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xca\x18\x03\xbd7\xdav\xae"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -1211.281
    str_0 = "x,a(4nG>:"
    module_0.kth(str_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_1: bool_0, bool_0: bool_1, bool_0: bool_1}
    var_0 = module_0.kth(dict_0, bool_0)
    assert var_0 is False
    float_0 = 1327.3881
    module_0.kth(float_0, float_0)
