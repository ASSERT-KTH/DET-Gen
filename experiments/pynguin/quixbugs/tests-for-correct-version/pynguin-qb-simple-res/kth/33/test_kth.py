# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"wC"
    int_0 = -871
    module_0.kth(bytes_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"n\xd4\x1e\x97\xda{\xaa2#\xac\xf6H"
    list_0 = [bytes_0]
    module_0.kth(list_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.kth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xbb\xa5\x97:\xb1j\xa5\x11\xd0qU\xba\x8c\xde8a!\xfd"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x11\xd5\x1c\x86\xaaf\xf05"
    int_0 = 593
    module_0.kth(bytes_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.kth(tuple_0, bool_0)
    assert var_0 is False
    bool_1 = False
    module_0.kth(bool_1, bool_1)
