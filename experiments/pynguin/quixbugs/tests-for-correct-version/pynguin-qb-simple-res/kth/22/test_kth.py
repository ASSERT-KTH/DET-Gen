# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    var_0 = module_0.kth(tuple_0, bool_1)
    assert var_0 is False
    object_0 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.kth(tuple_0, bool_0)
    assert var_0 is False
    none_type_0 = None
    module_0.kth(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b",\x85\x97\xba\x1d\n\xd1"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    module_0.kth(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    var_0 = module_0.kth(tuple_0, bool_1)
    assert var_0 is True
    object_0 = module_1.object()
    module_0.kth(object_0, var_0)
