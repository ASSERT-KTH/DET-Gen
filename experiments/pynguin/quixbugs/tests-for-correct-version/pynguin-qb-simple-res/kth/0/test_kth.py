# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -341
    list_0 = [int_0]
    module_0.kth(list_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    module_0.kth(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    none_type_0 = None
    module_0.kth(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "yT3fyPKwJ79^LYEk;,"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "6tD\n"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 84
    list_0 = [int_0]
    module_0.kth(list_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    str_0 = "g$/+9R\rs7;TS|C*"
    var_0 = module_0.kth(str_0, bool_0)
    assert var_0 == "\r"
    tuple_0 = (bool_0, str_0, bool_0)
    module_0.kth(tuple_0, tuple_0)
