# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    float_0 = 3317.14
    tuple_0 = (bool_0, float_0)
    module_0.kth(tuple_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ".@PB$,I`CT.Jpyg"
    none_type_0 = None
    module_0.kth(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.kth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b'\xee\x8f\xdc\xcc\x1d\xbd\xbf\xfb\x06;[!u"T\xe5,"-\xb6'
    str_0 = "v"
    dict_0 = {str_0: bytes_0, str_0: str_0}
    bool_0 = False
    var_0 = module_0.kth(str_0, bool_0)
    assert var_0 == "v"
    module_1.object(*bytes_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'\xee\x8f\xdc\xcc\x1d\xbd\xf2*\x06;[\xc3u"T\xe5,"-\xb6'
    str_0 = "ef\t\x0byp_Fz\tG\x0cl"
    dict_0 = {str_0: bytes_0, str_0: str_0}
    bool_0 = False
    var_0 = module_0.kth(str_0, bool_0)
    assert var_0 == "\t"
    module_1.object(*bytes_0, **dict_0)
