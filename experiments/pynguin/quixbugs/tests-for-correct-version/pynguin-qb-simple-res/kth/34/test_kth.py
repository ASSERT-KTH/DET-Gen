# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    str_0 = "'';^E+mqRe"
    var_0 = module_0.kth(str_0, bool_0)
    assert var_0 == "'"
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"y\xd7y\xf4\xc3\x8e\xfa{t\xcd\xa1\xf0v\\\x14"
    set_0 = {bytes_0, bytes_0}
    tuple_0 = (set_0,)
    tuple_1 = (tuple_0, set_0, bytes_0)
    none_type_0 = None
    module_0.kth(tuple_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    module_0.kth(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"y\xd7y\xf4\xc3\x8e\xfa{t\xcd\xa1\xf0v\\\x14"
    set_0 = {bytes_0, bytes_0}
    module_0.kth(bytes_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    str_0 = "0vFdd$BYC37]"
    var_0 = module_0.kth(str_0, bool_0)
    assert var_0 == "$"
    module_1.object(*var_0, **var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    str_0 = "G^>S2&)"
    var_0 = module_0.kth(str_0, bool_0)
    assert var_0 == ")"
    module_0.kth(bool_0, str_0)
