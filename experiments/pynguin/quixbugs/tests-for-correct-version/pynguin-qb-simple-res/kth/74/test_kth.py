# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 60
    list_0 = [int_0, int_0]
    module_0.kth(list_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x00\x1a\xba\xbd\xc5"
    none_type_0 = None
    module_0.kth(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.kth(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "P6-"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is False
    bytes_0 = b".\x80\xefft\x94\xc7Rx:\t\xb7"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is False
    bytes_0 = b".\x80\xefft\x94\xc7Rx:\t\xb7"
    var_1 = module_0.kth(bytes_0, var_0)
    assert var_1 == 9
    module_0.kth(bytes_0, bytes_0)
