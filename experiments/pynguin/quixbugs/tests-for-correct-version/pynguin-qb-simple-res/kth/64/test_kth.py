# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = " K"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.kth(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is False
    object_0 = module_1.object()
    str_0 = "DQI(& T,{|J-\x0c/%\nx"
    module_0.kth(str_0, str_0)


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is False
    str_0 = "77\tZMeN"
    var_1 = module_0.kth(str_0, bool_0)
    assert var_1 == "\t"
    tuple_0 = (var_1, var_0, var_0)
    module_0.kth(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0]
    module_0.kth(list_0, bool_0)
