# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = -57.205656
    tuple_0 = (float_0,)
    module_0.kth(tuple_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 1169
    int_1 = 1899
    tuple_0 = (int_0, int_0, int_1, int_0)
    module_0.kth(tuple_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xd1\xf4\x1e\x02<G\xc0f.\x81"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.kth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.kth(dict_0, bool_0)
    assert var_0 is False
    module_0.kth(dict_0, dict_0)
