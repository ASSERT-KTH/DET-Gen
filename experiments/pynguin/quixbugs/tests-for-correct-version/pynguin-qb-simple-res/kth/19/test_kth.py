# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x08\x9b\x97\xc9YeN\xc6\xf4\xb06\xb3/\xb0\x9c\x15"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    module_0.kth(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "%o\"UUhZo'vkWZh"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x08\x9b\x97\xc9YeN\xc6\xf4\xb06\xb3/\xb0\x9c\x15"
    bool_0 = False
    var_0 = module_0.kth(bytes_0, bool_0)
    assert var_0 == 8
    module_0.kth(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xa9<&\xb6\xfc\xe1\xc0dC^,\x91"
    bool_0 = False
    var_0 = module_0.kth(bytes_0, bool_0)
    assert var_0 == 38
    module_0.kth(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"/\xa9\x85\xe6\x98\xae\xc3\x8c\x91\xe7L\xaf"
    float_0 = 5034.12
    module_0.kth(bytes_0, float_0)
