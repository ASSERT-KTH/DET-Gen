# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"+x\x82B^\xde\x16\xfaF\x00+"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    int_0 = -1801
    tuple_0 = (bool_0, int_0)
    var_0 = module_0.kth(tuple_0, bool_0)
    assert var_0 == -1801
    str_0 = ""
    none_type_0 = None
    module_0.kth(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.kth(tuple_0, bool_0)
    assert var_0 is False
    str_0 = ""
    none_type_0 = None
    module_0.kth(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    int_0 = -1801
    tuple_0 = (bool_0, int_0)
    var_0 = module_0.kth(tuple_0, bool_0)
    assert var_0 == -1801
    str_0 = "m)iy{N\nPU&"
    bool_1 = True
    var_1 = module_0.kth(str_0, bool_1)
    assert var_1 == "&"
    module_0.kth(str_0, tuple_0)
