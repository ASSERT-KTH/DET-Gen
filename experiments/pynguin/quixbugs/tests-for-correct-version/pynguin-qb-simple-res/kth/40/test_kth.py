# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is False
    module_1.object(*bool_0, **var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"<\xef\x86\x0e\x0e\x1fH\x9f\xb3\x9c\xe6E\xa9e\xef"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"<\xef\x86\x0e\x0e\x1fH\x9f\xb3\x9c\xe6E\xa9e\xef"
    bool_0 = True
    var_0 = module_0.kth(bytes_0, bool_0)
    assert var_0 == 14
    none_type_0 = None
    module_0.kth(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0]
    module_0.kth(list_0, bool_0)
