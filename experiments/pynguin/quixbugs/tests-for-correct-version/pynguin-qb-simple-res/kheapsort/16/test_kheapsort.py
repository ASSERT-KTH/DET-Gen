# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.kheapsort(none_type_0, none_type_0)


def test_case_1():
    int_0 = 1813
    list_0 = []
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, int_0)
    object_0 = module_1.object(*var_0)
    var_1 = module_0.kheapsort(object_0, none_type_0)
    float_0 = 3144.6
    var_2 = module_0.kheapsort(var_0, float_0)
    var_3 = module_0.kheapsort(var_1, int_0)
    var_4 = module_0.kheapsort(var_2, var_0)
    var_5 = module_0.kheapsort(var_2, float_0)
    tuple_0 = (list_0,)
    var_6 = module_0.kheapsort(list_0, var_2)
    var_7 = module_0.kheapsort(tuple_0, var_1)
    var_8 = module_0.kheapsort(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1813
    list_0 = [int_0]
    var_0 = module_0.kheapsort(list_0, int_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 1813
    list_0 = [int_0, int_0]
    none_type_0 = None
    var_0 = module_0.kheapsort(int_0, none_type_0)
    none_type_1 = None
    int_1 = 141
    var_1 = module_0.kheapsort(none_type_1, int_1)
    var_2 = module_0.kheapsort(int_0, int_0)
    none_type_2 = None
    var_3 = module_0.kheapsort(none_type_2, list_0)
    var_4 = module_0.kheapsort(list_0, int_0)
    module_1.object(*var_4)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    var_0 = module_0.kheapsort(bool_0, bool_0)
    var_1 = module_0.kheapsort(var_0, var_0)
    int_0 = -1870
    list_0 = [int_0]
    none_type_0 = None
    int_1 = 141
    var_2 = module_0.kheapsort(none_type_0, int_1)
    var_3 = module_0.kheapsort(int_0, int_0)
    none_type_1 = None
    var_4 = module_0.kheapsort(none_type_1, list_0)
    var_5 = module_0.kheapsort(list_0, int_0)
    module_1.object(*var_5)
