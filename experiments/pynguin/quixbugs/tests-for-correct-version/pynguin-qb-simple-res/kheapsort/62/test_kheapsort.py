# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xb0\xa9\xe6"
    var_0 = module_0.kheapsort(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -3060
    list_0 = [int_0]
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    list_1 = []
    var_1 = module_0.kheapsort(list_0, var_0)
    var_2 = module_0.kheapsort(list_1, list_1)
    var_3 = module_0.kheapsort(list_1, list_1)
    module_1.object(*var_0)


def test_case_2():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    list_1 = []
    var_1 = module_0.kheapsort(list_0, var_0)
    var_2 = module_0.kheapsort(list_1, list_1)
    var_3 = module_0.kheapsort(list_1, list_1)
    list_2 = []
    str_0 = "3{@YN\nLu"
    object_0 = module_1.object(*var_0)
    var_4 = module_0.kheapsort(object_0, list_0)
    var_5 = module_0.kheapsort(object_0, list_1)
    var_6 = module_0.kheapsort(var_3, var_2)
    var_7 = module_0.kheapsort(list_2, str_0)
    var_8 = module_0.kheapsort(object_0, list_1)
    var_9 = module_0.kheapsort(list_1, list_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -3060
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.kheapsort(list_0, list_0)
    none_type_0 = None
    var_1 = module_0.kheapsort(list_0, none_type_0)
    list_1 = []
    var_2 = module_0.kheapsort(var_1, none_type_0)
    var_3 = module_0.kheapsort(list_0, var_1)
    var_4 = module_0.kheapsort(list_1, list_1)
    var_5 = module_0.kheapsort(list_1, list_1)
    module_1.object(*var_1)
