# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.kheapsort(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    none_type_0 = None
    list_0 = [object_0, object_0]
    var_0 = module_0.kheapsort(list_0, list_0)
    var_1 = module_0.kheapsort(object_0, var_0)
    list_1 = [list_0]
    var_2 = module_0.kheapsort(list_1, none_type_0)
    module_1.object(*var_2)


def test_case_2():
    object_0 = module_1.object()
    var_0 = module_0.kheapsort(object_0, object_0)
    var_1 = module_0.kheapsort(object_0, object_0)
    bytes_0 = b"~D@\xf9\xbf\x87\xbb\x9b\xfct\xed"
    list_0 = [object_0, object_0, bytes_0]
    var_2 = module_0.kheapsort(list_0, var_0)
    none_type_0 = None
    var_3 = module_0.kheapsort(var_0, none_type_0)
    var_4 = module_0.kheapsort(var_1, list_0)
    var_5 = module_0.kheapsort(object_0, none_type_0)
    var_6 = module_0.kheapsort(var_3, var_4)
    var_7 = module_0.kheapsort(var_1, var_3)
    var_8 = module_0.kheapsort(object_0, var_4)
    var_9 = module_0.kheapsort(object_0, var_1)
    object_1 = module_1.object()
    var_10 = module_0.kheapsort(var_5, var_9)
    var_11 = module_0.kheapsort(var_2, var_3)
    bool_0 = False
    var_12 = module_0.kheapsort(bool_0, bool_0)
    var_13 = module_0.kheapsort(none_type_0, var_2)
    list_1 = []
    none_type_1 = None
    var_14 = module_0.kheapsort(var_12, var_9)
    var_15 = module_0.kheapsort(list_1, none_type_1)
    var_16 = module_0.kheapsort(object_1, var_4)
    object_2 = module_1.object(*var_15)
    var_17 = module_0.kheapsort(var_13, object_2)
    var_18 = module_0.kheapsort(object_1, object_2)
    var_19 = module_0.kheapsort(var_15, var_13)
    var_20 = module_0.kheapsort(var_17, var_14)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    var_0 = module_0.kheapsort(object_0, object_0)
    var_1 = module_0.kheapsort(object_0, object_0)
    bytes_0 = b"~D@\xf9\xbf\x87\xbb\x9b\xfct\xed"
    none_type_0 = None
    var_2 = module_0.kheapsort(object_0, none_type_0)
    list_0 = [object_0, var_1, var_1]
    var_3 = module_0.kheapsort(bytes_0, var_2)
    var_4 = module_0.kheapsort(object_0, var_1)
    object_1 = module_1.object()
    var_5 = module_0.kheapsort(var_2, var_4)
    var_6 = module_0.kheapsort(object_1, var_5)
    list_1 = [list_0, list_0]
    var_7 = module_0.kheapsort(var_1, var_4)
    var_8 = module_0.kheapsort(list_1, none_type_0)
    var_9 = module_0.kheapsort(var_4, var_4)
    module_1.object(*var_8)
