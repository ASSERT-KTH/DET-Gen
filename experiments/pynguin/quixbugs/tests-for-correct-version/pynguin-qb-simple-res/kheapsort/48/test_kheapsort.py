# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.kheapsort(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 4666
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.kheapsort(list_0, list_0)
    var_1 = module_0.kheapsort(list_0, list_0)
    var_2 = module_0.kheapsort(int_0, var_1)
    var_3 = module_0.kheapsort(var_2, int_0)
    none_type_0 = None
    var_4 = module_0.kheapsort(var_3, var_2)
    var_5 = module_0.kheapsort(list_0, none_type_0)
    var_6 = module_0.kheapsort(var_2, none_type_0)
    module_1.object(*var_5)


def test_case_2():
    int_0 = 252
    var_0 = module_0.kheapsort(int_0, int_0)
    int_1 = 4666
    list_0 = [int_1, int_1, int_1]
    none_type_0 = None
    list_1 = []
    var_1 = module_0.kheapsort(list_0, list_1)
    var_2 = module_0.kheapsort(list_1, list_1)
    var_3 = module_0.kheapsort(var_2, var_2)
    var_4 = module_0.kheapsort(list_1, none_type_0)
    none_type_1 = None
    object_0 = module_1.object(*var_4)
    tuple_0 = ()
    var_5 = module_0.kheapsort(object_0, tuple_0)
    bool_0 = True
    var_6 = module_0.kheapsort(list_1, bool_0)
    var_7 = module_0.kheapsort(object_0, tuple_0)
    object_1 = module_1.object()
    var_8 = module_0.kheapsort(none_type_1, object_1)
