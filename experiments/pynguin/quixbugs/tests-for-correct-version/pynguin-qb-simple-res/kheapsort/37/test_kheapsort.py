# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.kheapsort(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.kheapsort(list_0, bool_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "Fv%,2Pt6rJP[or]B<s"
    int_0 = -1498
    var_0 = module_0.kheapsort(str_0, int_0)
    none_type_0 = None
    var_1 = module_0.kheapsort(str_0, var_0)
    var_2 = module_0.kheapsort(none_type_0, var_0)
    var_3 = module_0.kheapsort(none_type_0, var_0)
    var_4 = module_0.kheapsort(var_2, str_0)
    bool_0 = True
    var_5 = module_0.kheapsort(bool_0, var_1)
    float_0 = 2314.1
    var_6 = module_0.kheapsort(var_3, float_0)
    bytes_0 = b"\x1bh\xb3\xac"
    var_7 = module_0.kheapsort(none_type_0, bytes_0)
    var_8 = module_0.kheapsort(var_2, none_type_0)
    var_9 = module_0.kheapsort(var_5, var_7)
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    var_10 = module_0.kheapsort(list_0, bool_1)
    var_11 = module_0.kheapsort(var_10, var_10)
    bool_2 = False
    var_12 = module_0.kheapsort(bool_2, bool_2)
    module_1.object(*var_10)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    module_1.object(*var_0)
