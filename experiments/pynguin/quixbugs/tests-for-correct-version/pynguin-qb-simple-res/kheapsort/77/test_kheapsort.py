# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    int_0 = 42
    var_0 = module_0.kheapsort(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    list_0 = [set_0]
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    float_0 = 775.3
    var_1 = module_0.kheapsort(var_0, float_0)
    bytes_0 = b"\xe3Jr\x02"
    var_2 = module_0.kheapsort(bytes_0, var_0)
    var_3 = module_0.kheapsort(set_0, var_0)
    var_4 = module_0.kheapsort(bytes_0, bytes_0)
    var_5 = module_0.kheapsort(none_type_0, none_type_0)
    module_1.object(*var_0)


def test_case_2():
    set_0 = set()
    list_0 = []
    var_0 = module_0.kheapsort(list_0, list_0)
    none_type_0 = None
    var_1 = module_0.kheapsort(list_0, none_type_0)
    float_0 = 775.4037172158698
    var_2 = module_0.kheapsort(var_1, var_0)
    var_3 = module_0.kheapsort(float_0, float_0)
    bool_0 = False
    bytes_0 = b"\xe3r\x02"
    var_4 = module_0.kheapsort(bytes_0, var_1)
    var_5 = module_0.kheapsort(set_0, var_1)
    bytes_1 = b"F\xa4z\xa9\xf7\xa4"
    var_6 = module_0.kheapsort(bytes_0, bytes_0)
    var_7 = module_0.kheapsort(set_0, bytes_1)
    var_8 = module_0.kheapsort(list_0, float_0)
    var_9 = module_0.kheapsort(bytes_0, set_0)
    var_10 = module_0.kheapsort(var_3, none_type_0)
    object_0 = module_1.object(*var_1)
    var_11 = module_0.kheapsort(list_0, object_0)
    var_12 = module_0.kheapsort(bool_0, bool_0)
    var_13 = module_0.kheapsort(var_12, var_0)
    var_14 = module_0.kheapsort(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    none_type_0 = None
    var_0 = module_0.kheapsort(set_0, none_type_0)
    list_0 = [set_0, set_0]
    var_1 = module_0.kheapsort(list_0, list_0)
    none_type_1 = None
    var_2 = module_0.kheapsort(list_0, none_type_1)
    float_0 = 775.3
    var_3 = module_0.kheapsort(var_2, var_1)
    bytes_0 = b"\xe3Jr\x02"
    var_4 = module_0.kheapsort(bytes_0, var_2)
    var_5 = module_0.kheapsort(set_0, var_2)
    bytes_1 = b"F\xa4z\xa9\xf7\xa4"
    var_6 = module_0.kheapsort(set_0, bytes_1)
    var_7 = module_0.kheapsort(list_0, float_0)
    var_8 = module_0.kheapsort(bytes_0, set_0)
    var_9 = module_1.object()
    module_1.object(*var_2)
