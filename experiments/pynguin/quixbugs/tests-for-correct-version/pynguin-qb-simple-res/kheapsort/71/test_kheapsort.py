# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    float_0 = 1003.33
    var_0 = module_0.kheapsort(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    none_type_0 = None
    list_1 = [list_0]
    var_0 = module_0.kheapsort(list_1, none_type_0)
    var_1 = module_0.kheapsort(list_0, var_0)
    object_0 = module_1.object()
    module_1.object(*var_0)


def test_case_2():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    none_type_1 = None
    var_1 = module_0.kheapsort(list_0, none_type_1)
    list_1 = [list_0]
    bool_0 = True
    var_2 = module_0.kheapsort(bool_0, none_type_1)
    var_3 = module_0.kheapsort(list_0, bool_0)
    none_type_2 = None
    var_4 = module_0.kheapsort(list_1, none_type_2)
    var_5 = module_0.kheapsort(list_0, none_type_2)
    object_0 = module_1.object()
    complex_0 = -188.25 - 1859.1j
    object_1 = module_1.object(*var_5)
    var_6 = module_0.kheapsort(none_type_2, none_type_2)
    var_7 = module_0.kheapsort(complex_0, complex_0)
    var_8 = module_0.kheapsort(var_7, var_7)
    var_9 = module_0.kheapsort(object_1, var_7)
    var_10 = module_0.kheapsort(complex_0, var_7)
    var_11 = module_0.kheapsort(none_type_0, none_type_0)
    complex_1 = 256.32029 + 169j
    var_12 = module_0.kheapsort(var_8, var_10)
    var_13 = module_0.kheapsort(var_10, var_2)
    var_14 = module_0.kheapsort(object_1, var_7)
    var_15 = module_0.kheapsort(complex_1, var_1)
    var_16 = module_0.kheapsort(var_13, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    none_type_0 = None
    list_1 = [list_0, list_0]
    var_0 = module_0.kheapsort(list_1, none_type_0)
    var_1 = module_0.kheapsort(list_0, var_0)
    object_0 = module_1.object()
    module_1.object(*var_0)
