# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"u\x1bw\xba'h\x0enh"
    var_0 = module_0.kheapsort(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    list_0 = []
    var_0 = module_0.kheapsort(list_0, none_type_0)
    object_0 = module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.kheapsort(list_0, bool_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    var_0 = module_0.kheapsort(bool_0, bool_0)
    var_1 = module_0.kheapsort(var_0, var_0)
    var_2 = module_0.kheapsort(var_1, var_1)
    list_0 = [bool_0, bool_0]
    var_3 = module_0.kheapsort(list_0, bool_0)
    var_4 = module_0.kheapsort(bool_0, var_1)
    var_5 = module_0.kheapsort(var_1, var_1)
    var_6 = module_0.kheapsort(list_0, var_5)
    var_7 = module_0.kheapsort(bool_0, bool_0)
    var_8 = module_0.kheapsort(var_1, var_7)
    none_type_0 = None
    object_0 = module_1.object()
    var_9 = module_0.kheapsort(var_3, var_1)
    int_0 = 2057
    var_10 = module_0.kheapsort(list_0, int_0)
    var_11 = module_0.kheapsort(var_2, none_type_0)
    var_12 = module_0.kheapsort(var_7, var_6)
    var_13 = module_0.kheapsort(var_6, var_1)
    var_14 = module_0.kheapsort(var_1, var_5)
    var_15 = module_0.kheapsort(list_0, var_11)
    var_16 = module_0.kheapsort(none_type_0, var_11)
    var_17 = module_0.kheapsort(var_8, var_10)
    bytes_0 = b"m\x81\x1c\x07\xce\xcb2`\xf1N\xbb\x9f\x7fKX\xf2\x8d=\xe4\x19"
    var_18 = module_0.kheapsort(bytes_0, var_3)
    bool_1 = True
    var_19 = module_0.kheapsort(bool_1, var_1)
    module_1.object(*var_10)
