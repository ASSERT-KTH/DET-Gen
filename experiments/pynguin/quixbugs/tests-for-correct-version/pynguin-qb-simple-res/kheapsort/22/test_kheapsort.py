# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    int_0 = 1959
    var_0 = module_0.kheapsort(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    bytes_0 = b"\xc4\x1f\xbe\xa5\xea\xcdc\xc53\xa0"
    list_0 = [bytes_0]
    var_0 = module_0.kheapsort(list_0, none_type_0)
    module_1.object(*var_0)


def test_case_2():
    str_0 = "3Ct1(e"
    set_0 = {str_0, str_0, str_0}
    var_0 = module_0.kheapsort(set_0, set_0)
    var_1 = module_0.kheapsort(var_0, var_0)
    none_type_0 = None
    object_0 = module_1.object()
    var_2 = module_0.kheapsort(none_type_0, none_type_0)
    var_3 = module_0.kheapsort(var_2, none_type_0)
    bytes_0 = b"\x80\xd3e\xf8|\xc0"
    var_4 = module_0.kheapsort(var_2, bytes_0)
    var_5 = module_0.kheapsort(none_type_0, none_type_0)
    var_6 = module_0.kheapsort(var_4, var_2)
    bytes_1 = b"\xc4\x1f\xbe\xa5\xea\xcdc\xc53\xa0"
    var_7 = module_0.kheapsort(bytes_1, var_2)
    var_8 = module_0.kheapsort(var_5, bytes_1)
    var_9 = module_0.kheapsort(bytes_0, var_7)
    var_10 = module_0.kheapsort(bytes_1, bytes_1)
    list_0 = []
    var_11 = module_0.kheapsort(var_10, object_0)
    var_12 = module_0.kheapsort(list_0, list_0)
    var_13 = module_0.kheapsort(var_5, var_8)
    var_14 = module_0.kheapsort(var_10, var_5)
    none_type_1 = None
    dict_0 = {none_type_1: none_type_1}
    var_15 = module_0.kheapsort(list_0, none_type_0)
    var_16 = module_1.object()
    var_17 = module_0.kheapsort(var_12, var_10)
    var_18 = module_0.kheapsort(var_5, none_type_0)
    var_19 = module_0.kheapsort(var_12, var_13)
    var_20 = module_0.kheapsort(var_12, list_0)
    var_21 = module_0.kheapsort(none_type_1, dict_0)
    var_22 = module_0.kheapsort(var_16, var_10)
    object_1 = module_1.object(*var_15)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    bytes_0 = b"\x13\xb4\xeb\xafd\xc5\xf4Q\x02\xe89\xd9\xbf\xd4\xb4\xd6"
    var_0 = module_0.kheapsort(bytes_0, none_type_0)
    var_1 = module_0.kheapsort(none_type_0, none_type_0)
    bytes_1 = b"\xc4\x1f\xbe\xa5\xea\xcdc\xc53\xa0"
    var_2 = module_0.kheapsort(var_1, bytes_1)
    list_0 = [bytes_0, bytes_0, bytes_1]
    var_3 = module_0.kheapsort(var_1, var_2)
    none_type_1 = None
    var_4 = module_0.kheapsort(list_0, none_type_0)
    var_5 = module_0.kheapsort(var_3, none_type_1)
    var_6 = module_0.kheapsort(var_1, none_type_0)
    module_1.object(*var_4)
