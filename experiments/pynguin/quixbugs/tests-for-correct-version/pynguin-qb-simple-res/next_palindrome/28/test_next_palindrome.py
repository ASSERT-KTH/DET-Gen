# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import next_palindrome as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xe0"
    module_0.next_palindrome(bytes_0)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.next_palindrome(bytes_0)


def test_case_2():
    list_0 = []
    var_0 = module_0.next_palindrome(list_0)
    var_1 = module_0.next_palindrome(var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.next_palindrome(dict_0)
    var_1 = module_0.next_palindrome(var_0)
    bytes_0 = b"\x1c\xb1\x02\x89\xfc\x17\xc0K\r\xc14\x97?m\xa0E"
    module_0.next_palindrome(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.next_palindrome(list_0)
    var_1 = module_0.next_palindrome(var_0)
    var_2 = module_0.next_palindrome(var_0)
    var_3 = module_0.next_palindrome(var_2)
    var_4 = module_0.next_palindrome(var_1)
    var_5 = module_0.next_palindrome(var_3)
    var_6 = module_0.next_palindrome(var_1)
    var_7 = module_0.next_palindrome(var_6)
    var_8 = module_0.next_palindrome(var_0)
    var_9 = module_0.next_palindrome(var_5)
