# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import next_palindrome as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"YP\xe4T"
    module_0.next_palindrome(bytes_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.next_palindrome(tuple_0)
    var_1 = module_0.next_palindrome(var_0)
    var_2 = module_0.next_palindrome(var_0)
    var_3 = module_0.next_palindrome(var_0)
    var_4 = module_0.next_palindrome(var_0)
    var_5 = module_0.next_palindrome(var_3)
    var_6 = module_0.next_palindrome(var_1)
    var_7 = module_0.next_palindrome(var_5)
    var_8 = module_0.next_palindrome(var_3)
    var_9 = module_0.next_palindrome(var_8)


def test_case_2():
    complex_0 = 3338.356554 + 1694.028811j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    var_0 = module_0.next_palindrome(list_0)


def test_case_3():
    int_0 = 3311
    list_0 = [int_0]
    var_0 = module_0.next_palindrome(list_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.next_palindrome(tuple_0)
    var_1 = module_0.next_palindrome(var_0)
    var_2 = module_0.next_palindrome(var_0)
    var_3 = module_0.next_palindrome(var_0)
    var_4 = module_0.next_palindrome(var_2)
    var_5 = module_0.next_palindrome(var_2)
    var_6 = module_0.next_palindrome(var_1)
    var_7 = module_0.next_palindrome(var_5)
    var_8 = module_0.next_palindrome(var_7)
    var_9 = module_0.next_palindrome(var_6)
    var_10 = module_0.next_palindrome(var_9)
    var_11 = module_0.next_palindrome(var_10)
    var_12 = module_0.next_palindrome(var_9)
    var_13 = module_0.next_palindrome(var_10)
    var_14 = module_0.next_palindrome(var_13)
    var_15 = module_0.next_palindrome(var_10)
    var_16 = module_0.next_palindrome(var_14)
    var_17 = module_0.next_palindrome(var_9)
    var_18 = module_0.next_palindrome(var_11)
    var_19 = module_0.next_palindrome(var_18)
