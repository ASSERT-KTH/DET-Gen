# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "9ci_5[c%\nA9r"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    str_0 = "9ci_5[c%\nA9r"
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.find_first_in_sorted(dict_0, bool_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -2417
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -2417
    list_0 = [int_0, int_0, int_0, int_0]
    bytes_0 = b"\nr\xd1\x89\x16\x0f\x94\xbc9"
    dict_0 = {bytes_0: int_0, int_0: list_0}
    tuple_0 = (bytes_0, dict_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, dict_0)
    assert var_0 == 1
    var_1 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_1 == 0
    module_0.find_first_in_sorted(var_1, var_1)
