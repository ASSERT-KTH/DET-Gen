# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ".CDdCeYlaj+PZ;["
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = 2292
    module_0.find_first_in_sorted(int_0, int_0)


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(tuple_0, none_type_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1, bool_1)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    bool_1 = False
    module_0.find_first_in_sorted(bool_1, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "@!vEL92IX$.TN"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    dict_0 = {}
    tuple_0 = (str_0, dict_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, dict_0)
    assert var_1 == 1
    module_0.find_first_in_sorted(tuple_0, var_1)
