# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xf2\x05\x11\xea\xb9\xc0\xf4\xe7\xe1\xf1\xe0\r\xeb\xdf\xee\xc1s\x04i"
    str_0 = "e~;G<x]oSjLP`o9}"
    module_0.find_first_in_sorted(bytes_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -8
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "{#uN["
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, str_0)


def test_case_4():
    str_0 = '`$p`[^a=7?"_\x0by1'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "8"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    complex_0 = 216.36449 + 1711.2j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    list_0 = [dict_0, complex_0, complex_0]
    var_0 = module_0.find_first_in_sorted(list_0, complex_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_7():
    bool_0 = False
    tuple_0 = ()
    tuple_1 = (bool_0, bool_0, tuple_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, bool_0)
    assert var_0 == 0
