# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"R\x83\xf5.\n\x8dw\x06l"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(dict_0, none_type_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "K"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    list_0 = []
    module_0.find_first_in_sorted(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ";qo\\waP}<J&"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


def test_case_4():
    str_0 = "nX"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 923
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    str_0 = "DW"
    module_0.find_first_in_sorted(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    tuple_0 = ()
    int_0 = 2055
    tuple_1 = (tuple_0, int_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, int_0)
    assert var_0 == 1
    object_0 = module_1.object()
    none_type_0 = None
    module_0.find_first_in_sorted(object_0, none_type_0)
