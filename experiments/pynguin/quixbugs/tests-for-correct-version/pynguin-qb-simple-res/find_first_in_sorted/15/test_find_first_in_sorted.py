# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_0.find_first_in_sorted(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = " "
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_2 == -1
    module_0.find_first_in_sorted(var_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = " "
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(str_0, var_0)


def test_case_3():
    str_0 = "&wdi#3"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "s "
    bool_0 = False
    tuple_0 = (str_0, str_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 0
    object_0 = module_1.object()
    module_0.find_first_in_sorted(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 2333
    list_0 = [int_0]
    set_0 = set()
    object_0 = module_1.object()
    bool_0 = False
    tuple_0 = (list_0, set_0, object_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, object_0)
    assert var_0 == 2
    str_0 = ""
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    bool_1 = False
    tuple_1 = (str_0, str_0, bool_1)
    var_2 = module_0.find_first_in_sorted(tuple_1, str_0)
    assert var_2 == 0
    int_1 = 88
    module_0.find_first_in_sorted(int_1, bool_1)
