# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x8e]\x94P\x80(\xb5+\xba\xe56\x0e\x00(\xc5"
    none_type_0 = None
    module_0.find_first_in_sorted(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    var_0 = module_0.find_first_in_sorted(bytes_0, bytes_0)
    assert var_0 == -1
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_2 == -1
    var_3 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_3 == -1
    module_0.find_first_in_sorted(var_2, var_3)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "T"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == 0
    module_0.find_first_in_sorted(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    var_0 = module_0.find_first_in_sorted(list_0, tuple_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(list_0, tuple_0)
    assert var_1 == 0
    module_0.find_first_in_sorted(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "D-o9KLtb<5\rH)$|"
    str_1 = "Ge7S]N@_],y/G%qW\x0btg?"
    var_0 = module_0.find_first_in_sorted(str_1, str_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(str_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    bool_0 = False
    tuple_1 = (tuple_0, bool_0, tuple_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, bool_0)
    assert var_0 == 1
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    module_0.find_first_in_sorted(list_0, list_0)
