# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "#G8\n$'MH3HnKd0}~a"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


def test_case_1():
    dict_0 = {}
    object_0 = module_1.object()
    var_0 = module_0.find_first_in_sorted(dict_0, object_0)
    assert var_0 == -1
    str_0 = '/"tR>Ct]=Ukz'
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xeeM\x95\x04=\x91\xba\xf4\x87\xbf"
    list_0 = [bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xeeM\x95\x04=\x91\xba\xf4\x87\xbf"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    object_0 = module_1.object()
    bool_0 = True
    tuple_0 = (object_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 1
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1
    list_0 = []
    tuple_1 = (dict_0, dict_0, list_0)
    var_2 = module_0.find_first_in_sorted(dict_0, tuple_1)
    assert var_2 == -1
    var_3 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_3 == -1
    module_0.find_first_in_sorted(var_1, var_1)
