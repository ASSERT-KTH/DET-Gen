# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xba\x15\xb9\x94fT&\xf0\x7f\xfc\xc8\xcf\xd2\xa5z\x94\x16/\r"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    str_0 = "&9LDUAB4{"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    list_0 = []
    var_1 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "&9LDUAB4{"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = -687
    module_0.find_first_in_sorted(var_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "#"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == 0
    module_0.find_first_in_sorted(var_1, str_0)


def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0


def test_case_5():
    bool_0 = False
    tuple_0 = ()
    tuple_1 = (bool_0, tuple_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, tuple_0)
    assert var_0 == 1
