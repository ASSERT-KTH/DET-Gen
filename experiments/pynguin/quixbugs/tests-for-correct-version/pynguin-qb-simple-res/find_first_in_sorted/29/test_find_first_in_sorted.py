# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "8]6_sj6l=D&_Dz*a}G"
    int_0 = -979
    module_0.find_first_in_sorted(str_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    float_0 = 543.12853
    bool_0 = False
    dict_0 = {bool_0: float_0, bool_0: bool_0, float_0: tuple_0}
    tuple_1 = (tuple_0, float_0, bool_0, dict_0)
    tuple_2 = module_0.find_first_in_sorted(tuple_0, tuple_1)
    assert tuple_2 == -1
    list_0 = [tuple_0, float_0]
    module_0.find_first_in_sorted(tuple_2, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -4745
    bool_0 = False
    tuple_0 = (int_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_0 == 0
    bool_1 = False
    module_0.find_first_in_sorted(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xb4\xc2\xfd\t\xc8\xc0\x95\xac\x88[n\x1c\x83}\xd2\x93\xfa"
    int_0 = -2588
    complex_0 = 1897.3 + 771j
    set_0 = set()
    list_0 = [int_0, complex_0]
    tuple_0 = (int_0, complex_0, set_0, list_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, set_0)
    assert var_0 == 2
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "8]6_sj6l=D&_Dz*a}G"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = -979
    module_0.find_first_in_sorted(str_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    bool_1 = True
    module_0.find_first_in_sorted(bool_1, var_0)
