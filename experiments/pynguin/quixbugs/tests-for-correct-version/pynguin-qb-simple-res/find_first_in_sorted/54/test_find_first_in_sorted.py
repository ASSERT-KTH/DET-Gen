# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"@\x12\x8a\xc1\x0c\x05j\xaf\x1dJwp\xe2"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    str_0 = ""
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [bool_0, list_0, list_0, bool_0]
    tuple_0 = (bool_0, list_1)
    var_0 = module_0.find_first_in_sorted(tuple_0, list_1)
    assert var_0 == 1
    var_1 = module_0.find_first_in_sorted(tuple_0, list_1)
    assert var_1 == 1
    bytes_0 = b"mJ"
    module_0.find_first_in_sorted(list_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "T"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [bool_0, list_0, list_0, bool_0]
    tuple_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert tuple_0 == 1
    module_0.find_first_in_sorted(tuple_0, list_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = " 2+2\n#GDZ!-=~xfUW"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bytes_0 = b"\xc9[\xae\x84\xc6"
    module_0.find_first_in_sorted(bytes_0, bytes_0)
