# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = ""
    bool_0 = False
    var_0 = module_0.find_first_in_sorted(str_0, bool_0)
    assert var_0 == -1
    int_0 = 354
    bool_1 = True
    tuple_0 = (str_0, str_0, int_0, bool_1)
    var_1 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_1 == 2


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    object_0 = module_1.object(**dict_0)
    module_0.find_first_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"E&\xdc\xc6\x16\x98\x85\xa1I\xd1!\xcc\xff"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ""
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    list_0 = [str_0, str_0]
    var_1 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_1 == 0
    none_type_0 = None
    module_0.find_first_in_sorted(var_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "YYf\x0ccxkCdBznPz/oc"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bytes_0 = b"%\x91x@\x85.\x12e=\xd8;\t\x83~\x19"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_first_in_sorted(var_0, list_0)
