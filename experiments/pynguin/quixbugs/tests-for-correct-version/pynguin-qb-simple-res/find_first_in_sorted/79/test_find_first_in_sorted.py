# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcfc\x8b\xb8\x87\xd0\xc2\xde\x1d)\xb6"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_0.find_first_in_sorted(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "v7?_4dDxD"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    set_0 = set()
    float_0 = -730.017
    float_1 = -1630.03681
    tuple_0 = (set_0, float_0, float_1)
    var_0 = module_0.find_first_in_sorted(tuple_0, float_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "iNy?81fQ&a`38Q#9L"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "4"
    var_1 = module_0.find_first_in_sorted(str_1, str_1)
    assert var_1 == 0
    str_2 = "v7?_4dDxD"
    var_2 = module_0.find_first_in_sorted(str_2, str_2)
    assert var_2 == -1
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)
