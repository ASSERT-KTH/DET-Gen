# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "6JJJco%JweSF<m"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.find_first_in_sorted(dict_0, tuple_0)
    assert var_0 == -1
    bool_1 = True
    module_0.find_first_in_sorted(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '%zj?IZ;K2)K{J7r"Y\x0c|'
    list_0 = [str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    object_0 = module_1.object()
    module_0.find_first_in_sorted(var_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(dict_0, none_type_0)
    assert var_0 == -1
    list_0 = [var_0, none_type_0, var_0, dict_0]
    var_1 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_1 == 2
    bytes_0 = b"\x92\x82\xd5\xa0\x06\x14\x91\x04e;S\\\xbb\x0c\xa8\x15\x0c="
    module_0.find_first_in_sorted(none_type_0, bytes_0)
