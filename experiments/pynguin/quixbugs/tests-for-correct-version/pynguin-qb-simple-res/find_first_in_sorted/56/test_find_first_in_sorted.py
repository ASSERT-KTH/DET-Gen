# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "M` \x0bf-M3L9 >M4!MSH&"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    module_0.find_first_in_sorted(dict_0, none_type_0)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.find_first_in_sorted(bytes_0, bytes_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xb6\x11Pw\xe5\xa5TiX\xb21\x93\xce\xac\x86"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb6\x11Pw\xe5\xa5TiX\xb21\x93\xce\xac\x86"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x17\x1c\xf1\xd8\xec\x1dCz6\x90q2\xc2R\xaf!\xa9\x0f"
    bool_0 = True
    var_0 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "Q~J*mw"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "="
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == 0
    var_2 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_2 == 0
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, var_1, dict_0, str_0]
    var_3 = module_0.find_first_in_sorted(list_0, dict_0)
    assert var_3 == 2
    bytes_0 = b"+\xa3P\xcdy{dDgB\x86"
    module_0.find_first_in_sorted(bytes_0, bytes_0)
