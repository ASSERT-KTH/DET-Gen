# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x95_2\xf6\x18\xf6[\nA\xebb\x11)^\x969,"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    str_0 = "O\x0bZ\r,}\n\x0b"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    list_0 = []
    var_1 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_1 == -1


def test_case_2():
    str_0 = "Zs\\\n-Mm}/6E{Jj="
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    list_0 = [str_0, str_0, str_0]
    var_1 = module_1.object()
    var_2 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_2 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "{LaS-/rl2"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "Zs\\\n-Mm}/6E{Jj="
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    list_0 = [str_0, str_0, str_0]
    module_0.find_first_in_sorted(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    str_0 = "TeeIesWio}4*\x0cx`|(<"
    bytes_0 = b""
    tuple_0 = (bool_0, str_0, bool_0, bytes_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 2
    float_0 = -109.0
    var_1 = module_0.find_first_in_sorted(bytes_0, var_0)
    assert var_1 == -1
    bool_1 = False
    module_0.find_first_in_sorted(float_0, bool_1)
