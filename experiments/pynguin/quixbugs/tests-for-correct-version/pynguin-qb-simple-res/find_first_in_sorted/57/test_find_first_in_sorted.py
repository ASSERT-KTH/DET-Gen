# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import find_first_in_sorted as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    list_1 = [list_0]
    module_1.find_first_in_sorted(list_1, object_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_0.object()
    list_0 = []
    none_type_0 = None
    var_0 = module_1.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    module_1.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1328
    module_1.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    module_1.find_first_in_sorted(list_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "F"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_1.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "1-.E!Vsjd=4?"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_1.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    set_0 = set()
    bool_0 = True
    var_0 = module_1.find_first_in_sorted(set_0, bool_0)
    assert var_0 == -1
    list_0 = [set_0, var_0, set_0, set_0]
    var_1 = module_1.find_first_in_sorted(list_0, set_0)
    assert var_1 == 2
    list_1 = [list_0, list_0, list_0]
    module_1.find_first_in_sorted(list_0, list_1)
