# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    tuple_0 = (dict_0, dict_0, dict_0)
    module_0.find_first_in_sorted(tuple_0, tuple_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_3():
    bytes_0 = b"\x00\x85\xc5\x89q!\xbdI]\xe0\x88\x9b\xa2\x9bF\xa7\x08\xe7\x19\xf0"
    bool_0 = False
    var_0 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "\t`;%d}m% }w"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = [bool_0]
    tuple_0 = (bool_0, list_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 2
    bool_1 = True
    module_0.find_first_in_sorted(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(list_0, list_0)
