# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "t#A|L"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_3():
    str_0 = "/"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    str_1 = "U"
    var_1 = module_0.find_first_in_sorted(str_0, str_1)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "*@#P*g"
    list_0 = [str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "*3@#P*g"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    dict_0 = {}
    tuple_0 = (dict_0,)
    var_0 = module_0.find_first_in_sorted(tuple_0, dict_0)
    assert var_0 == 0
    str_0 = "Lq"
    str_1 = "*3@#P*g"
    list_0 = [str_0, str_1, str_1, str_1]
    var_1 = module_0.find_first_in_sorted(list_0, str_1)
    assert var_1 == 1
    module_0.find_first_in_sorted(var_1, str_1)
