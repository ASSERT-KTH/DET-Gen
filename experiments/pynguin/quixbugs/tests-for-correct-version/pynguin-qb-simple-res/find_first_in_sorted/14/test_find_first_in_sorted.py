# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xb0\xcb@\x9e\xbc\x1e"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -384.16705
    bytes_0 = b"\x84\x0c\xaf\xceu\xdd"
    var_0 = module_0.find_first_in_sorted(bytes_0, float_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "y ?j7Rs41,:"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    set_0 = set()
    module_0.find_first_in_sorted(str_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 2195.356
    int_0 = 2360
    tuple_0 = (int_0,)
    tuple_1 = (float_0, tuple_0)
    dict_0 = {}
    tuple_2 = ()
    str_0 = ""
    tuple_3 = (tuple_1, dict_0, tuple_2, str_0)
    bool_0 = True
    bool_1 = True
    tuple_4 = (tuple_3, bool_0, bool_1, tuple_2)
    var_0 = module_0.find_first_in_sorted(tuple_4, bool_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(var_0, tuple_4)
