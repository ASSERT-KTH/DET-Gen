# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import find_first_in_sorted as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    set_0 = {object_0, object_0}
    module_1.find_first_in_sorted(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ""
    none_type_0 = None
    var_0 = module_1.find_first_in_sorted(str_0, none_type_0)
    assert var_0 == -1
    object_0 = module_0.object()
    module_1.find_first_in_sorted(object_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "."
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    var_1 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_1 == 0
    module_1.find_first_in_sorted(var_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"O\xadol"
    module_1.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    bool_0 = True
    tuple_0 = (bool_0, list_0, bool_0, bool_0)
    var_0 = module_1.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 2
    bool_1 = True
    bool_2 = False
    module_1.find_first_in_sorted(bool_1, bool_2)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "M>1T@)"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_1.find_first_in_sorted(var_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b" j=s\x1e0\xc4y\x14\x0b\x16\x8f\x92 q\xd5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (dict_0, dict_0)
    module_1.find_first_in_sorted(tuple_0, dict_0)
