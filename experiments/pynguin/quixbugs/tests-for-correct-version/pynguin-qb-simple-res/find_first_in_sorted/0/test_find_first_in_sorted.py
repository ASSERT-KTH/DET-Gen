# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "<6"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


def test_case_1():
    str_0 = ""
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(str_0, none_type_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "<"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, str_0)


def test_case_4():
    str_0 = "H]"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


def test_case_5():
    bytes_0 = b"@\xc3\xc0\x13\xbf\x8a\xf6\xbb9\xf7D\x11lvJ\xaf\x8e"
    tuple_0 = (bytes_0, bytes_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bytes_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "=bEX"
    float_0 = -553.102
    tuple_0 = (str_0, float_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, float_0)
    assert var_0 == 1
    float_1 = 1986.6353
    str_1 = "-"
    dict_0 = {str_1: str_1, str_1: float_1}
    module_1.object(**dict_0)
