# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"4;\x13\\\xac\t\xbd\xed\x95V"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_1, var_1)


def test_case_2():
    str_0 = "\r!_qE!kB_n\x0cR$80umH-Q"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"P\x04"
    bool_0 = True
    var_0 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "RGiSl"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    tuple_1 = (tuple_0, list_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, list_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(var_0, tuple_0)
