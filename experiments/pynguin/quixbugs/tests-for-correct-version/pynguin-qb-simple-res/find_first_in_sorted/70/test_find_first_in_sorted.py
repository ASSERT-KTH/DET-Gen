# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import find_first_in_sorted as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    bytes_0 = b"\xe8@V\xbf&)\xb9\xc3i\xab]r`"
    module_1.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_1.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    module_1.find_first_in_sorted(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_0.object()
    module_1.find_first_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "+:9^1A>)X_F~x#g\x0ce"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = 1372
    module_1.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "9"
    tuple_0 = ()
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    dict_0 = {str_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    module_1.find_first_in_sorted(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xb7\xed\xbc"
    list_0 = [bytes_0]
    bool_0 = True
    tuple_0 = (bytes_0, list_0, bool_0)
    var_0 = module_1.find_first_in_sorted(tuple_0, list_0)
    assert var_0 == 1
    module_1.find_first_in_sorted(tuple_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\xb7\xed\xbc"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = False
    var_0 = module_1.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    tuple_0 = (bytes_0, list_0, bool_0)
    var_1 = module_1.find_first_in_sorted(tuple_0, list_0)
    assert var_1 == 1
    module_1.find_first_in_sorted(tuple_0, bool_0)
