# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = 'N"N7q@j&jAkS'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    str_0 = "b<(9"
    none_type_0 = None
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"L\xb6"
    list_0 = [bytes_0]
    int_0 = 1117
    tuple_0 = (int_0, int_0)
    tuple_1 = (list_0, tuple_0, bytes_0, int_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, bytes_0)
    assert var_0 == 2
    var_1 = module_0.find_first_in_sorted(bytes_0, int_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"L\xb6"
    list_0 = [bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    int_0 = 1132
    module_0.find_first_in_sorted(list_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"L\xb6"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    float_0 = -324.7190785482389
    int_0 = 1132
    object_0 = module_1.object()
    tuple_0 = (list_0, var_0, bytes_0, float_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, bytes_0)
    assert var_1 == 2
    var_2 = module_0.find_first_in_sorted(bytes_0, int_0)
    assert var_2 == -1
    object_1 = module_1.object()
    module_0.find_first_in_sorted(object_1, object_1)
