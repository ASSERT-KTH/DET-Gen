# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import find_first_in_sorted as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    bytes_0 = b"+X\xb16\x02u-C\xce\x97c"
    int_0 = 639
    tuple_0 = (object_0, bytes_0, int_0)
    none_type_0 = None
    module_1.find_first_in_sorted(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    bool_0 = False
    var_0 = module_1.find_first_in_sorted(list_0, bool_0)
    assert var_0 == -1
    module_1.find_first_in_sorted(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2056
    none_type_0 = None
    module_1.find_first_in_sorted(int_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "\t[9e\n}s$PtI)"
    float_0 = 4181.6
    list_0 = [float_0, str_0]
    var_0 = module_1.find_first_in_sorted(list_0, str_0)
    assert var_0 == 1
    module_1.find_first_in_sorted(str_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "F"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    list_0 = [var_0, var_0]
    var_1 = module_1.find_first_in_sorted(list_0, var_0)
    assert var_1 == 0
    tuple_0 = (var_1,)
    module_1.find_first_in_sorted(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "\t[9e\n}s$PtI)"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    float_0 = 4181.6
    module_1.find_first_in_sorted(float_0, float_0)
