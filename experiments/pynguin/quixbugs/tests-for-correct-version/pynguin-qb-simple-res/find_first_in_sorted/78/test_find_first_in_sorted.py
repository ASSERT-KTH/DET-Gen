# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "]EFfhsYMk?D"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    module_0.find_first_in_sorted(object_0, object_0)


def test_case_3():
    str_0 = "]EFfhsYMk?D"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    list_0 = [var_0, var_0, str_0]
    object_0 = module_0.find_first_in_sorted(list_0, var_0)
    assert object_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x08\xa6\xf4\x93\xe7\xa1\x8f\xa3d\x8a`$\xd0"
    str_0 = "e<1BwVHuT`HXZ"
    dict_0 = {bytes_0: str_0}
    tuple_0 = (bytes_0, str_0, dict_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(var_0, var_0)
