# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"$\x89\xa1L\xbc\xcb\xd8\xb0\x7f^\xd3M\xe8uT\xec\x94\x03"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, none_type_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    list_0 = []
    list_1 = [none_type_0, none_type_0, list_0, none_type_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_0 == 2
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    set_0 = {bool_0}
    module_0.find_first_in_sorted(set_0, var_0)


def test_case_5():
    str_0 = "$N#mPb ..NRJ5U3P\\"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
