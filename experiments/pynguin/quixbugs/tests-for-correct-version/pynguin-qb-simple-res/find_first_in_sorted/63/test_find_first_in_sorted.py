# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0]
    module_0.find_first_in_sorted(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "Am."
    bool_0 = True
    bytes_0 = b"{\x03\xe1Hx.iK\t\x17>"
    tuple_0 = (str_0, bool_0, str_0, bytes_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 2
    bool_1 = False
    module_0.find_first_in_sorted(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 961.0
    list_0 = [float_0, float_0]
    var_0 = module_0.find_first_in_sorted(list_0, float_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xa62\xaa\xbfz\xd6\xb4\x0e?\xee\x1bK\xb6;\xb7"
    bool_0 = True
    var_0 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "2wT$L"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, str_0)
