# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcas\xb6\x11"
    list_0 = [bytes_0]
    module_0.find_first_in_sorted(bytes_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    float_0 = 3447.75
    module_0.find_first_in_sorted(var_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1264
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    bool_0 = True
    var_0 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_0 == -1
    list_0 = [var_0]
    tuple_0 = (list_0, var_0)
    tuple_1 = (bytes_0, bool_0, tuple_0, var_0)
    var_1 = module_0.find_first_in_sorted(tuple_1, tuple_0)
    assert var_1 == 2
    bool_1 = True
    none_type_0 = None
    module_0.find_first_in_sorted(bool_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    str_0 = "_>k!K"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "hT8%h0/-{lo\tw|G`)_"
    list_0 = [str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_0 == 0
    int_0 = 2566
    set_0 = {int_0, int_0, int_0}
    module_0.find_first_in_sorted(set_0, int_0)
