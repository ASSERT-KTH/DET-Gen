# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "Z;L]ibVjym&C"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


def test_case_1():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1


def test_case_2():
    str_0 = "j"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "r#4\nhyWr xyx\rI"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    object_0 = module_1.object()
    bytes_0 = b"\x8b\xb5\x91D\xe2\xa8\x95'"
    tuple_0 = (object_0, bytes_0, object_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, bytes_0)
    assert var_1 == 1
    var_2 = module_0.find_first_in_sorted(tuple_0, bytes_0)
    assert var_2 == 1
    bool_0 = True
    tuple_1 = (bool_0,)
    module_0.find_first_in_sorted(var_2, tuple_1)
