# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "&f`!#Y8B,FCqm -~>"
    none_type_0 = None
    module_0.find_first_in_sorted(str_0, none_type_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "y"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    str_1 = "&f`!#Y8B,FCqm -~>"
    bool_0 = True
    module_0.find_first_in_sorted(str_1, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    str_0 = ">6p >Cyn>"
    tuple_0 = (set_0, str_0)
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_1 == 1
    module_1.object(**var_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    str_0 = "U&h\\\nR-rk;C"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    tuple_0 = (bool_0, str_0)
    none_type_0 = None
    module_0.find_first_in_sorted(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ">6p >Cyn>"
    tuple_0 = (str_0, str_0)
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_1 == 0
    int_0 = 1678
    module_0.find_first_in_sorted(var_0, int_0)
