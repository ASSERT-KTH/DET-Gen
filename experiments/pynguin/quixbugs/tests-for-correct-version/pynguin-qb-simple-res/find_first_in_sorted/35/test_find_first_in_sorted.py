# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0]
    module_0.find_first_in_sorted(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Dnf119\x0bV)D\\"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    list_0 = [var_0]
    module_0.find_first_in_sorted(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "Dnf119\x0bV)D\\"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = -1357
    tuple_0 = (int_0, var_0, var_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, var_0)
    assert var_1 == 1
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_2 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_2 == 0
    module_0.find_first_in_sorted(str_0, list_0)
