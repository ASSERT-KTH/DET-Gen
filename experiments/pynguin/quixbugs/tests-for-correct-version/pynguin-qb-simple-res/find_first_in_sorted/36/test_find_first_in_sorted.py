# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "UMI\x0cu\n\riH'\x0bQlgxX.&4"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    float_0 = 1517.595924
    module_0.find_first_in_sorted(var_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(bytes_0, none_type_0)
    assert var_0 == -1
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "?"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    set_0 = {str_0, str_0, var_0, str_0}
    module_0.find_first_in_sorted(set_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_0.find_first_in_sorted(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "+;8[?l>+iK\r1S{Kpsg"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    none_type_0 = None
    bytes_0 = b""
    bool_0 = True
    var_2 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_2 == -1
    list_0 = [none_type_0, var_0, none_type_0, none_type_0, none_type_0]
    var_3 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_3 == 2
    module_0.find_first_in_sorted(none_type_0, list_0)
