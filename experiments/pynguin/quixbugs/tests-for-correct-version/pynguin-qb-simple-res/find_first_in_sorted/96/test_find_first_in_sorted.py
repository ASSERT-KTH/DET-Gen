# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"@\xda\x92\xb9\xd9c\xd4\xa2\x8f\xd1}\xefE\xf0\xc7"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


def test_case_3():
    int_0 = -2893
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_2 == -1
    var_3 = module_0.find_first_in_sorted(dict_0, var_2)
    assert var_3 == -1
    var_4 = module_0.find_first_in_sorted(list_0, var_2)
    assert var_4 == -1
    var_5 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_5 == 0
    var_6 = module_0.find_first_in_sorted(dict_0, var_2)
    assert var_6 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    bytes_0 = b"z\xda\xfbE"
    set_0 = {bool_0, bytes_0, bool_0}
    list_0 = [set_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(bool_0, bytes_0)
