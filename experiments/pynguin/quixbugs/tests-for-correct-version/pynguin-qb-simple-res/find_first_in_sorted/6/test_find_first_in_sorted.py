# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x84\x07\xa5\x95\x94\xef\x9b\xe4\xd6\x08\xfd\xdd\x959$\xd5\xdf\x94\x14"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '\ri\\LNf"uecU!F\x0b'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    set_0 = set()
    var_1 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_1 == -1
    bool_0 = False
    var_2 = module_0.find_first_in_sorted(set_0, bool_0)
    assert var_2 == -1
    bool_1 = False
    module_0.find_first_in_sorted(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ","
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    bool_0 = True
    object_0 = module_1.object()
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -2924.61192
    list_0 = [float_0, float_0]
    var_0 = module_0.find_first_in_sorted(list_0, float_0)
    assert var_0 == 0
    str_0 = ","
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == 0
    dict_0 = {}
    module_0.find_first_in_sorted(var_1, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xee\x88>/_\x9b\xb8\xcc\x02\xe2I\xdc3\xdfQ\x07\xae"
    str_0 = "wYsK{@4vK>F\nG"
    tuple_0 = (bytes_0, str_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 1
    str_1 = ","
    var_1 = module_0.find_first_in_sorted(str_1, str_1)
    assert var_1 == 0
    object_0 = module_1.object()
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)
