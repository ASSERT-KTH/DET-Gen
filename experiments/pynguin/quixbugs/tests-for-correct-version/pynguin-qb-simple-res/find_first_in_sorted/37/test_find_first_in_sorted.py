# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xdb\xd5\xb3\xc0\xa6Y\xf8~\xa1\x95\xe9H\x98"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -2033
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "]"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


def test_case_3():
    str_0 = "M<NN>"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xee\xe5-\xc0\x9c\x9a\x8fU\tX"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\xee\xe5-\xc0\x9c\x9a\x8fU\tX"
    str_0 = "r"
    list_0 = [str_0, bytes_0]
    bool_0 = False
    tuple_0 = (bytes_0, str_0, list_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, list_0)
    assert var_0 == 2
    complex_0 = -417.50275 + 2358.13294j
    module_0.find_first_in_sorted(complex_0, complex_0)
