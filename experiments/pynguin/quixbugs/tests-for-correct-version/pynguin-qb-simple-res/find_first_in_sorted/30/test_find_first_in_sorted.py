# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "tm6nA-"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


def test_case_1():
    complex_0 = 1592.2495 - 477.9j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    bytes_0 = b"|\xaau\x92K\xf2\x87\xa5"
    tuple_0 = (list_0, bytes_0)
    bool_0 = False
    list_1 = [tuple_0, bool_0, complex_0]
    list_2 = []
    tuple_1 = (list_1, list_2, tuple_0)
    var_0 = module_0.find_first_in_sorted(list_2, list_2)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(tuple_1, list_2)
    assert var_1 == 1


def test_case_2():
    bool_0 = True
    float_0 = 1397.718964
    tuple_0 = (bool_0, float_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, float_0)
    assert var_0 == 1


def test_case_3():
    str_0 = ">}Q*eMi& 6\t)I{"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    float_0 = 1397.718964
    module_0.find_first_in_sorted(float_0, var_0)
