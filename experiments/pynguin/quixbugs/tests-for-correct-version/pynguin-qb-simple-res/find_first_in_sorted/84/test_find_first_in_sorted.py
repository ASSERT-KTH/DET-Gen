# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "^d\x0bh$\rH3)"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    object_0 = module_1.object()
    module_0.find_first_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2299
    list_0 = [int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "&\\:Gc<B[~"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 2308
    list_0 = [int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    bytes_0 = b"\xf7N9R\x86\xc99\xb9\xc3gM\x01 \x813"
    var_1 = module_0.find_first_in_sorted(bytes_0, var_0)
    assert var_1 == -1
    float_0 = 2369.8
    module_0.find_first_in_sorted(var_1, float_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    list_0 = []
    set_0 = set()
    tuple_0 = (list_0, set_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, set_0)
    assert var_0 == 1
    dict_0 = {}
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, dict_0)
