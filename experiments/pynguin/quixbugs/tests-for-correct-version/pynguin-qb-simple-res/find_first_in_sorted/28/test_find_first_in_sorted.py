# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    str_0 = "(&o\x0c?CX,"
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1


def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1580
    list_0 = [int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    var_1 = module_1.object()
    var_2 = module_1.object()
    module_0.find_first_in_sorted(var_2, var_2)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "-MS/"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bytes_0 = b"\x94\te\x80D\xe1\x94O\xaa\xe8"
    list_0 = [var_0, var_0, var_0]
    tuple_0 = (bytes_0, var_0, list_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, var_0)
    assert var_1 == 1
    module_0.find_first_in_sorted(var_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -1953
    tuple_0 = (int_0, int_0, int_0)
    list_0 = [tuple_0, int_0, tuple_0]
    tuple_1 = (tuple_0, tuple_0, list_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, tuple_0)
    assert var_0 == 0
    bool_0 = False
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, bool_0)
