# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"f\xbc\xc2\xcc\xc8\x1cH<-KR2\x02s{]:\xa8\xbd"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_first_in_sorted(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "e"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    str_0 = ".'Q"
    tuple_1 = (set_0, str_0, set_0)
    none_type_0 = None
    module_0.find_first_in_sorted(tuple_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    int_0 = 787
    module_0.find_first_in_sorted(bool_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    str_0 = ".'Q"
    tuple_1 = (set_0, str_0, set_0)
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(tuple_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 537
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(bool_0, int_0)
