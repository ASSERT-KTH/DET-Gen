# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"6\x7fv\x03"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    none_type_0 = None
    var_1 = module_0.find_first_in_sorted(set_0, none_type_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(none_type_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "SV}}u0"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    str_1 = "au>Z/s"
    module_0.find_first_in_sorted(var_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "SV}}p0"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "SV}+u0"
    int_0 = -1091
    list_0 = [str_0, int_0, str_0, str_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 2
    dict_0 = {}
    module_0.find_first_in_sorted(str_0, dict_0)
