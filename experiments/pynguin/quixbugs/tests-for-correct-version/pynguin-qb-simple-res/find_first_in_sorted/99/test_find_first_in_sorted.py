# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = ")"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 3781.674875
    module_0.find_first_in_sorted(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "_"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '5P\tT<nZ"hM^'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    complex_0 = 627.5 + 2300.95738j
    module_0.find_first_in_sorted(str_0, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'p"'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = True
    float_0 = -3053.076043
    tuple_0 = (var_0, float_0, bool_0, str_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_1 == 2
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "6R"
    list_0 = [str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    bool_0 = True
    list_1 = [bool_0]
    module_0.find_first_in_sorted(list_1, str_0)
