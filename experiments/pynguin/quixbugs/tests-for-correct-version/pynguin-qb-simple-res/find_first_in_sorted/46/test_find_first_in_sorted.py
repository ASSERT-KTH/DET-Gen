# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "z"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ""
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(str_0, none_type_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


def test_case_3():
    str_0 = "~fQ%\rI5*j"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1


def test_case_4():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    str_0 = "X:K%;oyHl(/"
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_2 == -1
    set_0 = set()
    var_3 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_3 == -1


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    str_0 = "b"
    object_0 = module_1.object()
    module_0.find_first_in_sorted(bool_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    list_1 = [var_0, list_0, bool_0]
    var_1 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_1 == 1
    module_0.find_first_in_sorted(bool_0, var_0)
