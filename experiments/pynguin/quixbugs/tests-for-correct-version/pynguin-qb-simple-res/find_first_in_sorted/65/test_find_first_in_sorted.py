# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_0.find_first_in_sorted(set_0, set_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"P\xba\xfc\x86\xb9\xdd"
    set_0 = {bytes_0}
    bool_0 = True
    tuple_0 = (set_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "O'DGHu&Rn]Q\rb*t._"
    tuple_0 = (str_0,)
    module_0.find_first_in_sorted(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"P\xba\xfc\x86\xb9\xdd"
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_1 == 0
    object_0 = module_1.object()
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "O'DGHu&Rn]Q\rb*t._"
    tuple_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert tuple_0 == -1
    module_0.find_first_in_sorted(tuple_0, tuple_0)
