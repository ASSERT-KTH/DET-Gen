# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xd5"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_first_in_sorted(list_0, list_0)


def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb0 b8\x119\xcfZDC\x0b)n\xb5"
    list_0 = [bytes_0, bytes_0]
    float_0 = 235.216
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    tuple_0 = (bytes_0, bytes_0, float_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, bytes_0)
    assert var_1 == 0
    module_0.find_first_in_sorted(tuple_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "N)^lc_5FME\\"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = -419
    tuple_0 = (str_0, var_0, str_0, int_0)
    module_0.find_first_in_sorted(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    int_0 = 969
    tuple_0 = (dict_0, int_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_1 == 1
    bytes_0 = b"\xb5m\x04p\x9e\x88Y\x0f*\xe5`\x9e\xa1\x8e"
    module_0.find_first_in_sorted(bytes_0, bytes_0)
