# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1396
    set_0 = {int_0, int_0}
    module_0.find_first_in_sorted(set_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


def test_case_3():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_0 == 0


def test_case_4():
    str_0 = "!BSOYM"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1


def test_case_5():
    list_0 = []
    none_type_0 = None
    list_1 = [none_type_0, list_0, list_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_1 == 1
    var_2 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_2 == -1
    var_3 = module_0.find_first_in_sorted(list_0, list_1)
    assert var_3 == -1
    object_0 = module_1.object()
