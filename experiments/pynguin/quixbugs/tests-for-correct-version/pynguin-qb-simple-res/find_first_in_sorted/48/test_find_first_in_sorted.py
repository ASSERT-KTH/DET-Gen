# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_0 == 0


def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    module_0.find_first_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"h\x87\x87lr\x8e\xc7\xdb\x98\xb1\x06\xef\xab\xf4w\x06"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_4():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_1)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_5():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0, set_0, set_0]
    var_0 = module_0.find_first_in_sorted(list_0, set_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(set_0, list_0)
    assert var_1 == -1
    list_1 = [var_1, var_0]
    list_2 = [list_1, list_0, set_0]
    tuple_0 = (list_0, var_0, var_0)
    var_2 = module_0.find_first_in_sorted(tuple_0, var_0)
    assert var_2 == 1
    module_0.find_first_in_sorted(list_2, set_0)
