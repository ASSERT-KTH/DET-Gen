# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xe2Y(po\xbbN\xe89\xa4"
    none_type_0 = None
    module_0.find_first_in_sorted(bytes_0, none_type_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xf1X\x89b#xq\x9b\xb6\xb7{=\xf0"
    str_0 = ""
    list_0 = [bytes_0]
    tuple_0 = (bytes_0, str_0, list_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 1
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -3036
    list_0 = [int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "CcSN"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(str_0, var_0)
