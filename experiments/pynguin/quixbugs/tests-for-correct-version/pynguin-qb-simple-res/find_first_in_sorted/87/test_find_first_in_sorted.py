# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.find_first_in_sorted(dict_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -525.94
    module_0.find_first_in_sorted(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2644
    list_0 = [int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x82\xebZ"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '.u"4cU6_'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    int_0 = -912
    module_0.find_first_in_sorted(var_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    bytes_0 = b"\xda\xfc"
    tuple_0 = (bool_0, bytes_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bytes_0)
    assert var_0 == 1
    object_0 = module_1.object()
    set_0 = {object_0, object_0}
    module_0.find_first_in_sorted(object_0, set_0)
