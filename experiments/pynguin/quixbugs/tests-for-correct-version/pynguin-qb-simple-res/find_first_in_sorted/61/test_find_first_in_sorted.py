# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import find_first_in_sorted as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    module_1.find_first_in_sorted(list_0, object_0)


def test_case_1():
    list_0 = []
    var_0 = module_1.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    var_1 = module_1.find_first_in_sorted(list_0, list_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xd2\x83\x98c\xf4\xb0"
    module_1.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "G"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    bool_0 = False
    none_type_0 = None
    module_1.find_first_in_sorted(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    object_0 = module_0.object()
    none_type_0 = None
    str_0 = "L7q`2'"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_1.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 2975
    list_0 = [int_0, int_0, int_0]
    list_1 = [int_0, list_0]
    var_0 = module_1.find_first_in_sorted(list_1, list_0)
    assert var_0 == 1
    var_1 = module_1.find_first_in_sorted(list_0, int_0)
    assert var_1 == 0
    str_0 = "lY\nEv"
    var_2 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_2 == -1
    var_3 = module_1.find_first_in_sorted(list_0, var_2)
    assert var_3 == -1
    module_1.find_first_in_sorted(int_0, int_0)
