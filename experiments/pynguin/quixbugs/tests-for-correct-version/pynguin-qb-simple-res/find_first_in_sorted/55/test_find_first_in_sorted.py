# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "c^Pj\nf$3,*(Y,Xq\x0cC"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    tuple_0 = (set_0,)
    var_0 = module_0.find_first_in_sorted(tuple_0, set_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_1 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 581
    module_0.find_first_in_sorted(int_0, int_0)


def test_case_3():
    int_0 = 4093
    tuple_0 = (int_0,)
    var_0 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    tuple_0 = (bool_0,)
    bool_1 = False
    tuple_1 = (tuple_0, bool_1, tuple_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, bool_1)
    assert var_0 == 1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)
