# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x16\xdb\xda\xd2\x947\xd8\x13"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.find_first_in_sorted(bytes_0, bytes_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    bytes_0 = b"\x1a)\xa4\xb9\x85\xd0cMU^w\xba\xb5\xb45+V\xdc\xfc\x93"
    tuple_0 = (bool_0, bytes_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bytes_0)
    assert var_0 == 1
    str_0 = "93TcF+u|=):crphN"
    bool_1 = False
    list_0 = [str_0]
    tuple_1 = (bool_1, str_0, list_0)
    dict_0 = {str_0: tuple_1}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'I)"|<2z`er'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    list_0 = [dict_0, tuple_0, tuple_0, dict_0]
    var_0 = module_0.find_first_in_sorted(list_0, tuple_0)
    assert var_0 == 1
    bool_0 = True
    none_type_0 = None
    module_0.find_first_in_sorted(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "~"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_1.object(*var_0)
