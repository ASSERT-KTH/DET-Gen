# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import bitcount as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "&FjV*2OsVux|S7>"
    module_0.bitcount(str_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.bitcount(none_type_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 0
    int_0 = -805
    module_0.bitcount(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 0
    int_0 = 1614
    var_1 = module_0.bitcount(int_0)
    assert var_1 == 6
    none_type_0 = None
    var_2 = module_0.bitcount(none_type_0)
    assert var_2 == 0
    none_type_1 = None
    var_3 = module_0.bitcount(none_type_1)
    assert var_3 == 0
    var_4 = module_0.bitcount(none_type_0)
    assert var_4 == 0
    var_5 = module_0.bitcount(var_4)
    assert var_5 == 0
    var_6 = module_0.bitcount(int_0)
    assert var_6 == 6
    var_7 = module_0.bitcount(int_0)
    assert var_7 == 6
    var_8 = module_0.bitcount(var_7)
    assert var_8 == 2
    tuple_0 = (var_7, var_2, var_2)
    var_9 = module_0.bitcount(var_2)
    assert var_9 == 0
    var_10 = module_0.bitcount(var_9)
    assert var_10 == 0
    module_0.bitcount(tuple_0)
