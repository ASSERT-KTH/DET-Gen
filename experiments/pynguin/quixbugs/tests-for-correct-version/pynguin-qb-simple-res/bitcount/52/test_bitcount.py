# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import bitcount as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "I\rT"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.bitcount(list_0)


def test_case_1():
    set_0 = set()
    var_0 = module_0.bitcount(set_0)
    assert var_0 == 0


def test_case_2():
    none_type_0 = None
    var_0 = module_0.bitcount(none_type_0)
    assert var_0 == 0
    int_0 = 1508
    var_1 = module_0.bitcount(int_0)
    assert var_1 == 6
    none_type_1 = None
    var_2 = module_0.bitcount(none_type_1)
    assert var_2 == 0
    none_type_2 = None
    var_3 = module_0.bitcount(none_type_2)
    assert var_3 == 0
    var_4 = module_0.bitcount(var_3)
    assert var_4 == 0


def test_case_3():
    bool_0 = False
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 0
    bool_1 = True
    var_1 = module_0.bitcount(bool_1)
    assert var_1 == 1
