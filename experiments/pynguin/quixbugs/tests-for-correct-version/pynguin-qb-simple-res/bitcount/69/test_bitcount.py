# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import bitcount as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "fL@uv"
    module_0.bitcount(str_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.bitcount(none_type_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2333
    var_0 = module_0.bitcount(int_0)
    assert var_0 == 6
    bytes_0 = b"\xcc\x1c\xae'oy\xc2\xcf\xfbv\xe5\xe6.\xb4aw\xe6z\x87\x91"
    module_0.bitcount(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 1
    complex_0 = 1666.4 - 2037.74j
    tuple_0 = (bool_0, var_0, complex_0)
    module_0.bitcount(tuple_0)
