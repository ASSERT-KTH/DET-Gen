# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import bitcount as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x82#\xec\xa5\x8f\xd6"
    module_0.bitcount(bytes_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.bitcount(none_type_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 0
    int_0 = 3875
    var_1 = module_0.bitcount(int_0)
    assert var_1 == 7
    str_0 = "eIrq"
    set_0 = {var_1, str_0, str_0, var_1}
    module_0.bitcount(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 1
    object_0 = module_1.object()
    module_0.bitcount(object_0)
