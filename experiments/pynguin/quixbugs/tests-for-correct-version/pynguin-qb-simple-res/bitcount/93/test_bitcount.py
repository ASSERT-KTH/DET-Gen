# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import bitcount as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    complex_0 = -1632.7 + 3001.4j
    module_0.bitcount(complex_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1316
    var_0 = module_0.bitcount(int_0)
    assert var_0 == 4
    var_1 = module_0.bitcount(var_0)
    assert var_1 == 1
    var_2 = module_0.bitcount(var_1)
    assert var_2 == 1
    bytes_0 = b"a\xb8_\x7f\xde\x9c\x88m\xa3{\xb3\x95\xba\x03\xd3\x96\xdb\x97\xe5"
    module_0.bitcount(bytes_0)


def test_case_3():
    bool_0 = True
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 1
    var_1 = module_0.bitcount(var_0)
    assert var_1 == 1
    var_2 = module_0.bitcount(bool_0)
    assert var_2 == 1
    var_3 = module_0.bitcount(var_0)
    assert var_3 == 1
