# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shunting_yard as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "|*?r_"
    module_0.shunting_yard(str_0)


def test_case_1():
    str_0 = "n"
    var_0 = module_0.shunting_yard(str_0)


def test_case_2():
    str_0 = ""
    var_0 = module_0.shunting_yard(str_0)
    var_1 = module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.shunting_yard(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xdcm Qy\t\xd9M{\xe4{\xe3"
    var_0 = module_0.shunting_yard(bytes_0)
    str_0 = "+*r_"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "+*r_"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "+*/8r_"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    list_0 = []
    list_1 = [list_0]
    var_0 = module_0.shunting_yard(list_1)
    var_1 = module_1.object()
    bytes_0 = b"\xdcm Qy\t\xd9M{\xe4{\xe3"
    str_0 = "*/Z_"
    var_2 = module_0.shunting_yard(bytes_0)
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    list_0 = []
    list_1 = [list_0]
    var_0 = module_0.shunting_yard(list_1)
    object_0 = module_1.object()
    bytes_0 = b"\xdcm Qy\t\xd9M{\xe4{\xe3"
    str_0 = "+*/+N\x0cr"
    var_1 = module_0.shunting_yard(bytes_0)
    var_2 = module_0.shunting_yard(var_0)
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    list_0 = []
    list_1 = [list_0]
    var_0 = module_0.shunting_yard(list_1)
    var_1 = module_0.shunting_yard(var_0)
    bytes_0 = b"\xdcm Qy\t\xd9M{\xe4{\xe3"
    str_0 = "+*/"
    var_2 = module_0.shunting_yard(bytes_0)
    var_3 = module_0.shunting_yard(str_0)
    int_0 = 1561
    module_0.shunting_yard(int_0)
