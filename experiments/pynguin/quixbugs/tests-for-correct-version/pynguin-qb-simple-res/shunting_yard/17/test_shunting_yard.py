# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shunting_yard as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "xY]`\rmsH81Et@\nZG"
    module_0.shunting_yard(str_0)


def test_case_1():
    str_0 = "l"
    var_0 = module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"A\xa6R\xd9\xe2%T\x04\xc9\x9e\x95`"
    var_0 = module_0.shunting_yard(bytes_0)
    int_0 = 3070
    tuple_0 = (int_0,)
    list_0 = [tuple_0, int_0, int_0, tuple_0]
    module_1.object(*list_0)


def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_1 = [list_0, bool_0, bool_0]
    var_0 = module_0.shunting_yard(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "+*F37;F# kXv"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "+-F\n7;*# kXEv"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "+*-\n7+G*dA ZXEv"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = ":K)\x0brpZf\x0b3{#"
    dict_0 = {str_0: str_0}
    var_0 = module_0.shunting_yard(dict_0)
    var_1 = module_0.shunting_yard(dict_0)
    bytes_0 = b"!P\xca\xa5U\xc5\xb2]G\xe0"
    bool_0 = False
    int_0 = -439
    bool_1 = False
    tuple_0 = (bool_0, int_0, bool_1)
    var_2 = module_0.shunting_yard(tuple_0)
    var_3 = module_0.shunting_yard(bytes_0)
    str_1 = "+**B-\n7+* ZXEv"
    module_0.shunting_yard(str_1)
