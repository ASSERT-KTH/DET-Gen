# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shunting_yard as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = 'j82z\r;(Xwg}"(l\t\r\\W'
    module_0.shunting_yard(str_0)


def test_case_1():
    str_0 = "`"
    var_0 = module_0.shunting_yard(str_0)


def test_case_2():
    bytes_0 = b"\x1dMa\xe5i\xcd\xe7\x1b\x151?"
    var_0 = module_0.shunting_yard(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.shunting_yard(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "//-<n<[+@zW"
    module_0.shunting_yard(str_0)


def test_case_5():
    int_0 = -905
    bool_0 = True
    tuple_0 = (int_0, bool_0, int_0)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.shunting_yard(list_0)
    bool_1 = True
    list_1 = [bool_1]
    var_1 = module_0.shunting_yard(list_1)
    var_2 = module_0.shunting_yard(var_0)
    var_3 = module_0.shunting_yard(var_1)
    str_0 = "+/"
    var_4 = module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -905
    bool_0 = True
    tuple_0 = (int_0, bool_0, int_0)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.shunting_yard(list_0)
    bool_1 = False
    list_1 = [bool_1]
    var_1 = module_0.shunting_yard(list_1)
    var_2 = module_0.shunting_yard(var_1)
    str_0 = "+//-<n<[+@zW"
    module_0.shunting_yard(str_0)
