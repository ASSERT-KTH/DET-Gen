# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import shunting_yard as module_1


def test_case_0():
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0}
    var_0 = module_1.shunting_yard(set_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_1.shunting_yard(tuple_0)
    var_1 = module_1.shunting_yard(tuple_0)
    var_2 = module_1.shunting_yard(tuple_0)
    var_3 = module_1.shunting_yard(var_2)
    var_4 = module_1.shunting_yard(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_1.shunting_yard(dict_0)
    var_1 = module_1.shunting_yard(var_0)
    var_2 = module_1.shunting_yard(var_0)
    none_type_0 = None
    module_1.shunting_yard(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_0.object()
    bytes_0 = b"]\xdb\xb2\xeb\n"
    dict_0 = {object_0: object_0, bytes_0: bytes_0, object_0: object_0}
    module_1.shunting_yard(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "+*+"
    var_0 = module_1.shunting_yard(str_0)
    var_1 = module_1.shunting_yard(var_0)
    var_2 = module_1.shunting_yard(var_1)
    module_0.object(**var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"rF\xab"
    set_0 = {bytes_0, bytes_0}
    var_0 = module_1.shunting_yard(bytes_0)
    var_1 = module_1.shunting_yard(set_0)
    str_0 = "+/"
    var_2 = module_1.shunting_yard(str_0)
    none_type_0 = None
    module_1.shunting_yard(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"rF\xab"
    set_0 = {bytes_0, bytes_0}
    var_0 = module_1.shunting_yard(set_0)
    str_0 = "+//+2"
    module_1.shunting_yard(str_0)
