# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1
import collections as module_2


def test_case_0():
    int_0 = 498
    var_0 = module_0.breadth_first_search(int_0, int_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xb1\x0eP\xcd\x14^\xf8\xda\xd0\x00\xed\xd4F\xb0\xbdu"
    node_0 = module_1.Node(bytes_0, successors=bytes_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value == b"\xb1\x0eP\xcd\x14^\xf8\xda\xd0\x00\xed\xd4F\xb0\xbdu"
    assert node_0.successor is None
    assert node_0.successors == b"\xb1\x0eP\xcd\x14^\xf8\xda\xd0\x00\xed\xd4F\xb0\xbdu"
    assert node_0.predecessors == []
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == []
    module_0.breadth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"'\x8d\xe4\x03\xc3\xd1a\x0eGf\xb7'\x14\xa3\x1e#\xf7IV"
    none_type_0 = None
    module_0.breadth_first_search(bytes_0, none_type_0)


def test_case_3():
    bytes_0 = b"_\xcb\xf4C\x11\x82[\xc6\x1e\xd1"
    node_0 = module_1.Node(bytes_0)
    assert f"{type(node_0).__module__}.{type(node_0).__qualname__}" == "node.Node"
    assert node_0.value == b"_\xcb\xf4C\x11\x82[\xc6\x1e\xd1"
    assert node_0.successor is None
    assert node_0.successors == []
    assert node_0.predecessors == []
    assert node_0.incoming_nodes == []
    assert node_0.outgoing_nodes == []
    var_0 = module_0.breadth_first_search(node_0, bytes_0)
    assert var_0 is False
    var_1 = module_0.breadth_first_search(bytes_0, bytes_0)
    assert var_1 is True
    deque_0 = module_2.deque()
    assert (
        f"{type(deque_0).__module__}.{type(deque_0).__qualname__}"
        == "collections.deque"
    )
    assert len(deque_0) == 0
    assert (
        f"{type(module_2.deque.maxlen).__module__}.{type(module_2.deque.maxlen).__qualname__}"
        == "builtins.getset_descriptor"
    )
