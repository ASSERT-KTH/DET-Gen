# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import wrap as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 203
    list_0 = [int_0]
    bool_0 = True
    list_1 = [list_0, list_0, list_0, bool_0]
    module_0.wrap(list_1, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xeb\xed\xb1\x96\xad-\x82Y\xc9\x8c\xa6\x0f\x99\x1c\xf8\xb7\xba\xc4&)"
    module_0.wrap(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 220
    list_0 = [int_0]
    bool_0 = True
    var_0 = module_0.wrap(list_0, int_0)
    list_1 = [list_0, list_0, list_0, bool_0]
    module_0.wrap(list_1, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    str_0 = ';"'
    var_0 = module_0.wrap(str_0, bool_0)
    var_1 = module_1.object()
    none_type_0 = None
    module_0.wrap(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "d\x0cXj\x0b0Gc~9O6\t\\0k* "
    bool_0 = True
    var_0 = module_0.wrap(str_0, bool_0)
    object_0 = module_1.object()
    module_0.wrap(bool_0, var_0)
