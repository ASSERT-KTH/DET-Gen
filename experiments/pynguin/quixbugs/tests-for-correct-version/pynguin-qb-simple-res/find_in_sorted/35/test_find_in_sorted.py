# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


def test_case_0():
    dict_0 = {}
    var_0 = module_0.find_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    list_0 = []
    none_type_0 = None
    var_1 = module_0.find_in_sorted(list_0, none_type_0)
    assert var_1 == -1
    var_2 = module_0.find_in_sorted(list_0, none_type_0)
    assert var_2 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"}\x88%"
    none_type_0 = None
    module_0.find_in_sorted(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "*GFiM"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = False
    module_0.find_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "-C"
    bytes_0 = b"-"
    tuple_0 = (str_0, bytes_0)
    var_0 = module_0.find_in_sorted(tuple_0, bytes_0)
    assert var_0 == 1
    module_0.find_in_sorted(var_0, var_0)
