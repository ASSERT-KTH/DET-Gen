# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "8[{uiNd57\rNzn"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(str_0, str_0)
    assert var_1 == -1
    dict_0 = {var_1: var_1, var_1: var_1, str_0: str_0}
    module_0.find_in_sorted(var_1, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"<p\xe1\xc3\xa5"
    module_0.find_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_in_sorted(bool_0, bool_0)


def test_case_3():
    bytes_0 = b"a\xb3\xf8\x0c"
    bytes_1 = b"]\xdfO\xbc\x11\x16\xe32s\xd7\x90doSo\xc0+\xaa"
    tuple_0 = (bytes_0, bytes_1)
    dict_0 = {tuple_0: bytes_1, tuple_0: tuple_0, bytes_1: tuple_0}
    float_0 = 1557.0
    bytes_2 = b"B"
    tuple_1 = (dict_0, float_0, bytes_2)
    var_0 = module_0.find_in_sorted(tuple_1, float_0)
    assert var_0 == 1
