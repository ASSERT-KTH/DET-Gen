# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


def test_case_0():
    tuple_0 = ()
    none_type_0 = None
    var_0 = module_0.find_in_sorted(tuple_0, none_type_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_in_sorted(set_0, set_0)
    assert var_0 == -1
    dict_0 = {var_0: set_0}
    module_0.find_in_sorted(dict_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "JW"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "h~JML5:7q;F&d\n<"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "\x0cA0Y"
    object_0 = module_1.object()
    module_0.find_in_sorted(object_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x9a@\x01K\xd8R\xa6"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.find_in_sorted(list_0, bytes_0)
    assert var_0 == 1
    module_0.find_in_sorted(var_0, list_0)
