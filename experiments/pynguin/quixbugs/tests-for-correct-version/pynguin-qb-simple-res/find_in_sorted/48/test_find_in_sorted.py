# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "a/^ &>.::alL"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = -1414
    module_0.find_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "w56?~f{;i%$3sL&d1}"
    none_type_0 = None
    module_0.find_in_sorted(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -617
    module_0.find_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "R;$V=LaX"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = -3556
    module_0.find_in_sorted(str_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1267
    list_0 = [int_0]
    var_0 = module_0.find_in_sorted(list_0, int_0)
    assert var_0 == 0
    str_0 = "+"
    module_0.find_in_sorted(str_0, var_0)
