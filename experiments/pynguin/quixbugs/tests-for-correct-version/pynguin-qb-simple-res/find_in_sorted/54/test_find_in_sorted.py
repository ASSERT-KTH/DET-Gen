# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    set_0 = set()
    var_0 = module_0.find_in_sorted(set_0, set_0)
    assert var_0 == -1
    module_0.find_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xe0\xbc\x1c\xd31\xccz\xd6dDO\x81\xc3T=`\x1f"
    set_0 = {bytes_0}
    module_0.find_in_sorted(set_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 780
    module_0.find_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x19\x87\xdf.^\x13j\rn\x0fpJ\xed!\x9fn\x05a\xc5"
    bool_0 = True
    var_0 = module_0.find_in_sorted(bytes_0, bool_0)
    assert var_0 == -1
    int_0 = 351
    module_0.find_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_in_sorted(list_0, bool_0)
    assert var_0 == 1
    int_0 = -3391
    module_0.find_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "$e\n}S"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    float_0 = 2532.862517
    module_0.find_in_sorted(float_0, var_0)
