# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    none_type_0 = None
    var_0 = module_0.find_in_sorted(tuple_0, none_type_0)
    assert var_0 == -1
    tuple_1 = ()
    var_1 = module_0.find_in_sorted(tuple_0, tuple_1)
    assert var_1 == -1
    var_2 = module_0.find_in_sorted(tuple_0, tuple_0)
    assert var_2 == -1
    module_0.find_in_sorted(var_2, var_2)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xfeUa\x17\x93\xa7\x08\x01H\xf7>$O\xc1\x11\xed\xfa\xfe\x8e"
    set_0 = {bytes_0}
    module_0.find_in_sorted(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Px8cld3'zZ?3\t=Z"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    none_type_0 = None
    bool_0 = True
    module_0.find_in_sorted(none_type_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "]bJ%$pI"
    list_0 = [str_0]
    var_0 = module_0.find_in_sorted(list_0, str_0)
    assert var_0 == 0
    module_1.object(*list_0)
