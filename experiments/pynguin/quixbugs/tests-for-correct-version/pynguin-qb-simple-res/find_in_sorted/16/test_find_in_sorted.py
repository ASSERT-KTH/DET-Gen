# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "!pUM4"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(str_0, str_0)
    assert var_1 == -1
    tuple_0 = (var_1, var_1, var_1, var_0)
    var_2 = module_0.find_in_sorted(tuple_0, var_1)
    assert var_2 == 2
    module_0.find_in_sorted(str_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = 559.16066
    dict_0 = {float_0: float_0}
    bool_0 = False
    module_0.find_in_sorted(dict_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_1.object(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    set_0 = set()
    module_0.find_in_sorted(none_type_0, set_0)
