# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    bool_0 = True
    list_0 = module_0.find_in_sorted(tuple_0, tuple_0)
    assert list_0 == -1
    module_0.find_in_sorted(list_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 3
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_in_sorted(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"w\xdb9\xefg\x0e\xf2\xaf\xfcJ\x1d"
    list_0 = [bytes_0]
    var_0 = module_0.find_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    bytes_1 = b"\xf5"
    module_0.find_in_sorted(bytes_1, bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "P\x0bkoG\n!N"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    set_0 = {str_0, str_0, str_0}
    module_0.find_in_sorted(set_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "uo#~A[6"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "P\x0bkoG\n!N"
    var_1 = module_0.find_in_sorted(str_1, str_1)
    assert var_1 == -1
    set_0 = {str_1, str_1, str_1}
    module_0.find_in_sorted(set_0, str_1)
