# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\t.)E<I$B hqP"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    list_0 = []
    list_1 = [list_0, list_0]
    var_1 = module_0.find_in_sorted(list_1, list_1)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "<"
    list_0 = [str_0, str_0, str_0]
    module_0.find_in_sorted(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"q\xcc\x0b\xd6\xac5"
    module_1.object(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -1705.53
    module_0.find_in_sorted(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"V'"
    str_0 = '7N_ebh/8\\u6"|:(w:~'
    tuple_0 = (bytes_0, str_0)
    var_0 = module_0.find_in_sorted(tuple_0, str_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)
