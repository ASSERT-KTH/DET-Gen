# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "_\\K5"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    bytes_0 = b"\x0et\xb8"
    module_0.find_in_sorted(bytes_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0}
    module_0.find_in_sorted(dict_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "^?@bU|f?"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "H}=;}E1t"
    list_0 = [str_1, str_1, str_1, str_1]
    module_0.find_in_sorted(str_1, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_1, bool_1: bool_0}
    var_0 = module_0.find_in_sorted(dict_0, bool_1)
    assert var_0 == 0
    module_1.object(**var_0)
