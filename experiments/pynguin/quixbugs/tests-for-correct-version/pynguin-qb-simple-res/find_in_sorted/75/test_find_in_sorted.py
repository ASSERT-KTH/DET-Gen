# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    set_0 = set()
    var_0 = module_0.find_in_sorted(set_0, set_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(set_0, var_0)
    assert var_1 == -1
    var_2 = module_0.find_in_sorted(set_0, set_0)
    assert var_2 == -1
    var_3 = module_0.find_in_sorted(set_0, set_0)
    assert var_3 == -1
    set_1 = set()
    module_0.find_in_sorted(var_0, set_1)


def test_case_1():
    set_0 = set()
    bool_0 = True
    tuple_0 = (set_0, bool_0)
    tuple_1 = (tuple_0,)
    var_0 = module_0.find_in_sorted(tuple_1, tuple_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    str_0 = "~0^"
    module_0.find_in_sorted(none_type_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "E62@Ka!4ZV0@mP3"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "0:"
    str_2 = "\\\x0c}i#CMiX<u-*Occ\rQ"
    dict_0 = {str_1: str_1, str_2: str_2, str_1: str_1, str_2: str_1}
    module_1.object(**dict_0)
