# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    var_0 = module_0.find_in_sorted(list_0, list_0)
    assert var_0 == -1
    list_1 = [list_0, list_0, list_0, list_0]
    str_0 = "b6S;Sl/2>]u"
    none_type_0 = None
    var_1 = module_0.find_in_sorted(list_0, list_1)
    assert var_1 == -1
    module_0.find_in_sorted(none_type_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xc8\\\xc002\xacb3B\x18\x8e\x0f\xcb\xbc9\x92"
    module_0.find_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "ZW6.^A4G."
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_in_sorted(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "\r"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_in_sorted(var_0, var_0)
