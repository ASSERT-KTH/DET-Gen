# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import levenshtein as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ""
    none_type_0 = None
    module_0.levenshtein(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"a\xee'\xc3m\xfaG\x11"
    module_0.levenshtein(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b"\x0c_\xf3\xa9\x96\x8c\x9a=m\x8e"
    tuple_0 = (bytes_0, bool_0, bool_0)
    module_0.levenshtein(dict_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "[2r]/?ZCs7\tXDN:WnN"
    str_1 = "[2r]/?ZCs7\tDNWnN"
    var_0 = module_0.levenshtein(str_0, str_1)
    assert var_0 == 2
    object_0 = module_1.object()
    module_1.object(**var_0)
