# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import levenshtein as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "d\t~B>T3Y|"
    var_0 = module_0.levenshtein(str_0, str_0)
    assert var_0 == 0
    object_0 = module_1.object()
    module_0.levenshtein(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    module_0.levenshtein(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"W\xd7\xa7\x93)"
    int_0 = 3863
    tuple_0 = (int_0,)
    dict_0 = {tuple_0: int_0}
    float_0 = -2058.6244
    tuple_1 = (bytes_0, tuple_0, dict_0, float_0)
    module_0.levenshtein(tuple_1, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "do\t~B>TY$L\x0cZ|"
    var_0 = module_0.levenshtein(str_0, str_0)
    assert var_0 == 0
    var_1 = module_0.levenshtein(str_0, str_0)
    assert var_1 == 0
    str_1 = "B<"
    var_2 = module_0.levenshtein(str_1, str_0)
    assert var_2 == 12
    var_3 = module_0.levenshtein(str_1, str_0)
    assert var_3 == 12
    module_0.levenshtein(str_0, var_3)
