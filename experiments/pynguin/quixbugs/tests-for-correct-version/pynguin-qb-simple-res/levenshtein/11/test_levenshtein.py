# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import levenshtein as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "j2T_N\x0b8.*\t|9"
    var_0 = module_0.levenshtein(str_0, str_0)
    assert var_0 == 0
    bool_0 = False
    set_0 = {str_0, str_0, bool_0, str_0}
    tuple_0 = (set_0, var_0, bool_0, bool_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: tuple_0}
    module_0.levenshtein(dict_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xd8\xbd\xd7\xec\x86P*\xad"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.levenshtein(list_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xd8\xbd\xd7\xec\x86P*\xad\xca"
    module_0.levenshtein(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "j2T_N\x0b8.*\t|9"
    var_0 = module_0.levenshtein(str_0, str_0)
    assert var_0 == 0
    str_1 = "{ICs"
    var_1 = module_0.levenshtein(str_0, str_1)
    assert var_1 == 12
    var_2 = module_0.levenshtein(str_0, str_1)
    assert var_2 == 12
    module_0.levenshtein(var_0, var_0)
