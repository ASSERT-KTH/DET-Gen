# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import reverse_linked_list as module_1


def test_case_0():
    none_type_0 = None
    node_0 = module_0.Node(outgoing_nodes=none_type_0)
    var_0 = module_1.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors == []
    assert var_0.incoming_nodes == []
    assert var_0.outgoing_nodes is None


def test_case_1():
    set_0 = set()
    var_0 = module_1.reverse_linked_list(set_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_1.reverse_linked_list(none_type_0)
    complex_0 = -18.1 + 4900.4j
    node_0 = module_0.Node(successor=complex_0)
#    module_1.reverse_linked_list(node_0)
