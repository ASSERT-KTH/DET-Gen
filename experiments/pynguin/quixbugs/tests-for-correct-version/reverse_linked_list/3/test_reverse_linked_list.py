# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import builtins as module_1
import node as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 6776.9428
    module_0.reverse_linked_list(float_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.reverse_linked_list(none_type_0)


def test_case_2():
    object_0 = module_1.object()
    node_0 = module_2.Node(
        object_0, successors=object_0, predecessors=object_0, outgoing_nodes=object_0
    )
    var_0 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert (
        f"{type(var_0.value).__module__}.{type(var_0.value).__qualname__}"
        == "builtins.object"
    )
    assert var_0.successor is None
    assert (
        f"{type(var_0.successors).__module__}.{type(var_0.successors).__qualname__}"
        == "builtins.object"
    )
    assert (
        f"{type(var_0.predecessors).__module__}.{type(var_0.predecessors).__qualname__}"
        == "builtins.object"
    )
    assert var_0.incoming_nodes == []
    assert (
        f"{type(var_0.outgoing_nodes).__module__}.{type(var_0.outgoing_nodes).__qualname__}"
        == "builtins.object"
    )


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "1KeGv>_Njfha 4"
    none_type_0 = None
    var_0 = module_0.reverse_linked_list(none_type_0)
    none_type_1 = None
    node_0 = module_2.Node(successor=str_0, successors=none_type_1)
    module_0.reverse_linked_list(node_0)
