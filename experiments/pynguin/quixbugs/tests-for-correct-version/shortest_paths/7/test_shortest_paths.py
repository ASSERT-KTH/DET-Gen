# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)
    module_0.shortest_paths(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.shortest_paths(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 734
    str_0 = "O\x0c;vj _\n'v:@e"
    tuple_0 = (int_0, str_0)
    set_0 = {tuple_0}
    module_0.shortest_paths(tuple_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 747
    str_0 = "<GBckw]MjEVP&X]}p|f"
    tuple_0 = (int_0, str_0)
    dict_0 = {tuple_0: tuple_0}
    module_0.shortest_paths(tuple_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -413
    str_0 = "O\x0c;vj _\n'v:@e"
    tuple_0 = (int_0, str_0)
    dict_0 = {tuple_0: tuple_0, tuple_0: int_0, tuple_0: int_0}
    var_0 = module_0.shortest_paths(int_0, dict_0)
    module_0.shortest_paths(tuple_0, var_0)
