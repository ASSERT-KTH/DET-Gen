# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "2S$c<J1uh&j2)~jn/"
#    module_0.shortest_paths(str_0, str_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
#    module_0.shortest_paths(list_0, list_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)
    bytes_0 = b"\xb4\x9b"
    tuple_1 = (bytes_0,)
#    module_0.shortest_paths(tuple_1, tuple_1)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    bytes_0 = b"\xb4\x9b"
    var_0 = module_0.shortest_paths(bytes_0, tuple_0)
#    module_0.shortest_paths(tuple_0, var_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    bytes_0 = b"\x08\x08"
    var_0 = module_0.shortest_paths(bytes_0, tuple_0)
    var_1 = module_0.shortest_paths(bytes_0, var_0)
#    var_1.successor()
