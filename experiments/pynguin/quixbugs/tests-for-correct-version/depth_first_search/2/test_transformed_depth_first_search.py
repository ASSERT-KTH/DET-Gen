# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True


#@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -1030
    none_type_0 = None
#    module_0.depth_first_search(int_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    node_0 = module_1.Node(
        successor=none_type_0, incoming_nodes=bool_0, outgoing_nodes=none_type_0
    )
    var_0 = module_0.depth_first_search(node_0, none_type_0)
    assert var_0 is False


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    node_0 = module_1.Node(successors=list_0, predecessors=bool_0)
    bool_1 = True
#    module_0.depth_first_search(node_0, bool_1)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    node_0 = module_1.Node(list_0, incoming_nodes=list_0, outgoing_nodes=list_0)
    list_1 = [node_0, node_0, node_0, node_0]
    node_1 = module_1.Node(successors=list_1)
    none_type_0 = None
    var_0 = module_0.depth_first_search(node_1, none_type_0)
    assert var_0 is False
    float_0 = 2786.1
    dict_0 = {float_0: float_0}
    none_type_1 = None
#    module_0.depth_first_search(dict_0, none_type_1)
