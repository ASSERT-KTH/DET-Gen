# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.breadth_first_search(bool_0, bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 478
    none_type_0 = None
    module_0.breadth_first_search(int_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    node_0 = module_1.Node()
    var_0 = module_0.breadth_first_search(node_0, tuple_0)
    assert var_0 is False
    node_0.successors()


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    node_0 = module_1.Node(successor=bool_0, successors=list_0, predecessors=list_0)
    var_0 = module_0.breadth_first_search(node_0, bool_0)
    assert var_0 is True
