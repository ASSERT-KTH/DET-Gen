# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True


#@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x1b\x8f\x8dp\x92"
    node_0 = module_1.Node(bytes_0, successors=bytes_0)
#    module_0.breadth_first_search(node_0, bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x17\\\x89"
    none_type_0 = None
    var_0 = module_0.breadth_first_search(bytes_0, bytes_0)
    assert var_0 is True
    node_0 = module_1.Node(
        var_0, successors=bytes_0, predecessors=bytes_0, incoming_nodes=bytes_0
    )
    assert node_0.value is True
    bytes_1 = b"X\x1dy"
    node_1 = module_1.Node(bytes_1, predecessors=none_type_0)
    var_1 = module_0.breadth_first_search(var_0, var_0)
    assert var_1 is True
    var_2 = module_0.breadth_first_search(node_1, var_1)
#    module_0.breadth_first_search(var_1, var_2)
