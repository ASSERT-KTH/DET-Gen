# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    int_0 = 1415
    var_0 = module_0.breadth_first_search(int_0, int_0)
    assert var_0 is True


def test_case_1():
    float_0 = 358.2110714577341
    node_0 = module_1.Node(float_0)
    var_0 = module_0.breadth_first_search(node_0, float_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 387.0
    none_type_0 = None
    module_0.breadth_first_search(float_0, none_type_0)


def test_case_3():
    str_0 = "G"
    node_0 = module_1.Node(str_0, str_0, str_0, str_0, str_0)
    var_0 = module_0.breadth_first_search(node_0, str_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "f"
    var_0 = module_0.breadth_first_search(str_0, str_0)
    assert var_0 is True
    node_0 = module_1.Node(successors=str_0, predecessors=str_0)
    set_0 = {str_0, node_0}
    node_1 = module_1.Node(successors=set_0, predecessors=set_0, incoming_nodes=node_0)
    module_0.breadth_first_search(node_1, set_0)
