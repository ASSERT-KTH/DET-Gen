# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "u6`LU"
    node_0 = module_1.Node(successors=str_0)
    module_0.breadth_first_search(node_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    node_0 = module_1.Node(predecessors=none_type_0)
    var_0 = module_0.breadth_first_search(node_0, none_type_0)
    assert var_0 is False
    module_2.deque(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "<"
    none_type_0 = None
    node_0 = module_1.Node(successors=str_0, outgoing_nodes=none_type_0)
    node_1 = module_1.Node(incoming_nodes=str_0)
    var_0 = module_0.breadth_first_search(node_1, none_type_0)
    assert var_0 is False
    list_0 = [node_0, node_0]
    node_2 = module_1.Node(var_0, node_0, list_0)
    assert node_2.value is False
    module_0.breadth_first_search(node_2, none_type_0)
