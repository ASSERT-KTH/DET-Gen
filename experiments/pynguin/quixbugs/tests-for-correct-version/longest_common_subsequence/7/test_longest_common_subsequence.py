# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xf1BC"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_1():
    float_0 = 971.534
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(float_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(float_0, var_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(none_type_0, var_1)


def test_case_2():
    bool_0 = True
    bytes_0 = b"z\xea\xc0\x87\x15\xbf\xac\x8a\xdcqN"
    tuple_0 = (bool_0, bytes_0)
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, bool_0)
    assert var_0 == ""
    list_0 = [tuple_0, bool_0, tuple_0, var_0]
    var_1 = module_0.longest_common_subsequence(list_0, bytes_0)
    assert var_1 == ""
    none_type_1 = None
    var_2 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_2, var_2)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_2, none_type_1)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(none_type_1, var_3)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_6 == ""
