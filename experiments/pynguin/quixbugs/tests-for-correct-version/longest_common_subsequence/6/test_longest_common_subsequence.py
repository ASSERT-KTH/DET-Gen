# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -363
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -56.61229
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(float_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, float_0)
    assert var_1 == ""
    int_0 = -2597
    module_0.longest_common_subsequence(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ".j%gAHA]$4mmZx A'7UJ"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == ".j%gAHA]$4mmZx A'7UJ"
    var_1 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_1 == ".j%gAHA]$4mmZx A'7UJ"
    var_2 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_2 == ".j%gAHA]$4mmZx A'7UJ"
    var_3 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_3 == ".j%gAHA]$4mmZx A'7UJ"
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.longest_common_subsequence(str_0, set_0)


def test_case_4():
    str_0 = "#D\tsf"
    bool_0 = False
    tuple_0 = (str_0, bool_0)
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "#D\tsf"
    var_1 = module_0.longest_common_subsequence(var_0, tuple_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_1, str_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(tuple_0, str_0)
    assert var_3 == ""
    set_0 = set()
    var_4 = module_0.longest_common_subsequence(set_0, var_1)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(tuple_0, var_3)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(set_0, var_0)
    assert var_6 == ""
