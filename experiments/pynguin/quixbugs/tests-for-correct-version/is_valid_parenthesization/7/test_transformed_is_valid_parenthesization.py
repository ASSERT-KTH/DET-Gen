# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0


def test_case_0():
    str_0 = "5#"
    list_0 = module_0.is_valid_parenthesization(str_0)
    assert list_0 is False


#@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.is_valid_parenthesization(list_0)
    assert var_0 is True
    int_0 = -264
#    module_0.is_valid_parenthesization(int_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
#    module_0.is_valid_parenthesization(bool_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "8X#Qp"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    str_1 = "(#"
    var_1 = module_0.is_valid_parenthesization(str_1)
    assert var_1 is True
    dict_0 = {str_1: str_1, str_1: str_1, str_1: var_1, var_1: var_1}
    list_0 = []
    var_2 = module_0.is_valid_parenthesization(list_0)
    assert var_2 is True
    tuple_0 = (str_1, str_1, dict_0)
    var_3 = module_0.is_valid_parenthesization(tuple_0)
    assert var_3 is False
#    module_0.is_valid_parenthesization(var_2)
