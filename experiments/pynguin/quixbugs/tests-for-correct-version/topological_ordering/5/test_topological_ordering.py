# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    dict_0 = {}
    var_0 = module_0.topological_ordering(dict_0)


def test_case_1():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.topological_ordering(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x00\x81\xae\x16\xcd"
    node_0 = module_1.Node(bytes_0, bytes_0, bytes_0, outgoing_nodes=bytes_0)
    tuple_0 = (node_0,)
    module_0.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "p$Gh}(`h"
    node_0 = module_1.Node(incoming_nodes=str_0)
    list_0 = [node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)
    var_1 = module_0.topological_ordering(list_0)
    var_2 = module_0.topological_ordering(var_0)
    var_3 = module_0.topological_ordering(list_0)
    var_0.successor()
