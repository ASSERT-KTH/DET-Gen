# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import detect_cycle as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.detect_cycle(none_type_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xee\xf7\x9a\xbf]QG_\x9c\xe4\xc9.\xeb\x8d"
    module_0.detect_cycle(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    node_0 = module_1.Node(bool_0)
    var_0 = module_0.detect_cycle(node_0)
    assert var_0 is False
    var_0.successor()


def test_case_3():
    bool_0 = True
    node_0 = module_1.Node(incoming_nodes=bool_0)
    node_1 = module_1.Node(successor=node_0, outgoing_nodes=bool_0)
    var_0 = module_0.detect_cycle(node_1)
    assert var_0 is False
