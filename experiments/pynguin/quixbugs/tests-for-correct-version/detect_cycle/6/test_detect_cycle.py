# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import detect_cycle as module_0
import node as module_1
import builtins as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.detect_cycle(none_type_0)
    assert var_0 is False
    node_0 = module_1.Node(var_0, var_0, outgoing_nodes=var_0)
    assert node_0.value is False
    assert node_0.successor is False
    assert node_0.outgoing_nodes is False
    module_0.detect_cycle(node_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_2.object()
    module_0.detect_cycle(object_0)


def test_case_2():
    int_0 = 563
    none_type_0 = None
    node_0 = module_1.Node(int_0, outgoing_nodes=none_type_0)
    var_0 = module_0.detect_cycle(node_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "/ud\x0c-TOTIr~W53L<7jcW"
    none_type_0 = None
    node_0 = module_1.Node(successor=str_0, successors=str_0, predecessors=none_type_0)
    module_0.detect_cycle(node_0)


def test_case_4():
    none_type_0 = None
    node_0 = module_1.Node(
        successor=none_type_0, predecessors=none_type_0, incoming_nodes=none_type_0
    )
    node_1 = module_1.Node(successor=node_0, predecessors=node_0, incoming_nodes=node_0)
    var_0 = module_0.detect_cycle(node_1)
    assert var_0 is False
