# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
#    module_0.find_first_in_sorted(set_0, bool_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
#    module_0.find_first_in_sorted(var_0, var_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
#    module_0.find_first_in_sorted(none_type_0, none_type_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "'x.RO|nZ'a0\x0bW"
    tuple_0 = (str_0, str_0, str_0)
#    module_0.find_first_in_sorted(tuple_0, tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xaakSE\x92g\xee"
    int_0 = 2664
    var_0 = module_0.find_first_in_sorted(bytes_0, int_0)
    assert var_0 == -1
    none_type_0 = None
#    module_0.find_first_in_sorted(none_type_0, var_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "X\tCbx=grKv\ne\"XL'+OT"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
#    module_1.object(**str_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = -417.10314505723704
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    list_0 = [float_0, dict_0]
    var_0 = module_0.find_first_in_sorted(list_0, dict_0)
    assert var_0 == 1
    object_0 = module_1.object()
#    module_0.find_first_in_sorted(var_0, dict_0)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    float_0 = -383.6
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    none_type_0 = None
    list_0 = [dict_0]
    var_0 = module_0.find_first_in_sorted(list_0, dict_0)
    assert var_0 == 0
#    module_0.find_first_in_sorted(none_type_0, dict_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 538
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    bytes_0 = b"\xa4\x88\x90\xafS\xed\x9b\xd1\xab\xceMhQ\n\x14x?\xff"
#    module_0.find_first_in_sorted(var_0, bytes_0)
