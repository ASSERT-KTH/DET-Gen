# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xe6"
    set_0 = {bytes_0}
#    module_0.find_first_in_sorted(set_0, bytes_0)


def test_case_1():
    none_type_0 = None
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, none_type_0)
    assert var_0 == -1


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
#    module_0.find_first_in_sorted(bool_0, bool_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xe6"
#    module_0.find_first_in_sorted(bytes_0, bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "+Xx!"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_1.object()
    bool_0 = False
#    module_0.find_first_in_sorted(bool_0, bool_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "O"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    set_0 = {str_0, str_0}
#    module_0.find_first_in_sorted(set_0, var_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    list_0 = []
    list_1 = [bool_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_0 == 1
    str_0 = " \\}"
    object_0 = module_1.object()
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
#    module_0.find_first_in_sorted(var_0, list_1)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    list_0 = []
    list_1 = [list_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_0 == 0
#    module_0.find_first_in_sorted(var_0, var_0)
