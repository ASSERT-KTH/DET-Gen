# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "D7"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ""
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = ""
    none_type_0 = None
#    module_0.find_first_in_sorted(none_type_0, str_1)


def test_case_2():
    str_0 = "6z"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_1.object()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Z"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
#    module_1.object(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"X\x17\xde\xacq\xaa@\xcc\xec\xf9A\x93!\x101A\xc4"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
#    module_1.object(*var_0, **var_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    str_0 = '{M&X|2fhy2"CH'
    tuple_0 = (bool_0, str_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 1
    bytes_0 = b"P"
#    module_0.find_first_in_sorted(str_0, bytes_0)
