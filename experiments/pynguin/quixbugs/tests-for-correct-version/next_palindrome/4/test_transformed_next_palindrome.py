# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import next_palindrome as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x87\xb2>\x84"
#    module_0.next_palindrome(bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.next_palindrome(set_0)
    var_1 = module_0.next_palindrome(set_0)
#    module_1.object(**var_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 1969.1385
#    module_0.next_palindrome(float_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"+\x93\xe8\xf8\xf89\xf2)\t\xa9\x16\x0f\xb0dCw"
#    module_0.next_palindrome(bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -3247
    list_0 = [int_0, int_0]
    var_0 = module_0.next_palindrome(list_0)
    bytes_0 = b"+\x93\xe8\xf8\xf89\xf2)\t\xa9\x16\x0f\xb0dCw"
#    module_0.next_palindrome(bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.next_palindrome(list_0)
    var_1 = module_0.next_palindrome(var_0)
    var_2 = module_0.next_palindrome(list_0)
    var_3 = module_0.next_palindrome(list_0)
    var_4 = module_0.next_palindrome(var_0)
    var_5 = module_0.next_palindrome(var_3)
    var_6 = module_0.next_palindrome(var_0)
    var_7 = module_0.next_palindrome(var_3)
    var_8 = module_0.next_palindrome(var_0)
    var_9 = module_0.next_palindrome(var_4)
    var_10 = module_0.next_palindrome(var_4)
    var_11 = module_0.next_palindrome(var_8)
#    module_0.next_palindrome(bool_0)


def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.next_palindrome(list_0)
    var_1 = module_0.next_palindrome(var_0)
    var_2 = module_0.next_palindrome(list_0)
    var_3 = module_0.next_palindrome(var_0)
    var_4 = module_0.next_palindrome(list_0)
    var_5 = module_0.next_palindrome(var_2)
    var_6 = module_0.next_palindrome(var_5)
    var_7 = module_0.next_palindrome(list_0)
    var_8 = module_0.next_palindrome(var_0)
