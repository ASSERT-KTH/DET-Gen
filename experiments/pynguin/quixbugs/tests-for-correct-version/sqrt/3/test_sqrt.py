# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 2212
    var_0 = module_0.sqrt(int_0, int_0)
    assert var_0 == pytest.approx(53.64263218589898, abs=0.01, rel=0.01)
    float_0 = 3513.594
    var_1 = module_0.sqrt(float_0, float_0)
    assert var_1 == pytest.approx(74.72582135260207, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(float_0, float_0)
    assert var_2 == pytest.approx(74.72582135260207, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(float_0, float_0)
    assert var_3 == pytest.approx(74.72582135260207, abs=0.01, rel=0.01)
    var_4 = module_0.sqrt(var_3, var_0)
    assert var_4 == pytest.approx(9.052326814864418, abs=0.01, rel=0.01)
    bytes_0 = b"\xbb\xfd\xd3\x9a\xb3\xb7\xbf"
    module_0.sqrt(bytes_0, var_4)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    none_type_0 = None
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.5, abs=0.01, rel=0.01)
    module_0.sqrt(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    dict_0 = {}
    module_0.sqrt(dict_0, dict_0)
