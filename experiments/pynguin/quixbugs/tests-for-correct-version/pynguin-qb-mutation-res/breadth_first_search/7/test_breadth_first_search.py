# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    bytes_0 = b'\xbe\x00\xf3\xf2\xa7\x12_\xebZ\xad\x03"'
    var_0 = module_0.breadth_first_search(bytes_0, bytes_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "7RBu.\tyLH"
    node_0 = module_1.Node(successors=str_0, outgoing_nodes=str_0)
    module_0.breadth_first_search(node_0, str_0)


def test_case_2():
    str_0 = "7RBu.\tyLH"
    node_0 = module_1.Node(successors=str_0, outgoing_nodes=str_0)
    node_1 = module_1.Node()
    var_0 = module_0.breadth_first_search(node_1, str_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "7RBu.\tyLH"
    var_0 = module_1.Node(successors=str_0, predecessors=str_0, incoming_nodes=str_0)
    tuple_0 = (var_0, var_0)
    node_0 = module_1.Node(successors=tuple_0, outgoing_nodes=str_0)
    module_0.breadth_first_search(node_0, str_0)
