# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1
import collections as module_2


def test_case_0():
    int_0 = -1601
    var_0 = module_0.breadth_first_search(int_0, int_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"y\xadU\xd0%\xfc\xb3^\xdcU\xa2\xcfe\x8e\xb8n\x18sw"
    node_0 = module_1.Node(
        successors=bytes_0, incoming_nodes=bytes_0, outgoing_nodes=bytes_0
    )
    module_0.breadth_first_search(node_0, bytes_0)


def test_case_2():
    bool_0 = False
    node_0 = module_1.Node(outgoing_nodes=bool_0)
    none_type_0 = None
    var_0 = module_0.breadth_first_search(node_0, none_type_0)
    assert var_0 is False
    deque_0 = module_2.deque()
