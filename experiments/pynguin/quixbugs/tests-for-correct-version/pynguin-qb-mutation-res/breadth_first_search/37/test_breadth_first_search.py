# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    none_type_0 = None
    module_0.breadth_first_search(bool_0, none_type_0)


def test_case_2():
    float_0 = -2457.675645440047
    node_0 = module_1.Node(float_0, float_0, predecessors=float_0)
    var_0 = module_0.breadth_first_search(node_0, float_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'S(RA_PQUK$"5vo}\n!'
    node_0 = module_1.Node(successor=str_0, successors=str_0)
    module_0.breadth_first_search(node_0, str_0)


def test_case_4():
    str_0 = "{"
    node_0 = module_1.Node(successor=str_0, successors=str_0)
    bool_0 = True
    set_0 = {str_0, node_0, bool_0, bool_0}
    none_type_0 = None
    node_1 = module_1.Node(
        successor=bool_0, successors=set_0, outgoing_nodes=none_type_0
    )
    var_0 = module_0.breadth_first_search(node_1, str_0)
    assert var_0 is True
