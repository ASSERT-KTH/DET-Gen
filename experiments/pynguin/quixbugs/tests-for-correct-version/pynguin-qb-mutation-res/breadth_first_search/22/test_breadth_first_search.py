# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import breadth_first_search as module_1


def test_case_0():
    node_0 = module_0.Node()
    var_0 = module_1.breadth_first_search(node_0, node_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xe0\xd7\xaa\xc4\xc7\x92E\xae\xaa\x9cS"
    node_0 = module_0.Node(
        successors=bytes_0, incoming_nodes=bytes_0, outgoing_nodes=bytes_0
    )
    module_1.breadth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -1219.04527
    var_0 = module_1.breadth_first_search(float_0, float_0)
    assert var_0 is True
    none_type_0 = None
    bytes_0 = b""
    node_0 = module_0.Node(incoming_nodes=float_0, outgoing_nodes=bytes_0)
    var_1 = module_1.breadth_first_search(node_0, none_type_0)
    int_0 = 2459
    module_1.breadth_first_search(int_0, var_1)
