# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -2442
    none_type_0 = None
    module_0.breadth_first_search(int_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x83\xf9\x82dQ\xdd\x87\x90H\xd5"
    node_0 = module_1.Node(
        bytes_0,
        successors=bytes_0,
        predecessors=bytes_0,
        incoming_nodes=bytes_0,
        outgoing_nodes=bytes_0,
    )
    module_0.breadth_first_search(node_0, bytes_0)


def test_case_3():
    deque_0 = module_2.deque()
    node_0 = module_1.Node(predecessors=deque_0)
    node_1 = module_1.Node()
    var_0 = module_0.breadth_first_search(node_0, node_1)
    assert var_0 is False
