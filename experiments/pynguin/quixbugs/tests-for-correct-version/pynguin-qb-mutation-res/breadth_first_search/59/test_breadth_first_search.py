# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True


def test_case_1():
    none_type_0 = None
    node_0 = module_1.Node(incoming_nodes=none_type_0, outgoing_nodes=none_type_0)
    var_0 = module_0.breadth_first_search(node_0, none_type_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 3901.8977
    none_type_0 = None
    module_0.breadth_first_search(float_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "^v"
    node_0 = module_1.Node(successors=str_0)
    module_0.breadth_first_search(node_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "C"
    node_0 = module_1.Node(successors=str_0)
    dict_0 = {node_0: node_0, node_0: str_0, str_0: str_0}
    node_1 = module_1.Node(successors=dict_0, predecessors=node_0)
    module_0.breadth_first_search(node_1, dict_0)
