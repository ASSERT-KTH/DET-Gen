# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xf4\x0fn\xfa\x96\xc1\xc0c\xd7\x10\x1c\xce\x9b"
    node_0 = module_1.Node(successors=bytes_0)
    module_0.breadth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1048
    var_0 = module_0.breadth_first_search(int_0, int_0)
    assert var_0 is True
    module_0.breadth_first_search(var_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    node_0 = module_1.Node(bool_0, outgoing_nodes=bool_0)
    var_0 = module_0.breadth_first_search(node_0, bool_0)
    assert var_0 is False
    none_type_0 = None
    var_1 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_1 is True
    module_0.breadth_first_search(bool_0, none_type_0)
