# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    int_0 = -3707
    var_0 = module_0.breadth_first_search(int_0, int_0)
    assert var_0 is True


def test_case_1():
    node_0 = module_1.Node()
    none_type_0 = None
    var_0 = module_0.breadth_first_search(node_0, none_type_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xf4\x0e"
    node_0 = module_1.Node(successors=bytes_0, predecessors=bytes_0)
    module_0.breadth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xd2\xadD\x8df\x00\xd0\x94BiM\x98\xc0\xdf\xff\xa7"
    node_0 = module_1.Node(bytes_0, successors=bytes_0)
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(bytes_0, bytes_0, list_0, list_0)
    module_0.breadth_first_search(node_1, bytes_0)
