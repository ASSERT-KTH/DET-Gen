# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import collections as module_1
import node as module_2


def test_case_0():
    bool_0 = False
    var_0 = module_0.breadth_first_search(bool_0, bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    deque_0 = module_1.deque()
    module_0.breadth_first_search(deque_0, deque_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    module_0.breadth_first_search(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x87\xc9\r\xef\xf3\xd2"
    node_0 = module_2.Node(bytes_0, bytes_0, bytes_0, bytes_0, outgoing_nodes=bytes_0)
    module_0.breadth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    node_0 = module_2.Node(predecessors=none_type_0)
    var_1 = module_0.breadth_first_search(node_0, none_type_0)
    module_0.breadth_first_search(var_0, none_type_0)
