# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import collections as module_1
import node as module_2


def test_case_0():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    deque_0 = module_1.deque()
    module_0.breadth_first_search(deque_0, deque_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xf6\xdd\x8e~\xf2\xd9\x13\xb1\x16"
    node_0 = module_2.Node(successors=bytes_0, predecessors=bytes_0)
    module_0.breadth_first_search(node_0, bytes_0)


def test_case_3():
    none_type_0 = None
    node_0 = module_2.Node(
        none_type_0, predecessors=none_type_0, outgoing_nodes=none_type_0
    )
    int_0 = -939
    var_0 = module_0.breadth_first_search(node_0, int_0)
    assert var_0 is False
