# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    bytes_0 = b"N\xa3\x18\x1b!y\x91\xb8\xdb\xb4\xfa\x10\x1f<I\xd7"
    var_0 = module_0.breadth_first_search(bytes_0, bytes_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xf4"
    node_0 = module_1.Node(bytes_0, successors=bytes_0, incoming_nodes=bytes_0)
    module_0.breadth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"x8\xa9\xc9\x8c\xb1\xc0h)\xa8\x05j\xbe*"
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    node_0 = module_1.Node(outgoing_nodes=none_type_0)
    var_1 = module_0.breadth_first_search(node_0, bytes_0)
    none_type_0.predecessors()
