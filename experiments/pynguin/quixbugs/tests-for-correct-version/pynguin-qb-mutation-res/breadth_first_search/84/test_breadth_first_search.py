# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1
import collections as module_2


def test_case_0():
    bytes_0 = b"\x93\xa5\xc9\x82C\xcdJ\xdeAE\xa7f\x92\xc0U_"
    var_0 = module_0.breadth_first_search(bytes_0, bytes_0)
    assert var_0 is True


def test_case_1():
    str_0 = "/"
    node_0 = module_1.Node(successors=str_0, predecessors=str_0)
    var_0 = module_0.breadth_first_search(node_0, str_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    float_0 = -130.0
    module_0.breadth_first_search(none_type_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    deque_0 = module_2.deque()
    node_0 = module_1.Node(predecessors=deque_0)
    var_0 = module_0.breadth_first_search(node_0, deque_0)
    assert var_0 is False
    str_0 = "-B"
    node_1 = module_1.Node(successors=str_0, predecessors=str_0)
    module_0.breadth_first_search(node_1, str_0)
