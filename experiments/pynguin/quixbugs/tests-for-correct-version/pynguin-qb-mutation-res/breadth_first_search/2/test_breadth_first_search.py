# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import builtins as module_1
import node as module_2


def test_case_0():
    bool_0 = True
    var_0 = module_0.breadth_first_search(bool_0, bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    none_type_0 = None
    module_0.breadth_first_search(object_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xedb\xd3\x97%g\x1d\xa9\xc9V--"
    node_0 = module_2.Node(successors=bytes_0)
    module_0.breadth_first_search(node_0, bytes_0)


def test_case_3():
    node_0 = module_2.Node()
    none_type_0 = None
    var_0 = module_0.breadth_first_search(node_0, none_type_0)
    assert var_0 is False
    var_1 = module_0.breadth_first_search(node_0, node_0)
    assert var_1 is True
    complex_0 = 3664.6 - 3743.589j
    var_2 = module_0.breadth_first_search(complex_0, complex_0)
    assert var_2 is True
