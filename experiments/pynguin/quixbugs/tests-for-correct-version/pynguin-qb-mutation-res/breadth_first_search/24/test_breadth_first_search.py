# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xd6\xd6Z"
    node_0 = module_1.Node(successors=bytes_0, incoming_nodes=bytes_0)
    module_0.breadth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x94q[?\x81\x15\x1d"
    node_0 = module_1.Node(bytes_0)
    none_type_0 = None
    var_0 = module_0.breadth_first_search(node_0, none_type_0)
    assert var_0 is False
    bytes_1 = b"\xff\xa0R\xa2\x9a\xa4\xdfRC\xa0\xf1\x11>A\x8f\xd7\xea"
    set_0 = {bytes_1, bytes_1}
    module_0.breadth_first_search(set_0, bytes_1)
