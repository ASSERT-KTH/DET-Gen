# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    float_0 = -1125.3
    var_0 = module_0.breadth_first_search(float_0, float_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    none_type_0 = None
    module_0.breadth_first_search(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xb4\x90k\x06r\x99\xe4$\xc2\x15^\xf5"
    node_0 = module_1.Node(
        successors=bytes_0, incoming_nodes=bytes_0, outgoing_nodes=bytes_0
    )
    module_0.breadth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb4\x90\x9ck\x06r\x99\xe4$\xc2\x15^\xf5"
    node_0 = module_1.Node(bytes_0, bytes_0)
    var_0 = module_0.breadth_first_search(node_0, bytes_0)
    assert var_0 is False
    module_0.breadth_first_search(bytes_0, node_0)
