# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    bytes_0 = b""
    var_0 = module_0.breadth_first_search(bytes_0, bytes_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xd9\xd0\xd8\xd1\x15=\xf8Qb\xff\xbe\xc2%\xa1"
    none_type_0 = None
    module_0.breadth_first_search(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xcfT\x85PL\xf3?\x9bKD\xa9g-WU\xfd"
    node_0 = module_1.Node(bytes_0, successors=bytes_0)
    module_0.breadth_first_search(node_0, bytes_0)


def test_case_3():
    node_0 = module_1.Node()
    var_0 = module_0.breadth_first_search(node_0, node_0)
    assert var_0 is True
    complex_0 = -149.353 - 2077.252j
    var_1 = module_0.breadth_first_search(node_0, complex_0)
    assert var_1 is False
