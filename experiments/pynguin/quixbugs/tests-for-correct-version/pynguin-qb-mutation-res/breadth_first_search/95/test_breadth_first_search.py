# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search as module_0
import node as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.breadth_first_search(bool_0, bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -1972
    bool_0 = False
    module_0.breadth_first_search(int_0, bool_0)


def test_case_2():
    node_0 = module_1.Node()
    complex_0 = 284.386 + 2462.276j
    var_0 = module_0.breadth_first_search(node_0, complex_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"35\xc5\x80\xf8\x86\xc1\x06A}\xfa\xa0"
    node_0 = module_1.Node(
        successor=bytes_0, successors=bytes_0, outgoing_nodes=bytes_0
    )
    module_0.breadth_first_search(node_0, bytes_0)
