# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1279
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.lcs_length(list_0, list_0)
    assert var_0 == 3
    module_0.lcs_length(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.lcs_length(tuple_0, tuple_0)
    assert var_0 == 0
    int_0 = -177
    module_0.lcs_length(int_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2911
    float_0 = 3041.882587
    list_0 = [int_0, float_0]
    module_0.lcs_length(list_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = -2031.6 - 3711j
    none_type_0 = None
    module_0.lcs_length(complex_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xb9(\x9d\xe7 \xb0y"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 7
    bytes_1 = b"\xed\xe62\xdb\xf9\xc8"
    var_1 = module_0.lcs_length(bytes_1, bytes_1)
    assert var_1 == 6
    module_0.lcs_length(var_0, bytes_1)
