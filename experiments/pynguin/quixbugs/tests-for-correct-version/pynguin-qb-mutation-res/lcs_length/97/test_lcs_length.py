# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"D"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 1
    var_1 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_1 == 1
    var_2 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_2 == 1
    object_0 = module_1.object()
    float_0 = -944.0
    module_0.lcs_length(var_2, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.lcs_length(list_0, list_0)
    assert var_0 == 0
    module_0.lcs_length(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, dict_0)
    module_0.lcs_length(tuple_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    module_0.lcs_length(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"u\xa5h\x10>E\x11\xb7k\x9e%"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 11
    module_0.lcs_length(var_0, var_0)
