# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "S\"AD8/Asw'!2v."
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.lcs_length(list_0, list_0)
    assert var_0 == 3
    dict_0 = {var_0: var_0}
    module_0.lcs_length(dict_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.lcs_length(list_0, none_type_0)
    assert var_0 == 0
    list_1 = [list_0, list_0]
    var_1 = module_0.lcs_length(list_1, list_0)
    assert var_1 == 0
    module_0.lcs_length(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    set_0 = set()
    tuple_0 = (set_0,)
    none_type_0 = None
    module_0.lcs_length(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "C%+#2(S.@`sO-"
    var_0 = module_0.lcs_length(str_0, str_0)
    assert var_0 == 13
    var_1 = module_0.lcs_length(str_0, str_0)
    assert var_1 == 13
    module_0.lcs_length(var_1, str_0)
