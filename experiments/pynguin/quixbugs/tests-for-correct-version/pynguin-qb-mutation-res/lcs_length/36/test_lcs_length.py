# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"t"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.lcs_length(tuple_0, tuple_0)
    assert var_0 == 0
    bool_0 = True
    list_0 = [var_0, bool_0, tuple_0]
    module_1.object(*list_0, **var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1581
    bytes_0 = b"\x8dY\xfao\xce\xbc\xf3\xd7O\x9d|\xa4\xaae\xe4\xd53"
    tuple_0 = (int_0, bytes_0)
    bool_0 = False
    module_0.lcs_length(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -776
    module_0.lcs_length(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 5096.57
    dict_0 = {float_0: float_0, float_0: float_0}
    module_0.lcs_length(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x05#J\x19\x05N\x16\xcf\xad\x18\xe0"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 11
    tuple_0 = (bytes_0,)
    var_1 = module_0.lcs_length(tuple_0, bytes_0)
    assert var_1 == 0
    module_0.lcs_length(var_1, var_1)
