# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"n"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 1
    module_0.lcs_length(bytes_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.lcs_length(set_0, set_0)
    assert var_0 == 0
    object_0 = module_1.object()
    module_0.lcs_length(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.lcs_length(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"_\x83Z\xc7\xc12.\xd2dW"
    var_0 = module_0.lcs_length(bytes_0, bytes_0)
    assert var_0 == 10
    list_0 = []
    var_1 = module_0.lcs_length(bytes_0, list_0)
    assert var_1 == 0
    none_type_0 = None
    var_2 = module_0.lcs_length(list_0, none_type_0)
    assert var_2 == 0
    var_3 = module_0.lcs_length(list_0, list_0)
    assert var_3 == 0
    module_0.lcs_length(var_3, var_3)
