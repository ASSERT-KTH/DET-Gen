# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "??O3+m(\x0cUI'e3w}grOH4"
    var_0 = module_0.lcs_length(str_0, str_0)
    assert var_0 == 20
    var_1 = module_0.lcs_length(str_0, str_0)
    assert var_1 == 20
    module_0.lcs_length(var_0, var_1)


def test_case_1():
    list_0 = []
    var_0 = module_0.lcs_length(list_0, list_0)
    assert var_0 == 0
    tuple_0 = (list_0, var_0, list_0, var_0)
    var_1 = module_0.lcs_length(list_0, tuple_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"@\xab"
    none_type_0 = None
    module_0.lcs_length(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    module_0.lcs_length(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    object_0 = module_1.object()
    bool_0 = False
    tuple_0 = (object_0, bool_0, bool_0, bool_0)
    float_0 = -587.59399
    dict_0 = {tuple_0: float_0}
    module_0.lcs_length(dict_0, dict_0)
