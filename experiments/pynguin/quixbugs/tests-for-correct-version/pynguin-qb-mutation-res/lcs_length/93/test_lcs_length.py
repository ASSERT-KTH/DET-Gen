# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lcs_length as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ""
    str_1 = "\x0cU&avun\n`\t!\r,S,KC"
    var_0 = module_0.lcs_length(str_1, str_1)
    assert var_0 == 17
    str_2 = "4 ,,?"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    var_1 = module_0.lcs_length(str_0, str_0)
    assert var_1 == 0
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.lcs_length(tuple_0, tuple_0)
    assert var_0 == 0
    var_1 = module_0.lcs_length(tuple_0, tuple_0)
    assert var_1 == 0
    module_0.lcs_length(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "T#-%>NMNQq$/.cL1EGS"
    none_type_0 = None
    module_0.lcs_length(str_0, none_type_0)


def test_case_3():
    int_0 = 361
    bytes_0 = b"\xe5\x91%Te\x9b\xe5w\xb6"
    complex_0 = 900.4 - 3638.1j
    set_0 = {int_0, bytes_0, complex_0, int_0}
    str_0 = "i~LDT\\vwwk 8$'"
    set_1 = {str_0, str_0, complex_0}
    tuple_0 = (set_0, int_0, str_0, set_1)
    list_0 = [tuple_0]
    var_0 = module_0.lcs_length(list_0, str_0)
    assert var_0 == 0
