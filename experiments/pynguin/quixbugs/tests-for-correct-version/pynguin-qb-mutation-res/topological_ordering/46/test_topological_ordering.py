# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import topological_ordering as module_1


def test_case_0():
    node_0 = module_0.Node()
    dict_0 = {node_0: node_0}
    var_0 = module_1.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"*\xd9\x9f\x17\xecv;t\xdf\xaf\xc3>\xad2a;5{Sa"
    module_1.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    dict_0 = {}
    list_0 = [dict_0]
    node_0 = module_0.Node(incoming_nodes=list_0, outgoing_nodes=dict_0)
    list_1 = [node_0, node_0, dict_0]
    module_1.topological_ordering(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "7O=lQ<*7[NGKr\nc"
    node_0 = module_0.Node(outgoing_nodes=str_0)
    dict_0 = {node_0: node_0}
    module_1.topological_ordering(dict_0)


def test_case_4():
    node_0 = module_0.Node()
    dict_0 = {node_0: node_0, node_0: node_0, node_0: node_0, node_0: node_0}
    node_1 = module_0.Node(successors=dict_0, outgoing_nodes=dict_0)
    dict_1 = {node_1: node_1}
    var_0 = module_1.topological_ordering(dict_1)


def test_case_5():
    node_0 = module_0.Node()
    dict_0 = {
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
    }
    node_1 = module_0.Node(successors=dict_0, outgoing_nodes=dict_0)
    dict_1 = {node_0: node_1, node_1: dict_0}
    var_0 = module_1.topological_ordering(dict_1)
