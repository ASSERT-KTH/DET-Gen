# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "/Z};"
    module_0.topological_ordering(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 4433.46208
    module_0.topological_ordering(float_0)


def test_case_3():
    node_0 = module_1.Node()
    set_0 = {node_0, node_0, node_0, node_0}
    var_0 = module_0.topological_ordering(set_0)


def test_case_4():
    tuple_0 = ()
    node_0 = module_1.Node(tuple_0, predecessors=tuple_0)
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(list_0, tuple_0, outgoing_nodes=list_0)
    node_2 = module_1.Node(incoming_nodes=node_0, outgoing_nodes=node_0)
    tuple_1 = (node_2, node_1)
    var_0 = module_0.topological_ordering(tuple_1)


def test_case_5():
    tuple_0 = ()
    node_0 = module_1.Node(tuple_0, predecessors=tuple_0)
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(list_0, tuple_0, outgoing_nodes=list_0)
    tuple_1 = (node_0, node_1)
    var_0 = module_0.topological_ordering(tuple_1)


def test_case_6():
    tuple_0 = ()
    node_0 = module_1.Node(tuple_0, predecessors=tuple_0)
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(list_0, tuple_0, outgoing_nodes=list_0)
    tuple_1 = (node_1, node_1)
    var_0 = module_0.topological_ordering(tuple_1)
