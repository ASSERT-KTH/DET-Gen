# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import builtins as module_1
import node as module_2


def test_case_0():
    bytes_0 = b""
    var_0 = module_0.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xc7G\xf6PXt\x12\xb6&"
    module_0.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2276
    module_0.topological_ordering(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    float_0 = 858.6722
    node_0 = module_2.Node(object_0, incoming_nodes=float_0)
    set_0 = {node_0}
    var_0 = module_0.topological_ordering(set_0)
    tuple_0 = (object_0, var_0, var_0, object_0)
    module_0.topological_ordering(tuple_0)


def test_case_4():
    none_type_0 = None
    node_0 = module_2.Node(none_type_0, incoming_nodes=none_type_0)
    set_0 = {node_0, node_0}
    var_0 = module_0.topological_ordering(set_0)


def test_case_5():
    float_0 = -726.17579
    node_0 = module_2.Node(predecessors=float_0)
    set_0 = {node_0}
    node_1 = module_2.Node(outgoing_nodes=set_0)
    dict_0 = {node_1: float_0}
    var_0 = module_0.topological_ordering(dict_0)


def test_case_6():
    float_0 = -725.9490472451623
    node_0 = module_2.Node(predecessors=float_0)
    set_0 = {node_0}
    node_1 = module_2.Node(outgoing_nodes=set_0)
    dict_0 = {node_1: float_0, node_0: node_0}
    var_0 = module_0.topological_ordering(dict_0)
