# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    str_0 = ""
    var_0 = module_0.topological_ordering(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b",\xf1\r\x06b\x9c\xdd\xcd\xbd\x8ah65\xbaIB\x14"
    module_0.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.topological_ordering(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 1736
    node_0 = module_1.Node(incoming_nodes=int_0)
    tuple_0 = (node_0,)
    var_0 = module_0.topological_ordering(tuple_0)
    module_0.topological_ordering(node_0)


def test_case_4():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "o+]"
    set_0 = {str_0, str_0, str_0}
    bool_0 = True
    tuple_0 = (set_0, bool_0, bool_0)
    node_0 = module_1.Node(successor=tuple_0, outgoing_nodes=str_0)
    dict_0 = {node_0: str_0}
    module_0.topological_ordering(dict_0)
