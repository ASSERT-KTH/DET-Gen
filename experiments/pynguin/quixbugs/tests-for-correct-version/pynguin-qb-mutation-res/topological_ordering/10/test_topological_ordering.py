# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xebJ\xf6,"
    module_0.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 3759
    module_0.topological_ordering(int_0)


def test_case_3():
    node_0 = module_1.Node()
    list_0 = [node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "mT.\tyALWNH\"7D>3\\|'"
    node_0 = module_1.Node(incoming_nodes=str_0)
    set_0 = {node_0}
    var_0 = module_0.topological_ordering(set_0)
    none_type_0 = None
    module_0.topological_ordering(none_type_0)


def test_case_5():
    node_0 = module_1.Node()
    list_0 = [node_0]
    node_1 = module_1.Node(node_0, predecessors=list_0, outgoing_nodes=list_0)
    list_1 = [node_1, node_0, node_1, node_1]
    var_0 = module_0.topological_ordering(list_1)


def test_case_6():
    node_0 = module_1.Node()
    list_0 = [node_0]
    node_1 = module_1.Node(node_0, predecessors=node_0, outgoing_nodes=list_0)
    list_1 = [node_1, node_1]
    var_0 = module_0.topological_ordering(list_1)
