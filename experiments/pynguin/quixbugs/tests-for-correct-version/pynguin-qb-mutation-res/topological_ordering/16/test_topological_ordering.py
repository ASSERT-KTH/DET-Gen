# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import topological_ordering as module_1


def test_case_0():
    node_0 = module_0.Node()
    list_0 = [node_0, node_0]
    var_0 = module_1.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xa7\xe4"
    module_1.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.topological_ordering(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"c\xeb#G\xce\x84\xc5"
    node_0 = module_0.Node(successor=bytes_0, incoming_nodes=bytes_0)
    list_0 = [node_0, node_0, bytes_0]
    module_1.topological_ordering(list_0)


def test_case_4():
    node_0 = module_0.Node()
    set_0 = {node_0, node_0, node_0}
    node_1 = module_0.Node(set_0, outgoing_nodes=set_0)
    list_0 = [node_1, node_0]
    var_0 = module_1.topological_ordering(list_0)


def test_case_5():
    node_0 = module_0.Node()
    set_0 = {node_0, node_0, node_0}
    node_1 = module_0.Node(node_0, outgoing_nodes=set_0)
    list_0 = [node_1, node_1]
    var_0 = module_1.topological_ordering(list_0)
