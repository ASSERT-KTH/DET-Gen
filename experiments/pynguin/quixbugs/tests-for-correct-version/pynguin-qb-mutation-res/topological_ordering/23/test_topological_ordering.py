# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    str_0 = ""
    var_0 = module_0.topological_ordering(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x93\x10R+\xa42\x95"
    module_0.topological_ordering(bytes_0)


def test_case_2():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    node_0 = module_1.Node(successor=bool_0)
    set_0 = {node_0, node_0}
    var_0 = module_0.topological_ordering(set_0)
    dict_0 = {}
    node_1 = module_1.Node(successor=dict_0, predecessors=dict_0)
    node_2 = module_1.Node(
        successor=var_0, incoming_nodes=node_1, outgoing_nodes=node_0
    )
    assert len(node_2.successor) == 1
    bool_1 = True
    set_1 = {bool_1, node_2, bool_1}
    bytes_0 = b"\xf3\x1b\xacb\xf7\x98\\E\xf9"
    tuple_0 = (node_2, bool_1, set_1, bytes_0)
    module_0.topological_ordering(tuple_0)
