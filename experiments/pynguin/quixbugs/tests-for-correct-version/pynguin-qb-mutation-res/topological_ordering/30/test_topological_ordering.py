# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import topological_ordering as module_1


def test_case_0():
    list_0 = []
    node_0 = module_0.Node(successor=list_0, predecessors=list_0)
    set_0 = {node_0, node_0}
    var_0 = module_1.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = -4919.3 - 772.7j
    set_0 = {complex_0, complex_0, complex_0}
    module_1.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -2561.0
    node_0 = module_0.Node(
        float_0, successors=float_0, incoming_nodes=float_0, outgoing_nodes=float_0
    )
    list_0 = [node_0]
    var_0 = module_1.topological_ordering(list_0)
    list_1 = []
    var_1 = module_1.topological_ordering(list_1)
    var_1.successor()


def test_case_3():
    list_0 = []
    node_0 = module_0.Node(successor=list_0, predecessors=list_0)
    set_0 = {node_0, node_0}
    node_1 = module_0.Node(successors=set_0, outgoing_nodes=set_0)
    set_1 = {node_1}
    var_0 = module_1.topological_ordering(set_1)


def test_case_4():
    list_0 = []
    node_0 = module_0.Node(successor=list_0, predecessors=list_0)
    set_0 = {node_0, node_0}
    node_1 = module_0.Node(successors=set_0, outgoing_nodes=set_0)
    set_1 = {node_0, node_1}
    var_0 = module_1.topological_ordering(set_1)
