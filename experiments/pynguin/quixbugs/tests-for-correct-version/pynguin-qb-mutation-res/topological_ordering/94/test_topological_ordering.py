# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "TQ\\BB098"
    module_0.topological_ordering(str_0)


def test_case_2():
    str_0 = ""
    node_0 = module_1.Node(outgoing_nodes=str_0)
    dict_0 = {node_0: node_0, node_0: node_0, node_0: node_0, node_0: str_0}
    var_0 = module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(D)QV]"
    node_0 = module_1.Node(outgoing_nodes=str_0)
    dict_0 = {node_0: node_0, node_0: node_0, node_0: node_0, node_0: str_0}
    module_0.topological_ordering(dict_0)


def test_case_4():
    str_0 = "@@ 1"
    none_type_0 = None
    node_0 = module_1.Node(
        successor=str_0, predecessors=none_type_0, incoming_nodes=str_0
    )
    dict_0 = {node_0: node_0, node_0: node_0}
    node_1 = module_1.Node(outgoing_nodes=dict_0)
    dict_1 = {node_1: str_0, node_1: node_1, node_0: node_1}
    var_0 = module_0.topological_ordering(dict_1)


def test_case_5():
    str_0 = "qH@u@?="
    node_0 = module_1.Node(predecessors=str_0)
    dict_0 = {node_0: node_0, node_0: str_0, node_0: node_0}
    node_1 = module_1.Node(outgoing_nodes=dict_0)
    dict_1 = {node_1: str_0, node_1: node_1, node_1: node_1}
    var_0 = module_0.topological_ordering(dict_1)


def test_case_6():
    str_0 = "qH@u@?="
    node_0 = module_1.Node(predecessors=str_0)
    dict_0 = {node_0: node_0, node_0: str_0, node_0: node_0}
    node_1 = module_1.Node(outgoing_nodes=dict_0)
    dict_1 = {node_1: str_0, node_1: node_1, node_0: node_1}
    var_0 = module_0.topological_ordering(dict_1)
