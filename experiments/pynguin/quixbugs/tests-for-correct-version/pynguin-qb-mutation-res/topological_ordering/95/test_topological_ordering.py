# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    bytes_0 = b""
    var_0 = module_0.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xa17C\xb2v"
    module_0.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.topological_ordering(bool_0)


def test_case_3():
    none_type_0 = None
    node_0 = module_1.Node(none_type_0)
    list_0 = [node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    node_0 = module_1.Node(none_type_0)
    list_0 = [node_0]
    node_1 = module_1.Node(successor=node_0, successors=node_0, incoming_nodes=node_0)
    node_2 = module_1.Node(outgoing_nodes=list_0)
    list_1 = [node_1, node_2, node_2, node_2]
    var_0 = module_0.topological_ordering(list_1)
    list_0.successor()


def test_case_5():
    none_type_0 = None
    node_0 = module_1.Node(none_type_0)
    list_0 = [node_0]
    node_1 = module_1.Node(outgoing_nodes=list_0)
    list_1 = [node_1, node_1, node_1, node_1]
    var_0 = module_0.topological_ordering(list_1)
