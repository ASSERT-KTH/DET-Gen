# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import topological_ordering as module_1


def test_case_0():
    node_0 = module_0.Node()
    tuple_0 = (node_0,)
    var_0 = module_1.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x9c\xa6r\xaf\xfe\x1b\xb1\xa3\x8dL\x8e\xd2c\x82\x87"
    module_1.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -2370.6
    node_0 = module_0.Node(predecessors=float_0, incoming_nodes=float_0)
    str_0 = "KFpf??\\!19.B"
    tuple_0 = (node_0, str_0)
    module_1.topological_ordering(tuple_0)


def test_case_3():
    none_type_0 = None
    node_0 = module_0.Node(successor=none_type_0, predecessors=none_type_0)
    list_0 = [node_0, node_0]
    node_1 = module_0.Node(
        list_0, list_0, node_0, incoming_nodes=none_type_0, outgoing_nodes=list_0
    )
    dict_0 = {node_1: node_0}
    var_0 = module_1.topological_ordering(dict_0)
