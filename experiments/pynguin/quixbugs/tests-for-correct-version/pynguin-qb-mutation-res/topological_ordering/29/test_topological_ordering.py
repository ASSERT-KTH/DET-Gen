# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    dict_0 = {}
    var_0 = module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.topological_ordering(dict_0)


def test_case_2():
    node_0 = module_1.Node()
    list_0 = [node_0]
    var_0 = module_0.topological_ordering(list_0)


def test_case_3():
    bytes_0 = b"\x19\xa4a\x07\x90\x15\x1d"
    set_0 = {bytes_0, bytes_0}
    node_0 = module_1.Node(successor=set_0, outgoing_nodes=set_0)
    node_1 = module_1.Node(node_0, incoming_nodes=set_0, outgoing_nodes=bytes_0)
    set_1 = {node_1}
    var_0 = module_0.topological_ordering(set_1)


def test_case_4():
    node_0 = module_1.Node()
    list_0 = [
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
    ]
    node_1 = module_1.Node(list_0, successors=list_0, outgoing_nodes=list_0)
    tuple_0 = (node_1,)
    var_0 = module_0.topological_ordering(tuple_0)
