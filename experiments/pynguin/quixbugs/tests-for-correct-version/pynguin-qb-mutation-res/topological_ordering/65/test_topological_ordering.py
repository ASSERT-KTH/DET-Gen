# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    dict_0 = {}
    var_0 = module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = " IrBDRSHJU-T<m^H"
    module_0.topological_ordering(str_0)


def test_case_2():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    bytes_0 = b"\xe9\xad\x8d("
    node_0 = module_1.Node(
        successor=set_0,
        successors=bool_0,
        predecessors=bytes_0,
        incoming_nodes=bytes_0,
        outgoing_nodes=set_0,
    )
    set_1 = {node_0}
    var_0 = module_0.topological_ordering(set_1)
    var_0.predecessors()


def test_case_4():
    node_0 = module_1.Node()
    list_0 = [
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
    ]
    node_1 = module_1.Node(outgoing_nodes=list_0)
    tuple_0 = (node_0, node_1, node_0, node_1)
    var_0 = module_0.topological_ordering(tuple_0)


def test_case_5():
    node_0 = module_1.Node()
    list_0 = [
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
    ]
    node_1 = module_1.Node(outgoing_nodes=list_0)
    dict_0 = {node_1: list_0}
    var_0 = module_0.topological_ordering(dict_0)
