# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import topological_ordering as module_1


def test_case_0():
    node_0 = module_0.Node()
    list_0 = [node_0]
    var_0 = module_1.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = -1131.946686 + 204.6332j
    list_0 = [complex_0, complex_0, complex_0]
    module_1.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_1.topological_ordering(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    node_0 = module_0.Node(
        bool_0,
        bool_0,
        predecessors=bool_0,
        incoming_nodes=bool_0,
        outgoing_nodes=bool_0,
    )
    list_0 = [node_0, node_0]
    var_0 = module_1.topological_ordering(list_0)
    node_0.successor()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "oA\x0cgh"
    node_0 = module_0.Node(successors=str_0, predecessors=str_0, outgoing_nodes=str_0)
    set_0 = {node_0}
    module_1.topological_ordering(set_0)


def test_case_5():
    node_0 = module_0.Node()
    list_0 = [
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
    ]
    node_1 = module_0.Node(node_0, node_0, outgoing_nodes=list_0)
    set_0 = {node_1}
    var_0 = module_1.topological_ordering(set_0)
