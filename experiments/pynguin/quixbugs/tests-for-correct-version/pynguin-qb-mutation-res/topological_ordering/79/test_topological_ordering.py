# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    list_0 = []
    var_0 = module_0.topological_ordering(list_0)


def test_case_1():
    node_0 = module_1.Node()
    dict_0 = {node_0: node_0, node_0: node_0}
    var_0 = module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xe8\x99\x17\x88*,\xa6\xd2\xba\xe3"
    set_0 = {bytes_0, bytes_0, bytes_0}
    bytes_1 = b""
    node_0 = module_1.Node(
        set_0,
        successors=bytes_0,
        predecessors=set_0,
        incoming_nodes=bytes_1,
        outgoing_nodes=bytes_0,
    )
    list_0 = [node_0]
    module_0.topological_ordering(list_0)


def test_case_3():
    bytes_0 = b"\xe8\x99\x17\x88*,\xa6\xd2\xba\xe3"
    set_0 = {bytes_0, bytes_0, bytes_0}
    bytes_1 = b"\x96\xbd"
    node_0 = module_1.Node(
        set_0,
        successors=bytes_0,
        predecessors=set_0,
        incoming_nodes=bytes_1,
        outgoing_nodes=bytes_0,
    )
    list_0 = [node_0]
    var_0 = module_0.topological_ordering(list_0)
