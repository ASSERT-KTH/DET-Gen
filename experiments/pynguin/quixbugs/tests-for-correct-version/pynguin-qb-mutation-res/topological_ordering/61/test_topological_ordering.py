# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "eiP"
    module_0.topological_ordering(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.topological_ordering(bool_0)


def test_case_3():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0, node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -913
    node_0 = module_1.Node(incoming_nodes=int_0)
    list_0 = [node_0, node_0, node_0, int_0]
    module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"f\x14\xbc\x84\xa2\xa9\xc0o\xdbq\x89\xcdy\x9e\xe1"
    node_0 = module_1.Node(
        successors=bytes_0, predecessors=bytes_0, outgoing_nodes=bytes_0
    )
    node_1 = module_1.Node()
    dict_0 = {node_1: node_1, node_0: node_1, node_1: node_1}
    module_0.topological_ordering(dict_0)
