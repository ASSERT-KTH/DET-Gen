# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1
import builtins as module_2


def test_case_0():
    list_0 = []
    var_0 = module_0.topological_ordering(list_0)


def test_case_1():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1557
    module_0.topological_ordering(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ""
    var_0 = module_1.Node(str_0)
    var_1 = module_2.object(*str_0)
    node_0 = module_1.Node(
        var_0, predecessors=var_0, incoming_nodes=var_1, outgoing_nodes=var_1
    )
    var_2 = module_0.topological_ordering(str_0)
    list_0 = [node_0, var_2]
    var_3 = module_2.object()
    module_0.topological_ordering(list_0)


def test_case_4():
    node_0 = module_1.Node()
    list_0 = [
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
        node_0,
    ]
    node_1 = module_1.Node(
        successors=list_0, predecessors=node_0, outgoing_nodes=list_0
    )
    set_0 = {node_1}
    var_0 = module_0.topological_ordering(set_0)
