# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    list_0 = []
    var_0 = module_0.topological_ordering(list_0)
    var_1 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'b@9~\x0c6t*"2^nk'
    module_0.topological_ordering(str_0)


def test_case_2():
    node_0 = module_1.Node()
    dict_0 = {
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
    }
    var_0 = module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    list_0 = [set_0, set_0]
    var_0 = module_0.topological_ordering(set_0)
    node_0 = module_1.Node(list_0, predecessors=list_0, incoming_nodes=list_0)
    list_1 = [node_0, node_0]
    var_1 = module_0.topological_ordering(list_1)
    var_2 = module_0.topological_ordering(set_0)
    var_2.predecessors()


def test_case_4():
    set_0 = set()
    node_0 = module_1.Node(outgoing_nodes=set_0)
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(predecessors=set_0, outgoing_nodes=list_0)
    tuple_0 = (node_1,)
    var_0 = module_0.topological_ordering(tuple_0)
