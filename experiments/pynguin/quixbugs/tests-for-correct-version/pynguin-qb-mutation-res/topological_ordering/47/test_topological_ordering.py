# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import topological_ordering as module_0
import node as module_1


def test_case_0():
    list_0 = []
    var_0 = module_0.topological_ordering(list_0)


def test_case_1():
    node_0 = module_1.Node()
    dict_0 = {node_0: node_0, node_0: node_0}
    var_0 = module_0.topological_ordering(dict_0)


def test_case_2():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(node_0, list_0, outgoing_nodes=list_0)
    dict_0 = {node_0: node_1, node_1: node_1}
    var_0 = module_0.topological_ordering(dict_0)


def test_case_3():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0, node_0, node_0, node_0]
    node_1 = module_1.Node(node_0, list_0, outgoing_nodes=list_0)
    dict_0 = {node_1: node_1}
    var_0 = module_0.topological_ordering(dict_0)


def test_case_4():
    bytes_0 = b"\xcf\xcb\xef\xf1%iy\x02\xdc\xa0\xf8W\xd0\x8b"
    node_0 = module_1.Node(incoming_nodes=bytes_0, outgoing_nodes=bytes_0)
    tuple_0 = (node_0,)
    var_0 = module_0.topological_ordering(tuple_0)
