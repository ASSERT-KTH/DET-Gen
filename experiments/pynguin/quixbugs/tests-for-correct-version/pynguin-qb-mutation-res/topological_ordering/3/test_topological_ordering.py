# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.topological_ordering(tuple_0)


def test_case_1():
    node_0 = module_1.Node()
    set_0 = {node_0, node_0, node_0, node_0}
    var_0 = module_0.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    complex_0 = 761.8 + 264.65j
    module_0.topological_ordering(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x99\xf7\xb4y\xb1\xd5\x10\xf4G\xa3\x15\xd7\x98\x9d\x07\x14\x02L\xa5"
    node_0 = module_1.Node(incoming_nodes=bytes_0)
    tuple_0 = (node_0,)
    var_0 = module_0.topological_ordering(tuple_0)
    none_type_0 = None
    module_0.topological_ordering(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x99\xf7\xb4y\xb1\xd5\x10\xf4G\xa3\x15\xd7\x98\x9d\x07\x14\x02L\xa5"
    none_type_0 = None
    node_0 = module_1.Node(incoming_nodes=none_type_0, outgoing_nodes=bytes_0)
    tuple_0 = (node_0,)
    module_0.topological_ordering(tuple_0)
