# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x03&\x9a\xff\x05^7\xc5^"
    module_0.topological_ordering(bytes_0)


def test_case_2():
    node_0 = module_1.Node()
    tuple_0 = (node_0,)
    var_0 = module_0.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x0bn,\xb1\xa5p"
    node_0 = module_1.Node(bytes_0, bytes_0, incoming_nodes=bytes_0)
    set_0 = {node_0, node_0, node_0}
    var_0 = module_0.topological_ordering(set_0)
    node_0.successors()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    node_0 = module_1.Node(bool_0, bool_0, bool_0, incoming_nodes=bool_0)
    list_0 = [node_0]
    node_1 = module_1.Node(list_0, list_0, outgoing_nodes=list_0)
    set_0 = {node_0, node_1, node_1, node_1}
    module_0.topological_ordering(set_0)
