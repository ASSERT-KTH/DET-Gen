# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    dict_0 = {}
    var_0 = module_0.topological_ordering(dict_0)


def test_case_1():
    node_0 = module_1.Node()
    set_0 = {node_0, node_0, node_0, node_0}
    var_0 = module_0.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1211
    node_0 = module_1.Node(int_0, successors=int_0, incoming_nodes=int_0)
    bool_0 = False
    dict_0 = {}
    set_0 = {node_0, int_0}
    tuple_0 = (node_0, bool_0, dict_0, set_0)
    module_0.topological_ordering(tuple_0)


def test_case_3():
    node_0 = module_1.Node()
    tuple_0 = (node_0,)
    node_1 = module_1.Node(
        successor=node_0, successors=node_0, predecessors=node_0, outgoing_nodes=tuple_0
    )
    set_0 = {node_0, node_0, node_0, node_1}
    var_0 = module_0.topological_ordering(set_0)


def test_case_4():
    node_0 = module_1.Node()
    tuple_0 = (node_0,)
    node_1 = module_1.Node(
        successor=node_0, successors=node_0, predecessors=node_0, outgoing_nodes=tuple_0
    )
    set_0 = {node_1}
    var_0 = module_0.topological_ordering(set_0)
