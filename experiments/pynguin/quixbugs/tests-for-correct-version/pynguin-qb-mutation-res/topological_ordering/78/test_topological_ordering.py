# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    list_0 = []
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ">^UyfH$"
    module_0.topological_ordering(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.topological_ordering(bool_0)


def test_case_3():
    node_0 = module_1.Node()
    dict_0 = {node_0: node_0, node_0: node_0}
    var_0 = module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"H\xc1\xc0\xd89\xea\xe8"
    node_0 = module_1.Node(bytes_0, incoming_nodes=bytes_0)
    dict_0 = {node_0: bytes_0, node_0: node_0, bytes_0: bytes_0}
    module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "s{pH\t7?~U"
    node_0 = module_1.Node(outgoing_nodes=str_0)
    dict_0 = {node_0: str_0}
    module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -5139
    node_0 = module_1.Node(outgoing_nodes=int_0)
    dict_0 = {node_0: node_0, node_0: node_0}
    node_1 = module_1.Node(outgoing_nodes=dict_0)
    dict_1 = {node_1: node_0, node_1: int_0, node_0: node_1}
    module_0.topological_ordering(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 1255
    node_0 = module_1.Node(outgoing_nodes=int_0)
    dict_0 = {node_0: node_0}
    node_1 = module_1.Node(outgoing_nodes=dict_0)
    dict_1 = {node_1: node_0, node_1: int_0}
    module_0.topological_ordering(dict_1)
