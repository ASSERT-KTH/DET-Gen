# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import topological_ordering as module_1


def test_case_0():
    node_0 = module_0.Node()
    set_0 = {node_0}
    var_0 = module_1.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x01i\xba`\xe8A\x84\xeb`\xfa^t\x91\xda\xde\x81\x9e\x89\xe3"
    module_1.topological_ordering(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.topological_ordering(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    node_0 = module_0.Node(incoming_nodes=bool_0)
    bytes_0 = b"\x86si\xdc<>X\x01x\xa8o"
    dict_0 = {bool_0: node_0, bool_0: node_0, bool_0: bool_0, bytes_0: bool_0}
    dict_1 = {node_0: bytes_0, bool_0: node_0, bool_0: dict_0, node_0: node_0}
    module_1.topological_ordering(dict_1)


def test_case_4():
    node_0 = module_0.Node()
    set_0 = {node_0}
    node_1 = module_0.Node(set_0, outgoing_nodes=set_0)
    list_0 = [node_1, node_1]
    var_0 = module_1.topological_ordering(list_0)
