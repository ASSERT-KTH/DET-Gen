# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    set_0 = set()
    var_0 = module_0.topological_ordering(set_0)


def test_case_1():
    node_0 = module_1.Node()
    dict_0 = {
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
        node_0: node_0,
    }
    var_0 = module_0.topological_ordering(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.topological_ordering(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x02"
    node_0 = module_1.Node(bytes_0, incoming_nodes=bytes_0, outgoing_nodes=bytes_0)
    tuple_0 = (node_0,)
    var_0 = module_0.topological_ordering(tuple_0)
    var_1 = module_0.topological_ordering(tuple_0)
    var_1.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "wW,PmdRjY%z7l WT'+)$"
    node_0 = module_1.Node(outgoing_nodes=str_0)
    set_0 = {node_0}
    module_0.topological_ordering(set_0)


def test_case_5():
    node_0 = module_1.Node()
    list_0 = [node_0]
    node_1 = module_1.Node(outgoing_nodes=list_0)
    set_0 = {node_1}
    var_0 = module_0.topological_ordering(set_0)


def test_case_6():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0, node_0, node_0, node_0, node_0]
    node_1 = module_1.Node(outgoing_nodes=list_0)
    set_0 = {node_1}
    var_0 = module_0.topological_ordering(set_0)
