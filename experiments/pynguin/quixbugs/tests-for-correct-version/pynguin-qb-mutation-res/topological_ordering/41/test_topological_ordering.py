# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import topological_ordering as module_1


def test_case_0():
    node_0 = module_0.Node()
    set_0 = {node_0}
    var_0 = module_1.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ";jn0JH?Z"
    module_1.topological_ordering(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"Nk\x0c\rL\xe7\xa8c\xeb\xfa"
    none_type_0 = None
    node_0 = module_0.Node(bytes_0, successors=none_type_0, incoming_nodes=bytes_0)
    dict_0 = {node_0: node_0, none_type_0: node_0, bytes_0: bytes_0}
    module_1.topological_ordering(dict_0)


def test_case_3():
    dict_0 = {}
    node_0 = module_0.Node(incoming_nodes=dict_0)
    dict_1 = {node_0: dict_0}
    node_1 = module_0.Node(successor=dict_1, outgoing_nodes=dict_1)
    set_0 = {node_1, node_1, node_1, node_1, node_0}
    var_0 = module_1.topological_ordering(set_0)


def test_case_4():
    dict_0 = {}
    node_0 = module_0.Node(incoming_nodes=dict_0)
    dict_1 = {node_0: dict_0}
    node_1 = module_0.Node(successor=dict_1, outgoing_nodes=dict_1)
    set_0 = {node_1, node_1, node_1}
    var_0 = module_1.topological_ordering(set_0)
