# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    tuple_0 = ()
    set_0 = module_0.topological_ordering(tuple_0)
    var_0 = module_0.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    module_0.topological_ordering(set_0)


def test_case_2():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)


def test_case_3():
    int_0 = -423
    none_type_0 = None
    node_0 = module_1.Node(
        successor=int_0,
        successors=int_0,
        predecessors=none_type_0,
        incoming_nodes=int_0,
    )
    set_0 = {node_0, node_0, node_0}
    var_0 = module_0.topological_ordering(set_0)


def test_case_4():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0, node_0, node_0, node_0, node_0]
    node_1 = module_1.Node(successor=list_0, outgoing_nodes=list_0)
    list_1 = [node_0, node_0, node_1, node_0]
    var_0 = module_0.topological_ordering(list_1)


def test_case_5():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0, node_0, node_0, node_0, node_0, node_0, node_0]
    node_1 = module_1.Node(successor=list_0, outgoing_nodes=list_0)
    list_1 = [node_1]
    var_0 = module_0.topological_ordering(list_1)
