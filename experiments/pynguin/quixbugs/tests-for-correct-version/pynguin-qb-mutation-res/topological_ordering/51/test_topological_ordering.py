# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1
import builtins as module_2


def test_case_0():
    set_0 = set()
    var_0 = module_0.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x112\x84\x8d7\xdbHvb"
    dict_0 = {bytes_0: bytes_0}
    module_0.topological_ordering(dict_0)


def test_case_2():
    node_0 = module_1.Node()
    list_0 = [node_0, node_0]
    var_0 = module_0.topological_ordering(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    var_0 = module_2.object()
    bool_0 = False
    node_0 = module_1.Node(successor=bool_0, incoming_nodes=var_0, outgoing_nodes=var_0)
    dict_0 = {node_0: node_0, node_0: node_0}
    var_1 = module_0.topological_ordering(dict_0)
    var_2 = module_0.topological_ordering(dict_0)
    object_0 = module_2.object()
    module_0.topological_ordering(node_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "\n:1zd\n6Z>4AFVI"
    node_0 = module_1.Node(str_0, str_0, outgoing_nodes=str_0)
    set_0 = {node_0, node_0, node_0, node_0}
    module_0.topological_ordering(set_0)
