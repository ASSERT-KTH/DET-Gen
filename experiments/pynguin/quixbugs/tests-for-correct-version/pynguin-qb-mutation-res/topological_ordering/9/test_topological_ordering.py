# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import topological_ordering as module_0
import node as module_1


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.topological_ordering(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -1233
    bool_0 = True
    dict_0 = {int_0: int_0, bool_0: int_0}
    module_0.topological_ordering(dict_0)


def test_case_2():
    tuple_0 = ()
    node_0 = module_1.Node(incoming_nodes=tuple_0)
    tuple_1 = (node_0,)
    var_0 = module_0.topological_ordering(tuple_1)


def test_case_3():
    none_type_0 = None
    node_0 = module_1.Node(successor=none_type_0)
    tuple_0 = (node_0,)
    node_1 = module_1.Node(successor=tuple_0, outgoing_nodes=tuple_0)
    set_0 = {node_1}
    var_0 = module_0.topological_ordering(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "("
    node_0 = module_1.Node(successors=str_0, incoming_nodes=str_0)
    bool_0 = False
    list_0 = [node_0, node_0, bool_0, bool_0]
    module_0.topological_ordering(list_0)


def test_case_5():
    int_0 = -3244
    node_0 = module_1.Node(successor=int_0)
    tuple_0 = (node_0,)
    node_1 = module_1.Node(successor=tuple_0, outgoing_nodes=tuple_0)
    set_0 = {node_0, node_1}
    var_0 = module_0.topological_ordering(set_0)
