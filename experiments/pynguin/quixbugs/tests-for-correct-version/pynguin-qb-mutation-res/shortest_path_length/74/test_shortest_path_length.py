# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_length as module_0
import node as module_1


def test_case_0():
    complex_0 = 993.6047 + 866.17j
    var_0 = module_0.shortest_path_length(complex_0, complex_0, complex_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xa0\x99Ve\x01)\xbe\xc5"
    module_0.get(bytes_0, bytes_0)


def test_case_2():
    bytes_0 = b"!\xfb\xe9\x91\xa61\xcd\xd4\x80[\xb4\xcf\xfd"
    node_0 = module_1.Node(bytes_0)
    var_0 = module_0.shortest_path_length(bytes_0, node_0, bytes_0)
    assert var_0 == pytest.approx(1e309, abs=0.01, rel=0.01)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"!\xfb\xe9\x91\xa61\xcd\xd4\x80[\xb4\xcf\xfd"
    list_0 = [bytes_0]
    node_0 = module_1.Node(list_0, list_0, list_0)
    module_0.shortest_path_length(list_0, node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xbd\xb3"
    tuple_0 = (bytes_0, bytes_0, bytes_0, bytes_0)
    module_0.insert_or_update(tuple_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xbd\xb3"
    var_0 = module_0.shortest_path_length(bytes_0, bytes_0, bytes_0)
    assert var_0 == 0
    set_0 = {bytes_0}
    tuple_0 = (bytes_0, set_0, bytes_0, bytes_0)
    var_1 = module_0.get(set_0, var_0)
    assert var_1 == 0
    module_0.insert_or_update(tuple_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "wG\\c| E\t6,9!TtD9~[\r"
    tuple_0 = ()
    bool_0 = False
    dict_0 = {str_0: tuple_0, tuple_0: str_0, str_0: bool_0}
    dict_1 = {str_0: str_0, tuple_0: dict_0}
    tuple_1 = (dict_1,)
    var_0 = module_0.get(tuple_1, str_0)
    assert var_0 == 0
    none_type_0 = None
    var_1 = module_0.get(tuple_1, tuple_0)
    assert var_1 == "wG\\c| E\t6,9!TtD9~[\r"
    module_0.insert_or_update(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "wG\\c| E\t6,9!TtD9~[\r"
    tuple_0 = ()
    bool_0 = False
    dict_0 = {str_0: tuple_0, tuple_0: str_0, str_0: bool_0}
    dict_1 = {str_0: str_0, tuple_0: dict_0}
    module_0.insert_or_update(tuple_0, dict_1)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b"W\xb3"
    var_0 = module_0.shortest_path_length(bytes_0, bytes_0, bytes_0)
    assert var_0 == 0
    list_0 = [bytes_0, bytes_0]
    module_0.insert_or_update(list_0, list_0)
