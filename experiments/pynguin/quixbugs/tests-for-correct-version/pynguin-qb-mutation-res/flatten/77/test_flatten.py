# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "iW.$YRaOv"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.flatten(list_0)
    var_1 = module_0.flatten(var_0)
    module_1.object(*var_0)


def test_case_1():
    bool_0 = True
    var_0 = module_0.flatten(bool_0)


def test_case_2():
    list_0 = []
    tuple_0 = (list_0, list_0, list_0)
    var_0 = module_0.flatten(tuple_0)
    var_1 = module_0.flatten(var_0)
    none_type_0 = None
    var_2 = module_0.flatten(none_type_0)
    var_3 = module_0.flatten(var_0)
    var_4 = module_0.flatten(tuple_0)
    var_5 = module_0.flatten(var_3)
    object_0 = module_1.object(*var_1)
    var_6 = module_0.flatten(var_4)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.flatten(tuple_0)
    var_1 = module_0.flatten(tuple_0)
    list_0 = [tuple_0]
    tuple_1 = (list_0, list_0, list_0)
    var_2 = module_0.flatten(tuple_1)
    var_3 = module_0.flatten(var_1)
    var_4 = module_0.flatten(var_2)
    var_5 = module_0.flatten(var_2)
    none_type_0 = None
    var_6 = module_0.flatten(var_1)
    var_7 = module_0.flatten(none_type_0)
    int_0 = 128
    var_8 = module_0.flatten(var_1)
    tuple_2 = (var_5, var_8, var_0)
    var_9 = module_0.flatten(tuple_2)
    var_10 = module_0.flatten(var_2)
    var_11 = module_0.flatten(tuple_1)
    var_12 = module_0.flatten(int_0)
    var_13 = module_0.flatten(int_0)
    module_1.object(*var_5)
