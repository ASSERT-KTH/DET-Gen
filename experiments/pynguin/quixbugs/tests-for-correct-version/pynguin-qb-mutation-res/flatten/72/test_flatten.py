# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.flatten(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = 2618.937681703227 - 3365j
    dict_0 = {complex_0: complex_0}
    var_0 = module_0.flatten(dict_0)
    module_1.object(*var_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    var_0 = module_0.flatten(bool_0)
    object_0 = module_1.object()
    var_1 = module_0.flatten(object_0)
    var_2 = module_0.flatten(var_1)
    tuple_0 = (object_0,)
    list_0 = [tuple_0, tuple_0]
    var_3 = module_0.flatten(var_1)
    float_0 = -162.7447
    var_4 = module_0.flatten(tuple_0)
    var_5 = module_0.flatten(tuple_0)
    var_6 = module_0.flatten(var_1)
    tuple_1 = (tuple_0, list_0, float_0)
    var_7 = module_0.flatten(tuple_1)
    var_8 = module_0.flatten(tuple_0)
    var_9 = module_0.flatten(list_0)
    var_10 = module_0.flatten(var_7)
    var_11 = module_0.flatten(tuple_1)
    var_12 = module_0.flatten(tuple_1)
    var_13 = module_0.flatten(var_6)
    var_14 = module_0.flatten(tuple_0)
    var_15 = module_0.flatten(var_8)
    int_0 = 1344
    var_16 = module_0.flatten(object_0)
    var_17 = module_0.flatten(int_0)
    module_1.object(*var_11)
