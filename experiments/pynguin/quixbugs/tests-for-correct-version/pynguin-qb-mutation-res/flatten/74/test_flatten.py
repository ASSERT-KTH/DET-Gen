# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcb[\xa2\xc5"
    var_0 = module_0.flatten(bytes_0)
    module_1.object(*var_0)


def test_case_1():
    str_0 = "?\x0cub"
    var_0 = module_0.flatten(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.flatten(bool_0)
    var_1 = module_0.flatten(bool_0)
    none_type_0 = None
    var_2 = module_0.flatten(none_type_0)
    var_3 = module_0.flatten(none_type_0)
    float_0 = 352.1197
    var_4 = module_0.flatten(float_0)
    var_5 = module_0.flatten(var_3)
    var_6 = module_0.flatten(none_type_0)
    int_0 = 656
    var_7 = module_0.flatten(var_6)
    var_8 = module_0.flatten(var_0)
    var_9 = module_0.flatten(var_6)
    var_10 = module_0.flatten(var_6)
    var_11 = module_0.flatten(var_2)
    var_12 = module_0.flatten(var_2)
    list_0 = [int_0]
    var_13 = module_0.flatten(var_0)
    var_14 = module_0.flatten(int_0)
    list_1 = [none_type_0, list_0]
    var_15 = module_0.flatten(var_10)
    var_16 = module_0.flatten(list_1)
    var_17 = module_0.flatten(int_0)
    var_18 = module_0.flatten(int_0)
    var_19 = module_0.flatten(var_15)
    var_20 = module_0.flatten(int_0)
    var_21 = module_0.flatten(var_16)
    var_22 = module_0.flatten(var_17)
    var_23 = module_0.flatten(var_20)
    var_24 = module_0.flatten(var_22)
    var_25 = module_0.flatten(var_21)
    module_1.object(*var_25)
