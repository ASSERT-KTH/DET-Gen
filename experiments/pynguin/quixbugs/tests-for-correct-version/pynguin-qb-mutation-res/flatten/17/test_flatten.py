# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


def test_case_0():
    list_0 = []
    var_0 = module_0.flatten(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "0h,`?HT-k9Vp.h"
    var_0 = module_0.flatten(str_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "RBlcl qyE^"
    list_0 = []
    bytes_0 = b"\xb9U\x1dW\xf4\xccB\x16g\xfaM\xbf{\xa2\xe6\xa0\x01="
    bool_0 = False
    tuple_0 = (bytes_0, bool_0, bool_0, bool_0)
    tuple_1 = (str_0, list_0, str_0, tuple_0)
    var_0 = module_0.flatten(tuple_1)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    tuple_0 = ()
    tuple_1 = (set_0, tuple_0)
    bool_0 = False
    tuple_2 = (tuple_1, bool_0)
    list_0 = [tuple_0, tuple_0, bool_0, set_0]
    bytes_0 = b"\xb0,\x1e\x1e%\xab\xc4\x05\xd7\x87kE"
    tuple_3 = (tuple_2, list_0, bytes_0)
    var_0 = module_0.flatten(tuple_3)
    str_0 = "RBlcl qyE^"
    bytes_1 = b"\xb9U\x1dW\xf4\xccB\x16g\xfaM\xbf{\xa2\xe6\xa0\x01="
    bool_1 = False
    tuple_4 = (bytes_1, bool_1, bool_1, bool_1)
    tuple_5 = (str_0, list_0, str_0, tuple_4)
    var_1 = module_0.flatten(tuple_5)
    module_1.object(*var_1)
