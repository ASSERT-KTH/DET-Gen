# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.flatten(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "!"
    list_0 = module_0.flatten(str_0)
    module_1.object(*list_0)


def test_case_2():
    list_0 = []
    var_0 = module_0.flatten(list_0)
    list_1 = [list_0, list_0, list_0, list_0]
    none_type_0 = None
    var_1 = module_0.flatten(list_1)
    var_2 = module_0.flatten(list_1)
    var_3 = module_0.flatten(var_1)
    var_4 = module_0.flatten(none_type_0)
    object_0 = module_1.object(*var_3)
    var_5 = module_0.flatten(object_0)
    var_6 = module_0.flatten(var_3)
    var_7 = module_0.flatten(var_2)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '"'
    var_0 = module_0.flatten(str_0)
    list_0 = [var_0, str_0]
    list_1 = [list_0, list_0, list_0, list_0]
    none_type_0 = None
    var_1 = module_0.flatten(none_type_0)
    var_2 = module_0.flatten(list_1)
    var_3 = module_0.flatten(list_1)
    var_4 = module_0.flatten(var_2)
    var_5 = module_0.flatten(none_type_0)
    var_6 = module_0.flatten(var_1)
    var_7 = module_0.flatten(var_6)
    var_8 = module_0.flatten(var_1)
    object_0 = module_1.object()
    var_9 = module_0.flatten(list_0)
    var_10 = module_0.flatten(var_3)
    module_1.object(*var_2)
