# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"!\xaf\xf2>3kL G\xde<j@V\xbb\xeb"
    var_0 = module_0.flatten(bytes_0)
    module_1.object(*var_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.flatten(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xe6\xf2\x07T\xa2\xde\x95xx(q\xb4\xec\x8a\x8e\x02\xad\xbel"
    var_0 = module_0.flatten(bytes_0)
    var_1 = module_0.flatten(bytes_0)
    var_2 = module_0.flatten(bytes_0)
    bytes_1 = b"\x075\x15K\\j\xda\xa7-"
    var_3 = module_0.flatten(var_1)
    list_0 = [bytes_1, bytes_1, bytes_1]
    var_4 = module_0.flatten(var_3)
    tuple_0 = (bytes_1, list_0)
    var_5 = module_0.flatten(list_0)
    var_6 = module_0.flatten(var_1)
    var_7 = module_0.flatten(tuple_0)
    var_8 = module_0.flatten(bytes_1)
    int_0 = 1429
    bool_0 = False
    var_9 = module_0.flatten(bool_0)
    var_10 = module_0.flatten(int_0)
    var_11 = module_0.flatten(tuple_0)
    var_12 = module_0.flatten(var_4)
    module_1.object(*var_11)
