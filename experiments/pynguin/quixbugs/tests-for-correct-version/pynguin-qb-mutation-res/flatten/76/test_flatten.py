# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x13nT\xcb\xcb\xa8\xc0\x0e<\x9a\xc3"
    var_0 = module_0.flatten(bytes_0)
    module_1.object(*var_0)


def test_case_1():
    float_0 = -1176.063
    var_0 = module_0.flatten(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "ok*mG>VYA4Rp`iQ%"
    var_0 = module_0.flatten(str_0)
    var_1 = module_0.flatten(var_0)
    var_2 = module_0.flatten(str_0)
    set_0 = set()
    var_3 = module_0.flatten(var_2)
    var_4 = module_0.flatten(set_0)
    var_5 = module_0.flatten(str_0)
    bool_0 = True
    var_6 = module_0.flatten(bool_0)
    complex_0 = -1400.66 + 2899j
    list_0 = [bool_0, bool_0, complex_0, bool_0]
    var_7 = module_0.flatten(var_4)
    var_8 = module_0.flatten(var_4)
    var_9 = module_0.flatten(set_0)
    list_1 = [list_0]
    var_10 = module_0.flatten(list_1)
    none_type_0 = None
    var_11 = module_0.flatten(bool_0)
    var_12 = module_0.flatten(none_type_0)
    var_13 = module_0.flatten(var_10)
    module_1.object(*var_13)
