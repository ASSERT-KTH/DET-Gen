# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import flatten as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 3558.7
    var_0 = module_0.flatten(float_0)
    dict_0 = {float_0: var_0}
    var_1 = module_0.flatten(dict_0)
    list_0 = [float_0, var_0]
    object_0 = module_1.object()
    var_2 = module_0.flatten(dict_0)
    var_3 = module_0.flatten(dict_0)
    var_4 = module_0.flatten(list_0)
    var_5 = module_0.flatten(float_0)
    var_6 = module_0.flatten(list_0)
    var_7 = module_0.flatten(var_2)
    var_8 = module_0.flatten(object_0)
    module_1.object(*var_3)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.flatten(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.flatten(tuple_0)
    var_1 = module_0.flatten(var_0)
    dict_0 = {var_0: var_1}
    var_2 = module_0.flatten(dict_0)
    list_0 = [var_1, var_1]
    var_3 = module_0.flatten(dict_0)
    int_0 = -657
    var_4 = module_0.flatten(var_1)
    bytes_0 = b"~=\xb8\x0b"
    var_5 = module_0.flatten(dict_0)
    var_6 = module_0.flatten(list_0)
    tuple_1 = (dict_0, list_0, int_0, bytes_0)
    var_7 = module_0.flatten(var_3)
    var_8 = module_0.flatten(var_5)
    var_9 = module_0.flatten(var_3)
    var_10 = module_0.flatten(var_5)
    var_11 = module_0.flatten(tuple_1)
    var_12 = module_0.flatten(var_6)
    var_13 = module_0.flatten(var_3)
    module_1.object(*var_11)
