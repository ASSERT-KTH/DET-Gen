# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import get_factors as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.get_factors(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = -1888.8064 - 241.729j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    module_0.get_factors(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 1158.2258
    var_0 = module_0.get_factors(float_0)
    bool_0 = True
    var_1 = module_0.get_factors(bool_0)
    object_0 = module_1.object()
    module_0.get_factors(var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    var_0 = module_0.get_factors(bool_0)
    module_0.get_factors(var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 2292
    var_0 = module_0.get_factors(int_0)
    str_0 = "rETH#,YH/;S|t$x:1w"
    tuple_0 = (str_0,)
    str_1 = "n&IA8tL+C_<S\n"
    dict_0 = {tuple_0: str_0, str_1: str_0}
    module_0.get_factors(dict_0)
