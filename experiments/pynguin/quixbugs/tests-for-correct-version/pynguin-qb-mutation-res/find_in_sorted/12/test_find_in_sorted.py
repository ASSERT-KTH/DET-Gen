# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "R+:mz).\r}d}tk0b(qt"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "M<,{\x0bw3Ln1`p1CV"
    var_1 = module_0.find_in_sorted(str_1, str_1)
    assert var_1 == -1
    module_0.find_in_sorted(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    str_0 = "\x0ci\nV}q|MrUBF^%:LZ9j?"
    module_0.find_in_sorted(list_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1104
    module_0.find_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -446.4704
    list_0 = [float_0, float_0]
    var_0 = module_0.find_in_sorted(list_0, float_0)
    assert var_0 == 1
    bool_0 = False
    module_0.find_in_sorted(bool_0, bool_0)
