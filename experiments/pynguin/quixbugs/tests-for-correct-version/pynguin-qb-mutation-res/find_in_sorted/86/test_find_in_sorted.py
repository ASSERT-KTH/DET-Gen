# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "s51e!"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(str_0, str_0)
    assert var_1 == -1
    set_0 = {str_0, str_0, str_0}
    str_1 = "G-_rXE01"
    var_2 = module_0.find_in_sorted(str_0, str_1)
    assert var_2 == -1
    module_0.find_in_sorted(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.find_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xd5\x0b\xa89\x08\xb5\xc4\x0b"
    bool_0 = True
    var_0 = module_0.find_in_sorted(bytes_0, bool_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(bytes_0, var_0)
    assert var_1 == -1
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bytes_1 = b"\xa7\xcf\x83e\x93w\x90\x8e\x10\x89!U"
    tuple_0 = (dict_0, var_1, var_1, bytes_1)
    module_0.find_in_sorted(none_type_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 1757.0
    int_0 = 1581
    tuple_0 = (float_0, int_0)
    var_0 = module_0.find_in_sorted(tuple_0, int_0)
    assert var_0 == 1
    list_0 = [var_0]
    tuple_1 = (list_0, var_0, var_0)
    var_1 = module_0.find_in_sorted(tuple_1, int_0)
    assert var_1 == -1
    str_0 = ""
    none_type_0 = None
    var_2 = module_0.find_in_sorted(str_0, none_type_0)
    assert var_2 == -1
    module_0.find_in_sorted(var_2, var_1)
