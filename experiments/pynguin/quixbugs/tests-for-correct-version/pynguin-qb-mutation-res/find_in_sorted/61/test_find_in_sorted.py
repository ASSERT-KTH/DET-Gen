# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = -2279.511033
    none_type_0 = None
    tuple_0 = ()
    bytes_0 = b"`!\xf84\xf5\xcfl\xd8\x11\x8e\x9dl\x0c\xa3\x9f\xc7\xf3\xce\x1e4"
    var_0 = module_0.find_in_sorted(bytes_0, float_0)
    assert var_0 == -1
    module_0.find_in_sorted(none_type_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "{*\\he\x0c*3}\x0b$ASe>zW0^"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    float_0 = 2324.6
    module_0.find_in_sorted(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = 1828.35 - 3571j
    bool_0 = False
    bool_1 = False
    list_0 = [complex_0, complex_0, bool_0, bool_1]
    var_0 = module_0.find_in_sorted(list_0, bool_1)
    assert var_0 == 2
    complex_1 = -2468.81402 + 1163.33j
    module_0.find_in_sorted(complex_1, complex_1)
