# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    var_0 = module_0.find_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    module_0.find_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xbc\xa8\n*\xc6\x0b\x98\xf19\xffy(\xbfW}"
    module_0.find_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    bytes_0 = b"Y\r\x83\xabk\x9d\xac\x0c\xb3[\x8f\xce\xea\x18\x0ba\xf9<"
    var_0 = module_0.find_in_sorted(bytes_0, bool_0)
    assert var_0 == -1
    module_0.find_in_sorted(bool_0, bytes_0)


def test_case_4():
    bool_0 = False
    bytes_0 = b""
    bytes_1 = b"\xee\x1a"
    tuple_0 = (bool_0, bool_0, bytes_0, bytes_1)
    var_0 = module_0.find_in_sorted(tuple_0, bytes_1)
    assert var_0 == 3
