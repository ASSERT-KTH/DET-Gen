# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "?;U8"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_0.find_in_sorted(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x1e\xa9\x83\xcc"
    list_0 = [bytes_0, bytes_0]
    complex_0 = -4918.6 + 103.3493j
    object_0 = module_1.object()
    tuple_0 = (list_0, complex_0, object_0)
    module_0.find_in_sorted(bytes_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    module_0.find_in_sorted(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x1e\xa9\x83\xcc"
    list_0 = [bytes_0, bytes_0]
    object_0 = module_1.object()
    var_0 = module_0.find_in_sorted(list_0, bytes_0)
    assert var_0 == 1
    module_0.find_in_sorted(list_0, var_0)
