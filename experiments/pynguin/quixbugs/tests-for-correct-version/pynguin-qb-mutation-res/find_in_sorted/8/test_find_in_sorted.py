# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "9Ey(j\n%i9=\t^}>n[@r1"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xd5\xa9\xbe\xee\xfas\x12\x88\x0c\xddy\x81\xe7Cs:\x8b\xd2"
    module_0.find_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1695
    module_1.object(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    object_0 = module_1.object()
    str_0 = "E4s:3.diP9jF"
    bool_0 = True
    tuple_0 = (str_0, str_0, bool_0)
    list_0 = module_0.find_in_sorted(tuple_0, str_0)
    assert list_0 == 1
    module_0.find_in_sorted(list_0, str_0)
