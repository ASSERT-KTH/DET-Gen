# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


def test_case_0():
    set_0 = set()
    none_type_0 = None
    var_0 = module_0.find_in_sorted(set_0, none_type_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    str_0 = "Y\x0c"
    tuple_0 = (bool_0, dict_0, str_0)
    none_type_0 = None
    module_0.find_in_sorted(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.find_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 1472
    set_0 = {int_0, int_0, int_0}
    list_0 = [int_0, set_0, int_0, int_0]
    bool_0 = True
    module_0.find_in_sorted(list_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -465
    bytes_0 = b"`\xf1V\x7f\xcc\xc2"
    dict_0 = {int_0: int_0, bytes_0: int_0, int_0: int_0}
    list_0 = [dict_0, int_0]
    var_0 = module_0.find_in_sorted(list_0, int_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xb1\xb2\xd4\x0e\xea\xbd#\x16\x1c\xe4\xb8\x80\xbb\x10\xc2\xcc["
    int_0 = 559
    var_0 = module_0.find_in_sorted(bytes_0, int_0)
    assert var_0 == -1
    module_0.find_in_sorted(int_0, int_0)
