# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "plry!O%vM<u&\r"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_0.find_in_sorted(var_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"3\xc2mQ\xd4\xfd\xd0\x0b*\xa0\xbd\x86g"
    none_type_0 = None
    module_0.find_in_sorted(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    module_0.find_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Gl]Hw;k"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(str_0, str_0)
    assert var_1 == -1
    int_0 = 8
    var_2 = module_0.find_in_sorted(str_0, str_0)
    assert var_2 == -1
    list_0 = [int_0]
    var_3 = module_0.find_in_sorted(list_0, int_0)
    assert var_3 == 0
    module_0.find_in_sorted(var_1, var_0)
