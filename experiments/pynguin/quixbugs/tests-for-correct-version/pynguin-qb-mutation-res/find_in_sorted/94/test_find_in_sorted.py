# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


def test_case_0():
    dict_0 = {}
    var_0 = module_0.find_in_sorted(dict_0, dict_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "7Ctc\t"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_in_sorted(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "2@H%6>\rs"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_in_sorted(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "cH\r}wzcEE?"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(str_0, str_0)
    assert var_1 == -1
    int_0 = -2591
    bytes_0 = b"\x84\x94"
    tuple_0 = (bytes_0, int_0)
    tuple_1 = (str_0, int_0, tuple_0)
    str_1 = "Wk::4u~(g02[4"
    var_2 = module_0.find_in_sorted(str_1, str_1)
    assert var_2 == -1
    var_3 = module_0.find_in_sorted(tuple_1, int_0)
    assert var_3 == 1
    module_0.find_in_sorted(bytes_0, tuple_1)
