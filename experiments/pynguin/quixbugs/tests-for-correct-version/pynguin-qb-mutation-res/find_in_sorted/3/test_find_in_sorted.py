# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    set_0 = set()
    var_0 = module_0.find_in_sorted(set_0, set_0)
    assert var_0 == -1
    object_0 = module_1.object()
    module_0.find_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x0eF\x9aa\xc4\x04\xc0\xa8\xc4\xc8`\xe9\xfa\xc5\xdf\xcd\\"
    set_0 = {bytes_0, bytes_0}
    list_0 = [set_0]
    module_0.find_in_sorted(list_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "g|\\h(P"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_in_sorted(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xc4\\"
    tuple_0 = (bytes_0,)
    tuple_1 = (tuple_0,)
    var_0 = module_0.find_in_sorted(tuple_1, tuple_0)
    assert var_0 == 0
    module_0.find_in_sorted(tuple_1, var_0)
