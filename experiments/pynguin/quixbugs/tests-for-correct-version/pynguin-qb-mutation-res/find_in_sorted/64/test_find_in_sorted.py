# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


def test_case_0():
    set_0 = set()
    list_0 = [set_0]
    var_0 = module_0.find_in_sorted(set_0, list_0)
    assert var_0 == -1


def test_case_1():
    set_0 = set()
    list_0 = [set_0, set_0]
    var_0 = module_0.find_in_sorted(list_0, set_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    set_0 = {bool_0}
    module_0.find_in_sorted(bool_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "q.C#o(U"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "q.C#o(U"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    bytes_0 = b",\x12\xd6\xd5\x12\xa1\xc9\xe0\x18\x1c\xd3[\x1d\xcb.\xc9"
    var_1 = module_0.find_in_sorted(bytes_0, var_0)
    assert var_1 == -1
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)
