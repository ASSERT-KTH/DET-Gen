# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = ">(b[_N?Rx>b.\x0b&;6j1sb"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "G^uPir.9Pk\x0cxL"
    set_0 = {str_0, str_0}
    module_0.find_in_sorted(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "%e5OPr5}],,^Ry!p"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    object_0 = module_1.object()
    tuple_0 = (var_0, var_0)
    var_1 = module_0.find_in_sorted(tuple_0, var_0)
    assert var_1 == 1
    int_0 = 2628
    module_0.find_in_sorted(var_0, int_0)
