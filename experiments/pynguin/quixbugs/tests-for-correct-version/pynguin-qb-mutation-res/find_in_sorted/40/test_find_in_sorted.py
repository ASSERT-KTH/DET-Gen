# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "`+U-\x0c|sBr&uNj)P"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    bytes_0 = b"#\xd4\xdb\x95\x14\xcbe"
    module_0.find_in_sorted(var_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    module_0.find_in_sorted(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.find_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    bytes_0 = b"\xb5M\x13\n\x86\x99\x82\xda\xcc0\xd8V<C\xc7H\xb1O\x9c"
    bool_0 = True
    var_1 = module_0.find_in_sorted(bytes_0, bool_0)
    assert var_1 == -1
    bytes_1 = b"g\x85&\xaa<\xa8m\xd0M\x90\x8daA;\x03\xec4\xe4\x80"
    module_0.find_in_sorted(var_0, bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    var_0 = module_0.find_in_sorted(list_0, tuple_0)
    assert var_0 == 1
    var_1 = module_0.find_in_sorted(list_0, tuple_0)
    assert var_1 == 1
    var_2 = module_0.find_in_sorted(list_0, tuple_0)
    assert var_2 == 1
    bool_0 = False
    module_0.find_in_sorted(bool_0, bool_0)
