# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


def test_case_0():
    bytes_0 = b"\xb7\xc6\xa3bM\x0b3\xe5Eb\xcc\xaa\x8a\xe3\xf6S[\x95\xf1\x95"
    bool_0 = False
    var_0 = module_0.find_in_sorted(bytes_0, bool_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = 389 - 848.35j
    bytes_0 = b"\xf7`\x10"
    set_0 = {bytes_0, bytes_0}
    int_0 = -269
    tuple_0 = (int_0,)
    tuple_1 = (complex_0, set_0, int_0, tuple_0)
    var_0 = module_0.find_in_sorted(tuple_1, int_0)
    assert var_0 == 2
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "Fq1s1'Y/[\"Qe/9F|9k~"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = True
    module_0.find_in_sorted(str_0, bool_0)
