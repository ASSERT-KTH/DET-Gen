# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    var_0 = module_0.find_in_sorted(list_0, list_0)
    assert var_0 == -1
    module_0.find_in_sorted(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 2173
    set_0 = {int_0, int_0, int_0}
    module_0.find_in_sorted(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '4WX0L8a]g}7&P2)Y_"5'
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "vI\t1m~['ke\n~N-N\x0cl*&0"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    bytes_0 = b"\xec\x11\x88\xe4\x17m\x19pF\x91L"
    module_0.find_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -454
    list_0 = [int_0]
    var_0 = module_0.find_in_sorted(list_0, int_0)
    assert var_0 == 0
    bytes_0 = b"y\xf9z\xcf;"
    module_0.find_in_sorted(bytes_0, bytes_0)
