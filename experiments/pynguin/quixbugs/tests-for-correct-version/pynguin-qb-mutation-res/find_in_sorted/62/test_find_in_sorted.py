# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "hp@w_"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = True
    none_type_0 = None
    module_0.find_in_sorted(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    list_0 = [tuple_0, tuple_0, dict_0]
    module_0.find_in_sorted(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    dict_0 = {}
    var_0 = module_0.find_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    int_0 = -1264
    str_0 = '\td_!ylzRxB\x0c:"+?'
    str_1 = "N8ErbMd}"
    var_1 = module_0.find_in_sorted(str_0, str_1)
    assert var_1 == -1
    list_0 = [int_0]
    module_0.find_in_sorted(list_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.find_in_sorted(list_0, bool_0)
    assert var_0 == 1
    module_0.find_in_sorted(var_0, var_0)
