# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0


def test_case_0():
    dict_0 = {}
    var_0 = module_0.find_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    var_1 = module_0.find_in_sorted(dict_0, var_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xb1\x8f\xe66\xf9\xb8\xbaFQ:~"
    bytes_1 = b"\x9c\x16\xc5?\xd7\x04\xfeT\x99D\x8e\x08\xca\xab\x8a\xa89\x03\xad"
    module_0.find_in_sorted(bytes_0, bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "3u\x0c3HHqpLl%a9D/)"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    bytes_0 = b"\x08\t\x8f\xae\xe9\xdcj\xbb*\x7f\xc9\x93"
    module_0.find_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "0"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_in_sorted(var_0, str_0)
