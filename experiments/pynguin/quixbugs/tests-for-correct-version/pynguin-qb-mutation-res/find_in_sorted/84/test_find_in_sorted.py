# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "4h_#\r4"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\n\x05J\xcc\x9b\xc7\x19\xf9\xab0"
    module_0.find_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    module_0.find_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "gU^Pt(gm;t\t*e*t<"
    var_0 = module_0.find_in_sorted(str_0, str_0)
    assert var_0 == -1
    tuple_0 = (str_0,)
    bytes_0 = b"$8e\xfa\xf2\x83["
    module_0.find_in_sorted(tuple_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ".]|]rv\x0bZ0N_1"
    tuple_0 = (str_0,)
    var_0 = module_0.find_in_sorted(tuple_0, str_0)
    assert var_0 == 0
    module_0.find_in_sorted(str_0, var_0)
