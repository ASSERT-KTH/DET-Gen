# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import to_base as module_0
import re as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 1625.3
    module_0.to_base(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.to_base(bool_0, bool_0)
    assert var_0 == ""
    module_1.sub(bool_0, bool_0, bool_0, flags=bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.to_base(none_type_0, none_type_0)


def test_case_3():
    int_0 = 1062
    var_0 = module_0.to_base(int_0, int_0)
    assert var_0 == "10"
    var_1 = module_0.to_base(int_0, int_0)
    assert var_1 == "10"
    var_2 = module_0.to_base(int_0, int_0)
    assert var_2 == "10"
    var_3 = var_1.__len__()
    assert var_3 == 2
    var_4 = module_1.finditer(var_2, var_1, var_3)
    with pytest.raises(TypeError):
        var_3.__new__(var_1, var_0, var_0, var_3, **var_4)
