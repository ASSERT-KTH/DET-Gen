# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import detect_cycle as module_0
import builtins as module_1
import node as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.detect_cycle(none_type_0)
    assert var_0 is False
    tuple_0 = (var_0,)
    module_0.detect_cycle(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    module_0.detect_cycle(object_0)


def test_case_2():
    bool_0 = True
    node_0 = module_2.Node(bool_0, successors=bool_0)
    node_1 = module_2.Node(bool_0, node_0)
    var_0 = module_0.detect_cycle(node_1)
    assert var_0 is False


def test_case_3():
    str_0 = "L*Uf.]kc:\rb{)\\J2^"
    node_0 = module_2.Node(str_0, successors=str_0, incoming_nodes=str_0)
    var_0 = module_0.detect_cycle(node_0)
    assert var_0 is False
