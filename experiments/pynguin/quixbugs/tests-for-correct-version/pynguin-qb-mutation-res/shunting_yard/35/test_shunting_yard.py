# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shunting_yard as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "HG0gb\\"
    module_0.shunting_yard(str_0)


def test_case_1():
    str_0 = ";"
    var_0 = module_0.shunting_yard(str_0)


def test_case_2():
    int_0 = 343
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.shunting_yard(dict_0)
    var_1 = module_0.shunting_yard(var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 100
    module_0.shunting_yard(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "++>="
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "+/+>="
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "w"
    var_0 = module_0.shunting_yard(str_0)
    object_0 = module_1.object()
    str_1 = "+//>"
    bytes_0 = b"g}\x02\xd0g\x1e]D\xee\xc8\x98\x10\x95\xe3\xf4C\xceV\xd6"
    var_1 = module_0.shunting_yard(bytes_0)
    module_0.shunting_yard(str_1)


def test_case_7():
    str_0 = "w"
    var_0 = module_0.shunting_yard(str_0)
    object_0 = module_0.shunting_yard(str_0)
    str_1 = "+//"
    bytes_0 = b"g}\x02\xd0g\x1e]D\xee\xc8\x98\x10\x95\xe3\xf4C\xceV\xd6"
    var_1 = module_0.shunting_yard(bytes_0)
    var_2 = module_0.shunting_yard(str_1)
    var_3 = module_0.shunting_yard(bytes_0)
