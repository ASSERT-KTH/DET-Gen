# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shunting_yard as module_0


def test_case_0():
    bytes_0 = b"k\xf2Z\n@\xc6\x1d"
    var_0 = module_0.shunting_yard(bytes_0)


def test_case_1():
    str_0 = "~"
    var_0 = module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "?5"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "+/Bw(Kh\t$w?XAd@b(@"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "/-~WLG?I,+<K<"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "+/-~WG?I,+<K<"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\x92h\x00\xcaB\x95\x97N\x07-K"
    var_0 = module_0.shunting_yard(bytes_0)
    str_0 = "+/*pWG?I,+<K<"
    float_0 = 54.3823
    int_0 = 1
    bytes_1 = b"\xfb\x9d\xc1\\\x94\xdc\xdf"
    tuple_0 = (bytes_1,)
    var_1 = module_0.shunting_yard(tuple_0)
    var_2 = module_0.shunting_yard(bytes_0)
    tuple_1 = (var_1, int_0, var_2)
    dict_0 = {float_0: float_0, float_0: float_0, float_0: tuple_1}
    var_3 = module_0.shunting_yard(dict_0)
    module_0.shunting_yard(str_0)
