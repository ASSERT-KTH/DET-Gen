# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shunting_yard as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "ul_%P4`VkA"
    module_0.shunting_yard(str_0)


def test_case_1():
    bytes_0 = b"\xbd\x86"
    var_0 = module_0.shunting_yard(bytes_0)


def test_case_2():
    str_0 = ")"
    var_0 = module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "-*B\r\x0cl[B0en >AU_b"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "-*/\r\x0clB0en >AU_D"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -129
    float_0 = 938.8
    tuple_0 = (int_0, int_0, float_0)
    dict_0 = {tuple_0: float_0}
    var_0 = module_0.shunting_yard(dict_0)
    int_1 = 2794
    dict_1 = {int_1: int_1}
    var_1 = module_0.shunting_yard(dict_1)
    list_0 = [dict_1, int_1, int_1]
    var_2 = module_0.shunting_yard(dict_1)
    var_3 = module_0.shunting_yard(list_0)
    var_4 = module_0.shunting_yard(var_3)
    str_0 = "-*+\r\x0clB0en >AUHD"
    module_0.shunting_yard(str_0)


def test_case_6():
    str_0 = "+/"
    var_0 = module_0.shunting_yard(str_0)
