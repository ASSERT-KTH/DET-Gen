# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shunting_yard as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "H\x0c{kq(21rEf;;i"
    module_0.shunting_yard(str_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.shunting_yard(dict_0)


def test_case_2():
    str_0 = ","
    var_0 = module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.shunting_yard(none_type_0)


def test_case_4():
    int_0 = 222
    set_0 = {int_0, int_0}
    var_0 = module_0.shunting_yard(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '++@Gg"vb'
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '++*+g"\nvs'
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    tuple_0 = ()
    set_0 = {tuple_0}
    var_0 = module_0.shunting_yard(set_0)
    bool_0 = True
    tuple_1 = (bool_0,)
    var_1 = module_0.shunting_yard(tuple_1)
    str_0 = "+**+g8\nvs"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    tuple_0 = ()
    set_0 = {tuple_0}
    var_0 = module_0.shunting_yard(set_0)
    bool_0 = True
    tuple_1 = (bool_0,)
    var_1 = module_0.shunting_yard(tuple_1)
    str_0 = "+*"
    var_2 = module_0.shunting_yard(str_0)
    bytes_0 = b"\xb6\x1e\x92\xc2\x9c\x0f\x90\xd7v\x87#\x96\x80h="
    var_3 = module_0.shunting_yard(bytes_0)
    var_4 = module_0.shunting_yard(bytes_0)
    module_0.shunting_yard(bool_0)
