# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shunting_yard as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "LA/`#%~S`gItG]10;JOU"
    module_0.shunting_yard(str_0)


def test_case_1():
    set_0 = set()
    var_0 = module_0.shunting_yard(set_0)


def test_case_2():
    str_0 = "R"
    var_0 = module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -2722.0
    module_0.shunting_yard(float_0)


def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.shunting_yard(list_0)
    var_1 = module_0.shunting_yard(var_0)
    var_2 = module_0.shunting_yard(var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "+/d(q>7=)IjB8\rI"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "*/d(q>7=)IjB8\rI"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "+*/d(q>7=)IjYB8\rI"
    module_0.shunting_yard(str_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    complex_0 = 1659.5195300105672 + 2036.9866664690805j
    set_0 = {bool_0, bool_0, bool_0, bool_0, bool_0, complex_0, complex_0}
    var_0 = module_0.shunting_yard(set_0)
    str_0 = "+*/-d(q>7=)IjYS8\rI"
    module_0.shunting_yard(str_0)
