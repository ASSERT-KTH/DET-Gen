# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import subsequences as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "0]QiAB+3_"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: bool_0, str_0: bool_0}
    var_0 = module_0.subsequences(dict_0, dict_0, bool_0)
    var_1 = module_0.subsequences(var_0, bool_0, bool_0)
    module_0.subsequences(var_1, var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    module_0.subsequences(object_0, object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 800
    var_0 = module_0.subsequences(int_0, int_0, int_0)
    var_1 = module_0.subsequences(int_0, int_0, int_0)
    list_0 = []
    module_0.subsequences(var_1, list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    int_0 = -104
    module_0.subsequences(bool_0, bool_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)
    int_0 = -623
    var_1 = module_0.subsequences(int_0, bool_0, bool_0)
    module_0.subsequences(var_0, var_1, var_0)
