# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import subsequences as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"<l\x9e\x07E\x9c\xbd\x90\xb4\x8d\xf4Iz\xcc"
    str_0 = ")s*V=\x0cV"
    bool_0 = False
    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)
    list_0 = [str_0]
    tuple_0 = (bytes_0, str_0, bool_0, list_0)
    module_0.subsequences(bytes_0, bytes_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "\x0bng|GPB+"
    module_0.subsequences(str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    bool_1 = True
    var_0 = module_0.subsequences(bool_0, bool_0, bool_1)
    bool_2 = True
    bool_3 = False
    var_1 = module_0.subsequences(bool_3, bool_2, bool_2)
    module_0.subsequences(var_1, var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)
    bool_1 = False
    bool_2 = False
    var_1 = module_0.subsequences(bool_1, bool_1, bool_2)
    var_2 = module_0.subsequences(bool_0, bool_0, bool_0)
    var_3 = module_0.subsequences(bool_0, bool_0, bool_0)
    module_0.subsequences(var_3, var_3, var_3)
