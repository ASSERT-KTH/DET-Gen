# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import subsequences as module_0


def test_case_0():
    bytes_0 = b"\x1d\xc4{\x91\xcd\x19\xecP>\xd9"
    bool_0 = False
    bool_1 = True
    tuple_0 = (bytes_0, bool_0, bytes_0, bool_1)
    none_type_0 = None
    var_0 = module_0.subsequences(tuple_0, none_type_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = 2942.0
    module_0.subsequences(float_0, float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1842
    module_0.subsequences(int_0, int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 376
    bool_0 = False
    var_0 = module_0.subsequences(bool_0, int_0, int_0)
    var_1 = module_0.subsequences(int_0, int_0, bool_0)
    var_2 = module_0.subsequences(int_0, int_0, bool_0)
    module_0.subsequences(var_2, int_0, var_1)
