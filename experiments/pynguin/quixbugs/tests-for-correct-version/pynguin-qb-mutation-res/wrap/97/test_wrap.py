# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import wrap as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x7f\xe8gL\xb1\x13\xd1m?\x154\xab\x81<$\xd6c\xec\x9a"
    dict_0 = {}
    tuple_0 = (bytes_0, dict_0)
    int_0 = 2092
    tuple_1 = (tuple_0, int_0, int_0)
    bool_0 = False
    tuple_2 = (bytes_0, tuple_1, bool_0)
    module_0.wrap(tuple_2, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 106
    dict_0 = {int_0: int_0}
    none_type_0 = None
    module_0.wrap(dict_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.wrap(tuple_0, bool_0)
    bytes_0 = b"\x81\xc2\xa1F\xf3"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.wrap(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "wU\x0cWI9Gbq"
    bool_0 = True
    var_0 = module_0.wrap(str_0, bool_0)
    module_0.wrap(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "[E? "
    bool_0 = True
    var_0 = module_0.wrap(str_0, bool_0)
    module_1.object(*var_0)
