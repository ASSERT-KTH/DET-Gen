# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import wrap as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    bytes_0 = b"\xd0\x13v\x92F\xc7\xe3\xfe\xe3\x9e\xe4\xe7\xe7O"
    tuple_0 = (list_0, bytes_0, bytes_0)
    bool_0 = False
    module_0.wrap(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    module_0.wrap(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'cc\tG"9-E'
    bool_0 = True
    var_0 = module_0.wrap(str_0, bool_0)
    module_0.wrap(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    bytes_0 = b"\xd0\x13v\x92F\xc7\xe3\xfe\xe3\x9e\xe4\xe7\xe7O"
    bytes_1 = b"d\xf9\xf6\xff\xc7\xbcN\xe8\xe51|\xab\xcc"
    tuple_0 = (list_0, bytes_0, bytes_1)
    float_0 = 548.2
    var_0 = module_0.wrap(tuple_0, float_0)
    module_0.wrap(tuple_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '|c\t[G"C- '
    bool_0 = True
    var_0 = module_0.wrap(str_0, bool_0)
    var_1 = module_1.object()
    module_0.wrap(bool_0, bool_0)
