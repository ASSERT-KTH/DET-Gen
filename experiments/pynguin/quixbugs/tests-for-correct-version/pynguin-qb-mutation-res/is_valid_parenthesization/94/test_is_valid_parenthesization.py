# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xb8.\x04t\xe4\xbc&e\xd2s\xe1"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.is_valid_parenthesization(tuple_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(Ry_\nyUjSJF%<"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(dict_0)
    assert var_1 is False
    var_2 = module_0.is_valid_parenthesization(str_0)
    assert var_2 is False
    var_3 = module_0.is_valid_parenthesization(str_0)
    assert var_3 is False
    module_1.object(*var_1)
