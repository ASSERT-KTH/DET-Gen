# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0


def test_case_0():
    str_0 = "a"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "("
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    none_type_0 = None
    module_0.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.is_valid_parenthesization(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '(g&6)B~^y"#g2J\x0ce\r$D'
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    int_0 = -1400
    bool_0 = True
    tuple_0 = (str_0, int_0, var_0, bool_0)
    var_1 = module_0.is_valid_parenthesization(tuple_0)
    assert var_1 is False
    var_2 = module_0.is_valid_parenthesization(str_0)
    assert var_2 is False
    int_1 = -2784
    module_0.is_valid_parenthesization(int_1)
