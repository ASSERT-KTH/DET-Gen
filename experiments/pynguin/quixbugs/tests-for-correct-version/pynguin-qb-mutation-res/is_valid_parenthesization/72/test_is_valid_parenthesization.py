# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0


def test_case_0():
    str_0 = "}<qy"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False


def test_case_1():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, bool_0, dict_0)
    var_0 = module_0.is_valid_parenthesization(tuple_0)
    assert var_0 is False
    str_0 = ""
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "(a"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is True
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is True
    object_0 = module_0.is_valid_parenthesization(str_0)
    assert object_0 is True
    module_0.is_valid_parenthesization(object_0)
