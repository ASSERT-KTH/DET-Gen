# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xb9\xcf9\xda\x8da\xc1\xc3[\x0b\xb6\x13\x88\xb8]I~\x1f\x956"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ""
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is True
    module_0.is_valid_parenthesization(var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 88
    object_0 = module_1.object()
    bool_0 = True
    tuple_0 = (bool_0,)
    dict_0 = {int_0: object_0, object_0: object_0, tuple_0: int_0}
    var_0 = module_0.is_valid_parenthesization(dict_0)
    assert var_0 is False
    str_0 = "(g_p"
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is False
    module_0.is_valid_parenthesization(var_1)
