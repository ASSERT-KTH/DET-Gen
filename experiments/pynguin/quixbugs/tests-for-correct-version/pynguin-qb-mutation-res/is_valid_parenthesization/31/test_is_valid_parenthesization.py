# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import is_valid_parenthesization as module_1


def test_case_0():
    object_0 = module_0.object()
    set_0 = {object_0, object_0}
    var_0 = module_1.is_valid_parenthesization(set_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_1.is_valid_parenthesization(set_0)
    assert var_0 is True
    str_0 = ""
    var_1 = module_1.is_valid_parenthesization(str_0)
    assert var_1 is True
    bool_0 = False
    module_1.is_valid_parenthesization(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "("
    var_0 = module_1.is_valid_parenthesization(str_0)
    assert var_0 is False
    dict_0 = {}
    var_1 = module_1.is_valid_parenthesization(dict_0)
    assert var_1 is True
    none_type_0 = None
    module_1.is_valid_parenthesization(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "(3"
    var_0 = module_1.is_valid_parenthesization(str_0)
    assert var_0 is True
    dict_0 = {}
    var_1 = module_1.is_valid_parenthesization(dict_0)
    assert var_1 is True
    none_type_0 = None
    module_1.is_valid_parenthesization(none_type_0)
