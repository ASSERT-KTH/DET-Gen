# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xc6l\x9e\x96\xd5\xa0\x15L>\xf1\x00\xe7n\xd9"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(bytes_0)
    assert var_1 is False
    var_2 = module_0.is_valid_parenthesization(bytes_0)
    assert var_2 is False
    module_0.is_valid_parenthesization(var_1)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.is_valid_parenthesization(dict_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.is_valid_parenthesization(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(H~"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is False
    module_0.is_valid_parenthesization(var_0)
