# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    str_0 = "X1n,W:/1"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False


def test_case_1():
    dict_0 = {}
    var_0 = module_0.is_valid_parenthesization(dict_0)
    assert var_0 is True
    var_1 = module_0.is_valid_parenthesization(dict_0)
    assert var_1 is True
    var_2 = module_0.is_valid_parenthesization(dict_0)
    assert var_2 is True
    var_3 = module_0.is_valid_parenthesization(dict_0)
    assert var_3 is True
    var_4 = module_0.is_valid_parenthesization(dict_0)
    assert var_4 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "(.K"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    dict_0 = {str_0: str_0, str_0: var_0, str_0: str_0}
    module_1.object(**dict_0)
