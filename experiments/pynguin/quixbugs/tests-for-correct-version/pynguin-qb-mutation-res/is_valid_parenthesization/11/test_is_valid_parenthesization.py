# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xfeJa\x99\x8e[V\xfeC\x17\x89\x9bH8\rq\xb6"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    var_0 = module_0.is_valid_parenthesization(tuple_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.is_valid_parenthesization(list_0)
    assert var_0 is True
    str_0 = "bzJK)icg*BkxbND"
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is False
    var_2 = module_0.is_valid_parenthesization(str_0)
    assert var_2 is False
    module_0.is_valid_parenthesization(var_2)


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    module_0.is_valid_parenthesization(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "({Q\tkgJ4U"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    module_0.is_valid_parenthesization(var_0)
