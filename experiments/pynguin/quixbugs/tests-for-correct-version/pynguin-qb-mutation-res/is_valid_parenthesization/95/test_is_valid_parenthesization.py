# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xed`\xc2\x91\x90\xdd\x13\xe0\x99\xf3"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False


def test_case_1():
    bool_0 = False
    set_0 = set()
    var_0 = module_0.is_valid_parenthesization(set_0)
    assert var_0 is True
    list_0 = [bool_0, bool_0, bool_0]
    var_1 = module_0.is_valid_parenthesization(list_0)
    assert var_1 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.is_valid_parenthesization(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "("
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    var_1 = module_0.is_valid_parenthesization(str_0)
    assert var_1 is False
    module_0.is_valid_parenthesization(var_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "(c1[Xd<&fuN\x0cB=f"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    module_1.object(*var_0)
