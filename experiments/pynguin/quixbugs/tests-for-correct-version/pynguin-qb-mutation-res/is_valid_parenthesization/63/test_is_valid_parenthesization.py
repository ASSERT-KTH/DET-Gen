# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import is_valid_parenthesization as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"^\xdc"
    var_0 = module_0.is_valid_parenthesization(bytes_0)
    assert var_0 is False
    module_0.is_valid_parenthesization(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "sA?Cez`"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    list_0 = []
    var_1 = module_0.is_valid_parenthesization(list_0)
    assert var_1 is True
    var_2 = module_0.is_valid_parenthesization(list_0)
    assert var_2 is True
    var_3 = module_0.is_valid_parenthesization(str_0)
    assert var_3 is False
    module_0.is_valid_parenthesization(var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "(y=0(y\x0be0&;K}(`b\x0c"
    var_0 = module_0.is_valid_parenthesization(str_0)
    assert var_0 is False
    str_1 = "c#\x0bpPhpUv"
    var_1 = module_0.is_valid_parenthesization(str_1)
    assert var_1 is False
    object_0 = module_1.object()
    var_2 = module_0.is_valid_parenthesization(str_0)
    assert var_2 is False
    str_2 = '(#"'
    var_3 = module_0.is_valid_parenthesization(str_2)
    assert var_3 is False
    module_0.is_valid_parenthesization(var_1)
