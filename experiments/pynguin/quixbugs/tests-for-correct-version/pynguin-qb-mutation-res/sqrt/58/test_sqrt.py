# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    bool_1 = True
    var_1 = module_0.sqrt(bool_1, bool_1)
    assert var_1 == pytest.approx(0.5, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(bool_1, bool_1)
    assert var_2 == pytest.approx(0.5, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(var_2, bool_1)
    assert var_3 == pytest.approx(0.25, abs=0.01, rel=0.01)
    var_4 = module_0.sqrt(bool_1, bool_1)
    assert var_4 == pytest.approx(0.5, abs=0.01, rel=0.01)
    var_5 = module_0.sqrt(bool_1, var_1)
    assert var_5 == pytest.approx(1.025, abs=0.01, rel=0.01)
    var_6 = module_0.sqrt(var_1, bool_1)
    assert var_6 == pytest.approx(0.25, abs=0.01, rel=0.01)
    var_7 = module_0.sqrt(var_1, var_5)
    assert var_7 == pytest.approx(0.25, abs=0.01, rel=0.01)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "DgQA[CwVl]hMa\\X~Q"
    str_1 = ""
    str_2 = "T\x0b\t@\x0bT.p"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
    module_1.object(**dict_0)
