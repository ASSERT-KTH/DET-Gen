# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.5, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(bool_0, bool_0)
    assert var_1 == pytest.approx(0.5, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(var_0, var_1)
    assert var_2 == pytest.approx(0.25, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(bool_0, var_0)
    assert var_3 == pytest.approx(1.025, abs=0.01, rel=0.01)
    float_0 = 150.523178
    var_4 = module_0.sqrt(float_0, float_0)
    assert var_4 == pytest.approx(14.171264948884929, abs=0.01, rel=0.01)
    var_5 = module_0.sqrt(bool_0, var_1)
    assert var_5 == pytest.approx(1.025, abs=0.01, rel=0.01)
    var_6 = module_0.sqrt(float_0, float_0)
    assert var_6 == pytest.approx(14.171264948884929, abs=0.01, rel=0.01)
    var_7 = module_0.sqrt(var_6, var_1)
    assert var_7 == pytest.approx(3.7650543065028486, abs=0.01, rel=0.01)
    var_8 = module_0.sqrt(var_6, var_6)
    assert var_8 == pytest.approx(4.542816237221232, abs=0.01, rel=0.01)
    var_9 = module_0.sqrt(float_0, float_0)
    assert var_9 == pytest.approx(14.171264948884929, abs=0.01, rel=0.01)
    var_10 = module_0.sqrt(var_6, var_4)
    assert var_10 == pytest.approx(4.542816237221232, abs=0.01, rel=0.01)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(bool_0, var_0)
    var_2 = module_0.sqrt(var_0, var_0)
    bytes_0 = b"\x96k\xec\x13_\x18w\x84,\xe6\x91cT\xe7G\xc3\x0b"
    module_0.sqrt(bool_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.sqrt(none_type_0, none_type_0)
