# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.5, abs=0.01, rel=0.01)
    int_0 = 417
    var_1 = module_0.sqrt(int_0, int_0)
    assert var_1 == pytest.approx(22.260230410552648, abs=0.01, rel=0.01)
    bytes_0 = b'\xac"\xe8]'
    var_2 = module_0.sqrt(var_1, var_1)
    assert var_2 == pytest.approx(6.565057602638162, abs=0.01, rel=0.01)
    module_0.sqrt(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.5, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(bool_0, bool_0)
    assert var_1 == pytest.approx(0.5, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(var_1, var_1)
    assert var_2 == pytest.approx(0.25, abs=0.01, rel=0.01)
    none_type_0 = None
    module_0.sqrt(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    module_0.sqrt(list_0, bool_0)
