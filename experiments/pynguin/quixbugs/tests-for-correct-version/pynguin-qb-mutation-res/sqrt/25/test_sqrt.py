# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 428
    var_0 = module_0.sqrt(int_0, int_0)
    assert var_0 == pytest.approx(22.633434862916715, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(int_0, int_0)
    assert var_1 == pytest.approx(22.633434862916715, abs=0.01, rel=0.01)
    bytes_0 = b"!]\x1c\x0fX\xe4\x1f\x9c\x03\xca)\xc71\x84\xc7V\xb1@\xa5\x18"
    module_0.sqrt(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.5, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(var_0, var_0)
    assert var_1 == pytest.approx(0.25, abs=0.01, rel=0.01)
    none_type_0 = None
    var_2 = module_0.sqrt(var_0, bool_0)
    assert var_2 == pytest.approx(0.25, abs=0.01, rel=0.01)
    module_0.sqrt(none_type_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 437
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.sqrt(dict_0, int_0)
