# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


def test_case_0():
    int_0 = 1703
    var_0 = module_0.sqrt(int_0, int_0)
    assert var_0 == pytest.approx(45.14405850261562, abs=0.01, rel=0.01)
    float_0 = 3014.7443
    var_1 = module_0.sqrt(float_0, var_0)
    assert var_1 == pytest.approx(54.916440328950216, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(float_0, var_1)
    assert var_2 == pytest.approx(54.916440328950216, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(var_1, var_1)
    assert var_3 == pytest.approx(9.228769512405004, abs=0.01, rel=0.01)
    var_4 = module_0.sqrt(var_0, var_1)
    assert var_4 == pytest.approx(7.980220594681275, abs=0.01, rel=0.01)
    var_5 = module_0.sqrt(float_0, float_0)
    assert var_5 == pytest.approx(66.71306213019668, abs=0.01, rel=0.01)
    var_6 = module_0.sqrt(var_5, float_0)
    assert var_6 == pytest.approx(33.35653106509834, abs=0.01, rel=0.01)
    var_7 = module_0.sqrt(float_0, var_1)
    assert var_7 == pytest.approx(54.916440328950216, abs=0.01, rel=0.01)
    var_8 = module_0.sqrt(var_5, float_0)
    assert var_8 == pytest.approx(33.35653106509834, abs=0.01, rel=0.01)
    var_9 = module_0.sqrt(var_0, var_7)
    assert var_9 == pytest.approx(7.980220594681275, abs=0.01, rel=0.01)
    var_10 = module_0.sqrt(var_4, var_3)
    assert var_10 == pytest.approx(3.9901102973406375, abs=0.01, rel=0.01)
    var_11 = module_0.sqrt(int_0, var_4)
    assert var_11 == pytest.approx(41.267754893112155, abs=0.01, rel=0.01)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.5, abs=0.01, rel=0.01)
    list_0 = [var_0, var_0, var_0, bool_0]
    module_0.sqrt(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    none_type_0 = None
    module_0.sqrt(bool_0, none_type_0)
