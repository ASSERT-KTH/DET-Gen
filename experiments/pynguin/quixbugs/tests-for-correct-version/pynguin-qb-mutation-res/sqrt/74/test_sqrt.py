# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


def test_case_0():
    int_0 = 599
    var_0 = module_0.sqrt(int_0, int_0)
    assert var_0 == pytest.approx(28.314543974065725, abs=0.01, rel=0.01)
    var_1 = module_0.sqrt(int_0, int_0)
    assert var_1 == pytest.approx(28.314543974065725, abs=0.01, rel=0.01)
    var_2 = module_0.sqrt(var_1, var_1)
    assert var_2 == pytest.approx(5.7917514519101605, abs=0.01, rel=0.01)
    var_3 = module_0.sqrt(int_0, var_2)
    assert var_3 == pytest.approx(24.47584718261633, abs=0.01, rel=0.01)
    var_4 = module_0.sqrt(var_1, int_0)
    assert var_4 == pytest.approx(14.157271987032862, abs=0.01, rel=0.01)
    var_5 = module_0.sqrt(int_0, int_0)
    assert var_5 == pytest.approx(28.314543974065725, abs=0.01, rel=0.01)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    str_0 = ""
    module_0.sqrt(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x87?\x9d\xd4\n_H\xdb>"
    module_0.sqrt(bytes_0, bytes_0)
