# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    int_0 = -1396
    module_0.sqrt(bool_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.5, abs=0.01, rel=0.01)
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.sqrt(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    set_0 = {bool_0}
    module_0.sqrt(bool_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 604
    bool_0 = False
    var_0 = module_0.sqrt(int_0, bool_0)
    assert var_0 == pytest.approx(24.576411454889016, abs=0.01, rel=0.01)
    none_type_0 = None
    var_1 = module_0.sqrt(bool_0, int_0)
    var_2 = module_0.sqrt(int_0, var_0)
    assert var_2 == pytest.approx(24.843698574814987, abs=0.01, rel=0.01)
    module_0.sqrt(int_0, none_type_0)
