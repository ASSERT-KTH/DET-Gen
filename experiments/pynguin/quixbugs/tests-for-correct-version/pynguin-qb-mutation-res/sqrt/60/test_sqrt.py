# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sqrt as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    float_0 = 1173.941589
    var_1 = module_0.sqrt(float_0, float_0)
    assert var_1 == pytest.approx(46.74803188703044, abs=0.01, rel=0.01)
    bool_1 = False
    var_2 = module_0.sqrt(bool_0, var_0)
    var_3 = module_0.sqrt(bool_0, bool_1)
    var_4 = module_0.sqrt(bool_1, bool_1)
    var_5 = module_0.sqrt(var_0, var_0)
    var_6 = module_0.sqrt(float_0, var_1)
    assert var_6 == pytest.approx(34.30151287971567, abs=0.01, rel=0.01)
    none_type_0 = None
    module_0.sqrt(none_type_0, none_type_0)


def test_case_1():
    bool_0 = True
    var_0 = module_0.sqrt(bool_0, bool_0)
    assert var_0 == pytest.approx(0.5, abs=0.01, rel=0.01)


@pytest.mark.xfail(strict=True)
def test_case_2():
    complex_0 = -5351.926 + 875j
    module_0.sqrt(complex_0, complex_0)
