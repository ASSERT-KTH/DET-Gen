# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    str_0 = ";7jQZz(f\x0c\nWTOI>\"B'"
    module_0.knapsack(bool_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    module_0.knapsack(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"/jY\x9f\x95\xc2O\x1b\x88%\x91\x98\xfeV\xbd{\xcb\xcb\x00"
    none_type_0 = None
    module_0.knapsack(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {tuple_0, var_0}
    dict_0 = {var_0: set_0, tuple_0: var_0}
    module_0.knapsack(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {tuple_0, tuple_0, var_0}
    dict_0 = {var_0: set_0, tuple_0: var_0}
    bool_0 = True
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    bytes_0 = b"g\xe5"
    tuple_0 = (bytes_0,)
    var_0 = module_0.knapsack(bool_0, tuple_0)
    assert var_0 == 0
    module_0.knapsack(bool_0, bool_0)
