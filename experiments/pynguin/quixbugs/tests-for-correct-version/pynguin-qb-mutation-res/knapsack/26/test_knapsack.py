# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "EW0R*x\x0c\x0cc4S"
    complex_0 = 2218.7 + 252.42811j
    module_0.knapsack(complex_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"Fqvs\x1a\xf7\x0b\x0c\x95"
    module_0.knapsack(var_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"<y"
    tuple_0 = ()
    var_0 = module_0.knapsack(bytes_0, tuple_0)
    assert var_0 == 0
    list_0 = [bytes_0, bytes_0]
    var_1 = module_0.knapsack(var_0, list_0)
    assert var_1 == 0
    module_0.knapsack(var_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"<y"
    int_0 = 802
    int_1 = 1509
    tuple_0 = (bytes_0,)
    var_0 = module_0.knapsack(int_1, tuple_0)
    assert var_0 == 121
    module_0.knapsack(bytes_0, int_0)
