# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "o\rXBL.Ic=n:c'u#1hl"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    module_0.knapsack(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1260
    module_0.knapsack(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    bytes_1 = b"4\xe5"
    list_0 = [bytes_1, bytes_1, bytes_0, bytes_1, bytes_1]
    var_0 = module_0.knapsack(bytes_1, bytes_0)
    assert var_0 == 0
    module_0.knapsack(var_0, list_0)


def test_case_4():
    bytes_0 = b"\x02/"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0, bytes_0]
    bool_0 = True
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0
    var_1 = module_0.knapsack(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x02/"
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0
    int_0 = 239
    var_1 = module_0.knapsack(int_0, list_0)
    assert var_1 == 94
    module_0.knapsack(var_1, var_1)
