# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = 'vZ"Rp.Lba!\\jx,?<C\nY'
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    dict_0 = {var_0: var_0, var_0: var_0, tuple_0: tuple_0, var_0: var_0}
    module_0.knapsack(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2479
    none_type_0 = None
    module_0.knapsack(int_0, none_type_0)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bool_0 = True
    dict_0 = {bool_0: var_0, var_0: var_0, bool_0: var_0}
    tuple_1 = (dict_0,)
    var_1 = module_0.knapsack(bool_0, tuple_1)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    bool_0 = True
    dict_0 = {bool_0: tuple_0, tuple_0: tuple_0, bool_0: tuple_0}
    tuple_1 = (dict_0,)
    module_0.knapsack(bool_0, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 2041
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (int_0, dict_0)
    tuple_1 = (tuple_0,)
    module_0.knapsack(int_0, tuple_1)
