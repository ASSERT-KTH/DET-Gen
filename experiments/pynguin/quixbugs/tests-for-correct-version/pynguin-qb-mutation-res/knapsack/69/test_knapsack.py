# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    str_0 = "\n\trUt#Tb|E<F"
    module_0.knapsack(tuple_0, str_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    tuple_1 = (tuple_0, var_0)
    list_0 = [tuple_1, tuple_1, tuple_0]
    module_0.knapsack(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    tuple_1 = (var_0, var_0)
    list_0 = [tuple_1, tuple_1, tuple_0]
    int_0 = 2304
    module_0.knapsack(int_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 4023
    bytes_0 = b""
    dict_0 = {int_0: int_0, int_0: int_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = ()
    dict_1 = {}
    list_0 = [tuple_0, tuple_0, tuple_0, dict_1]
    tuple_1 = (dict_0, tuple_0, dict_0, list_0)
    module_0.knapsack(int_0, tuple_1)
