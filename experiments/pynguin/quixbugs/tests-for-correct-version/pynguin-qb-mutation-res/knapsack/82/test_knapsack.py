# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    set_0 = {bool_0}
    module_0.knapsack(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"M\xe6\xbe\xb0\xfa\x81?\xbe\xeb\x91\x0bE\xa9'8\x1a\x9a"
    list_0 = []
    var_0 = module_0.knapsack(bytes_0, list_0)
    assert var_0 == 0
    module_0.knapsack(list_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


def test_case_3():
    bytes_0 = b"\xd1\xdb"
    tuple_0 = (bytes_0, bytes_0)
    bool_0 = True
    var_0 = module_0.knapsack(bool_0, tuple_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x18Ef{U\xb0\xc2\x1c\x8f\xede"
    list_0 = []
    var_0 = module_0.knapsack(bytes_0, list_0)
    assert var_0 == 0
    tuple_0 = (var_0, var_0)
    list_1 = [tuple_0, tuple_0, var_0]
    bool_0 = True
    module_0.knapsack(bool_0, list_1)
