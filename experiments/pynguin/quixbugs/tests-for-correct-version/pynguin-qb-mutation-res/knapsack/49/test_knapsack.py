# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {var_0, var_0}
    module_0.knapsack(var_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    module_0.knapsack(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {var_0, tuple_0, var_0, var_0, var_0, var_0}
    dict_0 = {tuple_0: set_0, var_0: set_0, var_0: set_0, tuple_0: var_0}
    module_0.knapsack(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {tuple_0, var_0, var_0, var_0, var_0}
    dict_0 = {tuple_0: set_0, var_0: set_0, var_0: set_0, tuple_0: var_0}
    bool_0 = True
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    bool_0 = True
    int_0 = 3971
    dict_0 = {int_0: int_0, bool_0: tuple_0, bool_0: bool_0, int_0: bool_0}
    tuple_1 = (dict_0,)
    var_0 = module_0.knapsack(bool_0, tuple_1)
    assert var_0 == 0
    module_0.knapsack(tuple_0, bool_0)
