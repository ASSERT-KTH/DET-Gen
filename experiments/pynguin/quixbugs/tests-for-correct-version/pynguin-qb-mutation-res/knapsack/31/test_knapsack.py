# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"m\x13Q\nJ\xb6\xaf\xb55C\x97\xb5"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"\xd6\xc1-\x9a\x85`h\x90\xa5\xe3"
    module_0.knapsack(tuple_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b"\x03\xe4"
    list_0 = [bytes_0, bytes_0, var_0, var_0]
    module_0.knapsack(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x03\xe4"
    bool_0 = True
    list_0 = [bytes_0, bytes_0, bool_0, bool_0]
    module_0.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    var_1 = module_0.knapsack(tuple_0, tuple_0)
    bytes_0 = b"\x03\xe4"
    bool_0 = True
    var_2 = module_0.knapsack(bool_0, tuple_0)
    list_0 = [bytes_0, bytes_0, var_1, var_1]
    int_0 = 326
    module_0.knapsack(int_0, list_0)
