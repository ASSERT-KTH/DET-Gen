# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "JLbnX50"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bytes_0 = b'p\xb9\xbd\x199:\xb4\xa1\x08\x1dH"\xbd'
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    float_0 = 2563.834
    module_0.knapsack(none_type_0, float_0)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {var_0, tuple_0}
    dict_0 = {var_0: tuple_0, var_0: set_0, var_0: set_0}
    var_1 = module_0.knapsack(var_0, dict_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {var_0, tuple_0}
    dict_0 = {var_0: tuple_0, var_0: set_0, var_0: set_0}
    bool_0 = True
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    bool_0 = True
    bytes_0 = b"\x83\x9c"
    tuple_1 = (bytes_0, var_0)
    module_0.knapsack(bool_0, tuple_1)
