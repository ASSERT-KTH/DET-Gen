# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"76\xa2<*^\x1e\x0e\xab\x13"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"3\xbf\xef"
    list_0 = []
    var_0 = module_0.knapsack(bytes_0, list_0)
    assert var_0 == 0
    module_0.knapsack(list_0, bytes_0)


def test_case_2():
    bytes_0 = b"\rB"
    list_0 = [bytes_0]
    bool_0 = True
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\rB"
    list_0 = []
    var_0 = module_0.knapsack(bytes_0, list_0)
    assert var_0 == 0
    list_1 = [bytes_0]
    bool_0 = True
    var_1 = module_0.knapsack(bool_0, list_1)
    assert var_1 == 0
    int_0 = 3798
    var_2 = module_0.knapsack(int_0, list_1)
    assert var_2 == 66
    module_1.object(**var_2)
