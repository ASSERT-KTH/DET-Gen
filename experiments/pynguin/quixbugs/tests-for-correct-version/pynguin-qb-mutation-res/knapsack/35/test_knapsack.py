# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "{Lm/LWDIFf"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    module_0.knapsack(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1112
    module_0.knapsack(int_0, int_0)


def test_case_3():
    str_0 = "h^"
    list_0 = [str_0, str_0, str_0]
    int_0 = -2931
    var_0 = module_0.knapsack(int_0, list_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "h^"
    list_0 = [str_0, str_0, str_0]
    int_0 = 2967
    module_0.knapsack(int_0, list_0)


def test_case_5():
    int_0 = 3169
    bool_0 = True
    set_0 = {bool_0, bool_0, int_0}
    tuple_0 = (set_0,)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 3169


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 3145
    bool_0 = True
    set_0 = {bool_0, bool_0, int_0}
    tuple_0 = (set_0,)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 1
    module_0.knapsack(bool_0, var_0)
