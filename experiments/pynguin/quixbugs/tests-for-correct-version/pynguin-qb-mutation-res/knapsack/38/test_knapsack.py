# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "Ce/\x0b \x0c'!\"6=\\M`:Z$x"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    module_0.knapsack(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    dict_0 = {}
    var_0 = module_0.knapsack(bool_0, dict_0)
    assert var_0 == 0
    bytes_0 = b"]\xc5"
    bool_1 = False
    dict_1 = {var_0: bool_1, var_0: bool_1, var_0: bytes_0, bytes_0: bool_1}
    module_0.knapsack(bool_1, dict_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    tuple_0 = ()
    list_0 = [bool_0, tuple_0]
    int_0 = 114
    list_1 = [list_0, int_0, list_0, tuple_0]
    module_0.knapsack(bool_0, list_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    dict_0 = {}
    var_0 = module_0.knapsack(bool_0, dict_0)
    assert var_0 == 0
    bytes_0 = b"]\xc5"
    dict_1 = {var_0: bool_0, var_0: bool_0, var_0: bytes_0, bytes_0: bool_0}
    module_0.knapsack(bool_0, dict_1)
