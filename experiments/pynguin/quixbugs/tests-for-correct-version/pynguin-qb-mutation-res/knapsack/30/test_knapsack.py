# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x87\xd6\xbb-\x92\x9d\xda\x8a\xcf"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x87\xd6\xbb-\x92\x9d\xda\x8a\xcf"
    set_0 = set()
    var_0 = module_0.knapsack(bytes_0, set_0)
    assert var_0 == 0
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    list_0 = [var_0, var_0]
    dict_0 = {tuple_0: list_0, var_0: list_0}
    module_0.knapsack(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    list_0 = [var_0, var_0]
    dict_0 = {tuple_0: list_0, var_0: list_0}
    bool_0 = True
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    list_0 = [var_0, var_0]
    dict_0 = {
        var_0: var_0,
        tuple_0: tuple_0,
        var_0: var_0,
        tuple_0: list_0,
        var_0: tuple_0,
        var_0: list_0,
    }
    int_0 = 1947
    int_1 = 2597
    dict_1 = {int_1: var_0, tuple_0: tuple_0, tuple_0: tuple_0, int_1: dict_0}
    tuple_1 = (var_0, var_0, tuple_0, list_0)
    dict_2 = {int_1: dict_1, int_0: tuple_1}
    bool_0 = False
    tuple_2 = (dict_1, dict_2, dict_2, bool_0)
    module_0.knapsack(int_1, tuple_2)
