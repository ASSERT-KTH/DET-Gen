# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xf9j\xd8\x11&\xdb\x92\x9d\xb1\xa4\x19\x1f/\x0c\x1f"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    module_0.knapsack(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    complex_0 = -267.7 + 383.0201j
    module_0.knapsack(complex_0, complex_0)


def test_case_3():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    var_0 = module_0.knapsack(object_0, dict_0)
    assert var_0 == 0
    tuple_0 = (var_0, var_0)
    dict_1 = {var_0: var_0, var_0: tuple_0}
    var_1 = module_0.knapsack(var_0, dict_1)
    assert var_1 == 0


def test_case_4():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    var_0 = module_0.knapsack(object_0, dict_0)
    assert var_0 == 0
    tuple_0 = (var_0, var_0)
    dict_1 = {var_0: var_0, var_0: tuple_0}
    bool_0 = True
    var_1 = module_0.knapsack(bool_0, dict_1)
    assert var_1 == 0
