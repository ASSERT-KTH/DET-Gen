# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xa8\xfeN\x83\x02_"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {tuple_0, tuple_0, var_0}
    dict_0 = {var_0: var_0, var_0: set_0}
    var_1 = module_0.knapsack(var_0, dict_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {tuple_0, tuple_0, var_0}
    dict_0 = {var_0: var_0, var_0: set_0}
    bool_0 = True
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 119
    bool_0 = False
    dict_0 = {int_0: int_0, bool_0: bool_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 0
    tuple_1 = ()
    var_1 = module_0.knapsack(tuple_1, tuple_1)
    var_2 = module_0.knapsack(var_1, tuple_1)
    var_3 = module_0.knapsack(tuple_1, tuple_1)
    set_0 = {tuple_1, tuple_1, var_3}
    dict_1 = {var_3: var_3, var_3: set_0}
    var_4 = module_0.knapsack(var_3, dict_1)
    assert var_4 == 0
    bool_1 = True
    var_5 = module_0.knapsack(var_1, tuple_1)
    module_0.knapsack(bool_1, dict_1)
