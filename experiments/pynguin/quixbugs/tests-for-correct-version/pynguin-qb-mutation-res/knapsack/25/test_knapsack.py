# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    str_0 = "Tszdee^8n|*6"
    module_0.knapsack(none_type_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    str_0 = "_Tszdee^8n|*6"
    module_0.knapsack(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.knapsack(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {tuple_0, var_0, var_0, var_0}
    tuple_1 = (set_0, var_0, tuple_0)
    module_0.knapsack(var_0, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    bytes_0 = b";"
    set_0 = {bytes_0, bool_0}
    tuple_0 = (set_0,)
    module_0.knapsack(bool_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"H\xb6\x85\x03\x11\xe9\xad\xe41\xb2\xc5j\x1a"
    int_0 = 321
    set_0 = {bytes_0, int_0}
    tuple_0 = (set_0,)
    module_0.knapsack(int_0, tuple_0)
