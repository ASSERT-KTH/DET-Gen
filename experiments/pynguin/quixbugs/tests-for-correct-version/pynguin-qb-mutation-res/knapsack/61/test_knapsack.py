# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcb\x84\xd8\x8c\\\xb4"
    module_0.knapsack(bytes_0, bytes_0)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    dict_0 = {bytes_0: bytes_0, var_0: bytes_0, var_0: bytes_0, var_0: var_0}
    dict_1 = {bytes_0: var_0, bytes_0: bytes_0, var_0: bytes_0, var_0: dict_0}
    module_0.knapsack(var_0, dict_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    dict_0 = {var_0: bytes_0, bytes_0: bytes_0}
    dict_1 = {var_0: bytes_0, var_0: bytes_0, var_0: bytes_0, var_0: dict_0}
    int_0 = 6031
    module_0.knapsack(int_0, dict_1)


def test_case_4():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    int_0 = 6053
    tuple_0 = (var_0, var_0, var_0, var_0)
    dict_0 = {int_0: bytes_0, int_0: bytes_0, int_0: var_0, var_0: tuple_0}
    tuple_1 = (dict_0,)
    var_1 = module_0.knapsack(int_0, tuple_1)
    assert var_1 == 0
