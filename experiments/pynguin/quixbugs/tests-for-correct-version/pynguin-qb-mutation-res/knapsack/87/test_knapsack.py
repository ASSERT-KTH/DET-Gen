# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "vuy?'# .e|G'FxK%Zh"
    set_0 = {str_0}
    module_0.knapsack(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    module_0.knapsack(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.knapsack(bool_0, bool_0)


def test_case_3():
    list_0 = []
    str_0 = "2[)\\>lI:pFaH[g'Gd2ES"
    var_0 = module_0.knapsack(str_0, list_0)
    assert var_0 == 0
    tuple_0 = (var_0, list_0)
    list_1 = [tuple_0]
    var_1 = module_0.knapsack(var_0, list_1)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    str_0 = "2[)\\>lI:pFaH[g'Gd2ES"
    var_0 = module_0.knapsack(str_0, list_0)
    assert var_0 == 0
    tuple_0 = (var_0, list_0)
    list_1 = [tuple_0]
    bool_0 = True
    module_0.knapsack(bool_0, list_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    bytes_0 = b"\x0bvs\xc4\xf1\x87\x0e"
    bool_0 = True
    bytes_1 = b"\x97e"
    tuple_0 = (bytes_1,)
    var_0 = module_0.knapsack(bool_0, tuple_0)
    assert var_0 == 0
    tuple_1 = (list_0, bytes_0, list_0)
    module_0.knapsack(tuple_1, bytes_0)
