# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"Q&\xdc+h\xd5\x10\xac\xbb\x92u\xb3\xe6\xa3\xd4\x9e\xbb"
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    str_0 = "k8:uA s#xk+@d`jGoxT+"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -382
    module_0.knapsack(int_0, int_0)


def test_case_3():
    str_0 = "@L"
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    bool_0 = False
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "/L"
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    bool_0 = True
    module_0.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 469
    bytes_0 = b"~\x88"
    tuple_0 = (bytes_0,)
    var_0 = module_0.knapsack(int_0, tuple_0)
    assert var_0 == 136
    str_0 = "&s"
    none_type_0 = None
    module_0.knapsack(str_0, none_type_0)
