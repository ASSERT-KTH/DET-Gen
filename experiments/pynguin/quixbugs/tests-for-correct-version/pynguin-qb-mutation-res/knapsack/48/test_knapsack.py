# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "j.#H"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    module_0.knapsack(list_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -677.964116
    module_0.knapsack(float_0, float_0)


def test_case_3():
    str_0 = "AV"
    list_0 = [str_0]
    bool_0 = False
    var_0 = module_0.knapsack(bool_0, list_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "AV"
    list_0 = [str_0]
    bool_0 = True
    module_0.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ""
    bool_0 = True
    dict_0 = {bool_0: str_0, str_0: str_0}
    list_0 = [dict_0]
    module_0.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    var_1 = module_0.knapsack(var_0, str_0)
    bool_0 = True
    float_0 = 3173.809717
    set_0 = {bool_0, bool_0, float_0}
    bytes_0 = b"XT"
    int_0 = 291
    tuple_0 = (bytes_0, bytes_0, set_0, int_0)
    module_0.knapsack(bool_0, tuple_0)
