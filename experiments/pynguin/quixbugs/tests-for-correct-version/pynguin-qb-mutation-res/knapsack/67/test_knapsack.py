# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    str_0 = "*km;|B[ZDm:k{kN"
    module_0.knapsack(bool_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    str_0 = "TqZ/5NL'3&}Y71W\"<-"
    module_0.knapsack(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -2787.95
    module_0.knapsack(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, tuple_0)
    assert var_0 == 0
    set_0 = {var_0, var_0, var_0, tuple_0}
    list_0 = [set_0, var_0]
    module_0.knapsack(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    object_0 = module_1.object()
    dict_0 = {object_0: bool_0, bool_0: bool_0, bool_0: object_0}
    list_0 = [dict_0, dict_0]
    module_0.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    object_0 = module_1.object()
    dict_0 = {bool_0: bool_0, object_0: object_0}
    list_0 = [dict_0, dict_0]
    module_0.knapsack(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    object_0 = module_1.object()
    bool_1 = True
    bytes_0 = b"_4"
    tuple_0 = (bytes_0, bool_0, bool_1)
    module_0.knapsack(bool_1, tuple_0)
