# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    bytes_0 = b"\xad/s\x94\xecH\x81\x1b\x01\x80m\xce\x14G"
    module_0.knapsack(bytes_0, bytes_0)


def test_case_1():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 526
    module_0.knapsack(int_0, int_0)


def test_case_3():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    list_0 = [var_0, var_0]
    list_1 = [list_0, list_0, list_0, list_0]
    bool_0 = True
    var_1 = module_0.knapsack(bool_0, list_1)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    var_1 = module_0.knapsack(str_0, str_0)
    var_2 = module_0.knapsack(str_0, str_0)
    list_0 = [var_2, var_2]
    int_0 = 1087
    list_1 = [int_0, var_0]
    list_2 = [list_1]
    var_3 = module_0.knapsack(int_0, list_2)
    assert var_3 == 0
    list_3 = [list_0, var_2, var_2, var_2]
    var_4 = module_0.knapsack(str_0, str_0)
    module_0.knapsack(list_3, var_0)
