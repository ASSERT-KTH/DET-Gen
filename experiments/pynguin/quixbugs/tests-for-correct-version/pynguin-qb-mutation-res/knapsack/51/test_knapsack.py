# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'\n\xdd\xc3\x8cS\x7f\x9c3"\xfb9\xf5=\r\xa2Ni'
    module_0.knapsack(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ""
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    bool_0 = True
    module_0.knapsack(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -1731.4703
    module_0.knapsack(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ""
    bytes_0 = b"2\x11"
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    dict_0 = {
        var_0: bytes_0,
        bytes_0: str_0,
        var_0: bytes_0,
        bytes_0: var_0,
        bytes_0: var_0,
    }
    module_0.knapsack(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ""
    bytes_0 = b"2\x11"
    var_0 = module_0.knapsack(str_0, str_0)
    assert var_0 == 0
    dict_0 = {
        var_0: bytes_0,
        bytes_0: str_0,
        var_0: bytes_0,
        bytes_0: var_0,
        bytes_0: var_0,
    }
    bool_0 = True
    module_0.knapsack(bool_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ""
    none_type_0 = None
    var_0 = module_0.knapsack(none_type_0, str_0)
    assert var_0 == 0
    var_1 = module_0.knapsack(str_0, str_0)
    bool_0 = True
    set_0 = {var_0, none_type_0}
    str_1 = "hD}#+P\njg^T9W8@Qu=P"
    tuple_0 = (var_0, str_1, var_1)
    list_0 = [set_0, var_0, bool_0, tuple_0]
    module_0.knapsack(bool_0, list_0)
