# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b""
    bytes_1 = b"k\t\xceibI\xf7O\xee\x02\xadde\xcc\xf9\xd2_\x81\xc2"
    var_0 = module_0.knapsack(bytes_1, bytes_0)
    assert var_0 == 0
    module_0.knapsack(var_0, bytes_1)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    set_0 = {var_0, bytes_0, bytes_0, bytes_0, var_0, bytes_0, var_0}
    list_0 = [set_0]
    var_1 = module_0.knapsack(var_0, list_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b""
    var_0 = module_0.knapsack(bytes_0, bytes_0)
    assert var_0 == 0
    set_0 = {var_0, bytes_0, bytes_0, bytes_0, var_0, bytes_0, var_0}
    list_0 = [set_0]
    int_0 = 4786
    module_0.knapsack(int_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    tuple_0 = ()
    var_0 = module_0.knapsack(tuple_0, bytes_0)
    assert var_0 == 0
    var_1 = module_0.knapsack(bytes_0, bytes_0)
    set_0 = {var_1, bytes_0, bytes_0, bytes_0, var_1, bytes_0, var_1}
    list_0 = [set_0]
    var_2 = module_0.knapsack(var_1, list_0)
    assert var_2 == 0
    int_0 = 4786
    bytes_1 = b"\xc7;"
    tuple_1 = (bytes_1, var_2, bytes_0)
    module_0.knapsack(int_0, tuple_1)
