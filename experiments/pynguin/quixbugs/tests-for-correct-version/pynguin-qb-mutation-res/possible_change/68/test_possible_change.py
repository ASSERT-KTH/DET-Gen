# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    var_0 = module_0.possible_change(none_type_0, bool_1)
    assert var_0 == 1
    var_1 = module_0.possible_change(none_type_0, bool_1)
    assert var_1 == 1
    module_0.possible_change(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    module_0.possible_change(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2111
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    int_1 = 26
    module_0.possible_change(int_1, int_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    bool_1 = False
    var_1 = module_0.possible_change(bool_1, var_0)
    assert var_1 == 0
    var_2 = module_0.possible_change(var_1, var_0)
    assert var_2 == 0
    var_3 = module_0.possible_change(var_2, var_2)
    assert var_3 == 1
    none_type_0 = None
    dict_0 = {none_type_0: var_1, var_0: none_type_0, var_1: var_0}
    var_4 = module_0.possible_change(dict_0, bool_1)
    assert var_4 == 1
    bool_2 = True
    var_5 = module_0.possible_change(var_1, bool_2)
    module_0.possible_change(bool_1, none_type_0)
