# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    bool_1 = False
    var_1 = module_0.possible_change(bool_1, bool_1)
    assert var_1 == 1
    float_0 = 2933.179
    module_0.possible_change(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xdf\xc8\xcf$\x8a@\xe1d\xb0%M'\xd7b,\xc1"
    module_0.possible_change(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -309
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(int_0, int_0)
    assert var_1 == 0
    set_0 = {int_0, int_0}
    module_0.possible_change(var_1, set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 3050
    module_0.possible_change(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1450
    none_type_0 = None
    var_0 = module_0.possible_change(none_type_0, int_0)
    assert var_0 == 0
    module_0.possible_change(int_0, int_0)
