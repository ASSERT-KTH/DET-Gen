# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    bool_0 = False
    var_0 = module_0.possible_change(tuple_0, bool_0)
    assert var_0 == 1
    module_0.possible_change(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = 1927.16195 + 2378j
    module_0.possible_change(complex_0, complex_0)


def test_case_2():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.possible_change(bool_0, bool_0)
    assert var_1 == 1
    int_0 = -1237
    var_2 = module_0.possible_change(int_0, int_0)
    assert var_2 == 0
    var_3 = module_0.possible_change(int_0, int_0)
    assert var_3 == 0
    var_4 = module_0.possible_change(var_3, bool_0)
    assert var_4 == 1
    var_5 = module_0.possible_change(int_0, var_2)
    assert var_5 == 1


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 3465
    module_0.possible_change(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    bool_0 = True
    var_0 = module_0.possible_change(tuple_0, bool_0)
    assert var_0 == 0
    list_0 = []
    module_0.possible_change(list_0, list_0)
