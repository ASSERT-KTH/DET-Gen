# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    bool_0 = False
    int_0 = -4051
    var_0 = module_0.possible_change(dict_0, bool_0)
    assert var_0 == 1
    tuple_0 = (bool_0, int_0)
    module_0.possible_change(dict_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1281
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.possible_change(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 33
    module_0.possible_change(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 2353
    none_type_0 = None
    var_0 = module_0.possible_change(none_type_0, int_0)
    assert var_0 == 0
    none_type_1 = None
    var_1 = module_0.possible_change(none_type_1, int_0)
    assert var_1 == 0
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.possible_change(dict_0, dict_0)
