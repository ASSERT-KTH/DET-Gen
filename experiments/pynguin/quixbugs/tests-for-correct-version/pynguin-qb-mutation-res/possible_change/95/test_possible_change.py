# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    module_0.possible_change(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -905
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(int_0, var_0)
    assert var_1 == 1
    var_2 = module_0.possible_change(var_0, int_0)
    assert var_2 == 0
    var_3 = module_0.possible_change(int_0, int_0)
    assert var_3 == 0
    bool_0 = True
    module_0.possible_change(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 547
    module_0.possible_change(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x7fj]\x01\x7f\xc1\x1d\xd2\xa0\x16\xf1\xd5\x0b\x13\xb4\xa2r\xe6\xaa\xf2"
    none_type_0 = None
    bool_0 = False
    var_0 = module_0.possible_change(none_type_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.possible_change(bytes_0, var_0)
    assert var_1 == 1
    module_0.possible_change(bytes_0, none_type_0)
