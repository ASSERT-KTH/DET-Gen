# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "s.o"
    module_0.possible_change(str_0, str_0)


def test_case_2():
    float_0 = -482.380423
    var_0 = module_0.possible_change(float_0, float_0)
    assert var_0 == 0
    var_1 = module_0.possible_change(float_0, float_0)
    assert var_1 == 0
    var_2 = module_0.possible_change(float_0, float_0)
    assert var_2 == 0
    var_3 = module_0.possible_change(float_0, float_0)
    assert var_3 == 0
    var_4 = module_0.possible_change(var_3, var_3)
    assert var_4 == 1
    var_5 = module_0.possible_change(var_4, float_0)
    assert var_5 == 0
    var_6 = module_0.possible_change(var_3, var_4)
    assert var_6 == 0
    var_7 = module_0.possible_change(var_3, float_0)
    assert var_7 == 0
    var_8 = module_0.possible_change(var_5, var_7)
    assert var_8 == 1
    var_9 = module_0.possible_change(var_7, var_3)
    assert var_9 == 1
    var_10 = module_0.possible_change(var_3, float_0)
    assert var_10 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 304
    module_0.possible_change(int_0, int_0)
