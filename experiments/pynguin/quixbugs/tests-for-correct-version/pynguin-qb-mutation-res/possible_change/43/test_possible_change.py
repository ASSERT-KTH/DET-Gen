# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


def test_case_0():
    str_0 = 'm\tk30:S:%E_q"ud:z'
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.possible_change(str_0, bool_0)
    assert var_1 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = -1135.575283
    list_0 = [float_0, float_0, float_0, float_0]
    none_type_0 = None
    module_0.possible_change(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2178
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    module_0.possible_change(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.possible_change(var_0, bool_0)
    assert var_1 == 1
    var_2 = module_0.possible_change(bool_0, var_0)
    assert var_2 == 0
    var_3 = module_0.possible_change(var_0, var_2)
    assert var_3 == 1
    int_0 = 3617
    var_4 = module_0.possible_change(var_1, var_2)
    assert var_4 == 1
    var_5 = module_0.possible_change(bool_0, var_2)
    assert var_5 == 1
    list_0 = [var_3, int_0]
    module_0.possible_change(list_0, list_0)
