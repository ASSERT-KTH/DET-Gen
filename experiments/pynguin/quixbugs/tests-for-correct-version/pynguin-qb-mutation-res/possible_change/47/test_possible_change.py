# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xc3mN7XaL\xcf\xa8<\xbd\x7f\xc2"
    module_0.possible_change(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1947
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    object_0 = module_1.object()
    bool_0 = False
    var_1 = module_0.possible_change(bool_0, var_0)
    assert var_1 == 1
    module_0.possible_change(int_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xc2\xa2\xe7Z\x18L"
    bool_0 = True
    tuple_0 = (bytes_0, bool_0)
    none_type_0 = None
    var_0 = module_0.possible_change(none_type_0, bool_0)
    assert var_0 == 0
    module_0.possible_change(tuple_0, tuple_0)
