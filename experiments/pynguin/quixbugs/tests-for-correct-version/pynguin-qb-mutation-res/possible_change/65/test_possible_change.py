# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


def test_case_0():
    bool_0 = False
    none_type_0 = None
    var_0 = module_0.possible_change(none_type_0, bool_0)
    assert var_0 == 1
    set_0 = {bool_0, bool_0, bool_0, var_0}
    var_1 = module_0.possible_change(set_0, bool_0)
    assert var_1 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.possible_change(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -531
    var_0 = module_0.possible_change(int_0, int_0)
    assert var_0 == 0
    dict_0 = {}
    module_0.possible_change(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 1360
    module_0.possible_change(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 1763.720059366745
    bool_0 = False
    bool_1 = False
    var_0 = module_0.possible_change(bool_0, bool_1)
    assert var_0 == 1
    var_1 = module_0.possible_change(float_0, bool_0)
    assert var_1 == 1
    float_1 = -2167.259075
    var_2 = module_0.possible_change(var_1, bool_0)
    assert var_2 == 1
    var_3 = module_0.possible_change(bool_1, float_0)
    assert var_3 == 0
    str_0 = "`\\L)^-IaEDc/||_#"
    var_4 = module_0.possible_change(str_0, bool_1)
    assert var_4 == 1
    module_0.possible_change(float_1, var_1)
