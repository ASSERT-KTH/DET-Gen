# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import possible_change as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.possible_change(bool_0, bool_0)
    assert var_0 == 1
    bool_1 = False
    var_1 = module_0.possible_change(bool_1, bool_1)
    assert var_1 == 1
    bool_2 = False
    bytes_0 = b""
    module_0.possible_change(bool_2, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"|\xe9h^\xde\xf6\x1a\xe3\x9f\x80\x80\xa8\xae\xb1"
    none_type_0 = None
    module_0.possible_change(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xc0&"
    int_0 = 1758
    var_0 = module_0.possible_change(bytes_0, int_0)
    assert var_0 == 1
    module_0.possible_change(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 3688
    module_0.possible_change(int_0, int_0)
