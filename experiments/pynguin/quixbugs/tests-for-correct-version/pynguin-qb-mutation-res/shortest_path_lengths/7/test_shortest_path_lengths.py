# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -2374
    dict_0 = {int_0: int_0}
    var_0 = module_0.shortest_path_lengths(int_0, dict_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    module_0.shortest_path_lengths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 67
    dict_0 = {int_0: int_0}
    var_0 = module_0.shortest_path_lengths(int_0, dict_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 4490
    int_1 = -2168
    module_0.shortest_path_lengths(int_1, int_1)
