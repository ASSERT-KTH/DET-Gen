# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_1, bool_1: bool_1}
    var_0 = module_0.shortest_path_lengths(bool_1, dict_0)
    var_1 = module_0.shortest_path_lengths(bool_0, dict_0)
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"rL\xf5\x18\xec\x0c\xe3"
    int_0 = -424
    module_0.shortest_path_lengths(int_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.shortest_path_lengths(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_1, bool_1: bool_1}
    var_0 = module_0.shortest_path_lengths(bool_0, dict_0)
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    set_0 = set()
    int_0 = 46
    var_0 = module_0.shortest_path_lengths(int_0, set_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 2116
    module_0.shortest_path_lengths(set_0, var_0)
