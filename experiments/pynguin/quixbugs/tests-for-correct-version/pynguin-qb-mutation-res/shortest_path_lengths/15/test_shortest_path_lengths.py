# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ";AZ"
    module_0.shortest_path_lengths(str_0, str_0)


def test_case_3():
    bool_0 = False
    str_0 = ""
    var_0 = module_0.shortest_path_lengths(bool_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    str_0 = ""
    var_0 = module_0.shortest_path_lengths(bool_0, str_0)
    var_0.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    str_0 = ""
    int_0 = 21
    var_0 = module_0.shortest_path_lengths(int_0, str_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 441
    var_1 = module_0.shortest_path_lengths(bool_0, var_0)
    assert len(var_1) == 441
    var_0.successors()
