# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0
import collections as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -36
    module_0.shortest_path_lengths(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    set_0 = set()
    module_0.shortest_path_lengths(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.shortest_path_lengths(bool_0, dict_0)
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 70
    str_0 = "INX\x0cP\t!E{w"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    defaultdict_0 = module_1.defaultdict(**dict_0)
    var_0 = module_0.shortest_path_lengths(int_0, defaultdict_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 4901
    none_type_1 = None
    module_0.shortest_path_lengths(int_0, none_type_1)
