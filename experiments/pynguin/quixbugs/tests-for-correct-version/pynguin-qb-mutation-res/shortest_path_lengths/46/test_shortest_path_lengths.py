# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -2980
    dict_0 = {int_0: int_0}
    var_0 = module_0.shortest_path_lengths(int_0, dict_0)
    var_0.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2964
    dict_0 = {int_0: int_0}
    bool_0 = True
    var_0 = module_0.shortest_path_lengths(bool_0, dict_0)
    var_0.successors()


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 82
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.shortest_path_lengths(int_0, dict_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 6725
    node_0 = module_1.Node(incoming_nodes=var_0)
    assert len(node_0.incoming_nodes) == 6725
    node_0.predecessors()
