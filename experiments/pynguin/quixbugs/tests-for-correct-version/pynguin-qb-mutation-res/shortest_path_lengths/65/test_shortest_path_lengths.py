# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.shortest_path_lengths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "|j:rQjC@;#{@;t2N+cU"
    module_0.shortest_path_lengths(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    dict_0 = {}
    bool_0 = False
    var_0 = module_0.shortest_path_lengths(bool_0, dict_0)
    module_0.shortest_path_lengths(dict_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    dict_0 = {}
    bool_0 = False
    var_0 = module_0.shortest_path_lengths(bool_0, dict_0)
    bool_1 = True
    var_1 = module_0.shortest_path_lengths(bool_1, dict_0)
    module_0.shortest_path_lengths(var_0, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 42
    str_0 = "p?pg"
    dict_0 = {int_0: int_0, int_0: str_0, str_0: int_0}
    var_0 = module_0.shortest_path_lengths(int_0, dict_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 1766
    module_0.shortest_path_lengths(str_0, str_0)
