# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_0, bool_1, bool_0, bool_1]
    var_0 = module_0.kth(list_0, bool_1)
    assert var_0 is False
    dict_0 = {}
    module_0.kth(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is False
    dict_0 = {}
    module_0.kth(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "-;&4fl^ }ltK]t"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 739
    module_0.kth(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'\xa7.\xd6\x8a\xae&@Q\xc7\xa3~y\xe6"\x0f\x91\xbf\x9f'
    bool_0 = False
    var_0 = module_0.kth(bytes_0, bool_0)
    assert var_0 == 15
    var_1 = module_0.kth(bytes_0, var_0)
    assert var_1 == 199
    module_0.kth(var_0, bool_0)
