# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is False
    module_0.kth(var_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"R\xba9{\x04\xbb,Dc8\x88j\xa4"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.kth(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_1, bool_1, bool_0]
    var_0 = module_0.kth(list_0, bool_1)
    assert var_0 is True
    str_0 = "Ls"
    var_1 = module_0.kth(str_0, var_0)
    assert var_1 == "s"
    none_type_0 = None
    module_0.kth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_0]
    var_0 = module_0.kth(list_0, bool_1)
    assert var_0 is False
    tuple_0 = (bool_0, bool_1, bool_0)
    str_0 = "Ls"
    var_1 = module_0.kth(tuple_0, bool_1)
    assert var_1 is False
    var_2 = module_0.kth(str_0, var_0)
    assert var_2 == "L"
    var_3 = module_0.kth(str_0, var_0)
    assert var_3 == "L"
    module_0.kth(tuple_0, tuple_0)
