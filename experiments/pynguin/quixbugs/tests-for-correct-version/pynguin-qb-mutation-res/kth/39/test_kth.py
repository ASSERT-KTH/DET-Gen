# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xb9\xa6"
    list_0 = [bytes_0, bytes_0]
    none_type_0 = None
    module_0.kth(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.kth(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xee\xfe\x8f"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb9\xa6"
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 == b"\xb9\xa6"
    module_0.kth(list_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xb9\xa6"
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 == b"\xb9\xa6"
    var_1 = module_0.kth(bytes_0, bool_0)
    assert var_1 == 185
    module_0.kth(var_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xb9\xa6"
    list_0 = [bytes_0, bytes_0]
    bool_0 = False
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 == b"\xb9\xa6"
    var_1 = module_0.kth(bytes_0, bool_0)
    assert var_1 == 166
    module_0.kth(var_0, var_1)
