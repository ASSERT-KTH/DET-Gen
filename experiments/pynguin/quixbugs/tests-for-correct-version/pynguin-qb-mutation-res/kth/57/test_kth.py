# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.kth(tuple_0, bool_0)
    assert var_0 is False
    module_0.kth(var_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "\njMrZb"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    tuple_0 = (bool_0,)
    module_0.kth(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x91}@3O\xeb\xf6\xe0O\x9f\xcc%\xad\x8f\xd6>"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.kth(tuple_0, bool_0)
    assert var_0 is False
    var_1 = module_1.object()
    list_0 = [tuple_0]
    float_0 = -2804.0114
    module_0.kth(list_0, float_0)
