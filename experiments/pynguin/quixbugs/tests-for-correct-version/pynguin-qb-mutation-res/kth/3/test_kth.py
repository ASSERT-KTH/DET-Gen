# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -874
    bytes_0 = b"\x9a\xf8\xb8\xdb\xfa\xef;\xe9;\x88\xf8j"
    module_0.kth(bytes_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = True
    var_0 = module_0.kth(list_0, bool_1)
    assert var_0 is False
    bytes_0 = b")N\x1c\x934\xfac\xc9&\x068"
    var_1 = module_0.kth(bytes_0, var_0)
    assert var_1 == 6
    bool_2 = True
    var_2 = module_0.kth(bytes_0, bool_2)
    assert var_2 == 28
    bool_3 = False
    module_0.kth(bool_3, var_2)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'"\xa8\x99\xef\xffcw\x04\x97w\x1d\xa7\x0f'
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    bytes_0 = b""
    module_0.kth(none_type_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bytes_0 = b")N\x1c\x934\xfac\xc9&\x068"
    var_0 = module_0.kth(bytes_0, bool_0)
    assert var_0 == 6
    module_0.kth(list_0, var_0)
