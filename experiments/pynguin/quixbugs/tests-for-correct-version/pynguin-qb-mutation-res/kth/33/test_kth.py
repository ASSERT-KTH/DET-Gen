# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is True
    int_0 = -3271
    module_0.kth(list_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 19
    int_1 = 1234
    tuple_0 = (int_0, int_1)
    module_0.kth(tuple_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -2019.076
    list_0 = [float_0, float_0, float_0, float_0]
    none_type_0 = None
    module_0.kth(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = False
    var_0 = module_0.kth(list_0, bool_1)
    assert var_0 is True
    module_0.kth(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x98\xf3XxC\xe8\xd6\xf7$/\xc8\x83\xbd"
    module_0.kth(bytes_0, bytes_0)
