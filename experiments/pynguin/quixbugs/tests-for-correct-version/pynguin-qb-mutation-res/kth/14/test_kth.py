# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0]
    tuple_0 = (list_0, list_0)
    module_0.kth(tuple_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.kth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x1d#\xf1\x10\x15\xab\xf94\x8c\xc9\xcf>"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.kth(tuple_0, bool_0)
    assert var_0 is False
    module_0.kth(var_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    tuple_0 = (bool_0,)
    module_0.kth(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -373
    list_0 = [int_0]
    module_0.kth(list_0, int_0)
