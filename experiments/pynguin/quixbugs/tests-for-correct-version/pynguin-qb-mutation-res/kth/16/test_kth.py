# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import kth as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    tuple_0 = (list_0,)
    int_0 = -1009
    module_1.kth(tuple_0, int_0)


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_1.kth(dict_0, bool_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_0.object()
    module_1.kth(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"a\x98B.\t\xcf\xb1\xb5r\xd5t\x80/\x1d\x8f\x97\xdb"
    module_1.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_1.kth(dict_0, bool_0)
    assert var_0 is False
    str_0 = "&<)LD{"
    var_1 = module_1.kth(str_0, var_0)
    assert var_1 == "&"
    module_1.kth(dict_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    bytes_0 = b"\\\xe6"
    var_0 = module_1.kth(bytes_0, bool_0)
    assert var_0 == 230
    module_1.kth(bool_0, bool_0)
