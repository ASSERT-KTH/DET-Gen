# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is True
    var_1 = module_0.kth(list_0, bool_0)
    none_type_0 = None
    module_0.kth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "y"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.kth(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "5\x0bR^U8Al*[2>WA\r@OH,"
    module_0.kth(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"T\x8f\x9db"
    module_0.kth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.kth(list_0, bool_0)
    assert var_0 is True
    str_0 = "S$)\x0bQ=4~QtU(\\+N"
    var_1 = module_0.kth(str_0, var_0)
    assert var_1 == "$"
    dict_0 = {}
    module_0.kth(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    list_0 = [bool_0]
    module_0.kth(list_0, bool_0)
