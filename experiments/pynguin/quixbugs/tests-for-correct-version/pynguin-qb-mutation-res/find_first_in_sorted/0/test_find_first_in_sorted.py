# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xc73A\xd6\x08\x17\xf7\xf1"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(tuple_0, none_type_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -71
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 1997
    tuple_0 = (int_0, int_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(int_0, var_0)


def test_case_4():
    str_0 = 'EjR?mg["ZY{*=w\x0c~5f'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -948
    tuple_0 = ()
    tuple_1 = (int_0,)
    tuple_2 = (int_0, tuple_0, tuple_1)
    var_0 = module_0.find_first_in_sorted(tuple_2, tuple_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(var_0, tuple_1)
