# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "?"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -667
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "?"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_0.find_first_in_sorted(list_0, none_type_0)


def test_case_5():
    str_0 = "l;n\t5,z~pQKFV"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    int_0 = 1925
    str_0 = " "
    tuple_0 = (bool_0, int_0, str_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(var_0, var_0)
