# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    bytes_0 = b"c\xc8\x04Aw_*+\xe9H\xa6B\x0b\x9d\xf9\r\x99"
    tuple_0 = (bool_0, bytes_0)
    module_0.find_first_in_sorted(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ")NC"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    list_0 = [none_type_0]
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == 0
    var_1 = module_1.object()
    module_0.find_first_in_sorted(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    str_0 = ")C"
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    list_1 = [var_1, var_0]
    var_2 = module_0.find_first_in_sorted(list_1, var_1)
    assert var_2 == 0
    module_0.find_first_in_sorted(var_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    list_0 = []
    str_0 = ")C"
    list_1 = [list_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_1, str_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(list_1, list_0)
