# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "G"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    object_0 = module_1.object(*list_0)
    module_0.find_first_in_sorted(object_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1512
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "G"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ":\x0cz])&,S}xoZ"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    str_0 = ""
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    int_0 = 956
    list_0 = [var_1, bool_0, int_0]
    var_2 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_2 == 1
    module_0.find_first_in_sorted(bool_0, var_1)
