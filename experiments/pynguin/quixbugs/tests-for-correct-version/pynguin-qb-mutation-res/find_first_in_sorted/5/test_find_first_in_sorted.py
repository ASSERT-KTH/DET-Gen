# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '\x0bP8"j'
    none_type_0 = None
    module_0.find_first_in_sorted(str_0, none_type_0)


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(tuple_0, none_type_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    tuple_0 = (set_0, set_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, set_0)
    assert var_1 == 0
    var_2 = module_0.find_first_in_sorted(set_0, tuple_0)
    assert var_2 == -1
    module_0.find_first_in_sorted(var_0, var_0)


def test_case_4():
    str_0 = '\x0bP8"j'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    bytes_0 = b"\x84_\xfe\r\xfbaj\x95\x17'\xbe\t\xb9\xef\xf8s\x0e\x8b\xa9G"
    set_0 = set()
    tuple_0 = (bool_0, bytes_0, set_0)
    str_0 = "FB&jW*2\nw&}?Y'oJ-3l"
    tuple_1 = (tuple_0, str_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, str_0)
    assert var_0 == 1
    complex_0 = 2403.83467 - 2383.7294j
    module_0.find_first_in_sorted(complex_0, complex_0)
