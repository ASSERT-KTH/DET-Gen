# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b")b\xb9"
    str_0 = "2@\\BNri+{[=5)b%_"
    module_0.find_first_in_sorted(str_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "lwCvSa-p<g@8M\x0b "
    str_1 = ""
    var_0 = module_0.find_first_in_sorted(str_0, str_1)
    assert var_0 == -1
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "I\\+.l#c3Q%ca\"_'vx<\r"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = 691
    module_0.find_first_in_sorted(var_0, int_0)


def test_case_6():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_1 == -1
    bool_0 = False
    tuple_0 = (var_0, bool_0, var_0, var_0)
    var_2 = module_0.find_first_in_sorted(tuple_0, var_0)
    assert var_2 == 2
