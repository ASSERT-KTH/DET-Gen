# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"9\xe28i#\xcf\xb1\xcf"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(dict_0, none_type_0)
    assert var_0 == -1
    str_0 = "S1\nr]mV9D{bi"
    var_1 = module_0.find_first_in_sorted(dict_0, none_type_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(str_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "?D;2*[;/,gPn>^I="
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_1.object(*var_0)


def test_case_4():
    str_0 = "*"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "*"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    set_0 = {str_0, var_0}
    list_0 = [set_0, set_0, str_0, set_0]
    var_1 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_1 == 2
    module_0.find_first_in_sorted(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = ">+p>_6meZ"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "@ZKY7w_UDZ4e9Rrm"
    var_1 = module_0.find_first_in_sorted(str_1, str_1)
    assert var_1 == -1
    list_0 = [str_1, str_1, str_1, str_1]
    var_2 = module_0.find_first_in_sorted(list_0, str_1)
    assert var_2 == 0
    var_3 = module_0.find_first_in_sorted(str_1, str_1)
    assert var_3 == -1
    module_0.find_first_in_sorted(var_3, var_3)
