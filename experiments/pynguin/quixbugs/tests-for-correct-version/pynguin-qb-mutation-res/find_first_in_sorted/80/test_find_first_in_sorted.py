# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcb1\x18\xc5y\r\x04\x11a\x9f\xc3"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    object_0 = module_1.object()
    var_1 = module_0.find_first_in_sorted(tuple_0, object_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(tuple_0, object_0)
    assert var_2 == -1
    var_3 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_3 == -1
    var_4 = module_0.find_first_in_sorted(tuple_0, var_3)
    assert var_4 == -1
    module_0.find_first_in_sorted(var_4, var_4)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_3():
    str_0 = "@~nK|0)v"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x96\x17\x1f\xa0\xb0T\x04+\x9d"
    float_0 = -294.070934111891
    tuple_0 = (bytes_0, float_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, float_0)
    assert var_0 == 1
    var_1 = module_0.find_first_in_sorted(bytes_0, float_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = -292.87
    tuple_0 = (float_0, float_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, float_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, float_0)
