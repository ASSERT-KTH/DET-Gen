# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "r|vYd~=K[l36=3TTdA^"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.find_first_in_sorted(bytes_0, bytes_0)
    assert var_0 == -1
    str_0 = ",iPvvyTYn8WX\r:ZdHE_A"
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    object_0 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "5?kIW%v\nw"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "#"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_1.object(**var_0)


def test_case_4():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(bytes_0, bytes_0)
    assert var_1 == -1
    str_0 = ",iPvvyTYn8WX\r:ZdHE_A"
    var_2 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_2 == -1
    object_0 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0]
    tuple_0 = (bool_0, list_0)
    bytes_0 = b"Y"
    tuple_1 = (bool_0, tuple_0, bytes_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, tuple_0)
    assert var_0 == 1
    bytes_1 = b"\x1a"
    tuple_2 = (bytes_1, bytes_1, bytes_1)
    var_1 = module_0.find_first_in_sorted(tuple_2, bytes_1)
    assert var_1 == 0
    module_0.find_first_in_sorted(bytes_1, bytes_1)
