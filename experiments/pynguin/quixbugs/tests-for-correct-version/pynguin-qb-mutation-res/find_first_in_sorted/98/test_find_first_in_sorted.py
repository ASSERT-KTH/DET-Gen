# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "ORjP\x0b\x0c.\rN9Xs6X6"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = False
    module_0.find_first_in_sorted(var_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    set_0 = {bool_0}
    tuple_0 = (bool_0, bool_0, set_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(set_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -1580
    dict_0 = {int_0: int_0}
    str_0 = "]#fr^L9 ("
    tuple_0 = (dict_0, str_0, int_0, dict_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_0 == 2
    list_0 = []
    none_type_0 = None
    var_1 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_2 == -1
    module_0.find_first_in_sorted(none_type_0, list_0)
