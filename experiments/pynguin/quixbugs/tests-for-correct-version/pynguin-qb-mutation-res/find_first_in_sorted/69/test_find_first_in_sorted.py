# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    float_0 = 850.62795
    module_0.find_first_in_sorted(var_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    str_0 = "`Cf7e->s(uzg',t-F__T"
    module_0.find_first_in_sorted(str_0, bool_0)


def test_case_4():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    str_0 = "`Cf7e->s(uzg',t-F__T"
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_1 == 0
    dict_0 = {tuple_0: var_0, var_0: var_1, tuple_0: tuple_0, var_1: var_1}
    tuple_1 = (dict_0, var_1)
    var_2 = module_0.find_first_in_sorted(tuple_1, var_0)
    assert var_2 == 1
    module_0.find_first_in_sorted(dict_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"O\xbd&3\x9aH\x8b\x83+R(\xe4i\xfd\x9fj\x80\x7f\xd0e"
    bool_0 = True
    list_0 = [bytes_0, bool_0, bool_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 1
    bool_1 = True
    module_0.find_first_in_sorted(bool_1, bool_1)
