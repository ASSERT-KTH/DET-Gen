# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "\\ZT%Z|&`JR"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    bool_0 = True
    module_0.find_first_in_sorted(var_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


def test_case_3():
    str_0 = "o"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    bytes_0 = b"/oJ\x99\xf4"
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bytes_0,
        bool_0: bytes_0,
        bool_0: bytes_0,
        bytes_0: bool_0,
    }
    module_0.find_first_in_sorted(dict_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = -53.883562
    str_0 = "C$/4&\nP"
    bool_0 = False
    tuple_0 = (float_0, str_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 1
    none_type_0 = None
    module_0.find_first_in_sorted(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    float_0 = -2430.563
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, float_0)
