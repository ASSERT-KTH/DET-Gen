# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = 'vXv>\t|#LOla6!Tp"/<l'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(set_0, none_type_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x83Fr\x16\x0e"
    int_0 = -656
    var_0 = module_0.find_first_in_sorted(bytes_0, int_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "v"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1
    bytes_0 = b";/\xeco\\"
    var_2 = module_0.find_first_in_sorted(bytes_0, var_1)
    assert var_2 == -1
    var_3 = module_0.find_first_in_sorted(dict_0, var_1)
    assert var_3 == -1
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "`o"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, str_0)
    assert var_1 == -1
    list_0 = [str_0, var_1]
    var_2 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_2 == 1
    var_3 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_3 == -1
    int_0 = -944
    tuple_0 = (var_0, int_0)
    module_0.find_first_in_sorted(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    var_0 = module_0.find_first_in_sorted(list_1, list_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)
