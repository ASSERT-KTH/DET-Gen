# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"6"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    list_0 = [object_0]
    var_0 = module_0.find_first_in_sorted(list_0, object_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, list_0)


def test_case_3():
    str_0 = "i)aFv"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1385
    list_0 = [int_0, int_0, int_0]
    tuple_0 = (int_0, int_0, list_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_0 == 0
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1, bool_1)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_1)
    assert var_0 == 1
    str_0 = "8u'mop5[U[v:@r"
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    object_0 = module_1.object()
    module_0.find_first_in_sorted(object_0, var_1)
