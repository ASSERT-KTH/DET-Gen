# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "U"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "U"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(str_0, var_0)


def test_case_3():
    str_0 = "@.j4/\x0cnA,\\Z"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "L5<\\63^,9e"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(str_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -1938
    set_0 = {int_0, int_0, int_0}
    str_0 = "Wn\\e?`gC-dQ&U\nw\\1=i"
    tuple_0 = (set_0, str_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 1
    int_1 = 894
    module_0.find_first_in_sorted(int_1, int_1)
