# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 26
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_first_in_sorted(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(tuple_0, none_type_0)
    assert var_0 == -1
    int_0 = -354
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    bool_1 = False
    object_0 = module_1.object()
    var_1 = module_1.object()
    module_0.find_first_in_sorted(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"Jn\x90\x94\xaee\x92\xca\x8b9\xb2"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "JvI\\vRi](M9s"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_2 == -1
    module_0.find_first_in_sorted(var_2, var_2)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    int_0 = -90
    str_0 = "&^p)l.Q?*"
    tuple_0 = (int_0, str_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_1 == 1
    str_1 = "J5^X8q;CNTm;"
    module_0.find_first_in_sorted(str_1, list_0)
