# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    complex_0 = -782.9 - 2648.54j
    set_0 = {complex_0, complex_0, complex_0}
    none_type_0 = None
    module_0.find_first_in_sorted(set_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    float_0 = -321.0
    module_0.find_first_in_sorted(float_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    str_0 = "YnbN-d o9Wb\n qm |a"
    module_0.find_first_in_sorted(str_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "\n}:*"
    str_1 = "U+7>#zlc6(@pwpR\t3r"
    var_0 = module_0.find_first_in_sorted(str_0, str_1)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    float_0 = -321.0
    module_0.find_first_in_sorted(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = ";|HK?,9S\x0c/wkx%"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    complex_0 = -4360.7382 - 642.54j
    none_type_0 = None
    module_0.find_first_in_sorted(complex_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    bool_0 = False
    list_1 = [var_0, bool_0, bool_0]
    var_1 = module_0.find_first_in_sorted(list_1, bool_0)
    assert var_1 == 1
    object_0 = module_1.object()
    module_1.object(*list_1)
