# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x15\xbe"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_2 == -1
    bytes_0 = b""
    var_3 = module_0.find_first_in_sorted(bytes_0, bytes_0)
    assert var_3 == -1
    module_0.find_first_in_sorted(var_3, var_3)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -921
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "/"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -1876.0
    list_0 = [float_0, float_0]
    var_0 = module_0.find_first_in_sorted(list_0, float_0)
    assert var_0 == 0
    bool_0 = True
    module_0.find_first_in_sorted(float_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "d@$41S*v}:"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '7/D\x0c/kie8u">Ihl/"'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    float_0 = 4031.0
    list_0 = [float_0, float_0, var_0, float_0]
    var_1 = module_0.find_first_in_sorted(list_0, float_0)
    assert var_1 == 3
    module_1.object(*var_1)
