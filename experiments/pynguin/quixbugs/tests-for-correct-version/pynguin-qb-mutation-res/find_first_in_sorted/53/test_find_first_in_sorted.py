# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "Vwa\tz:E"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 771
    list_0 = [int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(int_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "\n0"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    object_0 = module_1.object()
    str_1 = "Yi:A^`"
    module_0.find_first_in_sorted(object_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xa7N\x02\xad\xde\xe6l\xa1\xaf\xb8\x1c1."
    int_0 = -723
    var_0 = module_0.find_first_in_sorted(bytes_0, int_0)
    assert var_0 == -1
    list_0 = [var_0, var_0, var_0]
    var_1 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_1 == 0
    var_2 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_2 == -1
    object_0 = module_1.object()
    module_0.find_first_in_sorted(bytes_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xa7N\x02\xad\xde\xe6l\xa1\xaf\xb8\x1c1."
    int_0 = -723
    var_0 = module_0.find_first_in_sorted(bytes_0, int_0)
    assert var_0 == -1
    list_0 = [int_0, var_0, var_0]
    var_1 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_1 == 1
    var_2 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_2 == 0
    object_0 = module_1.object()
    module_0.find_first_in_sorted(bytes_0, object_0)
