# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x91\x92\xc0\x94\x84n\x1e\xe5+\xa1Z\xc8\x0c"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 3319
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "<X!!QA"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "+zE-8f"
    list_0 = [var_0, str_1, str_0, str_0]
    var_1 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_1 == 2
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "<X!!QA"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_1.object()
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "<X!!QA"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_1, str_0)
