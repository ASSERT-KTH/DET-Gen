# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    set_0 = set()
    tuple_0 = (bool_0, set_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, set_0)
    assert var_0 == 1
    list_0 = [var_0, set_0]
    module_0.find_first_in_sorted(list_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "E&M/aqy"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    tuple_0 = ()
    var_1 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_1 == -1
    none_type_0 = None
    var_2 = module_0.find_first_in_sorted(tuple_0, var_1)
    assert var_2 == -1
    module_0.find_first_in_sorted(var_2, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "\r"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    object_0 = module_1.object()
    module_0.find_first_in_sorted(object_0, object_0)
