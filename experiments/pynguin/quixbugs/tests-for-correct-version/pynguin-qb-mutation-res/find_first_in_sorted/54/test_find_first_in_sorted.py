# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'_\x00\x94aY"<\nm8\t5 \x1f\xa9'
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    int_0 = -2434
    float_0 = -232.425434
    tuple_0 = (int_0, int_0, float_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, float_0)
    assert var_1 == 2


def test_case_2():
    int_0 = -2434
    float_0 = -232.425434
    tuple_0 = (int_0, int_0, float_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, float_0)
    assert var_0 == 2


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -2434
    float_0 = -232.425434
    tuple_0 = (int_0, int_0, float_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_0 == 0
    bytes_0 = b"\x01\x9a\xf2lO\x85k\xfb\xfbD \xc8j|A(N\xf6\x13("
    module_0.find_first_in_sorted(var_0, bytes_0)


def test_case_4():
    str_0 = " &{1KSW1{qzvqB@(R"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
