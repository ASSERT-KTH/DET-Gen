# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import find_first_in_sorted as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    bool_0 = True
    module_1.find_first_in_sorted(list_0, bool_0)


def test_case_1():
    set_0 = set()
    var_0 = module_1.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "^"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    module_1.find_first_in_sorted(str_0, var_0)


def test_case_3():
    str_0 = "Hs_bol,sx;dcE|`wL,/6"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "V"
    str_1 = "nV"
    var_0 = module_1.find_first_in_sorted(str_1, str_0)
    assert var_0 == 1
    var_1 = module_1.find_first_in_sorted(str_1, str_0)
    assert var_1 == 1
    module_1.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    bool_0 = True
    list_1 = [list_0, bool_0, bool_0, bool_0]
    var_0 = module_1.find_first_in_sorted(list_1, bool_0)
    assert var_0 == 1
    module_0.object(*list_0, **list_0)
