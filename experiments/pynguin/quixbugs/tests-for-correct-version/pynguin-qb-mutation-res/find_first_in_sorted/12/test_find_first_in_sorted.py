# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "!??lp@J~NxW&{ubu1"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ""
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(str_0, none_type_0)
    assert var_0 == -1
    str_1 = "\n^\nDlu|."
    var_1 = module_0.find_first_in_sorted(str_0, none_type_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(str_1, str_1)
    assert var_2 == -1
    module_0.find_first_in_sorted(var_1, var_2)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    object_0 = module_1.object()
    var_1 = module_1.object()
    module_0.find_first_in_sorted(object_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    var_0 = module_1.object()
    list_0 = [bool_0, var_0]
    var_1 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_1 == 1
    module_1.object(*list_0)
