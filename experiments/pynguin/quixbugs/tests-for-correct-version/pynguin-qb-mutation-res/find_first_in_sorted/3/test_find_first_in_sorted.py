# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    module_0.find_first_in_sorted(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    int_0 = -787
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_3():
    bytes_0 = b"\xa4S%\xfe\xa7|\x94\x08\x15 ~M\xff\x0c\x94 \x15r\x07\xef"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xa4S%\xfe\xa7|\x94\x08\x15 ~M\xff\x0c\x94 \x15r\x07\xef"
    none_type_0 = None
    module_0.find_first_in_sorted(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "s_%"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "S)3Gxu7|"
    bool_0 = False
    tuple_0 = (str_0, str_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 2
    bool_1 = False
    none_type_0 = None
    module_0.find_first_in_sorted(bool_1, none_type_0)
