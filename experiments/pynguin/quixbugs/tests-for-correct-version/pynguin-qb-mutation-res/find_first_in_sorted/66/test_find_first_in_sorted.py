# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"-\x06\x7fF\x95\xba\x1d"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(dict_0, none_type_0)
    assert var_0 == -1
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_1 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_1 == 0
    module_0.find_first_in_sorted(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "7kUC) k"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    object_0 = module_1.object()
    module_0.find_first_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 99
    bool_0 = True
    list_0 = [int_0, bool_0, int_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 1
    bytes_0 = b"\x1c\n\xb7"
    bytes_1 = b",\x17VIRw\xcb"
    module_0.find_first_in_sorted(bytes_0, bytes_1)
