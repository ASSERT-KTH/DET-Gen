# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xb0\xc1\x05\xdb|\x91"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_first_in_sorted(dict_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    none_type_0 = None
    module_1.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb0\xa6\xdf\xdb|\x91"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "!#&1LC.HZ1VaJE_f"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ")"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == 0
    bytes_0 = b"\xb0\xc1\x05\xdb|\x91"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_first_in_sorted(dict_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 504
    tuple_0 = (int_0, int_0, int_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 504
    tuple_0 = (int_0, int_0, int_0)
    object_0 = module_1.object()
    float_0 = -3236.0
    tuple_1 = (object_0, float_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, float_0)
    assert var_0 == 1
    var_1 = module_0.find_first_in_sorted(tuple_0, int_0)
    assert var_1 == 0
    object_1 = module_1.object()
    set_0 = set()
    module_0.find_first_in_sorted(var_1, set_0)
