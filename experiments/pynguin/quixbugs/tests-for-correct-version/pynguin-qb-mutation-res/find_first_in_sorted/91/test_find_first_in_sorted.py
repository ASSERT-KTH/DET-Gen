# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    int_0 = -523
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    object_0 = module_1.object(*list_0)
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, var_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"z\xe1\x91*K\x01\xe3\xdb~\x9d\x8e\x03\xd6+rp"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "=1p!s-`Q1\n"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 2921
    bytes_0 = b"3\xe2\xc9\xa1<"
    tuple_0 = (int_0, bytes_0)
    dict_0 = {}
    bool_0 = True
    str_0 = "\\\n[o+pXb:I2(]D$f/ "
    tuple_1 = (tuple_0, dict_0, bool_0, str_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, bool_0)
    assert var_0 == 2
    bytes_1 = b"`\x0b\xbb\xc6\x00\xce\x84"
    list_0 = [bytes_1, bytes_1, bytes_1]
    var_1 = module_0.find_first_in_sorted(list_0, bytes_1)
    assert var_1 == 0
    module_0.find_first_in_sorted(list_0, var_1)
