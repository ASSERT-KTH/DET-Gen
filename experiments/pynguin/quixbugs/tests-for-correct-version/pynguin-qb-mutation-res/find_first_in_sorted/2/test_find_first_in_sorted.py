# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcay+\x89\x86\xf5\xe9"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    bytes_0 = b"\r?\x1e\x03Lv\x89\xf1\xea\xa6\xc0\xd8\xfc\xf6\xb0j\xdb\x8b"
    none_type_0 = None
    module_0.find_first_in_sorted(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "!>73n6\x0c|[K#h.a5[X"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = False
    module_0.find_first_in_sorted(var_0, bool_0)


def test_case_3():
    int_0 = 2889
    str_0 = "^'Riqay}&l%Z6i"
    tuple_0 = (int_0, str_0, str_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 1
    list_0 = []
    var_1 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    object_0 = module_1.object()
    none_type_0 = None
    module_0.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    str_0 = "t5"
    list_0 = [bool_0, bool_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    bool_1 = False
    module_0.find_first_in_sorted(bool_1, bool_1)
