# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"l"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    dict_0 = {}
    var_1 = module_0.find_first_in_sorted(dict_0, list_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2976
    list_0 = [int_0]
    tuple_0 = (list_0, list_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, list_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(tuple_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "~6\n@yIWiB"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


def test_case_4():
    str_0 = "xeZ"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    bool_0 = False
    list_0 = [bool_0, str_0, bool_0, bool_0]
    var_1 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_1 == 2
    var_2 = module_1.object()
