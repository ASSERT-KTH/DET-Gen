# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.find_first_in_sorted(dict_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    bool_0 = False
    var_0 = module_0.find_first_in_sorted(set_0, bool_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.find_first_in_sorted(dict_0, bool_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bytes_0 = b"\xce\x80"
    bytes_1 = b"kK\xbc\xe7LH0f\x9e\x90\xcc\x08"
    set_0 = {bytes_1, bool_0}
    int_0 = 569
    tuple_0 = (bool_0, bytes_0, set_0, int_0)
    module_0.find_first_in_sorted(tuple_0, int_0)


def test_case_4():
    float_0 = -2156.4915
    bool_0 = True
    tuple_0 = (float_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "(%UP_\tJOw6s,L*G."
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(none_type_0, none_type_0)
