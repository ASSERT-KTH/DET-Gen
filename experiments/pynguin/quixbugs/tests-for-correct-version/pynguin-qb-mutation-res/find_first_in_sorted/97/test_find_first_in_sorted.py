# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xd6\xbdE\xfb\xddX\x9b&6\xe0\x01\xefF@\x8c\xf7\xd2\x0b"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(set_0, none_type_0)
    assert var_0 == -1
    list_0 = []
    var_1 = module_0.find_first_in_sorted(list_0, var_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "AWv\x0bly"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    none_type_0 = None
    set_0 = {none_type_0}
    tuple_0 = (var_0, var_0, var_0, set_0)
    module_0.find_first_in_sorted(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "$"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    object_0 = module_1.object()
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    object_1 = module_1.object()
    module_0.find_first_in_sorted(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    str_0 = "$"
    object_0 = module_1.object()
    bytes_0 = b"\xb7\x16\xf0\xbc\x05\x10\x03eG\xb5\x1c\x92"
    bool_1 = True
    tuple_1 = (bytes_0, bool_1)
    module_0.find_first_in_sorted(tuple_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_0)
    assert var_0 == 0
    object_0 = module_1.object()
    bytes_0 = b"\xb7\x16\xf0\xbc\x05\x10\x03eG\xb5\x1c\x92"
    tuple_1 = (bytes_0, bool_0)
    var_1 = module_0.find_first_in_sorted(tuple_1, var_0)
    assert var_1 == 1
    str_0 = "TD$_ ^T\x0b&uI19VK!"
    module_0.find_first_in_sorted(str_0, var_0)
