# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xb3\xda\xd8rb\x0b\xb5\xcc\xf0\xfa\xac\x0e\xa4"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    var_0 = module_0.find_first_in_sorted(tuple_0, list_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(list_0, tuple_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    var_0 = module_0.find_first_in_sorted(list_0, tuple_0)
    assert var_0 == 0
    set_0 = set()
    module_0.find_first_in_sorted(var_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "{\rz;"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    complex_0 = 1153.79601 - 1441.6159j
    set_0 = {complex_0}
    list_0 = [set_0, complex_0, complex_0]
    var_0 = module_0.find_first_in_sorted(list_0, complex_0)
    assert var_0 == 1
    module_0.find_first_in_sorted(list_0, set_0)
