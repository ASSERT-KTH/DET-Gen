# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "M"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.find_first_in_sorted(tuple_0, tuple_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b":\x9b"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"6\x12\xb1\xb3\xeba\x1b"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "stB0@mE.8I~]B"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    bytes_0 = b"\xc4\x87\x8a=\xa8;\x9aK,\xe5WG\xba\x03\xbc\xb8\xfb\xf0$#"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"6\x12\xb1\xb3\xeb\x1b"
    str_0 = "suq"
    bool_0 = False
    list_0 = []
    tuple_0 = (str_0, bool_0, list_0)
    bool_1 = False
    var_0 = module_0.find_first_in_sorted(tuple_0, bool_1)
    assert var_0 == 1
    list_1 = [bytes_0, bytes_0, bytes_0]
    var_1 = module_0.find_first_in_sorted(list_1, bytes_0)
    assert var_1 == 0
    dict_0 = {var_1: var_1, var_1: var_1}
    module_0.find_first_in_sorted(dict_0, bytes_0)
