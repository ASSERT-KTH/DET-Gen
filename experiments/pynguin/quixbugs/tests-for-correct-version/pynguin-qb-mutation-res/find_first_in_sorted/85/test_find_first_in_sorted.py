# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ".qn.1A(\n"
    tuple_0 = (str_0, str_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_0 == 0
    float_0 = 2004.05
    module_0.find_first_in_sorted(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    float_0 = 330.88
    var_0 = module_0.find_first_in_sorted(tuple_0, float_0)
    assert var_0 == -1
    none_type_0 = None
    var_1 = module_0.find_first_in_sorted(tuple_0, none_type_0)
    assert var_1 == -1
    none_type_1 = None
    module_0.find_first_in_sorted(none_type_1, none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1455
    none_type_0 = None
    module_0.find_first_in_sorted(int_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x07\n\x8a\xff\x8b\xbeE\xaa\xb0;\xc4\x12"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ".qn.1A(\n"
    tuple_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert tuple_0 == -1
    float_0 = 2004.05
    module_0.find_first_in_sorted(str_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = -2931.2
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, float_0: float_0, float_0: float_0}
    float_1 = 2004.05
    tuple_0 = (dict_0, float_1, dict_0, float_1)
    var_0 = module_0.find_first_in_sorted(tuple_0, dict_0)
    assert var_0 == 2
    module_0.find_first_in_sorted(float_0, none_type_0)
