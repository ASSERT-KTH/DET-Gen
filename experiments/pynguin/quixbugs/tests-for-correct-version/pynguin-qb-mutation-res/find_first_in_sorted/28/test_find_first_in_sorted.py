# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"x^7\x95?\xcf\xc4\xfe8\xc6\x9a\x0e\xda}\xdb*\xd4\xb9"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


def test_case_1():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_1 == -1
    list_1 = [var_1, var_1]
    var_2 = module_0.find_first_in_sorted(list_1, var_1)
    assert var_2 == 0
    module_0.find_first_in_sorted(var_2, var_2)


def test_case_4():
    str_0 = "N3#Jo\x0cn#(ix8b>j*D."
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    none_type_1 = None
    var_1 = module_0.find_first_in_sorted(list_0, none_type_1)
    assert var_1 == -1
    int_0 = 720
    list_1 = [none_type_1, var_1]
    var_2 = module_0.find_first_in_sorted(list_1, var_1)
    assert var_2 == 1
    module_0.find_first_in_sorted(int_0, int_0)
