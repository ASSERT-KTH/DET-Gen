# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '0j[Gc`\x0cF5YKZ3t5/"W'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = 1414
    module_0.find_first_in_sorted(int_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_1 == -1
    var_2 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_2 == -1
    str_0 = "wQX+ :q44"
    module_0.find_first_in_sorted(var_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'\xec"\xcf\xc5\xfb?\xed[\xd0\xc4\xcfm\xaf\xef\x16\xf8*k\xd2\xac'
    int_0 = 8
    tuple_0 = (bytes_0, int_0)
    str_0 = '{A&Sk!Z{"Y\np:@='
    tuple_1 = (tuple_0, str_0)
    dict_0 = {bytes_0: tuple_1}
    tuple_2 = (tuple_0, tuple_0, bytes_0, dict_0)
    var_0 = module_0.find_first_in_sorted(tuple_2, bytes_0)
    assert var_0 == 2
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "J/ZBrJSID3U!6J"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    dict_0 = {str_0: str_0, str_0: str_0}
    tuple_0 = (str_0, str_0, dict_0)
    var_1 = module_0.find_first_in_sorted(tuple_0, str_0)
    assert var_1 == 0
    bytes_0 = b"\xa4\x8a\xd1\xa6\x93\x81#}\t\xa7N"
    module_0.find_first_in_sorted(bytes_0, bytes_0)
