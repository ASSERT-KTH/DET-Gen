# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "M"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    dict_0 = {}
    module_0.find_first_in_sorted(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    float_0 = 1222.49397
    tuple_0 = (bool_0, float_0, bool_0)
    none_type_0 = None
    module_0.find_first_in_sorted(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "SM 3n'ns\tWbgkFve<"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    object_0 = module_1.object()
    module_0.find_first_in_sorted(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -2294
    tuple_0 = ()
    tuple_1 = (int_0, tuple_0)
    var_0 = module_0.find_first_in_sorted(tuple_1, tuple_1)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 2017.496
    set_0 = set()
    tuple_0 = (float_0, set_0, float_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, set_0)
    assert var_0 == 1
    str_0 = "SM 3n'ns\tWbgkFve<"
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_1 == 0
    module_1.object(*var_1, **list_0)
