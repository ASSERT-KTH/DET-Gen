# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.find_first_in_sorted(list_0, list_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.find_first_in_sorted(bool_0, bool_0)


def test_case_3():
    bytes_0 = b'Zl\x8b\xeaHY\xb5"=U\xceU'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = 2321
    tuple_0 = (bytes_0, bytes_0, dict_0, int_0)
    var_0 = module_0.find_first_in_sorted(tuple_0, dict_0)
    assert var_0 == 2


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    module_0.find_first_in_sorted(bool_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "+UsP:\nEXi>Fh\n"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    int_0 = -361
    module_0.find_first_in_sorted(int_0, int_0)
