# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import find_first_in_sorted as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    str_0 = "7e15C~lTfc "
    list_0 = [object_0, object_0, object_0, str_0]
    module_1.find_first_in_sorted(str_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b""
    var_0 = module_1.find_first_in_sorted(bytes_0, bytes_0)
    assert var_0 == -1
    int_0 = -16
    module_1.find_first_in_sorted(int_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "("
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    none_type_0 = None
    module_1.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    complex_0 = -3651.21438 + 1890.9j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    module_1.find_first_in_sorted(list_0, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "d-T7EA)\n$4s\rnYKR"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "~"
    var_0 = module_1.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    list_0 = [var_0, str_0, var_0, var_0]
    var_1 = module_1.find_first_in_sorted(list_0, var_0)
    assert var_1 == 2
    tuple_0 = (var_1, var_1, var_1, var_1)
    dict_0 = {tuple_0: tuple_0}
    module_1.find_first_in_sorted(dict_0, var_1)
