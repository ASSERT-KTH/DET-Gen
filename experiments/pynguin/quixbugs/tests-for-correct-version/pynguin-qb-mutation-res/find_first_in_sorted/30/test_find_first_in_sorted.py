# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"Y\x03\x91\xfb"
    module_0.find_first_in_sorted(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    var_1 = module_1.object()
    var_2 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_2 == -1
    object_0 = module_1.object()
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"S\x04u"
    str_0 = "\x0bJ4(m.]I"
    list_0 = [bytes_0, bytes_0, bytes_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0


def test_case_3():
    str_0 = "-j/II~ J8"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


def test_case_4():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    bytes_0 = b"\xe45\xa0\x85"
    str_0 = "\x0bJ4(m.]I"
    list_1 = [bytes_0, bytes_0, bytes_0, str_0]
    list_2 = [list_1, bytes_0, list_1, bytes_0]
    var_1 = module_0.find_first_in_sorted(list_2, list_1)
    assert var_1 == 2
    object_0 = module_1.object()
    none_type_1 = None
    var_2 = module_0.find_first_in_sorted(list_0, none_type_1)
    assert var_2 == -1
