# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    str_0 = "<A.%."
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    none_type_0 = None
    module_0.find_first_in_sorted(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "^"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == 0
    float_0 = -1633.1187785520176
    module_0.find_first_in_sorted(var_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    str_0 = "#SPNp}m"
    dict_0 = {str_0: str_0, bool_0: bool_0}
    tuple_0 = (bool_0, str_0, dict_0, str_0)
    list_0 = [tuple_0, dict_0, tuple_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, tuple_0)
    assert var_0 == 2
    int_0 = -3334
    module_0.find_first_in_sorted(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'M"aNX+AAm5-$MQ'
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    none_type_0 = None
    module_0.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "l5\x0b|3L"
    list_0 = [str_0, str_0]
    var_0 = module_0.find_first_in_sorted(list_0, str_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, list_0)
