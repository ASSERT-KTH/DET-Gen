# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    set_0 = {var_0, var_0, var_0}
    module_0.find_first_in_sorted(set_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xfdf\xa0\xde\xf0)."
    list_0 = [bytes_0]
    none_type_0 = None
    module_0.find_first_in_sorted(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "~\nBvYg"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, list_0)
    assert var_0 == -1
    str_0 = "|\x0bLov_'X8/V4<X_4TpH"
    list_1 = [str_0, var_0, str_0, str_0]
    var_1 = module_0.find_first_in_sorted(list_1, str_0)
    assert var_1 == 2
    module_0.find_first_in_sorted(list_1, list_1)
