# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


def test_case_0():
    str_0 = "G9Kmn@\x0cEzBZcE=$\n&Uj"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(list_0, none_type_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_3():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.find_first_in_sorted(dict_0, bool_0)
    assert var_0 == 0
    var_1 = module_0.find_first_in_sorted(dict_0, bool_0)
    assert var_1 == 0


def test_case_4():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_1, bool_1: bool_0}
    var_0 = module_0.find_first_in_sorted(dict_0, bool_1)
    assert var_0 == 1
    var_1 = module_0.find_first_in_sorted(dict_0, bool_1)
    assert var_1 == 1


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_1: bool_0}
    var_0 = module_0.find_first_in_sorted(dict_0, bool_0)
    assert var_0 == 0
    module_1.object(*var_0)
