# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xfd\x1e<.\x7f\xfc\x83h\xdf\x17\x15\xcb"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.find_first_in_sorted(list_0, bytes_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.find_first_in_sorted(dict_0, dict_0)
    assert var_0 == -1
    none_type_0 = None
    module_1.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "<EO,*ojQp"
    none_type_0 = None
    module_0.find_first_in_sorted(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xc2\xad\xe5a\x9d\xeb\xa0\x1f2\xbbc\xd0\xd5"
    bool_0 = False
    dict_0 = {}
    none_type_0 = None
    var_0 = module_0.find_first_in_sorted(dict_0, none_type_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_1 == -1
    none_type_1 = None
    module_0.find_first_in_sorted(none_type_1, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "o)A;n?`<ZE[zXh\x0bI)<"
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    str_1 = "e&r(xwv(!+\x0cZ]~C"
    var_1 = module_0.find_first_in_sorted(str_0, str_1)
    assert var_1 == -1
    none_type_0 = None
    var_2 = module_0.find_first_in_sorted(str_0, str_1)
    assert var_2 == -1
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    set_0 = set()
    var_0 = module_0.find_first_in_sorted(set_0, set_0)
    assert var_0 == -1
    int_0 = -1779
    list_0 = [var_0, int_0]
    var_1 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_1 == 1
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, list_0)
