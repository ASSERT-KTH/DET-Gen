# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find_first_in_sorted as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ",nb@dg(5U)nxv~@"
    int_0 = -1019
    list_0 = [str_0, str_0, int_0]
    module_0.find_first_in_sorted(list_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    str_0 = "~OE"
    list_0 = []
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == -1
    var_1 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_1 == -1
    module_0.find_first_in_sorted(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.find_first_in_sorted(list_0, bool_0)
    assert var_0 == 0
    none_type_0 = None
    module_0.find_first_in_sorted(none_type_0, none_type_0)


def test_case_4():
    bytes_0 = b"g\xfe\xf9kRt\t\x1e \x8e\x8a\xc4\xf7\x94]"
    bool_0 = False
    var_0 = module_0.find_first_in_sorted(bytes_0, bool_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "~OE"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.find_first_in_sorted(str_0, str_0)
    assert var_0 == -1
    module_0.find_first_in_sorted(dict_0, str_0)


def test_case_6():
    str_0 = ",nb@dg(5U)nx6v~@"
    int_0 = -1019
    list_0 = [str_0, str_0, int_0, int_0]
    var_0 = module_0.find_first_in_sorted(list_0, int_0)
    assert var_0 == 2
