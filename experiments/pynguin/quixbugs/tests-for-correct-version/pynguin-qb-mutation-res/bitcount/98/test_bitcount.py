# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import bitcount as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    module_1.bitcount(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    var_0 = module_1.bitcount(dict_0)
    assert var_0 == 0
    module_1.bitcount(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1661
    module_1.bitcount(int_0)


def test_case_3():
    int_0 = 3121
    var_0 = module_1.bitcount(int_0)
    assert var_0 == 5
    var_1 = module_1.bitcount(int_0)
    assert var_1 == 5
    var_2 = module_1.bitcount(int_0)
    assert var_2 == 5
    var_3 = module_1.bitcount(int_0)
    assert var_3 == 5
    var_4 = module_1.bitcount(var_0)
    assert var_4 == 2
    var_5 = module_1.bitcount(var_0)
    assert var_5 == 2
    var_6 = module_1.bitcount(var_3)
    assert var_6 == 2
    var_7 = module_1.bitcount(var_2)
    assert var_7 == 2
    var_8 = module_1.bitcount(var_4)
    assert var_8 == 1
    var_9 = module_1.bitcount(var_0)
    assert var_9 == 2
    var_10 = module_1.bitcount(int_0)
    assert var_10 == 5
