# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import bitcount as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "!JO"
    module_0.bitcount(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xfa\xc9\x8e\xcd\xa98\x87-\xe2L"
    none_type_0 = None
    var_0 = module_0.bitcount(none_type_0)
    assert var_0 == 0
    dict_0 = {bytes_0: var_0}
    module_0.bitcount(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1094
    module_0.bitcount(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    var_0 = module_0.bitcount(bool_0)
    assert var_0 == 1
    float_0 = -162.0
    set_0 = set()
    var_1 = module_0.bitcount(set_0)
    assert var_1 == 0
    module_0.bitcount(float_0)
