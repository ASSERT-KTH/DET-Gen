# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import bitcount as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.bitcount(object_0)


def test_case_1():
    bool_0 = False
    var_0 = module_1.bitcount(bool_0)
    assert var_0 == 0
    var_1 = module_1.bitcount(bool_0)
    assert var_1 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_1.bitcount(none_type_0)
    assert var_0 == 0
    var_1 = module_1.bitcount(var_0)
    assert var_1 == 0
    var_2 = module_1.bitcount(none_type_0)
    assert var_2 == 0
    var_3 = module_1.bitcount(var_0)
    assert var_3 == 0
    var_4 = module_1.bitcount(var_0)
    assert var_4 == 0
    int_0 = -61
    module_1.bitcount(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 800
    var_0 = module_1.bitcount(int_0)
    assert var_0 == 3
    var_1 = module_1.bitcount(var_0)
    assert var_1 == 2
    var_2 = module_1.bitcount(int_0)
    assert var_2 == 3
    var_3 = module_1.bitcount(var_0)
    assert var_3 == 2
    bytes_0 = b"\xf1/\xbb.\x8f4\xdb\n\x9c\x1bT\xb3"
    none_type_0 = None
    var_4 = module_1.bitcount(var_0)
    assert var_4 == 2
    var_5 = module_1.bitcount(none_type_0)
    assert var_5 == 0
    var_6 = module_1.bitcount(var_5)
    assert var_6 == 0
    module_1.bitcount(bytes_0)
