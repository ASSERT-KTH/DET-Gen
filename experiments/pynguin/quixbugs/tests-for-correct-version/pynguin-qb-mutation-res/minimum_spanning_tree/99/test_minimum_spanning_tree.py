# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_spanning_tree as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    node_0 = module_1.Node(dict_0, incoming_nodes=dict_0)
    dict_1 = {node_0: dict_0, node_0: dict_0}
    module_0.minimum_spanning_tree(dict_1)


def test_case_1():
    list_0 = []
    var_0 = module_0.minimum_spanning_tree(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.minimum_spanning_tree(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "~j"
    bytes_0 = b"\xaf\x1cZrZ\xe4\x19\x0c\xd4\xa4\xf1M\xdey\x08\x94\xb4C\x86\x10"
    dict_0 = {str_0: bytes_0, bytes_0: str_0, str_0: str_0}
    module_0.minimum_spanning_tree(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -1410
    tuple_0 = (int_0, int_0)
    dict_0 = {tuple_0: int_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    tuple_0.predecessors()
