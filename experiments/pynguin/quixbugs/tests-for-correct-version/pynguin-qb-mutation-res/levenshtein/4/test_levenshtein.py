# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import levenshtein as module_0


def test_case_0():
    str_0 = "m<%,H\x0c6* ;\rhh`OqQFv"
    var_0 = module_0.levenshtein(str_0, str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 2360
    module_0.levenshtein(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    str_0 = "h{.eg\x0b[>tEz{YF}\t:9("
    bool_1 = False
    bytes_0 = b"\xe9y\xd2\x07"
    set_0 = {bool_1, bool_0, bytes_0}
    tuple_0 = (str_0, bool_0, set_0)
    tuple_1 = (bool_0, bool_1, tuple_0, bool_1)
    tuple_2 = (bool_0, str_0, tuple_1)
    list_0 = [tuple_2]
    list_1 = [list_0]
    module_0.levenshtein(list_1, tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2089
    bytes_0 = b"\x92\x9b2\x15\xd4\x7f{\xbf"
    str_0 = ""
    tuple_0 = (int_0, bytes_0, str_0)
    bytes_1 = b"\xc8L\xe3\xaa\x0cG\xc3\xfb\xa8\x7fX"
    dict_0 = {tuple_0: str_0, bytes_1: bytes_1, int_0: bytes_1}
    var_0 = module_0.levenshtein(dict_0, str_0)
    assert var_0 == 3
    bool_0 = False
    module_0.levenshtein(bool_0, bool_0)
