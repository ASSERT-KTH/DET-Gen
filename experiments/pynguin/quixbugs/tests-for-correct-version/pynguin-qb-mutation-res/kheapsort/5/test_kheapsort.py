# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.kheapsort(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = ")@Vo]~3gQEv(4S"
    none_type_0 = None
    list_0 = [str_0]
    var_0 = module_0.kheapsort(list_0, none_type_0)
    module_1.object(*var_0)


def test_case_2():
    none_type_0 = None
    str_0 = ";qO.gg:o`0zW\x0cAl!"
    str_1 = '\x0cX"&7HzvB~V:j'
    dict_0 = {none_type_0: str_0, str_1: str_1}
    var_0 = module_0.kheapsort(dict_0, dict_0)
    list_0 = []
    var_1 = module_0.kheapsort(list_0, none_type_0)
    object_0 = module_1.object(*var_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    str_0 = "2PfF:{A\tv\\6&#zfa>T"
    tuple_0 = (bool_0, str_0)
    list_0 = [tuple_0, tuple_0, str_0, bool_0]
    var_0 = module_0.kheapsort(list_0, tuple_0)
    str_1 = ")@Vo]~3gQEv(4S"
    none_type_0 = None
    list_1 = [str_1, str_1]
    var_1 = module_0.kheapsort(list_1, none_type_0)
    var_2 = module_0.kheapsort(var_1, none_type_0)
    var_3 = module_0.kheapsort(none_type_0, var_2)
    var_4 = module_0.kheapsort(list_1, var_1)
    module_1.object(*var_1)
