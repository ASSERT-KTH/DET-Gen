# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xc2\x1a\xf8P:\x9aa\x8d\x1c\xe3\xd7\xd9\xe3\x9cc&"
    var_0 = module_0.kheapsort(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.kheapsort(list_0, bool_0)
    module_1.object(*var_0)


def test_case_2():
    bool_0 = False
    list_0 = []
    var_0 = module_0.kheapsort(list_0, bool_0)
    object_0 = module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    var_1 = module_0.kheapsort(none_type_0, var_0)
    bytes_0 = b"Dnk\xd7S\xc6\xa2F"
    dict_0 = {var_1: bool_0, var_0: bytes_0, var_0: var_0, bytes_0: var_0}
    module_1.object(*var_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    var_1 = module_1.object()
    bytes_0 = b"k\xd7S\xa2"
    dict_0 = {
        var_0: none_type_0,
        var_1: bool_0,
        var_0: var_0,
        var_1: bool_0,
        bytes_0: var_0,
    }
    module_1.object(*var_0, **dict_0)
