# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.kheapsort(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x16\x12\xc9\xe5\xae\xb7;\xb5\x98\xd9\xe0|\x04"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [set_0]
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x16\x12\xc9\xe5\xae\xb7;\xb5\x98\xd9\xe0|\x04"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, set_0]
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    var_1 = module_0.kheapsort(none_type_0, var_0)
    none_type_1 = None
    var_2 = module_0.kheapsort(none_type_1, none_type_1)
    object_0 = module_1.object()
    var_3 = module_0.kheapsort(object_0, object_0)
    object_1 = module_1.object()
    module_1.object(*var_0)


def test_case_3():
    bytes_0 = b"\x16\x12\xc9\xe5\xae\xb7;\xb5\x98\xd9\xe0|\x04"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = []
    none_type_0 = None
    var_0 = module_0.kheapsort(list_0, none_type_0)
    object_0 = module_1.object(*var_0)
    var_1 = module_0.kheapsort(none_type_0, none_type_0)
    str_0 = "I{S\n\x0cNog"
    var_2 = module_0.kheapsort(str_0, str_0)
    object_1 = module_1.object()
    object_2 = module_1.object(*var_0)
    var_3 = module_0.kheapsort(object_1, object_1)
    var_4 = module_0.kheapsort(var_1, object_2)
    var_5 = module_0.kheapsort(object_1, none_type_0)
    float_0 = 1513.20253
    tuple_0 = (float_0,)
    var_6 = module_0.kheapsort(var_0, tuple_0)
    var_7 = module_0.kheapsort(var_3, var_4)
    var_8 = module_0.kheapsort(var_1, tuple_0)
    set_1 = {var_1, var_1}
    var_9 = module_0.kheapsort(list_0, var_6)
    var_10 = module_0.kheapsort(var_4, str_0)
    var_11 = module_0.kheapsort(var_8, set_0)
    object_3 = module_1.object()
    var_12 = module_0.kheapsort(var_3, var_2)
    var_13 = module_0.kheapsort(set_1, var_3)
    var_14 = module_0.kheapsort(object_3, object_0)
