# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xbe\\\x8aE\xd3\xebg\xd6\x9e4\xf7\xc4(\xf9KX\x822\x14"
    var_0 = module_0.kheapsort(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.kheapsort(list_0, bool_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.kheapsort(tuple_0, tuple_0)
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    var_1 = module_0.kheapsort(list_0, var_0)
    none_type_0 = None
    var_2 = module_0.kheapsort(none_type_0, none_type_0)
    tuple_1 = (tuple_0, list_0)
    object_0 = module_1.object()
    bool_0 = True
    var_3 = module_0.kheapsort(var_2, bool_0)
    var_4 = module_0.kheapsort(var_1, bool_0)
    dict_0 = {}
    var_5 = module_0.kheapsort(var_0, dict_0)
    var_6 = module_0.kheapsort(bool_0, tuple_1)
    var_7 = module_0.kheapsort(list_0, list_0)
    bool_1 = False
    var_8 = module_0.kheapsort(bool_1, var_1)
    bool_2 = False
    var_9 = module_0.kheapsort(list_0, bool_2)
    module_1.object(*var_9)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.kheapsort(dict_0, bool_0)
    tuple_0 = ()
    var_1 = module_0.kheapsort(bool_0, dict_0)
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    none_type_0 = None
    var_2 = module_0.kheapsort(list_0, none_type_0)
    var_3 = module_0.kheapsort(var_0, var_1)
    var_4 = module_0.kheapsort(var_0, var_0)
    var_5 = module_0.kheapsort(var_2, var_0)
    var_6 = module_0.kheapsort(var_1, var_1)
    tuple_1 = (tuple_0, list_0)
    var_7 = module_0.kheapsort(var_6, var_6)
    bool_1 = True
    var_8 = module_0.kheapsort(var_0, var_4)
    var_9 = module_0.kheapsort(var_6, bool_1)
    var_10 = module_0.kheapsort(list_0, var_3)
    list_1 = [var_6, var_1, var_1]
    var_11 = module_0.kheapsort(var_10, list_1)
    var_12 = module_0.kheapsort(var_2, bool_1)
    dict_1 = {}
    var_13 = module_0.kheapsort(var_0, dict_1)
    var_14 = module_0.kheapsort(bool_1, tuple_1)
    var_15 = module_0.kheapsort(list_0, list_0)
    var_16 = module_0.kheapsort(var_9, tuple_0)
    module_1.object(*var_2)
