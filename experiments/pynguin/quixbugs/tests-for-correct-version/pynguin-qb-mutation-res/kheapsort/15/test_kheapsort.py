# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    dict_0 = {}
    var_0 = module_0.kheapsort(dict_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    list_1 = [list_0]
    var_0 = module_0.kheapsort(list_1, list_1)
    var_1 = module_0.kheapsort(list_1, list_1)
    none_type_0 = None
    var_2 = module_0.kheapsort(list_1, none_type_0)
    var_3 = module_0.kheapsort(var_2, var_1)
    var_4 = module_0.kheapsort(var_2, var_1)
    var_5 = module_0.kheapsort(var_3, var_3)
    module_1.object(*var_2)


def test_case_2():
    list_0 = []
    var_0 = module_0.kheapsort(list_0, list_0)
    var_1 = module_0.kheapsort(list_0, list_0)
    var_2 = module_0.kheapsort(var_0, list_0)
    none_type_0 = None
    var_3 = module_0.kheapsort(list_0, none_type_0)
    list_1 = []
    var_4 = module_0.kheapsort(list_0, list_1)
    var_5 = module_0.kheapsort(var_3, var_0)
    var_6 = module_0.kheapsort(list_0, list_0)
    object_0 = module_1.object(*var_3)


@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.kheapsort(none_type_0, none_type_0)
    list_1 = [list_0, list_0]
    var_1 = module_0.kheapsort(list_1, list_1)
    var_2 = module_0.kheapsort(list_1, list_1)
    none_type_1 = None
    var_3 = module_0.kheapsort(list_1, none_type_1)
    var_4 = module_0.kheapsort(var_3, var_2)
    var_5 = module_0.kheapsort(var_3, var_2)
    var_6 = module_0.kheapsort(var_4, var_4)
    module_1.object(*var_3)
