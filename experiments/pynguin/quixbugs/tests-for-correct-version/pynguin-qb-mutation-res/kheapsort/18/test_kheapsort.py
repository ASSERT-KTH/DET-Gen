# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    str_0 = ' +{&/kr"7R;`X,o?C6kq'
    var_0 = module_0.kheapsort(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.kheapsort(bool_0, list_0)
    var_1 = module_0.kheapsort(list_0, list_0)
    var_2 = module_0.kheapsort(bool_0, bool_0)
    var_3 = module_0.kheapsort(bool_0, list_0)
    object_0 = module_1.object()
    none_type_0 = None
    bool_1 = True
    str_0 = " trs r/Qx*J,Z"
    var_4 = module_0.kheapsort(str_0, bool_0)
    var_5 = module_0.kheapsort(var_1, bool_1)
    var_6 = module_0.kheapsort(var_0, list_0)
    var_7 = module_0.kheapsort(var_3, var_0)
    var_8 = module_0.kheapsort(list_0, list_0)
    var_9 = module_0.kheapsort(list_0, none_type_0)
    module_1.object(*var_9)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    var_0 = module_0.kheapsort(bool_0, none_type_0)
    list_0 = [bool_0, bool_0]
    var_1 = module_0.kheapsort(list_0, list_0)
    var_2 = module_0.kheapsort(list_0, bool_0)
    var_3 = module_0.kheapsort(bool_0, bool_0)
    var_4 = module_1.object()
    dict_0 = {}
    var_5 = module_0.kheapsort(none_type_0, dict_0)
    none_type_1 = None
    var_6 = module_0.kheapsort(var_4, bool_0)
    var_7 = module_0.kheapsort(var_1, var_2)
    str_0 = ":>L/D8jfR"
    dict_1 = {bool_0: var_1, var_2: var_6, var_4: str_0}
    float_0 = 2642.44159
    var_8 = module_0.kheapsort(dict_1, float_0)
    var_9 = module_0.kheapsort(var_3, var_2)
    var_10 = module_0.kheapsort(none_type_1, var_2)
    var_11 = module_0.kheapsort(var_7, list_0)
    var_12 = module_0.kheapsort(var_4, none_type_1)
    var_13 = module_0.kheapsort(var_12, list_0)
    var_14 = module_0.kheapsort(var_12, var_2)
    var_15 = module_0.kheapsort(list_0, list_0)
    var_16 = module_0.kheapsort(var_11, bool_0)
    var_17 = module_0.kheapsort(str_0, var_14)
    module_1.object(*var_2)
