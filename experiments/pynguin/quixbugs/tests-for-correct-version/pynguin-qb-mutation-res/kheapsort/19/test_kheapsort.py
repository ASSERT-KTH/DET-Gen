# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import kheapsort as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.kheapsort(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    var_0 = module_0.kheapsort(none_type_0, none_type_0)
    var_1 = module_0.kheapsort(var_0, var_0)
    str_0 = ""
    list_0 = [str_0]
    none_type_1 = None
    var_2 = module_0.kheapsort(list_0, none_type_1)
    var_3 = module_0.kheapsort(list_0, none_type_1)
    bool_0 = True
    var_4 = module_0.kheapsort(bool_0, bool_0)
    var_5 = module_0.kheapsort(bool_0, var_4)
    bytes_0 = b"\xe5\x0eM\xbf;"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_6 = module_0.kheapsort(var_4, dict_0)
    object_0 = module_1.object()
    object_1 = module_1.object()
    var_7 = module_0.kheapsort(bool_0, object_0)
    var_8 = module_0.kheapsort(dict_0, bytes_0)
    var_9 = module_0.kheapsort(var_4, bytes_0)
    var_10 = module_0.kheapsort(var_3, var_4)
    var_11 = module_0.kheapsort(var_7, var_4)
    var_12 = module_0.kheapsort(var_4, var_4)
    var_13 = module_0.kheapsort(str_0, dict_0)
    var_14 = module_0.kheapsort(var_8, var_9)
    module_1.object(*var_3)


def test_case_2():
    none_type_0 = None
    var_0 = module_0.kheapsort(none_type_0, none_type_0)
    var_1 = module_0.kheapsort(var_0, var_0)
    str_0 = ""
    list_0 = []
    none_type_1 = None
    var_2 = module_0.kheapsort(list_0, none_type_1)
    var_3 = module_0.kheapsort(list_0, none_type_1)
    bool_0 = True
    var_4 = module_0.kheapsort(bool_0, bool_0)
    var_5 = module_1.object()
    bytes_0 = b"\xe5\x0eM\xbf;"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_6 = module_0.kheapsort(var_4, dict_0)
    object_0 = module_1.object()
    object_1 = module_1.object()
    var_7 = module_0.kheapsort(bool_0, object_0)
    var_8 = module_0.kheapsort(dict_0, bytes_0)
    var_9 = module_0.kheapsort(var_4, bytes_0)
    var_10 = module_0.kheapsort(var_3, var_4)
    var_11 = module_0.kheapsort(var_7, var_4)
    var_12 = module_0.kheapsort(str_0, dict_0)
    var_13 = module_0.kheapsort(var_8, var_9)
    object_2 = module_1.object(*var_3)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.kheapsort(none_type_0, none_type_0)
    list_0 = [var_0]
    var_1 = module_0.kheapsort(list_0, list_0)
    var_2 = module_0.kheapsort(list_0, none_type_0)
    str_0 = ""
    list_1 = [str_0, str_0]
    none_type_1 = None
    var_3 = module_0.kheapsort(list_1, none_type_1)
    var_4 = module_0.kheapsort(list_1, none_type_1)
    bool_0 = True
    var_5 = module_0.kheapsort(bool_0, bool_0)
    var_6 = module_0.kheapsort(bool_0, var_5)
    bytes_0 = b"\xe5\x0eM\xbf;"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_7 = module_0.kheapsort(var_5, dict_0)
    object_0 = module_1.object()
    object_1 = module_1.object()
    var_8 = module_0.kheapsort(bool_0, object_0)
    var_9 = module_0.kheapsort(dict_0, bytes_0)
    var_10 = module_0.kheapsort(var_5, bytes_0)
    var_11 = module_0.kheapsort(var_4, var_5)
    var_12 = module_0.kheapsort(var_8, var_5)
    var_13 = module_0.kheapsort(var_5, var_5)
    var_14 = module_0.kheapsort(str_0, dict_0)
    var_15 = module_0.kheapsort(var_9, var_10)
    module_1.object(*var_4)
