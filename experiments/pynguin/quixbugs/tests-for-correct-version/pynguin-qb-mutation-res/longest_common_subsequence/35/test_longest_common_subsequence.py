# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"V\xf7\xb7\x06[\xe4\x81"
    list_0 = [bytes_0]
    module_0.longest_common_subsequence(list_0, list_0)


def test_case_1():
    float_0 = -1419.0599
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(float_0, none_type_0)
    assert var_0 == ""
    dict_0 = {float_0: float_0, var_0: none_type_0}
    var_1 = module_0.longest_common_subsequence(dict_0, var_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    bytes_0 = b"\r\xa0\xcf\xe5\x12OT\x11\n"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bytes_0: bytes_0}
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(dict_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_3 == ""
    bool_1 = False
    dict_1 = {var_3: bool_0, var_2: var_3, var_2: bool_1, bool_0: var_3}
    var_4 = module_0.longest_common_subsequence(var_3, bool_1)
    assert var_4 == ""
    module_0.longest_common_subsequence(dict_0, dict_1)
