# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_1.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    bytes_0 = b"O&\xbci"
    module_1.longest_common_subsequence(bytes_0, bytes_0)


def test_case_2():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    var_0 = module_1.longest_common_subsequence(set_0, bool_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 2391.0133
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""
    var_2 = module_1.longest_common_subsequence(var_1, none_type_0)
    assert var_2 == ""
    list_0 = [float_0, float_0]
    list_1 = [float_0, list_0, list_0]
    var_3 = module_1.longest_common_subsequence(var_2, list_1)
    assert var_3 == ""
    module_1.longest_common_subsequence(list_0, list_1)
