# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


def test_case_0():
    object_0 = module_0.object()
    bytes_0 = b"\xbdf0"
    tuple_0 = (object_0, bytes_0, bytes_0, bytes_0)
    var_0 = module_1.longest_common_subsequence(tuple_0, bytes_0)
    assert var_0 == ""


def test_case_1():
    bool_0 = False
    var_0 = module_1.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_1.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(bool_0, bool_0)
    assert var_1 == ""
    var_2 = module_1.longest_common_subsequence(var_1, var_1)
    assert var_2 == ""
    object_0 = module_0.object()
    var_3 = module_1.longest_common_subsequence(bool_0, object_0)
    assert var_3 == ""
    bytes_0 = b"y,\x01&w"
    var_4 = module_1.longest_common_subsequence(object_0, var_3)
    assert var_4 == ""
    bool_1 = True
    var_5 = module_1.longest_common_subsequence(bool_1, var_2)
    bytes_1 = b":\xff\x9bGCLO=\x8f\x1a\x8a7\x90\xc5\xba\xba\xe0\xbb\xaf"
    var_6 = module_1.longest_common_subsequence(bytes_1, bytes_0)
    assert var_6 == ""
    var_7 = module_1.longest_common_subsequence(object_0, var_4)
    module_1.longest_common_subsequence(bytes_0, bytes_0)
