# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


def test_case_1():
    str_0 = "F jK oy/\nnQ\n"
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_1.longest_common_subsequence(str_0, none_type_0)
    assert var_2 == ""
    var_3 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_3 == "F jK oy/\nnQ\n"
    var_4 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_4 == "F jK oy/\nnQ\n"


def test_case_2():
    str_0 = "<ljaD)5xHN6n$VbGDWF"
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    bytes_0 = b"X\x86x\x0e\x13\n\xdd\r\x90"
    str_0 = "_5VDWD"
    var_2 = module_1.longest_common_subsequence(none_type_0, var_1)
    assert var_2 == ""
    var_3 = module_1.longest_common_subsequence(bytes_0, str_0)
    assert var_3 == ""
    module_1.longest_common_subsequence(bytes_0, bytes_0)
