# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.longest_common_subsequence(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    tuple_0 = (list_0, list_0)
    module_1.longest_common_subsequence(tuple_0, tuple_0)


def test_case_2():
    tuple_0 = ()
    var_0 = module_1.longest_common_subsequence(tuple_0, tuple_0)
    assert var_0 == ""
    dict_0 = {var_0: var_0}
    var_1 = module_1.longest_common_subsequence(dict_0, var_0)
    assert var_1 == ""


def test_case_3():
    bool_0 = False
    var_0 = module_1.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    str_0 = "0d{K41#}81zB-]b"
    list_0 = [str_0, str_0]
    var_1 = module_1.longest_common_subsequence(list_0, str_0)
    assert var_1 == ""
    str_1 = "O!>\tq>FqEEG:x9"
    var_2 = module_1.longest_common_subsequence(list_0, str_1)
    assert var_2 == ""
