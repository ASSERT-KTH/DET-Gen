# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 1622.715708
    module_0.longest_common_subsequence(float_0, float_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    bytes_0 = b'\xd0"\xdc\xad\xb1R\xceG\x9bN\xde'
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(set_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xec\xd3\xb5\xa9\x12`\x0c]\x9eo\x94\xe4\xe2"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "wLWH2:o"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "wLWH2:o"
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == "wLWH2:o"
    var_2 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_2 == "wLWH2:o"
    tuple_0 = (var_1,)
    var_3 = module_0.longest_common_subsequence(var_0, tuple_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_4 == "wLWH2:o"
    none_type_0 = None
    var_5 = module_0.longest_common_subsequence(none_type_0, var_2)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(str_0, var_4)
    assert var_6 == "wLWH2:o"
    dict_0 = {}
    var_7 = module_0.longest_common_subsequence(dict_0, dict_0)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(dict_0, var_2)
    assert var_8 == ""
    tuple_1 = (str_0, dict_0, dict_0, var_7)
    module_0.longest_common_subsequence(tuple_1, tuple_1)
