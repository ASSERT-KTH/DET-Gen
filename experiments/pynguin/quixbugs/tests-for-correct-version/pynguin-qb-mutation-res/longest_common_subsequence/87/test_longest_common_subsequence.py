# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_2 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    set_0 = set()
    var_0 = module_0.longest_common_subsequence(set_0, set_0)
    assert var_0 == ""
    list_0 = []
    object_0 = module_1.object(*list_0)
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(object_0, none_type_0)
    assert var_1 == ""
    module_0.longest_common_subsequence(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "\x0b\x0b"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "\x0b\x0b"
    int_0 = 2835
    module_0.longest_common_subsequence(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1460
    none_type_0 = None
    bool_0 = False
    str_0 = "0R^Y98pN$>Oii\nN"
    int_1 = 2940
    str_1 = "u-B>*bM"
    list_0 = [none_type_0]
    tuple_0 = (str_0, int_1, str_1, list_0)
    var_0 = module_0.longest_common_subsequence(tuple_0, str_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_1 == ""
    list_1 = [int_0, none_type_0, var_1, var_1]
    var_2 = module_0.longest_common_subsequence(list_1, none_type_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_3 == ""
    module_0.longest_common_subsequence(int_0, int_0)
