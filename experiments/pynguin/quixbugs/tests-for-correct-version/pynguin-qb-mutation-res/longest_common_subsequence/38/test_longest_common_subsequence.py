# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 2957.0
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, float_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2226
    list_0 = [int_0, int_0, int_0, int_0]
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(list_0, none_type_0)
    assert var_0 == ""
    float_0 = 2629.37927
    module_0.longest_common_subsequence(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xbd_\xcb-\xebDC\xe1\xff\x1by\x8f\xe6\xed"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_4():
    bytes_0 = b"_\xda\xee\xa7\x1a#J"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    var_0 = module_0.longest_common_subsequence(tuple_0, bytes_0)
    assert var_0 == ""
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_1, none_type_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_1, none_type_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(var_1, var_4)
    assert var_5 == ""
