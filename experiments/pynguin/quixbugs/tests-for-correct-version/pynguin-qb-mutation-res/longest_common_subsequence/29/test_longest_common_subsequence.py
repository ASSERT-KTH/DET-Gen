# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = "("
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "("


def test_case_1():
    bool_0 = True
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""
    bool_1 = True
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(bool_1, none_type_1)
    assert var_1 == ""


def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_0, none_type_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_3 == ""
    list_0 = [var_0, var_3, var_0, none_type_0]
    var_4 = module_0.longest_common_subsequence(var_3, none_type_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(none_type_0, var_0)
    assert var_5 == ""
    str_0 = ">W=\rw"
    var_6 = module_0.longest_common_subsequence(var_3, list_0)
    assert var_6 == ""
    var_7 = module_0.longest_common_subsequence(list_0, str_0)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(none_type_0, var_3)
    assert var_8 == ""
    set_0 = {var_1}
    var_9 = module_0.longest_common_subsequence(none_type_0, set_0)
    assert var_9 == ""
    var_10 = module_0.longest_common_subsequence(var_0, var_6)
    assert var_10 == ""
    var_11 = module_0.longest_common_subsequence(var_8, var_0)
    assert var_11 == ""
    var_12 = module_0.longest_common_subsequence(var_4, var_9)
    assert var_12 == ""
    var_13 = module_0.longest_common_subsequence(var_10, var_0)
    assert var_13 == ""
    bytes_0 = b"\xe68\xb2"
    var_14 = module_0.longest_common_subsequence(bytes_0, var_5)
    assert var_14 == ""
