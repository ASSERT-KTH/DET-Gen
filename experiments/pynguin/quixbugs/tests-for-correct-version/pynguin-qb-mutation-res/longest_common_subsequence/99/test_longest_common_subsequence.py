# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 196
    set_0 = {int_0}
    module_0.longest_common_subsequence(set_0, int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    str_0 = "EbDt|VH>Qn7:J`i2`!c"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "EbDt|VH>Qn7:J`i2`!c"
    list_0 = []
    var_2 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_2 == "EbDt|VH>Qn7:J`i2`!c"
    var_3 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_3 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xbf\x81"
    list_0 = [bytes_0]
    var_0 = module_0.longest_common_subsequence(list_0, bytes_0)
    assert var_0 == ""
    module_0.longest_common_subsequence(bytes_0, bytes_0)
