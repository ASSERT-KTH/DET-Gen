# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


def test_case_0():
    str_0 = "2JtHtmvS"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "2JtHtmvS"


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""
    module_0.longest_common_subsequence(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bool_1 = True
    object_0 = module_1.object()
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(object_0, none_type_0)
    assert var_0 == ""
    float_0 = -728.6
    var_1 = module_0.longest_common_subsequence(float_0, bool_0)
    assert var_1 == ""
    dict_0 = {bool_0: var_1, bool_0: bool_1}
    tuple_0 = (bool_0, bool_1, dict_0, var_1)
    bytes_0 = b"}!\xc2\xbdR$\xe9a[\x06\x9a\xdc\x1b"
    var_2 = module_0.longest_common_subsequence(bytes_0, tuple_0)
    assert var_2 == ""
    module_0.longest_common_subsequence(tuple_0, dict_0)
