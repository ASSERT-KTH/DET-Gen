# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1619
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_0 == ""


def test_case_2():
    str_0 = '{dA4"7ic'
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    bool_0 = True
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(bool_0, none_type_1)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_1, bool_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(var_3, var_3)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xec\xbf\x01y+\xb5&\xd7\x91\xda(\x889e\xf64\x9e\x8d\xa6F"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"?\xe7\xe6\x0f "
    bytes_1 = b")\xee!I\xf8\x1cI\xe9\xea"
    var_0 = module_0.longest_common_subsequence(bytes_1, bytes_0)
    assert var_0 == ""
    bytes_2 = b"\x1b1Q\x00y\x08\xef\r\x19"
    var_1 = module_0.longest_common_subsequence(bytes_1, bytes_2)
    assert var_1 == ""
    module_0.longest_common_subsequence(bytes_0, bytes_0)
