# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


def test_case_0():
    list_0 = []
    object_0 = module_0.object(*list_0)
    var_0 = module_1.longest_common_subsequence(object_0, list_0)
    assert var_0 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(var_0, none_type_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -241.6
    bytes_0 = b"U\xde\xc7\xfa<\xdf"
    module_1.longest_common_subsequence(float_0, bytes_0)


def test_case_3():
    str_0 = "0bv"
    var_0 = module_1.longest_common_subsequence(str_0, str_0)
    assert var_0 == "0bv"
    float_0 = -285.292247
    none_type_0 = None
    var_1 = module_1.longest_common_subsequence(float_0, none_type_0)
    assert var_1 == ""
    set_0 = set()
    var_2 = module_1.longest_common_subsequence(set_0, set_0)
    assert var_2 == ""


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b";\xf6,`\x97\x16\xf4\x1b?ln\xfcZ\x99"
    list_0 = [bytes_0, bytes_0, bytes_0]
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(bytes_0, none_type_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(list_0, none_type_0)
    assert var_1 == ""
    var_2 = module_1.longest_common_subsequence(none_type_0, var_1)
    assert var_2 == ""
    int_0 = -201
    none_type_1 = None
    var_3 = module_1.longest_common_subsequence(none_type_1, none_type_1)
    assert var_3 == ""
    var_4 = module_1.longest_common_subsequence(none_type_1, var_1)
    assert var_4 == ""
    var_5 = module_1.longest_common_subsequence(list_0, bytes_0)
    assert var_5 == ""
    var_6 = module_1.longest_common_subsequence(none_type_1, int_0)
    assert var_6 == ""
    var_7 = module_1.longest_common_subsequence(var_3, none_type_1)
    assert var_7 == ""
    var_8 = module_1.longest_common_subsequence(none_type_0, var_2)
    assert var_8 == ""
    module_1.longest_common_subsequence(int_0, int_0)
