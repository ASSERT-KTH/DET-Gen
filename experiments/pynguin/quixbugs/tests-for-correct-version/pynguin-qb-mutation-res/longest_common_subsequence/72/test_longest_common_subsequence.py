# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    int_0 = 1914
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_0 == ""


def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    str_0 = "T"
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(none_type_1, str_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(str_0, none_type_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_3 == "T"
    set_0 = set()
    var_4 = module_0.longest_common_subsequence(set_0, var_3)
    assert var_4 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""
    tuple_0 = (bool_0,)
    module_0.longest_common_subsequence(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    set_0 = set()
    str_0 = '"Ny{*A8%S:A\tF0'
    list_0 = [set_0, str_0]
    bool_0 = True
    tuple_0 = (str_0, str_0, list_0, bool_0)
    var_0 = module_0.longest_common_subsequence(tuple_0, list_0)
    assert var_0 == '"Ny{*A8%S:A\tF0'
    var_1 = module_0.longest_common_subsequence(set_0, set_0)
    assert var_1 == ""
    int_0 = 301
    module_0.longest_common_subsequence(int_0, int_0)
