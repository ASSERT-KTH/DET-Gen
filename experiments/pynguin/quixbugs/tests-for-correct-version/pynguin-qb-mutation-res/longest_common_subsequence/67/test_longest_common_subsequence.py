# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(set_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xc7\xeef\x1bgF\x027\x8d"
    tuple_0 = (bytes_0,)
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    module_0.longest_common_subsequence(list_0, list_0)


def test_case_3():
    str_0 = "`z`LSI^vyX:"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "`z`LSI^vyX:"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "`z`LSI^vyX:"
    var_2 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_2 == "`z`LSI^vyX:"
    var_3 = module_0.longest_common_subsequence(var_2, str_0)
    assert var_3 == "`z`LSI^vyX:"
    var_4 = module_0.longest_common_subsequence(var_1, var_2)
    assert var_4 == "`z`LSI^vyX:"
    var_5 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_5 == "`z`LSI^vyX:"
    var_6 = module_0.longest_common_subsequence(var_2, var_3)
    assert var_6 == "`z`LSI^vyX:"
    var_7 = module_0.longest_common_subsequence(var_5, var_5)
    assert var_7 == "`z`LSI^vyX:"
    dict_0 = {}
    var_8 = module_0.longest_common_subsequence(dict_0, var_1)
    assert var_8 == ""
    var_9 = module_0.longest_common_subsequence(var_5, var_1)
    assert var_9 == "`z`LSI^vyX:"
    dict_1 = {}
    var_10 = module_0.longest_common_subsequence(dict_1, str_0)
    bool_0 = False
    var_11 = module_0.longest_common_subsequence(var_4, bool_0)
    var_12 = module_0.longest_common_subsequence(dict_1, dict_1)
    var_13 = module_0.longest_common_subsequence(var_9, dict_1)
    var_14 = module_0.longest_common_subsequence(var_5, var_9)
    assert var_14 == "`z`LSI^vyX:"
    var_15 = module_0.longest_common_subsequence(var_11, bool_0)
    none_type_0 = None
    var_16 = module_0.longest_common_subsequence(var_12, var_12)
    var_17 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    bool_1 = False
    var_18 = module_0.longest_common_subsequence(bool_1, var_8)
    var_19 = module_0.longest_common_subsequence(var_11, var_12)
    list_0 = [var_5]
    var_20 = module_0.longest_common_subsequence(list_0, var_10)
    assert var_20 == ""
    var_21 = module_0.longest_common_subsequence(var_5, var_8)
    var_22 = module_0.longest_common_subsequence(var_12, var_2)
    var_23 = module_0.longest_common_subsequence(var_1, var_2)
    assert var_23 == "`z`LSI^vyX:"
    var_24 = module_0.longest_common_subsequence(var_19, str_0)
    var_25 = module_0.longest_common_subsequence(var_17, none_type_0)
    var_26 = module_0.longest_common_subsequence(var_20, none_type_0)
    var_27 = module_0.longest_common_subsequence(dict_1, var_26)
    var_28 = module_0.longest_common_subsequence(list_0, var_1)
    assert var_28 == ""
    var_29 = module_0.longest_common_subsequence(var_11, var_16)
    var_30 = module_0.longest_common_subsequence(var_17, var_25)
    var_31 = module_0.longest_common_subsequence(str_0, none_type_0)
    var_32 = module_0.longest_common_subsequence(bool_0, str_0)
