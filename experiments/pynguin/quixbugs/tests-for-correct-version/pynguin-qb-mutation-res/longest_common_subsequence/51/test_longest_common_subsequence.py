# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    set_0 = set()
    var_0 = module_0.longest_common_subsequence(set_0, set_0)
    assert var_0 == ""


def test_case_2():
    str_0 = "0u=lS@\n)@"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "0u=lS@\n)@"
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == "0u=lS@\n)@"
    none_type_0 = None
    var_2 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_2 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "9Y$4v>"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "9Y$4v>"
    var_1 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_1 == "9Y$4v>"
    bytes_0 = b"\xcf\x1c\x04"
    var_2 = module_0.longest_common_subsequence(str_0, bytes_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_3 == "9Y$4v>"
    bool_0 = False
    var_4 = module_0.longest_common_subsequence(bytes_0, var_2)
    assert var_4 == ""
    none_type_0 = None
    var_5 = module_0.longest_common_subsequence(var_2, none_type_0)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(bool_0, var_1)
    assert var_6 == ""
    bool_1 = True
    module_0.longest_common_subsequence(bool_1, bytes_0)
