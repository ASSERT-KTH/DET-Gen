# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = ".`Bom;Nr-:(+n"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == ".`Bom;Nr-:(+n"


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    float_0 = -654.861905
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(float_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, float_0)
    assert var_1 == ""


def test_case_3():
    str_0 = "vfe:{1]q#}"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "vfe:{1]q#}"
    list_0 = [str_0]
    var_1 = module_0.longest_common_subsequence(str_0, list_0)
    assert var_1 == ""
    str_1 = "ldv"
    var_2 = module_0.longest_common_subsequence(str_1, str_0)
    assert var_2 == "v"
    var_3 = module_0.longest_common_subsequence(var_2, str_1)
    assert var_3 == "v"
    var_4 = module_0.longest_common_subsequence(var_1, list_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(list_0, var_2)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(var_2, var_1)
    assert var_6 == ""
