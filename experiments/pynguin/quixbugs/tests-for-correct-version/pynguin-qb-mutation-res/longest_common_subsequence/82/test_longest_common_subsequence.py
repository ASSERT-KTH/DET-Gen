# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = "Fl[I\\,`3)hw_G&x_#b"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "Fl[I\\,`3)hw_G&x_#b"


def test_case_1():
    int_0 = -135
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(int_0, bool_0)
    assert var_0 == ""


def test_case_2():
    bytes_0 = b"n\xac\x87A\xb0y\xff\x83\x9a\xdaC"
    list_0 = [bytes_0, bytes_0]
    str_0 = "YLJAH{xatSHHdh!Q"
    list_1 = [list_0, str_0, bytes_0, bytes_0]
    var_0 = module_0.longest_common_subsequence(list_1, str_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, list_1)
    assert var_1 == ""
    str_1 = "$dibd/\x0c"
    var_2 = module_0.longest_common_subsequence(str_1, str_1)
    assert var_2 == "$dibd/\x0c"
    none_type_0 = None
    var_3 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_3 == ""
