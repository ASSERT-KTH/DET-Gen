# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = "NV>UI{Qk.Sl~|]"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "NV>UI{Qk.Sl~|]"
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""


def test_case_1():
    none_type_0 = None
    list_0 = [none_type_0]
    var_0 = module_0.longest_common_subsequence(none_type_0, list_0)
    assert var_0 == ""


def test_case_2():
    str_0 = "^ |qfWO"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "^ |qfWO"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "^ |qfWO"
    bytes_0 = b"\x13\xce?\x17\x17!a\x7fK\xb7\xce;\x01"
    var_2 = module_0.longest_common_subsequence(var_0, bytes_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_0, var_1)
    assert var_3 == "^ |qfWO"
    var_4 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_4 == "^ |qfWO"
    var_5 = module_0.longest_common_subsequence(str_0, var_2)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(var_4, str_0)
    assert var_6 == "^ |qfWO"
