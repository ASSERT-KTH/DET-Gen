# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, none_type_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1135
    module_0.longest_common_subsequence(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"Osy\xc5\x80\xe9m\xdc\x947\xf0|O\xbaOE"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_4():
    int_0 = -880
    complex_0 = 978.33 - 1568.118595j
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(complex_0, none_type_0)
    assert var_0 == ""
    dict_0 = {
        int_0: complex_0,
        var_0: var_0,
        none_type_0: int_0,
        none_type_0: none_type_0,
    }
    list_0 = [dict_0, complex_0, int_0]
    var_1 = module_0.longest_common_subsequence(list_0, none_type_0)
    assert var_1 == ""
    bytes_0 = b"\x16\x0b"
    list_1 = [bytes_0, bytes_0, bytes_0]
    var_2 = module_0.longest_common_subsequence(list_1, bytes_0)
    assert var_2 == ""
