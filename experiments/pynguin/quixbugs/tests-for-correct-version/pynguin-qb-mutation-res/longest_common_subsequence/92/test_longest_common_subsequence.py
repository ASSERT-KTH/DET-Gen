# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1840
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_2 == ""


def test_case_2():
    int_0 = 606
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(int_0, bool_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, bool_0)
    assert var_1 == ""


def test_case_3():
    str_0 = "otB12{d;gIfP"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "otB12{d;gIfP"
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_2, var_2)
    assert var_3 == ""


def test_case_4():
    str_0 = "w"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "w"
    str_1 = "]7L:\n/,;N@nL"
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, var_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(str_1, str_1)
    assert var_2 == "]7L:\n/,;N@nL"
    var_3 = module_0.longest_common_subsequence(str_0, str_1)
    assert var_3 == ""
    list_0 = [str_1, var_2, var_2]
    var_4 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_4 == "w"
    var_5 = module_0.longest_common_subsequence(var_2, var_1)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(list_0, str_1)
    assert var_6 == ""
    list_1 = [list_0]
    var_7 = module_0.longest_common_subsequence(var_0, list_1)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(var_6, var_4)
    assert var_8 == ""
