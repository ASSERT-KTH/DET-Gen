# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    var_0 = module_0.longest_common_subsequence(bool_0, set_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.object(**none_type_0)


def test_case_3():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    str_0 = "^2:)%}\x0cC6x>His"
    bytes_0 = b"3X%.\x08G\xc3L\x81"
    list_0 = [str_0, str_0, str_0, bytes_0]
    var_1 = module_0.longest_common_subsequence(list_0, bytes_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x81\xb9|lP"
    module_0.longest_common_subsequence(bytes_0, bytes_0)
