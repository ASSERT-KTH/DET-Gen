# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.longest_common_subsequence(dict_0, bool_0)
    assert var_0 == ""


def test_case_1():
    dict_0 = {}
    var_0 = module_0.longest_common_subsequence(dict_0, dict_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    set_0 = {bool_0}
    module_0.longest_common_subsequence(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    none_type_0 = None
    object_0 = module_1.object()
    var_0 = module_0.longest_common_subsequence(object_0, tuple_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(tuple_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(tuple_0, tuple_0)
    assert var_2 == ""
    tuple_1 = (var_2,)
    tuple_2 = (tuple_1, var_2, var_2, var_2)
    var_3 = module_0.longest_common_subsequence(tuple_2, tuple_1)
    assert var_3 == ""
    bytes_0 = b"\x89\x91\x7f\xf5a"
    module_0.longest_common_subsequence(bytes_0, bytes_0)
