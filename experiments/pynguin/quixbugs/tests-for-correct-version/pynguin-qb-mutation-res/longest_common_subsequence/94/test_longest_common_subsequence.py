# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


def test_case_0():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(object_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    bool_0 = False
    var_0 = module_1.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -3254
    module_1.longest_common_subsequence(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = 338.5197 - 271.256j
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(none_type_0, complex_0)
    assert var_0 == ""
    list_0 = [complex_0]
    tuple_0 = (complex_0, list_0)
    module_1.longest_common_subsequence(tuple_0, list_0)


def test_case_4():
    str_0 = ")3,v.bQA c{{D>[Aw 3"
    none_type_0 = None
    var_0 = module_1.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    bytes_0 = b"\x19"
    var_1 = module_1.longest_common_subsequence(str_0, bytes_0)
    assert var_1 == ""
    var_2 = module_1.longest_common_subsequence(var_0, bytes_0)
    assert var_2 == ""
    str_1 = "9_BN"
    var_3 = module_1.longest_common_subsequence(bytes_0, str_1)
    assert var_3 == ""
    complex_0 = -4333.8 + 3.5355j
    bool_0 = False
    var_4 = module_1.longest_common_subsequence(bool_0, var_3)
    assert var_4 == ""
    var_5 = module_1.longest_common_subsequence(str_0, var_3)
    assert var_5 == ""
    var_6 = module_1.longest_common_subsequence(complex_0, bool_0)
    assert var_6 == ""
    list_0 = [complex_0, complex_0, complex_0]
    none_type_1 = None
    var_7 = module_1.longest_common_subsequence(str_0, none_type_1)
    assert var_7 == ""
    var_8 = module_1.longest_common_subsequence(none_type_1, complex_0)
    assert var_8 == ""
    tuple_0 = ()
    var_9 = module_1.longest_common_subsequence(list_0, tuple_0)
    assert var_9 == ""
