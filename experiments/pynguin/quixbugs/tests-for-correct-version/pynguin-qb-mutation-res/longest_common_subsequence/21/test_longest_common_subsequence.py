# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = -445.206007
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    module_0.longest_common_subsequence(float_0, float_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = ()
    var_0 = module_0.longest_common_subsequence(bool_0, tuple_0)
    assert var_0 == ""
    module_0.longest_common_subsequence(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ")NI'/!"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_0 == ""
    bytes_0 = b"\x8cg\xeb\x8f\xe4u"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    bytes_0 = b"\x0f\xaa\x81\xb0\x95D"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_1 = module_0.longest_common_subsequence(bytes_0, list_0)
    assert var_1 == ""
    none_type_1 = None
    var_2 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(list_0, bytes_0)
    assert var_3 == ""
    module_0.longest_common_subsequence(list_0, list_0)
