# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    module_0.longest_common_subsequence(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xe8Xi\x1e;\x98h"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_0 == ""
    int_0 = 1965
    module_0.longest_common_subsequence(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    str_0 = '+`?*"4 M?UR"1d\t~E'
    str_1 = "./N_\r8@pn^ "
    tuple_0 = (bool_0, str_0, str_1)
    var_0 = module_0.longest_common_subsequence(tuple_0, str_1)
    assert var_0 == ""
    object_0 = module_1.object()
    module_0.longest_common_subsequence(object_0, object_0)
