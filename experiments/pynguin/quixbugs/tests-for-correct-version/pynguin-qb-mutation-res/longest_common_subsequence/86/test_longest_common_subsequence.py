# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    bytes_0 = b"\xce\xa3\xfdPe\x9c\xb2"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""


def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_2 == ""
    complex_0 = 91.18 + 587j
    var_3 = module_0.longest_common_subsequence(complex_0, var_1)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "kws.\t0\\xR;){VX"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "kws.\t0\\xR;){VX"
    dict_0 = {}
    var_1 = module_0.longest_common_subsequence(var_0, str_0)
    assert var_1 == "kws.\t0\\xR;){VX"
    tuple_0 = (dict_0, str_0)
    str_1 = "da~:`!xy"
    var_2 = module_0.longest_common_subsequence(str_1, dict_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(var_0, dict_0)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(str_0, tuple_0)
    assert var_4 == ""
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, str_0)
