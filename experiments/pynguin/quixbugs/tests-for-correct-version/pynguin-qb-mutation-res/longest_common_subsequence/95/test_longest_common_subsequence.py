# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"o\xf6`\x17\x93\xb4X"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""


def test_case_2():
    bytes_0 = b"K \xe5\xdb\x00Z\xee\\7\x85"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_0 == ""


def test_case_3():
    tuple_0 = ()
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(tuple_0, tuple_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(tuple_0, var_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(none_type_0, var_1)
    assert var_3 == ""
    var_4 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_4 == ""
    none_type_1 = None
    var_5 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_6 == ""
    str_0 = "\\"
    var_7 = module_0.longest_common_subsequence(var_1, var_3)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(none_type_0, var_1)
    assert var_8 == ""
    var_9 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_9 == "\\"
    var_10 = module_0.longest_common_subsequence(none_type_1, none_type_0)
    assert var_10 == ""
    list_0 = [var_10]
    var_11 = module_0.longest_common_subsequence(var_9, list_0)
    assert var_11 == ""
    bool_0 = False
    var_12 = module_0.longest_common_subsequence(var_8, bool_0)
    assert var_12 == ""
    var_13 = module_0.longest_common_subsequence(none_type_1, var_5)
    assert var_13 == ""
