# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    bytes_0 = b":u\xb1v\xe6\xb2Y\xb7\xf5\x13"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x00\xd0\xe5"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_3():
    str_0 = "xX"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "xX"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "xX"
    none_type_0 = None
    var_2 = module_0.longest_common_subsequence(var_1, none_type_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_3 == "xX"
    var_4 = module_0.longest_common_subsequence(var_1, var_0)
    assert var_4 == "xX"
    var_5 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_5 == "xX"
    var_6 = module_0.longest_common_subsequence(var_5, var_5)
    assert var_6 == "xX"
    var_7 = module_0.longest_common_subsequence(var_5, var_5)
    assert var_7 == "xX"
    str_1 = "d:B4'69-,HmJ5/[@"
    var_8 = module_0.longest_common_subsequence(str_1, var_7)
    assert var_8 == ""
    var_9 = module_0.longest_common_subsequence(str_0, var_5)
    assert var_9 == "xX"
    var_10 = module_0.longest_common_subsequence(var_9, var_5)
    assert var_10 == "xX"
