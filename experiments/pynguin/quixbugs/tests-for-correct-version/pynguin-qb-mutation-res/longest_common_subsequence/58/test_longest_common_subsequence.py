# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.longest_common_subsequence(tuple_0, tuple_0)
    assert var_0 == ""


def test_case_2():
    bytes_0 = b"C\x86\xf4\xb6\x9d0"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_0 == ""


def test_case_3():
    dict_0 = {}
    var_0 = module_0.longest_common_subsequence(dict_0, dict_0)
    assert var_0 == ""
    str_0 = "UMOK%zlMe{1"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "UMOK%zlMe{1"


def test_case_4():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    dict_0 = {bool_0: bool_0, bool_0: set_0}
    str_0 = '`M!4.K}nns=" >'
    tuple_0 = (bool_0, set_0, dict_0, str_0)
    var_0 = module_0.longest_common_subsequence(tuple_0, str_0)
    assert var_0 == ""
