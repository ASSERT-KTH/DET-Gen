# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x12\xc2\xd8>W\xcc$8[|b\x07\xec\xec\xb7\xb5\xd1"
    module_0.longest_common_subsequence(bytes_0, bytes_0)


def test_case_1():
    pass


def test_case_2():
    list_0 = []
    object_0 = module_1.object(*list_0)
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(object_0, none_type_0)
    assert var_0 == ""


def test_case_3():
    str_0 = "Hl3%j&w#"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "Hl3%j&w#"
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "Hl3%j&w#"
    tuple_0 = (str_0, str_0)
    var_2 = module_0.longest_common_subsequence(tuple_0, str_0)
    assert var_2 == ""
    dict_0 = {}
    var_3 = module_0.longest_common_subsequence(var_1, dict_0)
    assert var_3 == ""
    none_type_0 = None
    bool_0 = False
    var_4 = module_0.longest_common_subsequence(none_type_0, bool_0)
    assert var_4 == ""
    var_5 = module_0.longest_common_subsequence(tuple_0, bool_0)
    assert var_5 == ""
