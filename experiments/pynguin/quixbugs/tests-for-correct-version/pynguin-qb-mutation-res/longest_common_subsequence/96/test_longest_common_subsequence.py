# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import longest_common_subsequence as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    int_0 = 1473
    tuple_0 = (object_0, int_0)
    module_1.longest_common_subsequence(tuple_0, tuple_0)


def test_case_1():
    bool_0 = False
    var_0 = module_1.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""
    var_1 = module_1.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""


def test_case_2():
    dict_0 = {}
    tuple_0 = (dict_0,)
    bool_0 = False
    var_0 = module_1.longest_common_subsequence(tuple_0, bool_0)
    assert var_0 == ""
    float_0 = -1518.3
    var_1 = module_1.longest_common_subsequence(var_0, float_0)
    assert var_1 == ""


def test_case_3():
    bytes_0 = b"K5\xd9"
    bytes_1 = b"\xbf)\x86\x13Nu\xb1\xa5\x8f\x1a\xb3"
    int_0 = 709
    tuple_0 = (bytes_0, bytes_1, int_0)
    list_0 = [tuple_0, int_0, bytes_0, int_0]
    var_0 = module_1.longest_common_subsequence(list_0, bytes_0)
    assert var_0 == ""
    none_type_0 = None
    dict_0 = {}
    var_1 = module_1.longest_common_subsequence(dict_0, dict_0)
    assert var_1 == ""
    var_2 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_2 == ""
    var_3 = module_1.longest_common_subsequence(none_type_0, var_2)
    assert var_3 == ""
    var_4 = module_1.longest_common_subsequence(dict_0, var_2)
    assert var_4 == ""
    var_5 = module_1.longest_common_subsequence(none_type_0, none_type_0)
    assert var_5 == ""
    var_6 = module_1.longest_common_subsequence(var_2, var_5)
    assert var_6 == ""
