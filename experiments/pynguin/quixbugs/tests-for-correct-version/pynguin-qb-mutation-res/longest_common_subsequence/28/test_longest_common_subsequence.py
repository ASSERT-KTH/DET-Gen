# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.longest_common_subsequence(tuple_0, tuple_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(tuple_0, tuple_0)
    assert var_1 == ""


def test_case_2():
    int_0 = 2295
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_0 == ""


def test_case_3():
    str_0 = "Y[4&\\#r"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "Y[4&\\#r"
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(str_0, none_type_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "e\n$'r9Q"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "e\n$'r9Q"
    var_1 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_1 == "e\n$'r9Q"
    list_0 = [str_0, str_0, str_0, str_0]
    float_0 = 145.526438
    var_2 = module_0.longest_common_subsequence(var_0, list_0)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(str_0, var_1)
    assert var_3 == "e\n$'r9Q"
    float_1 = 923.8042
    module_0.longest_common_subsequence(float_0, float_1)
