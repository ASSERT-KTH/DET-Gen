# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 2038
    module_0.longest_common_subsequence(int_0, int_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.longest_common_subsequence(bool_0, bool_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x9d9hT\xc4\xa2^"
    bool_0 = False
    set_0 = {bytes_0, bytes_0, bool_0, bool_0}
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(bool_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_1 == ""
    module_0.longest_common_subsequence(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2273
    tuple_0 = (int_0,)
    module_0.longest_common_subsequence(tuple_0, tuple_0)


def test_case_4():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    none_type_1 = None
    var_1 = module_0.longest_common_subsequence(none_type_1, none_type_1)
    assert var_1 == ""
    float_0 = 85.5834
    var_2 = module_0.longest_common_subsequence(float_0, none_type_1)
    assert var_2 == ""
    var_3 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_3 == ""
    none_type_2 = None
    var_4 = module_0.longest_common_subsequence(float_0, none_type_2)
    assert var_4 == ""
    str_0 = "7ho'ANsY0;c"
    var_5 = module_0.longest_common_subsequence(var_4, str_0)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(none_type_0, var_3)
    assert var_6 == ""
    list_0 = [str_0]
    var_7 = module_0.longest_common_subsequence(var_1, var_4)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(list_0, str_0)
    assert var_8 == ""
