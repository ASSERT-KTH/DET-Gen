# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = 'y\\Z3=q6>6SL "M,,'
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == 'y\\Z3=q6>6SL "M,,'


def test_case_1():
    float_0 = -600.29582
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(float_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xd1\xda"
    float_0 = 1343.28361
    bytes_1 = b"\x9f\xf6\xd1\x11rSs\xebj"
    list_0 = [bytes_1]
    bool_0 = False
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    tuple_0 = (list_0, bool_0)
    var_1 = module_0.longest_common_subsequence(bytes_0, tuple_0)
    assert var_1 == ""
    list_1 = [bytes_0, float_0, bytes_0, bytes_0]
    bytes_2 = b"\xe9X\x01\x0bq"
    var_2 = module_0.longest_common_subsequence(bytes_2, tuple_0)
    assert var_2 == ""
    none_type_1 = None
    var_3 = module_0.longest_common_subsequence(none_type_1, float_0)
    assert var_3 == ""
    tuple_1 = (bytes_0, float_0, list_1, bytes_0)
    module_0.longest_common_subsequence(tuple_1, float_0)
