# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


def test_case_0():
    str_0 = "\n=G~4qr"
    list_0 = [str_0]
    var_0 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_0 == "\n=G~4qr"


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


def test_case_2():
    complex_0 = 1931.261752 + 2255.112j
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(complex_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(var_0, none_type_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "|liSnH{!s\x0cUY'Oco"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "|liSnH{!s\x0cUY'Oco"
    float_0 = 1941.0
    int_0 = 1157
    tuple_0 = (var_0,)
    tuple_1 = (var_0, int_0, tuple_0)
    var_1 = module_0.longest_common_subsequence(tuple_1, var_0)
    assert var_1 == ""
    set_0 = {float_0, float_0}
    module_0.longest_common_subsequence(float_0, set_0)
