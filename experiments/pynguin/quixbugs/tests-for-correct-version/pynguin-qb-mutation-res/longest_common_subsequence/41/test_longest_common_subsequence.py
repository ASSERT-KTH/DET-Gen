# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "k~.`a'Ris[VAsN$B7m"
    int_0 = 771
    module_0.longest_common_subsequence(str_0, int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""


def test_case_2():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""
    float_0 = -426.7731
    tuple_0 = (var_0, float_0, var_0)
    dict_0 = {var_0: tuple_0, tuple_0: none_type_0, float_0: tuple_0, float_0: tuple_0}
    var_1 = module_0.longest_common_subsequence(dict_0, var_0)
    assert var_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "FgnLeca>=3.pA)"
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, str_0)
    assert var_0 == ""
    var_1 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_1 == "FgnLeca>=3.pA)"
    bool_0 = True
    module_0.longest_common_subsequence(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"w\x92\x85\x1f]4,5\xfc\x00\x07"
    bytes_1 = b"#\x8c\xdd\x0b ~D<\n"
    var_0 = module_0.longest_common_subsequence(bytes_0, bytes_1)
    assert var_0 == ""
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, bytes_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(bytes_0, none_type_0)
    assert var_2 == ""
    bytes_2 = b"C3\xdf8\x9be@\xbb\xa1\x08-\\e"
    module_0.longest_common_subsequence(bytes_2, bytes_2)
