# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0
import builtins as module_1


def test_case_0():
    int_0 = -157
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(int_0, none_type_0)
    assert var_0 == ""


def test_case_1():
    none_type_0 = None
    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0]
    module_0.longest_common_subsequence(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -1803.357
    list_0 = []
    var_0 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_0 == ""
    str_0 = "X7m"
    none_type_0 = None
    str_1 = "1;^*y"
    dict_0 = {float_0: str_0, float_0: float_0, str_0: var_0}
    var_1 = module_0.longest_common_subsequence(list_0, dict_0)
    assert var_1 == ""
    bool_0 = False
    tuple_0 = (var_1, var_1, bool_0)
    var_2 = module_0.longest_common_subsequence(str_0, tuple_0)
    assert var_2 == ""
    str_2 = "^B5Xj'c.Ge8<]#"
    dict_1 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_2: none_type_0,
    }
    module_1.object(*list_0, **dict_1)
