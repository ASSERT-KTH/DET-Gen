# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import longest_common_subsequence as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 1208.676
    module_0.longest_common_subsequence(float_0, float_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.longest_common_subsequence(list_0, list_0)
    assert var_0 == ""


def test_case_2():
    str_0 = "\tHp"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "\tHp"
    none_type_0 = None
    var_1 = module_0.longest_common_subsequence(none_type_0, none_type_0)
    assert var_1 == ""
    var_2 = module_0.longest_common_subsequence(var_0, var_1)
    assert var_2 == ""


def test_case_3():
    str_0 = "58X.-.t&/&XA=e"
    var_0 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_0 == "58X.-.t&/&XA=e"
    var_1 = module_0.longest_common_subsequence(str_0, var_0)
    assert var_1 == "58X.-.t&/&XA=e"
    var_2 = module_0.longest_common_subsequence(str_0, str_0)
    assert var_2 == "58X.-.t&/&XA=e"
    var_3 = module_0.longest_common_subsequence(var_1, var_1)
    assert var_3 == "58X.-.t&/&XA=e"
    str_1 = "Y,"
    var_4 = module_0.longest_common_subsequence(var_0, str_0)
    assert var_4 == "58X.-.t&/&XA=e"
    var_5 = module_0.longest_common_subsequence(str_0, str_1)
    assert var_5 == ""
    var_6 = module_0.longest_common_subsequence(var_0, var_0)
    assert var_6 == "58X.-.t&/&XA=e"
    complex_0 = 2256.66 - 34.152286j
    var_7 = module_0.longest_common_subsequence(complex_0, var_5)
    assert var_7 == ""
    var_8 = module_0.longest_common_subsequence(str_0, var_5)
    var_9 = module_0.longest_common_subsequence(str_0, var_5)
    var_10 = module_0.longest_common_subsequence(var_9, str_0)
