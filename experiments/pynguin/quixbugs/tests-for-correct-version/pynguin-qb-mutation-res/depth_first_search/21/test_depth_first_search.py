# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"Q\xed\x05\x9e\xc1"
    set_0 = {bytes_0}
    module_0.depth_first_search(set_0, bytes_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    node_0 = module_1.Node(
        bool_0, predecessors=bool_0, incoming_nodes=none_type_0, outgoing_nodes=bool_0
    )
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    var_1 = module_0.depth_first_search(node_0, var_0)


def test_case_3():
    node_0 = module_1.Node()
    var_0 = module_0.depth_first_search(node_0, node_0)
    assert var_0 is True
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(successors=list_0)
    var_1 = module_0.depth_first_search(node_1, list_0)
    assert var_1 is False
