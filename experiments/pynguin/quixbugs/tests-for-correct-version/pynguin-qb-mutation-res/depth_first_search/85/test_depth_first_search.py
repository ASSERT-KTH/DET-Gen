# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.depth_first_search(bool_0, bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    complex_0 = 2168.0571 - 2482j
    module_0.depth_first_search(none_type_0, complex_0)


def test_case_2():
    none_type_0 = None
    node_0 = module_1.Node()
    var_0 = module_0.depth_first_search(node_0, none_type_0)
    assert var_0 is False
    var_1 = module_0.depth_first_search(node_0, node_0)
    assert var_1 is True


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "9f8wFd%"
    var_0 = module_0.depth_first_search(str_0, str_0)
    assert var_0 is True
    node_0 = module_1.Node(var_0, successors=str_0, incoming_nodes=var_0)
    assert node_0.value is True
    assert node_0.incoming_nodes is True
    var_1 = module_0.depth_first_search(var_0, var_0)
    assert var_1 is True
    module_0.depth_first_search(node_0, var_1)
