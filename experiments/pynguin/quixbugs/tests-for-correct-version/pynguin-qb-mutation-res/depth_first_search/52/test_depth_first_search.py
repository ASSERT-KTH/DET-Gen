# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    var_0 = module_0.depth_first_search(bool_0, bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    str_0 = "shH72PT}9~,WyVf'#8L"
    none_type_1 = None
    node_0 = module_1.Node(
        successors=str_0, predecessors=none_type_1, incoming_nodes=str_0
    )
    module_0.depth_first_search(node_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    node_0 = module_1.Node()
    tuple_0 = (node_0, node_0)
    none_type_0 = None
    node_1 = module_1.Node(
        successors=tuple_0,
        predecessors=node_0,
        incoming_nodes=none_type_0,
        outgoing_nodes=none_type_0,
    )
    var_0 = module_0.depth_first_search(node_1, none_type_0)
    assert var_0 is False
    str_0 = "2<mh;"
    tuple_1 = (str_0,)
    object_0 = module_2.object()
    module_0.depth_first_search(tuple_1, object_0)
