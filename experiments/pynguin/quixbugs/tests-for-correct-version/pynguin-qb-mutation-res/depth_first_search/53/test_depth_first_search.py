# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    bytes_0 = b"\xdd[%\xc7\x95"
    var_0 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    module_0.depth_first_search(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    node_0 = module_1.Node(bool_0, incoming_nodes=bool_0)
    var_0 = module_0.depth_first_search(node_0, bool_0)
    assert var_0 is False
    var_0.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    none_type_1 = None
    bytes_0 = b"\x92\xefL]\xcd\xd5S\xe6\xda\xce=\xf3\x1b}b"
    node_0 = module_1.Node(
        none_type_1,
        successors=bytes_0,
        predecessors=none_type_1,
        incoming_nodes=bytes_0,
    )
    var_1 = module_0.depth_first_search(node_0, node_0)
    assert var_1 is True
    module_0.depth_first_search(node_0, bytes_0)
