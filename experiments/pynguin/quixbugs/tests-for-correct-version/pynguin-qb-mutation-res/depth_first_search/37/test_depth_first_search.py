# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "E!H.\x0ca88l]5'gSVO\\"
    bool_0 = False
    var_0 = module_0.depth_first_search(bool_0, bool_0)
    assert var_0 is True
    none_type_0 = None
    var_1 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_1 is True
    node_0 = module_1.Node(
        successor=str_0,
        successors=str_0,
        incoming_nodes=none_type_0,
        outgoing_nodes=none_type_0,
    )
    module_0.depth_first_search(node_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_2.object()
    node_0 = module_1.Node(object_0, predecessors=object_0, outgoing_nodes=object_0)
    var_0 = module_0.depth_first_search(node_0, object_0)
    assert var_0 is False
    node_0.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    bool_0 = False
    module_0.depth_first_search(bool_0, var_0)
