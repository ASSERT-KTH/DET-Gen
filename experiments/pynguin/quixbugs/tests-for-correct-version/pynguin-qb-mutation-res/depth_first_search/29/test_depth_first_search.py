# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import builtins as module_1
import node as module_2


def test_case_0():
    tuple_0 = ()
    var_0 = module_0.depth_first_search(tuple_0, tuple_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
    }
    node_0 = module_2.Node(
        successor=object_0, incoming_nodes=dict_0, outgoing_nodes=object_0
    )
    var_0 = module_0.depth_first_search(node_0, object_0)
    assert var_0 is False
    var_1 = module_0.depth_first_search(object_0, object_0)
    assert var_1 is True
    var_1.successor()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    module_0.depth_first_search(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    var_0 = module_0.depth_first_search(bool_0, bool_0)
    assert var_0 is True
    bytes_0 = b">g#'o\xef\x07\x90U\xa9[\xd1*"
    node_0 = module_2.Node(bytes_0, bytes_0, bytes_0, outgoing_nodes=bytes_0)
    none_type_0 = None
    module_0.depth_first_search(node_0, none_type_0)
