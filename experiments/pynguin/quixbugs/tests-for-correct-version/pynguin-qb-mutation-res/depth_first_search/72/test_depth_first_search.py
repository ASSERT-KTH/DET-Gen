# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True


def test_case_1():
    bool_0 = False
    none_type_0 = None
    node_0 = module_1.Node(bool_0, none_type_0, incoming_nodes=bool_0)
    var_0 = module_0.depth_first_search(node_0, node_0)
    assert var_0 is True
    var_1 = module_0.depth_first_search(node_0, var_0)
    assert var_1 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -2968.0
    none_type_0 = None
    module_0.depth_first_search(none_type_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb2/\xd6\n=S\xdd*\xe6P\xe9\xbd\xfc\x0e\xa1sN@"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    node_0 = module_1.Node(successors=dict_0, outgoing_nodes=none_type_0)
    object_0 = module_2.object()
    var_0 = module_0.depth_first_search(object_0, object_0)
    assert var_0 is True
    module_0.depth_first_search(node_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '"5ib.NRR1"k@'
    node_0 = module_1.Node(predecessors=str_0)
    var_0 = module_0.depth_first_search(node_0, node_0)
    assert var_0 is True
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(list_0, successors=list_0)
    var_1 = module_0.depth_first_search(node_1, str_0)
    assert var_1 is False
    none_type_0 = None
    var_2 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_2 is True
    var_3 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_3 is True
    var_3.successor()
