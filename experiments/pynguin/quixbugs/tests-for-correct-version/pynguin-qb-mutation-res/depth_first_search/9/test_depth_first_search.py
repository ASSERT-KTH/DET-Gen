# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    int_0 = -2196
    var_0 = module_0.depth_first_search(int_0, int_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    node_0 = module_1.Node(bool_0)
    module_0.depth_first_search(bool_0, node_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"f\xf8\x08\x89"
    var_0 = module_1.Node(bytes_0, successors=bytes_0, predecessors=bytes_0)
    var_1 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_1 is True
    var_2 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_2 is True
    module_0.depth_first_search(var_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "XT7B?[!?[_+{d"
    var_0 = module_0.depth_first_search(str_0, str_0)
    assert var_0 is True
    var_1 = module_0.depth_first_search(str_0, str_0)
    assert var_1 is True
    str_1 = ""
    node_0 = module_1.Node(successor=str_1)
    var_2 = module_0.depth_first_search(node_0, str_0)
    var_3 = module_0.depth_first_search(str_1, str_1)
    assert var_3 is True
    dict_0 = {str_1: str_0}
    module_0.depth_first_search(dict_0, var_0)
