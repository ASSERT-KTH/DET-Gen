# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    str_0 = "&"
    var_0 = module_0.depth_first_search(str_0, str_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x13)\x8c\x0f"
    node_0 = module_1.Node(successors=bytes_0, outgoing_nodes=bytes_0)
    module_0.depth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    node_0 = module_1.Node(bool_0, predecessors=bool_0, incoming_nodes=bool_0)
    var_0 = module_0.depth_first_search(node_0, bool_0)
    assert var_0 is False
    var_1 = module_0.depth_first_search(var_0, var_0)
    assert var_1 is True
    int_0 = 2943
    module_0.depth_first_search(int_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x1d\xa8\x0f\xfb\x00\xc6\x1e\x89H>\xc5\xb1"
    none_type_0 = None
    module_0.depth_first_search(bytes_0, none_type_0)
