# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True


def test_case_1():
    str_0 = "Nj`^f1.MYD>O)vv$"
    node_0 = module_1.Node(successor=str_0)
    list_0 = [str_0, str_0]
    var_0 = module_0.depth_first_search(node_0, list_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -737.68846
    none_type_0 = None
    module_0.depth_first_search(float_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    var_1 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_1 is True
    none_type_1 = None
    node_0 = module_1.Node(
        predecessors=var_0, incoming_nodes=none_type_1, outgoing_nodes=var_0
    )
    assert node_0.predecessors is True
    assert node_0.outgoing_nodes is True
    bytes_0 = b"q"
    node_1 = module_1.Node(node_0, successors=bytes_0, outgoing_nodes=var_1)
    assert node_1.outgoing_nodes is True
    module_0.depth_first_search(node_1, var_1)
