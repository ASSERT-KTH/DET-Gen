# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    bytes_0 = b"\x15\xc9`\x91V\xd0B"
    var_0 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    module_0.depth_first_search(var_0, none_type_0)


def test_case_2():
    node_0 = module_1.Node()
    node_1 = module_1.Node(node_0, outgoing_nodes=node_0)
    var_0 = module_0.depth_first_search(node_0, node_1)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    node_0 = module_1.Node()
    float_0 = -1183.1
    tuple_0 = (node_0, node_0, float_0)
    node_1 = module_1.Node(
        successors=tuple_0, predecessors=node_0, outgoing_nodes=tuple_0
    )
    var_0 = module_0.depth_first_search(node_1, float_0)
    assert var_0 is True
    module_0.depth_first_search(float_0, tuple_0)
