# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    complex_0 = 155.564562 - 467.7345j
    var_0 = module_0.depth_first_search(complex_0, complex_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"m&wO\x9c\x1f/\xca\xd7X\x9fF"
    node_0 = module_1.Node(successors=bytes_0)
    module_0.depth_first_search(node_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    bool_0 = True
    none_type_1 = None
    module_0.depth_first_search(bool_0, none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    node_0 = module_1.Node(none_type_0)
    int_0 = 300
    int_1 = 130
    dict_0 = {node_0: none_type_0, int_0: int_1}
    tuple_0 = (node_0, node_0, node_0, dict_0)
    node_1 = module_1.Node(successors=tuple_0)
    module_0.depth_first_search(node_1, tuple_0)
