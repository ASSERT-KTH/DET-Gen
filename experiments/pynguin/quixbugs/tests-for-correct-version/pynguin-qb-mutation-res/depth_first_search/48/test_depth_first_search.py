# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    var_0 = module_0.depth_first_search(bool_0, bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.depth_first_search(bool_0, bool_0)
    assert var_0 is True
    module_0.depth_first_search(bool_0, var_0)


def test_case_2():
    node_0 = module_1.Node()
    set_0 = {node_0, node_0, node_0, node_0}
    var_0 = module_0.depth_first_search(node_0, set_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    node_0 = module_1.Node()
    var_0 = module_0.depth_first_search(node_0, node_0)
    assert var_0 is True
    set_0 = {node_0, node_0, node_0, node_0}
    var_1 = module_1.Node(set_0, successors=set_0)
    var_2 = module_0.depth_first_search(node_0, node_0)
    assert var_2 is True
    str_0 = "xV ,h=."
    var_3 = module_2.object()
    var_4 = module_0.depth_first_search(var_1, str_0)
    assert var_4 is False
    var_1.successor()
