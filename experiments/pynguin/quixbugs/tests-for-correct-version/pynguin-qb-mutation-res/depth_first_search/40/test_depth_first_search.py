# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    bytes_0 = b"\x8b\xcdx)\xb6R"
    var_0 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x8b\xcd)\xb6R"
    var_0 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_0 is True
    none_type_0 = None
    module_0.depth_first_search(none_type_0, bytes_0)


def test_case_2():
    bytes_0 = b"\x8b\xcd)\xb6R"
    var_0 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_0 is True
    node_0 = module_1.Node(predecessors=bytes_0, incoming_nodes=bytes_0)
    var_1 = module_0.depth_first_search(node_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"V5"
    var_0 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_0 is True
    none_type_0 = None
    node_0 = module_1.Node(
        var_0, bytes_0, bytes_0, incoming_nodes=none_type_0, outgoing_nodes=none_type_0
    )
    assert node_0.value is True
    module_0.depth_first_search(node_0, none_type_0)
