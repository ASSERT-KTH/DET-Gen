# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    node_0 = module_1.Node(successors=tuple_0)
    var_0 = module_0.depth_first_search(node_0, tuple_0)
    assert var_0 is False
    var_1 = module_0.depth_first_search(var_0, var_0)
    assert var_1 is True
    var_2 = module_0.depth_first_search(var_0, var_0)
    assert var_2 is True
    var_2.successors()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    module_0.depth_first_search(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"H\xe2\xe1"
    var_0 = module_0.depth_first_search(bytes_0, bytes_0)
    assert var_0 is True
    tuple_0 = ()
    node_0 = module_1.Node(successors=bytes_0, outgoing_nodes=var_0)
    assert node_0.outgoing_nodes is True
    module_0.depth_first_search(node_0, tuple_0)
