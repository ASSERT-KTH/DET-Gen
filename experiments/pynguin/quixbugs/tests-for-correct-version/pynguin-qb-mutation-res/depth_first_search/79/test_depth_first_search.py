# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import depth_first_search as module_1
import node as module_2


def test_case_0():
    object_0 = module_0.object()
    var_0 = module_1.depth_first_search(object_0, object_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xe2\x9an,\x80"
    str_0 = "WU;/#/\x0b}9x`.`uoW"
    node_0 = module_2.Node(predecessors=bytes_0)
    var_0 = module_1.depth_first_search(node_0, str_0)
    assert var_0 is False
    module_1.depth_first_search(var_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xe2\x9an,\x80"
    var_0 = module_1.depth_first_search(bytes_0, bytes_0)
    assert var_0 is True
    module_1.depth_first_search(var_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_1.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    bool_0 = True
    str_0 = "WU;/#/\x0b}9x`.`uoW"
    node_0 = module_2.Node(bool_0, bool_0, str_0)
    module_1.depth_first_search(node_0, bool_0)
