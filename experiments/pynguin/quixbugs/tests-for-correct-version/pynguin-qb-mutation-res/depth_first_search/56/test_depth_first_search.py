# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    float_0 = 1736.152435
    var_0 = module_0.depth_first_search(float_0, float_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"h\x9a\xb6%U\xbfK\xf8\x99"
    none_type_0 = None
    module_0.depth_first_search(none_type_0, bytes_0)


def test_case_2():
    float_0 = 2935.1
    node_0 = module_1.Node(float_0, float_0)
    var_0 = module_0.depth_first_search(node_0, float_0)
    assert var_0 is False
    bool_0 = False
    var_1 = module_0.depth_first_search(bool_0, bool_0)
    assert var_1 is True


def test_case_3():
    none_type_0 = None
    node_0 = module_1.Node(none_type_0)
    list_0 = [node_0, node_0]
    node_1 = module_1.Node(successors=list_0)
    var_0 = module_0.depth_first_search(node_1, node_1)
    assert var_0 is True
    var_1 = module_0.depth_first_search(node_1, none_type_0)
    assert var_1 is False
