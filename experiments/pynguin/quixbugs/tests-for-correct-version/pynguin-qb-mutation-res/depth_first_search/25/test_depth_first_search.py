# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -1708
    set_0 = {int_0, int_0, int_0}
    str_0 = ""
    module_0.depth_first_search(set_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xdd\x7f\x15~\x05\x070G\x8cw\x1d"
    none_type_0 = None
    node_0 = module_1.Node(incoming_nodes=none_type_0, outgoing_nodes=bytes_0)
    var_0 = module_0.depth_first_search(node_0, node_0)
    assert var_0 is True
    var_1 = module_1.Node(bytes_0, incoming_nodes=bytes_0)
    var_2 = module_0.depth_first_search(node_0, node_0)
    assert var_2 is True
    var_3 = module_0.depth_first_search(var_1, bytes_0)
    assert var_3 is False
    var_4 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_4 is True
    module_0.depth_first_search(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xdd\x7f\x15~\x05\x070GC\x1d"
    node_0 = module_1.Node(successor=bytes_0, successors=bytes_0, predecessors=bytes_0)
    none_type_0 = None
    module_0.depth_first_search(node_0, none_type_0)
