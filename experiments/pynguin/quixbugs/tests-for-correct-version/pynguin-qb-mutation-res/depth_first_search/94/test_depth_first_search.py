# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    float_0 = -2642.87
    var_0 = module_0.depth_first_search(float_0, float_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    none_type_0 = None
    module_0.depth_first_search(bool_0, none_type_0)


def test_case_2():
    bool_0 = True
    node_0 = module_1.Node(incoming_nodes=bool_0)
    var_0 = module_0.depth_first_search(node_0, bool_0)
    assert var_0 is False
    float_0 = -2642.87
    var_1 = module_0.depth_first_search(float_0, float_0)
    assert var_1 is True


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xae\x9c\x9e\xbaF\x9aC\x93\x08~\xdb\xc2\xc1\xfd\x03B\x89\xaf"
    tuple_0 = (bytes_0,)
    node_0 = module_1.Node(successors=tuple_0)
    var_0 = module_0.depth_first_search(node_0, bytes_0)
    assert var_0 is True
    bool_0 = True
    none_type_0 = None
    module_0.depth_first_search(bool_0, none_type_0)
