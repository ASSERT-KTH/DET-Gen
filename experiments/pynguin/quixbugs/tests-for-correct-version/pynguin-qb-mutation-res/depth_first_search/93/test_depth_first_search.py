# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import node as module_1


def test_case_0():
    float_0 = -1556.18509
    var_0 = module_0.depth_first_search(float_0, float_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    var_0 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_0 is True
    var_1 = module_0.depth_first_search(none_type_0, none_type_0)
    assert var_1 is True
    module_0.depth_first_search(var_1, none_type_0)


def test_case_2():
    str_0 = "=~z+\riO#;{"
    node_0 = module_1.Node(
        predecessors=str_0, incoming_nodes=str_0, outgoing_nodes=str_0
    )
    list_0 = [node_0, node_0, node_0]
    node_1 = module_1.Node(successors=list_0, predecessors=node_0)
    none_type_0 = None
    var_0 = module_0.depth_first_search(node_1, none_type_0)
    assert var_0 is False
    float_0 = 1135.4646925286756
    var_1 = module_0.depth_first_search(float_0, float_0)
    assert var_1 is True
