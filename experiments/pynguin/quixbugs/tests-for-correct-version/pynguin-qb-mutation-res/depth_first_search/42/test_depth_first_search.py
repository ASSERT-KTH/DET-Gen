# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0
import builtins as module_1
import node as module_2


def test_case_0():
    complex_0 = -3172.38 - 744j
    var_0 = module_0.depth_first_search(complex_0, complex_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 2240
    none_type_0 = None
    module_0.depth_first_search(int_0, none_type_0)


def test_case_2():
    bool_0 = True
    object_0 = module_1.object()
    node_0 = module_2.Node(object_0, bool_0)
    var_0 = module_0.depth_first_search(node_0, node_0)
    assert var_0 is True
    var_1 = module_0.depth_first_search(node_0, object_0)
    assert var_1 is False
    var_2 = module_0.depth_first_search(node_0, var_0)
    assert var_2 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\r\xf3B\\\x8a:\xbe\xb4I\x88\xa2\xba:Ka)\xa3\x92\xd4\x8c"
    float_0 = -44.0
    node_0 = module_2.Node(
        successors=bytes_0, predecessors=bytes_0, outgoing_nodes=float_0
    )
    module_0.depth_first_search(node_0, bytes_0)
