# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import next_palindrome as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"}\n"
    module_0.next_palindrome(bytes_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.next_palindrome(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.next_palindrome(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 994.0
    object_0 = module_1.object()
    list_0 = [float_0, float_0, float_0, object_0]
    var_0 = module_0.next_palindrome(list_0)
    int_0 = 280
    module_0.next_palindrome(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    dict_0 = {}
    var_0 = module_0.next_palindrome(dict_0)
    bool_0 = True
    var_1 = module_0.next_palindrome(dict_0)
    var_2 = module_0.next_palindrome(var_1)
    var_3 = module_0.next_palindrome(var_1)
    var_4 = module_0.next_palindrome(var_1)
    list_0 = [bool_0]
    var_5 = module_0.next_palindrome(list_0)
    list_1 = [list_0]
    module_0.next_palindrome(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    dict_0 = {}
    bool_0 = True
    list_0 = [dict_0, bool_0, dict_0]
    var_0 = module_0.next_palindrome(list_0)
    var_1 = module_0.next_palindrome(list_0)
    var_2 = module_0.next_palindrome(var_1)
    var_3 = module_0.next_palindrome(list_0)
    var_4 = module_0.next_palindrome(var_1)
    var_5 = module_0.next_palindrome(list_0)
    var_6 = module_0.next_palindrome(var_4)
    var_7 = module_0.next_palindrome(var_6)
    module_0.next_palindrome(var_3)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.next_palindrome(list_0)
    var_1 = module_0.next_palindrome(list_0)
    var_2 = module_0.next_palindrome(list_0)
    var_3 = module_0.next_palindrome(var_0)
    var_4 = module_0.next_palindrome(var_2)
    var_5 = module_0.next_palindrome(list_0)
    var_6 = module_0.next_palindrome(var_2)
    var_7 = module_0.next_palindrome(var_2)
    var_8 = module_0.next_palindrome(var_5)
    module_0.next_palindrome(bool_0)
