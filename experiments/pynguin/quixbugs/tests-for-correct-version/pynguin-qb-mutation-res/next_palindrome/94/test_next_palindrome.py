# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import next_palindrome as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"C\n"
    module_0.next_palindrome(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.next_palindrome(list_0)
    bytes_0 = b"\xa9\xa89}~\x81p,\xf3UK\xf3\x992~\x12\xa6\x10\x19"
    var_1 = module_0.next_palindrome(var_0)
    tuple_0 = (bytes_0, var_0)
    module_0.next_palindrome(tuple_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.next_palindrome(dict_0)
    var_1 = module_0.next_palindrome(var_0)
    var_2 = module_0.next_palindrome(var_0)
    var_3 = module_0.next_palindrome(var_2)
    var_4 = module_0.next_palindrome(var_2)
    var_5 = module_0.next_palindrome(var_3)
    var_6 = module_0.next_palindrome(var_5)
    var_7 = module_0.next_palindrome(var_3)
    var_8 = module_0.next_palindrome(var_4)
    var_9 = module_0.next_palindrome(var_1)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.next_palindrome(dict_0)
    var_1 = module_0.next_palindrome(dict_0)
    var_2 = module_0.next_palindrome(var_1)
    var_3 = module_0.next_palindrome(var_0)
    var_4 = module_0.next_palindrome(var_1)
    var_5 = module_0.next_palindrome(var_1)
    var_6 = module_0.next_palindrome(var_2)
    var_7 = module_0.next_palindrome(var_6)
    var_8 = module_0.next_palindrome(dict_0)
    var_9 = module_0.next_palindrome(var_6)
    var_10 = module_0.next_palindrome(var_7)
    var_11 = module_0.next_palindrome(var_5)
    var_12 = module_0.next_palindrome(var_11)
    var_13 = module_0.next_palindrome(var_0)
    var_14 = module_0.next_palindrome(var_12)
    var_15 = module_0.next_palindrome(var_4)
