# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import next_palindrome as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xc9\xb8\xf5l"
    module_0.next_palindrome(bytes_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.next_palindrome(dict_0)
    var_1 = module_0.next_palindrome(var_0)


def test_case_2():
    tuple_0 = ()
    var_0 = module_0.next_palindrome(tuple_0)
    var_1 = module_0.next_palindrome(var_0)
    var_2 = module_0.next_palindrome(var_0)
    var_3 = module_0.next_palindrome(var_2)
    var_4 = module_0.next_palindrome(var_2)
    var_5 = module_0.next_palindrome(var_2)
    var_6 = module_0.next_palindrome(var_0)
    var_7 = module_0.next_palindrome(var_2)
    var_8 = module_0.next_palindrome(var_7)
    var_9 = module_0.next_palindrome(var_1)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.next_palindrome(tuple_0)
    var_1 = module_0.next_palindrome(var_0)
    var_2 = module_0.next_palindrome(var_1)
    var_3 = module_0.next_palindrome(var_1)
    var_4 = module_0.next_palindrome(var_2)
    var_5 = module_0.next_palindrome(var_2)
    var_6 = module_0.next_palindrome(var_1)
    var_7 = module_0.next_palindrome(var_0)
    var_8 = module_0.next_palindrome(var_4)
    var_9 = module_0.next_palindrome(var_6)
    object_0 = module_1.object()
    var_10 = module_0.next_palindrome(var_9)
