# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcc\xa8\xec\x96\n[\xb3D\xa0\xa7\x96J\xb6\xd6o\xd6\xbe\xcf"
    module_0.shortest_paths(bytes_0, bytes_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 1049.231138
    module_0.shortest_paths(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)
    str_0 = "s<"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.shortest_paths(str_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "s<"
    set_0 = set()
    var_0 = module_0.shortest_paths(str_0, set_0)
    module_0.shortest_paths(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "<<"
    set_0 = set()
    var_0 = module_0.shortest_paths(str_0, set_0)
    none_type_0 = None
    var_1 = module_0.shortest_paths(none_type_0, var_0)
    module_0.shortest_paths(str_0, none_type_0)
