# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -971
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.shortest_paths(int_0, dict_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.shortest_paths(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb0\x94"
    tuple_0 = (bytes_0,)
    module_0.shortest_paths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    set_0 = set()
    bytes_0 = b" \x94"
    var_0 = module_0.shortest_paths(bytes_0, set_0)
    module_0.shortest_paths(bytes_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    set_0 = set()
    bytes_0 = b"44"
    var_0 = module_0.shortest_paths(bytes_0, set_0)
    var_1 = module_0.shortest_paths(bytes_0, var_0)
    module_0.shortest_paths(var_1, var_1)
