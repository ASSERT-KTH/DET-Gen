# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "\rF"
    list_0 = [str_0]
    module_0.shortest_paths(str_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"e\x02\x1f\xe8\x86\xbe&\xe5gU\x85\xc5\xdf\xb1\xc3U\x9f\x08"
    str_0 = "[N)"
    module_0.shortest_paths(bytes_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ""
    var_0 = module_0.shortest_paths(str_0, str_0)
    object_0 = module_1.Node(str_0, predecessors=str_0, incoming_nodes=str_0)
    object_0.successors()


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.shortest_paths(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "\rF"
    set_0 = set()
    var_0 = module_0.shortest_paths(str_0, set_0)
    module_0.shortest_paths(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "\r\r"
    set_0 = set()
    var_0 = module_0.shortest_paths(str_0, set_0)
    var_1 = module_0.shortest_paths(str_0, var_0)
    module_0.shortest_paths(var_0, set_0)
