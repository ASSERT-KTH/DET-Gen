# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_paths as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "NXkSGDtZ@m>2"
    module_0.shortest_paths(str_0, str_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.shortest_paths(tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    bytes_0 = b"\xfc\xb1T\x94\x8f\xb2\x01~\xe1\xb9yU\xda\x0e\x0f\xa7"
    tuple_0 = (bool_0, bytes_0)
    dict_0 = {}
    var_0 = module_0.shortest_paths(tuple_0, dict_0)
    tuple_1 = (tuple_0,)
    module_0.shortest_paths(tuple_1, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bytes_0 = b"\xfc\xb1T\x94\x8f\xb2\x01~\xe1\xb9yU\xda\x0e\x0f\xa7"
    tuple_0 = (bool_0, bytes_0)
    dict_0 = {}
    var_0 = module_0.shortest_paths(tuple_0, dict_0)
    tuple_1 = (tuple_0,)
    module_0.shortest_paths(tuple_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    bytes_0 = b"\xef\xc2\x0f\x92\x98\xdd\xef\xe2\xb9g\xfeS"
    tuple_0 = (bool_0, bytes_0)
    dict_0 = {}
    var_0 = module_0.shortest_paths(tuple_0, dict_0)
    tuple_1 = (tuple_0,)
    var_1 = module_1.object()
    var_2 = module_0.shortest_paths(bool_0, var_0)
    module_0.shortest_paths(tuple_1, tuple_1)
