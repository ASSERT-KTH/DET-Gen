# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lis as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    int_0 = 794
    set_0 = {bool_0, int_0, int_0}
    list_0 = [set_0, bool_0, int_0, set_0]
    module_0.lis(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.lis(set_0)
    assert var_0 == 0
    object_0 = module_1.object(*set_0)
    module_0.lis(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -3171.58599
    module_0.lis(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x7f<\x830V\xbe\x91\x88"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 3
    none_type_0 = None
    module_0.lis(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    bytes_0 = b"\xcaW\x89<\xc9\xc4!x"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 3
    dict_0 = {bool_0: bytes_0, bool_0: bytes_0, bool_0: bytes_0}
    tuple_0 = (bool_0, bool_0, dict_0)
    module_0.lis(tuple_0)
