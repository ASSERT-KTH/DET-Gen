# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lis as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    set_0 = {bool_0}
    tuple_0 = (set_0,)
    var_0 = module_0.lis(tuple_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    var_0 = module_0.lis(set_0)
    assert var_0 == 0
    module_0.lis(var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -231
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.lis(dict_0)
    assert var_0 == 1
    list_0 = [dict_0, int_0]
    module_0.lis(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    module_0.lis(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x15\x9ckq\xebc\xf2\xf2|\x1e\t\xd9\xbe0"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 5
    var_1 = module_0.lis(bytes_0)
    assert var_1 == 5
    var_2 = module_0.lis(bytes_0)
    assert var_2 == 5
    module_0.lis(var_2)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"l\xab\x16\xdd\xa9u\xaf9"
    bool_0 = False
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.lis(list_0)
    assert var_0 == 1
    tuple_0 = (bytes_0, bool_0)
    module_0.lis(tuple_0)
