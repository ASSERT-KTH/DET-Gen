# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import lis as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xdf2'\xe7\x94\xa3\xe2\x0c\xb8\x8d\xec\xae\x85xL:\xa0\xc3"
    list_0 = []
    int_0 = -211
    tuple_0 = (int_0, bytes_0, list_0, int_0)
    tuple_1 = (bytes_0, list_0, tuple_0)
    module_0.lis(tuple_1)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.lis(tuple_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"I\x91\xc2\xb8f\xf5\xc8\x99\xb2\x1e"
    var_0 = module_0.lis(bytes_0)
    assert var_0 == 4
    list_0 = []
    var_1 = module_0.lis(list_0)
    var_2 = module_0.lis(list_0)
    object_0 = module_1.object(*list_0)
    set_0 = {object_0}
    var_3 = module_0.lis(set_0)
    assert var_3 == 1
    var_4 = module_0.lis(set_0)
    assert var_4 == 1
    none_type_0 = None
    module_0.lis(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "3fC!M+]}>KYS`VE2"
    var_0 = module_0.lis(str_0)
    assert var_0 == 6
    var_1 = module_0.lis(str_0)
    assert var_1 == 6
    bytes_0 = b"\x16\xd8\xb7\xb7\x82\xdd\xd5{\x8a\xc3\x1f\xe6r}*;\xbc\xcb\x14"
    var_2 = module_0.lis(bytes_0)
    assert var_2 == 6
    var_3 = module_0.lis(str_0)
    assert var_3 == 6
    module_0.lis(var_0)
