# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import reverse_linked_list as module_1
import node as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.reverse_linked_list(object_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_1.reverse_linked_list(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1226
    tuple_0 = (int_0,)
    node_0 = module_2.Node(successor=tuple_0, successors=tuple_0, outgoing_nodes=int_0)
    module_1.reverse_linked_list(node_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    node_0 = module_2.Node()
    var_0 = module_1.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors == []
    assert var_0.incoming_nodes == []
    assert var_0.outgoing_nodes == []
    node_0.predecessors()
