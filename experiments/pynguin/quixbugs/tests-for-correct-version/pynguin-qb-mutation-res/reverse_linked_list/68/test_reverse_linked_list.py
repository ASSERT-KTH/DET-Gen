# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 2908
    module_0.reverse_linked_list(int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.reverse_linked_list(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1447
    none_type_0 = None
    node_0 = module_1.Node(successors=int_0, predecessors=none_type_0)
    var_0 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == -1447
    assert var_0.predecessors is None
    assert var_0.incoming_nodes == []
    assert var_0.outgoing_nodes == []
    str_0 = "$@i# <PH0}=D|"
    module_0.reverse_linked_list(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = -2197.88 - 1947.514332j
    none_type_0 = None
    node_0 = module_1.Node(
        successor=complex_0, successors=none_type_0, incoming_nodes=none_type_0
    )
    module_0.reverse_linked_list(node_0)
