# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import node as module_0
import reverse_linked_list as module_1


def test_case_0():
    int_0 = -2626
    node_0 = module_0.Node(int_0, successors=int_0, predecessors=int_0)
    var_0 = module_1.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value == -2626
    assert var_0.successor is None
    assert var_0.successors == -2626
    assert var_0.predecessors == -2626
    assert var_0.incoming_nodes == []
    assert var_0.outgoing_nodes == []
    none_type_0 = None
    var_1 = module_1.reverse_linked_list(none_type_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_1.reverse_linked_list(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_1.reverse_linked_list(none_type_0)
    bool_0 = True
    node_0 = module_0.Node(var_0, bool_0, bool_0)
    module_1.reverse_linked_list(node_0)
