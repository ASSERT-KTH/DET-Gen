# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import reverse_linked_list as module_1
import node as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    module_1.reverse_linked_list(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_1.reverse_linked_list(bool_0)
    str_0 = "K'P\"FN^bJ\x0b"
    module_1.reverse_linked_list(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -118
    list_0 = [int_0, int_0, int_0, int_0]
    list_1 = [list_0, list_0]
    node_0 = module_2.Node(list_1, list_0, predecessors=list_1, incoming_nodes=int_0)
    module_1.reverse_linked_list(node_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "jBT}"
    node_0 = module_2.Node(incoming_nodes=str_0)
    var_0 = module_1.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors == []
    assert var_0.incoming_nodes == "jBT}"
    assert var_0.outgoing_nodes == []
    bytes_0 = b"\xcd\xe9\xc3\xfc\xbc\xfeE\x1aC\xa0=\xdb"
    var_1 = module_1.reverse_linked_list(node_0)
    assert f"{type(var_1).__module__}.{type(var_1).__qualname__}" == "node.Node"
    assert var_1.value is None
    assert var_1.successor is None
    assert var_1.successors == []
    assert var_1.predecessors == []
    assert var_1.incoming_nodes == "jBT}"
    assert var_1.outgoing_nodes == []
    module_1.reverse_linked_list(bytes_0)
