# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 1836.0
    module_0.reverse_linked_list(float_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.reverse_linked_list(none_type_0)
    var_1 = module_0.reverse_linked_list(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2066
    node_0 = module_1.Node(successor=int_0, successors=int_0)
    module_0.reverse_linked_list(node_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    node_0 = module_1.Node(incoming_nodes=list_0)
    var_0 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors == []
    assert var_0.incoming_nodes == [(), ()]
    assert var_0.outgoing_nodes == []
    none_type_0 = None
    var_1 = module_0.reverse_linked_list(none_type_0)
    bytes_0 = b"\xfbm\x11\t?\x87\x0f\xaf\x81U\xeb \xf5h\xc0\xb3"
    module_0.reverse_linked_list(bytes_0)
