# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 796
    module_0.reverse_linked_list(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    var_0 = module_0.reverse_linked_list(none_type_0)
    var_1 = module_0.reverse_linked_list(none_type_0)
    var_2 = module_0.reverse_linked_list(none_type_0)
    var_2.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'b&f#y"9C.ED'
    node_0 = module_1.Node(successor=str_0, incoming_nodes=str_0)
    module_0.reverse_linked_list(node_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ""
    var_0 = module_0.reverse_linked_list(str_0)
    str_1 = 'Q"-A3@!_\x0c]TCy\\E}Z:8?'
    node_0 = module_1.Node(predecessors=str_1)
    var_1 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_1).__module__}.{type(var_1).__qualname__}" == "node.Node"
    assert var_1.value is None
    assert var_1.successor is None
    assert var_1.successors == []
    assert var_1.predecessors == 'Q"-A3@!_\x0c]TCy\\E}Z:8?'
    assert var_1.incoming_nodes == []
    assert var_1.outgoing_nodes == []
    module_0.reverse_linked_list(str_1)
