# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"y&8i\xbe\x8a\xceK\xb9\x1d"
    module_0.reverse_linked_list(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.reverse_linked_list(bool_0)
    var_1 = module_0.reverse_linked_list(bool_0)
    var_1.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    node_0 = module_1.Node(successor=none_type_0, incoming_nodes=none_type_0)
    var_0 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors == []
    assert var_0.incoming_nodes is None
    assert var_0.outgoing_nodes == []
    var_0.successor()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"z=E\x88\xd4\xd6\xb7\xc10\xe6yE\x14#\xb2"
    set_0 = {bytes_0, bytes_0}
    node_0 = module_1.Node(successor=set_0, successors=set_0, incoming_nodes=bytes_0)
    module_0.reverse_linked_list(node_0)
