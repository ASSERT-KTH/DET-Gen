# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1124
    module_0.reverse_linked_list(int_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.reverse_linked_list(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    node_0 = module_1.Node(successors=bool_0)
    var_0 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors is False
    assert var_0.predecessors == []
    assert var_0.incoming_nodes == []
    assert var_0.outgoing_nodes == []
    bool_1 = True
    tuple_0 = (node_0, var_0, bool_1)
    module_0.reverse_linked_list(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.reverse_linked_list(none_type_0)
    set_0 = set()
    var_1 = module_0.reverse_linked_list(var_0)
    var_2 = module_0.reverse_linked_list(none_type_0)
    var_3 = module_0.reverse_linked_list(none_type_0)
    dict_0 = {}
    var_4 = module_1.Node(successors=var_0, outgoing_nodes=set_0)
    var_5 = module_0.reverse_linked_list(dict_0)
    node_0 = module_1.Node(successor=var_4, outgoing_nodes=set_0)
    var_6 = module_0.reverse_linked_list(node_0)
    assert (
        f"{type(var_4.successor).__module__}.{type(var_4.successor).__qualname__}"
        == "node.Node"
    )
    assert node_0.successor is None
    assert f"{type(var_6).__module__}.{type(var_6).__qualname__}" == "node.Node"
    assert var_6.value is None
    assert (
        f"{type(var_6.successor).__module__}.{type(var_6.successor).__qualname__}"
        == "node.Node"
    )
    assert var_6.successors is None
    assert var_6.predecessors == []
    assert var_6.incoming_nodes == []
    assert var_6.outgoing_nodes == {*()}
    var_7 = module_0.reverse_linked_list(var_0)
    var_7.successors()
