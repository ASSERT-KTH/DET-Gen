# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "Dl:rm6vuf:f$<\\t"
    module_0.reverse_linked_list(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '05-Ay^O6]"-< '
    bool_0 = False
    var_0 = module_0.reverse_linked_list(bool_0)
    module_0.reverse_linked_list(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "23bc"
    none_type_0 = None
    node_0 = module_1.Node(predecessors=str_0, outgoing_nodes=none_type_0)
    var_0 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors == "23bc"
    assert var_0.incoming_nodes == []
    assert var_0.outgoing_nodes is None
    node_0.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "8},Ko*i3#VD;q8u+"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    node_0 = module_1.Node(str_0, str_0, str_0, outgoing_nodes=dict_0)
    module_0.reverse_linked_list(node_0)
