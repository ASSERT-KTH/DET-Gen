# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    complex_0 = 1984 + 2007.019j
    module_0.reverse_linked_list(complex_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.reverse_linked_list(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    node_0 = module_1.Node(none_type_0, predecessors=none_type_0)
    var_0 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors is None
    assert var_0.incoming_nodes == []
    assert var_0.outgoing_nodes == []
    none_type_0.predecessors()


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -330.196677
    bytes_0 = b"\x0f?m\xa1\xc8\xe1\x04\xf8n\xb62\xf6"
    list_0 = [float_0, bytes_0, float_0, bytes_0]
    node_0 = module_1.Node(list_0, bytes_0)
    module_0.reverse_linked_list(node_0)
