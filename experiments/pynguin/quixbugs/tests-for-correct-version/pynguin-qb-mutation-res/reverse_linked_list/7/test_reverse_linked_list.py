# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.reverse_linked_list(bool_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.reverse_linked_list(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.reverse_linked_list(tuple_0)
    node_0 = module_1.Node(predecessors=tuple_0)
    var_1 = module_0.reverse_linked_list(var_0)
    var_2 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_2).__module__}.{type(var_2).__qualname__}" == "node.Node"
    assert var_2.value is None
    assert var_2.successor is None
    assert var_2.successors == []
    assert var_2.predecessors == ()
    assert var_2.incoming_nodes == []
    assert var_2.outgoing_nodes == []
    var_3 = module_0.reverse_linked_list(var_1)
    var_1.successor()


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.reverse_linked_list(tuple_0)
    bytes_0 = b"Sx\xa6\xcfW\xde\xda[\x0b&\x8e"
    node_0 = module_1.Node(successor=bytes_0)
    module_0.reverse_linked_list(node_0)
