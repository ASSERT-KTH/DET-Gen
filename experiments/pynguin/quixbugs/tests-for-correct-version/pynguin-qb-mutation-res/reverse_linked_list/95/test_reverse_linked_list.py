# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import reverse_linked_list as module_0
import node as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "C.86_pV_7a(VE_"
    module_0.reverse_linked_list(str_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.reverse_linked_list(none_type_0)
    var_1 = module_0.reverse_linked_list(none_type_0)
    var_2 = module_0.reverse_linked_list(none_type_0)


def test_case_2():
    complex_0 = 279.3247 - 1033j
    node_0 = module_1.Node(predecessors=complex_0, outgoing_nodes=complex_0)
    var_0 = module_0.reverse_linked_list(node_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "node.Node"
    assert var_0.value is None
    assert var_0.successor is None
    assert var_0.successors == []
    assert var_0.predecessors == (279.3247 - 1033j)
    assert var_0.incoming_nodes == []
    assert var_0.outgoing_nodes == (279.3247 - 1033j)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.reverse_linked_list(tuple_0)
    float_0 = -234.8904
    node_0 = module_1.Node(
        successor=float_0, successors=float_0, outgoing_nodes=float_0
    )
    module_0.reverse_linked_list(node_0)
