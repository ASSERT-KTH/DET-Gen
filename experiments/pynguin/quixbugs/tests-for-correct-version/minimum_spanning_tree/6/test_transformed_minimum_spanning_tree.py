# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_spanning_tree as module_0


#@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    var_0 = module_0.minimum_spanning_tree(list_0)
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
#    module_0.minimum_spanning_tree(dict_0)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.minimum_spanning_tree(bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
#    module_0.minimum_spanning_tree(none_type_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xe2\xb2"
    set_0 = {bytes_0, bytes_0}
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: set_0, bytes_0: bytes_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    list_0 = []
    var_1 = module_0.minimum_spanning_tree(list_0)
    var_2 = module_0.minimum_spanning_tree(list_0)
    bool_0 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
#    dict_1.successors()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x7f\x7f"
    set_0 = {bytes_0, bytes_0}
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: set_0, bytes_0: bytes_0}
    var_0 = module_0.minimum_spanning_tree(dict_0)
    list_0 = []
    var_1 = module_0.minimum_spanning_tree(list_0)
    var_2 = module_0.minimum_spanning_tree(list_0)
    bool_0 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
#    dict_1.successors()
