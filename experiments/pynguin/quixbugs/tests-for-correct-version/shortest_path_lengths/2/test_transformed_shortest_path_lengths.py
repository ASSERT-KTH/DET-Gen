# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import shortest_path_lengths as module_0


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
#    module_0.shortest_path_lengths(bool_0, bool_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -2087
#    module_0.shortest_path_lengths(int_0, int_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "2F"
#    module_0.shortest_path_lengths(str_0, str_0)


def test_case_3():
    int_0 = -2087
    none_type_0 = None
    dict_0 = {int_0: int_0, none_type_0: none_type_0}
    var_0 = module_0.shortest_path_lengths(int_0, dict_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    bool_0 = True
    int_0 = 1056
    var_0 = module_0.shortest_path_lengths(bool_0, dict_0)
#    module_0.shortest_path_lengths(dict_0, int_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 34
    none_type_0 = None
    dict_0 = {
        int_0: int_0,
        none_type_0: int_0,
        none_type_0: none_type_0,
        none_type_0: int_0,
    }
    var_0 = module_0.shortest_path_lengths(int_0, dict_0)
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "collections.defaultdict"
    )
    assert len(var_0) == 1158
#    var_0.predecessors()
