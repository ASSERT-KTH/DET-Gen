# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1780 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "Kk"
    var_0 = module_0.func(*str_0)
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"O\xfd3\xa4\xa3\xe4\xb4 \xac"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


def test_case_3():
    str_0 = "NqmItwVi!9 :9I)"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)


def test_case_4():
    str_0 = "kVK8qhn$iHv+6$}"
    bool_0 = False
    dict_0 = {str_0: bool_0, bool_0: bool_0, str_0: bool_0}
    list_0 = [str_0, str_0, str_0, dict_0]
    var_0 = module_0.func(*list_0)
    str_1 = "NqmItwViR9 K:9IV"
    list_1 = [str_1, str_1, str_1, str_1, str_1]
    var_1 = module_0.func(*list_1)
    object_0 = module_1.object()


def test_case_5():
    str_0 = "KK"
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    list_1 = [list_0, var_0, str_0, var_0, list_0, list_0]
    var_1 = module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "VV"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [str_0, str_0, str_0, str_0, str_0, dict_0]
    var_0 = module_0.func(*list_0)
    list_1 = [list_0, dict_0, var_0, var_0, list_0, list_0]
    var_1 = module_0.func(*list_1)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "VVV"
    bool_0 = False
    dict_0 = {str_0: bool_0, bool_0: bool_0, str_0: bool_0}
    list_0 = [str_0, str_0, str_0, str_0, str_0, dict_0]
    var_0 = module_0.func(*list_0)
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "KKK"
    bool_0 = True
    dict_0 = {str_0: bool_0, bool_0: bool_0, str_0: bool_0}
    list_0 = [str_0, str_0, str_0, str_0, str_0, dict_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    module_0.func(*var_1)
