# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1340 as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x18YI\xb1\xd3$\xdc/\xc8e\xa5\x01"
    var_0 = module_0.func(*bytes_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_0.func()


def test_case_3():
    bytes_0 = b"\x14\x94\x7f\xaf"
    var_0 = module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x1e7"
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x1a\x19\x11w\x9a\xf0]\xc0\x81"
    object_0 = module_1.object()
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\x11\x1b\xce\x00\x98D\xd2AW\xfc\x8e\x8c"
    var_0 = module_0.func(*bytes_0)
#    module_1.object(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"\x1do\xbb\xcf\xc0"
    var_0 = module_0.func(*bytes_0)
#    module_1.object(*bytes_0, **bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b"\x19\x11w\x9a\xf0\xc0\xba\x94\x81"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*bytes_0)
    list_0 = [bytes_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_9():
    bytes_0 = b"\x1bC\xc09C1\xb1~"
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


def test_case_10():
    bytes_0 = b'"t$j\x02'
    var_0 = module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_11():
    bytes_0 = b"\x1cC\x80\x98&l\\\xf4\x1c4W\x8b\xa7P"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
#    module_0.func()


def test_case_12():
    bool_0 = True
    int_0 = 35
    list_0 = [int_0, bool_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x15]\xb1\x1d"
    var_1 = module_0.func(*bytes_0)
    var_2 = module_0.func(*var_0)


def test_case_13():
    bytes_0 = b"\x1f\xceD\xd2<AW\xfc\x8e\x8c"
    var_0 = module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_14():
    bytes_0 = b"\r\xd2\xb7\x8b\xa1\x9d\x85\xa9\xcf"
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_15():
    bytes_0 = b"\x12He("
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


def test_case_16():
    bytes_0 = b"\x0fYI\xb1\xd3\xdf\xc8\xa5\x17\x01"
    var_0 = module_0.func(*bytes_0)


def test_case_17():
    bytes_0 = b"\x15\x0f\xfb]0\xb1"
    var_0 = module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_18():
    bytes_0 = b"\x0e\xb7+\x9dL\x92"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
#    module_1.object(**bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_19():
    bytes_0 = b"\x04\x91\xb7\xaa\xab\xad\xe1I\x17\x82,\xb8g"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*bytes_0)
    object_0 = module_1.object()
    var_2 = module_0.func(*var_0)
    list_0 = [bytes_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_20():
    bool_0 = True
    int_0 = 23
    list_0 = [int_0, bool_0, int_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_21():
    bool_0 = False
    int_0 = 19
    list_0 = [int_0, bool_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x15]\xb1\xdc\x1d"
    var_1 = module_0.func(*bytes_0)
#    module_1.object(**var_0)


#@pytest.mark.xfail(strict=True)
def test_case_22():
    bool_0 = False
    int_0 = 32
    list_0 = [int_0, bool_0, int_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_23():
    bool_0 = True
    int_0 = 22
    list_0 = [int_0, bool_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x15]\xb1\xdc\x1d"
    var_1 = module_0.func(*bytes_0)
#    module_1.object(**var_0)


#@pytest.mark.xfail(strict=True)
def test_case_24():
    bool_0 = False
    int_0 = 33
    list_0 = [int_0, int_0, bool_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x15]\xb1\xdc\x1d"
    var_1 = module_0.func(*bytes_0)
    var_2 = module_1.object()
#    module_0.func()
