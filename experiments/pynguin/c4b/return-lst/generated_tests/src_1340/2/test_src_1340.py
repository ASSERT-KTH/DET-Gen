# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1340 as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    list_0 = [object_0]
    module_0.func(*list_0)


def test_case_2():
    bytes_0 = b"\x1e\xb5\x9a\xa7%\xdcIb\xc1\x1dg\x83F,"
    var_0 = module_0.func(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"(\x96{\xb3\x0e\xd5\xe1{9\xb2\x1e\xe2F\xef"
    var_0 = module_0.func(*bytes_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x1f>\xe2\xdb\rqb"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*bytes_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 24
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 19
    list_0 = [int_0, int_0, int_0, int_0]
    object_0 = module_1.object()
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 29
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_0)
    module_0.func(*var_1)


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 34
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    var_2 = module_0.func(*var_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = 20
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    var_2 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = 21
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_11():
    int_0 = 17
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_12():
    int_0 = 33
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_13():
    int_0 = 25
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_14():
    int_0 = 16
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x1e?\x9a\xa7%\xdcIb\xc1g\x83F,"
    var_1 = module_0.func(*bytes_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_15():
    int_0 = 5
    list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_16():
    int_0 = 26
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_17():
    int_0 = 28
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    object_0 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_18():
    int_0 = 18
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x07oS+\xed\xfb\x01\xfc\xc1\xb0.4U"
    var_1 = module_0.func(*list_0)
    var_2 = module_0.func(*bytes_0)
    var_3 = module_0.func(*var_2)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_19():
    int_0 = 23
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x1e\xb5\x9a\xa7%\xdcIb\xc1\x1dg\x83F,"
    var_1 = module_0.func(*bytes_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_20():
    int_0 = 22
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_21():
    int_0 = 15
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_22():
    int_0 = 27
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    bytes_0 = b"\x07oS\xed\xfb\x01\xfc\xc1\xb0.4U"
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    var_2 = module_0.func(*bytes_0)
    var_3 = module_1.object()
    object_0 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_23():
    int_0 = 23
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"#;"
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*list_0)
    var_3 = module_0.func(*bytes_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_24():
    int_0 = 13
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x1e\xb5\x9a\xa7%\xdcIb\xc1\x1dg\x83F,"
    var_1 = module_0.func(*list_0)
    var_2 = module_0.func(*bytes_0)
    var_3 = module_0.func(*var_0)
    var_4 = module_0.func(*var_2)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_25():
    int_0 = 14
    list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x1e\xb5\x9a\xa7%\xdcIb\xc1\x1dg\x83F,"
    var_1 = module_0.func(*bytes_0)
    module_0.func()
