# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1340 as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b'\x18\xd6\n\xae[^Im\x08\x13"'
    var_1 = module_0.func(*bytes_0)


def test_case_1():
    bytes_0 = b"\x18\xd6\n\xb0[^\x8cI\x13"
    var_0 = module_0.func(*bytes_0)


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_2)


def test_case_3():
    bytes_0 = b"\x15v\xebX4\xfcD\x10\xe5\x0cBr"
    var_0 = module_0.func(*bytes_0)


def test_case_4():
    bytes_0 = b"\x0e\x18\xd6\n\xb0[^\x8c\xbc\x13"
    var_0 = module_0.func(*bytes_0)


def test_case_5():
    bytes_0 = b"\x13\xdd\xbc\xcb\xaagDQ\x1d\xc4\xc6\x1f\xf2\xd6"
    var_0 = module_0.func(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"!4\xa4\xd4\x94}\x0b\x01O\x91\x88"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_1.object()
    module_0.func()


def test_case_7():
    bytes_0 = b"\x19\x0e>\n\xb0[\x8c\xf1\x13"
    var_0 = module_0.func(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b"\x0f\xc3\xa7\xf6\xd76\x96\xd4\xd3/"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
    module_0.func()


def test_case_9():
    bytes_0 = b"\x16,1y"
    var_0 = module_0.func(*bytes_0)


def test_case_10():
    bytes_0 = b"\x1c\x84T\xa9\xb8\x10\xdb\xf3V\x05*wn\xd7\xbfS\x91f"
    var_0 = module_0.func(*bytes_0)


def test_case_11():
    bytes_0 = b"\x1b\x15\xb8P\x15EF\x127M<\x90"
    var_0 = module_0.func(*bytes_0)


def test_case_12():
    bytes_0 = b"\x11k"
    var_0 = module_0.func(*bytes_0)


def test_case_13():
    int_0 = 34
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)


def test_case_14():
    bytes_0 = b"\x1ex|tl\xa4%\xc8\x83o\x83\xc1d\x8eb\xd1\xb4m"
    var_0 = module_0.func(*bytes_0)


def test_case_15():
    bytes_0 = b"\x1f\x07\xf8k\xaf!\xee\x7f\xb8H\xa3\x1a*^\x13\xa3"
    var_0 = module_0.func(*bytes_0)


def test_case_16():
    bytes_0 = b"#9#\xe7!]\xd03\xfa\xab\xa8\x86_Oh\xc9x\xa2\xaeX"
    var_0 = module_0.func(*bytes_0)


def test_case_17():
    bytes_0 = b'\x12\x18\xd6\nY\xae[^Im\x08\x13"'
    var_0 = module_0.func(*bytes_0)


def test_case_18():
    bytes_0 = b"\x1d\x9e\xdd\n\xea\xcfS'\xe3\x89s\xa7"
    var_0 = module_0.func(*bytes_0)


def test_case_19():
    bytes_0 = b"\x1a\xb9}\xe2\x1a:\xdc\x14:V\x1fKga\xf9\xd6\x1c\xa6\x8e"
    var_0 = module_0.func(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_20():
    bytes_0 = b"\r\xe4D\xa4\xc0N\x10\xe8\x80\x15\xecZ\xeb"
    var_0 = module_0.func(*bytes_0)
    module_0.func()


def test_case_21():
    bytes_0 = b"\x14\x90\xc5\xa5\xd6\xe8\xdc\xd8\x91X\xbe%"
    var_0 = module_0.func(*bytes_0)


def test_case_22():
    bytes_0 = b' \xf3k\x8e\xc4V\x9d"'
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_0)


def test_case_23():
    bytes_0 = b"\x17\xed\xccz\xe9W\xaf\x91"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*bytes_0)
