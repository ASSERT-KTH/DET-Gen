# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_499 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ':m4Z"=@sm'
#    module_0.func(*str_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ":1MP[}/RxK<E)h"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    list_1 = [var_0]
#    module_0.func(*list_1)


def test_case_3():
    str_0 = ':m4Z"=@sm'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "h"
    list_0 = [str_0, str_0]
#    module_0.func(*list_0)


def test_case_5():
    str_0 = "a%`"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)


def test_case_6():
    str_0 = "hmW_\\G~3)_d%lj#r"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '\x0c82iTEa"AA_Jk3)I'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "h&j]\\ ?I#LJ9CG"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    object_0 = module_1.object()
    str_1 = "a1i<"
    var_1 = module_0.func(*list_0)
    list_1 = [str_1, str_1]
    var_2 = module_0.func(*list_1)
#    module_0.func(*var_2)


#@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "h8j]\\ ?I#LJ9CG"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
#    module_0.func(*str_0)


#@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "h1j]\\ ?I#LJ\n9CG"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    object_0 = module_1.object()
    str_1 = "~[`<"
    var_1 = module_0.func(*list_0)
    list_1 = [str_1, str_1]
    var_2 = module_0.func(*list_1)
    tuple_0 = (var_2, str_1, var_2, list_1)
#    module_0.func(*tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_11():
    object_0 = module_1.object()
    str_0 = "a8<"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()
