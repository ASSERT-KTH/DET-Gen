# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_109 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"[\xb7\xa8:\xe99\xb2\xb7\xac\xf2\xa2"
    set_0 = {bytes_0, bytes_0}
    list_0 = [bytes_0, bytes_0, bytes_0, set_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    bytes_0 = b"\x12#\x8aAA"
    list_0 = [bytes_0, none_type_0, bytes_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    bytes_0 = b"\x8d"
    list_0 = [bytes_0, none_type_0, bytes_0, bytes_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    bytes_0 = b"A"
    list_0 = [bytes_0, none_type_0, bytes_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "g2A\x0cik"
    int_0 = -2672
    dict_0 = {str_0: str_0, str_0: str_0, str_0: int_0, str_0: int_0}
    list_0 = [str_0, str_0, str_0, dict_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "2\x0cik"
    int_0 = -2672
    dict_0 = {str_0: str_0, str_0: str_0, str_0: int_0, str_0: int_0}
    list_0 = [str_0, str_0, str_0, dict_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "g2A\x0c8"
    int_0 = -2683
    dict_0 = {str_0: str_0, str_0: int_0, str_0: int_0}
    list_0 = [str_0, str_0, str_0, dict_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_1.object()
#    module_0.func()
