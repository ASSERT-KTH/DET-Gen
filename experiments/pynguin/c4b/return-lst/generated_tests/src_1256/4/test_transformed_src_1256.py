# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import src_1256 as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    bool_0 = True
    int_0 = 2448
    tuple_0 = (object_0, bool_0, int_0)
    str_0 = "d`8"
    dict_0 = {tuple_0: object_0, int_0: int_0, bool_0: str_0}
    list_0 = [dict_0, int_0]
#    module_1.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "u\t|:d:^)@mlZ+/h<?3y"
    set_0 = {str_0, str_0, str_0}
    var_0 = module_1.func(*set_0)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(:gA"
    list_0 = [str_0, str_0]
    var_0 = module_1.func(*list_0)
    int_0 = 1253
    list_1 = [int_0, int_0]
    list_2 = []
    tuple_0 = (list_1, list_2)
    list_3 = [tuple_0, tuple_0, list_2]
#    module_1.func(*list_3)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"z\xf0\x02\xa2\x1b\x8b\xe2C\x1f\xe6"
    set_0 = {bytes_0, bytes_0}
    list_0 = [set_0, bytes_0, set_0, bytes_0]
#    module_1.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "u\t|:d:^)@mlZ+/h<?3y"
    var_0 = module_1.func(*str_0)
    set_0 = {str_0, str_0, str_0}
    var_1 = module_1.func(*set_0)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "\x0b\t|::^)@mlZ+/h<?3y"
    var_0 = module_1.func(*str_0)
    set_0 = {str_0, str_0, str_0}
    var_1 = module_1.func(*set_0)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "A{F }"
    set_0 = {str_0, str_0, str_0}
    var_0 = module_1.func(*set_0)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "kE }"
    set_0 = {str_0, str_0, str_0, str_0, str_0, str_0}
    var_0 = module_1.func(*set_0)
#    module_0.object(*var_0, **var_0)
