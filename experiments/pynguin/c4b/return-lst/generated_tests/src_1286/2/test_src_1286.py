# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1286 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


def test_case_1():
    bytes_0 = b"x\xe3\xac\x1at3~\xe9w\x95W\xb2\xd8\x83N\xcd\x9a"
    set_0 = {bytes_0, bytes_0}
    list_0 = [set_0, bytes_0]
    var_0 = module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1143
    bytes_0 = b"h\x12\xdb\xa5p+\x1c\xe2\x97%"
    tuple_0 = (int_0, bytes_0)
    list_0 = [tuple_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "R<mrXvH6"
    bytes_0 = b"g\x1f\xce\x13"
    bool_0 = False
    str_1 = "~SZAi?I7s"
    tuple_0 = (str_0, bytes_0, bool_0, str_1)
    list_0 = [tuple_0, bytes_0]
    var_0 = module_0.func(*list_0)
    list_1 = []
    module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"h\x12\xdb\xa5p+\x1c\xe2\x97%"
    tuple_0 = (bytes_0, bytes_0)
    list_0 = [tuple_0, bytes_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -1098
    bytes_0 = b"h\x12\xdb\xa5p+\x1c\xe2\x97%"
    tuple_0 = (int_0, bytes_0)
    list_0 = [tuple_0]
    var_0 = module_0.func(*list_0)
    str_0 = "~i,l?\\;2U\x0b"
    list_1 = []
    tuple_1 = (str_0, str_0, var_0, list_1)
    var_1 = module_1.object()
    var_2 = module_0.func(*list_0)
    var_3 = module_0.func(*tuple_1)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = -1143
    bytes_0 = b"h\x12\xdb\xa5p+\x1c\xe2\x97%"
    tuple_0 = (int_0, bytes_0)
    list_0 = [tuple_0]
    list_1 = [tuple_0, int_0, tuple_0, bytes_0, list_0]
    list_2 = [list_1, tuple_0]
    var_0 = module_0.func(*list_2)
    list_3 = [tuple_0, bytes_0]
    var_1 = module_0.func(*list_3)
    module_0.func()
