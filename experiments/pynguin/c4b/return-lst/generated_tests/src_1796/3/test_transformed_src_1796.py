# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1796 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


def test_case_2():
    bytes_0 = b"/\x8b\x04\xea\x17"
    var_0 = module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x8d\xcd{\x9d\xa6\xde\xd3d\x7f"
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x8d\x07{\x9d\xa6\xde/d\x7f"
    var_0 = module_0.func(*bytes_0)
#    module_1.object(*var_0, **var_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"tuR\xd3\xbb\xf7q\x950Y7\xb4\xf4+\xa8IO<"
    var_0 = module_0.func(*bytes_0)
    bytes_1 = b"\x0f\xfe\xe6\xd4\xa5\xe2\xcf\x8f\xabG\xe6\xdfN"
    var_1 = module_0.func(*bytes_1)
    var_2 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"8\xb2\x02p>"
    var_0 = module_0.func(*bytes_0)
#    module_0.func(*var_0)
