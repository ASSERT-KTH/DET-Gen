# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2198 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\x1b=\x1f\x8b\xc9\xec\xfd\x11\xdf"
    var_1 = module_0.func(*var_0)
    str_0 = "L;wLj~=6YolRv7-\x0b,?F0"
    list_1 = [str_0, bytes_0, bool_0, bool_0]
    module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 639
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    bool_0 = True
    list_0 = [object_0, object_0, bool_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\r#\xf0."
    var_0 = module_0.func(*bytes_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 21
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xbd\xc6d\x97\x12\x11:"
    var_0 = module_0.func(*bytes_0)
    bytes_1 = b"\x14\xb1\x17_\xa71\xc1X\xd9\x9dW\x1f\xff\x9b\xa0H\x9d\xc2\x98\x9c"
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*bytes_1)
    var_3 = module_1.object()
    module_0.func()
