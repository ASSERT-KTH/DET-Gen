# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1336 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


def test_case_1():
    int_0 = -1947
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    list_0 = [int_0, dict_0, int_0, int_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 7
    dict_0 = {
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
    }
    list_0 = [int_0, dict_0]
#    module_0.func(*list_0)


def test_case_3():
    int_0 = 1
    dict_0 = {
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
    }
    list_0 = [int_0, dict_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 4
    dict_0 = {
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
    }
    list_0 = [int_0, dict_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = []
    list_1 = [bool_0, list_0, bool_0]
    var_0 = module_0.func(*list_1)
    int_0 = 1
    dict_0 = {
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
    }
    list_2 = [int_0, dict_0]
    var_1 = module_0.func(*list_2)
    object_0 = module_1.object()
#    module_0.func()
