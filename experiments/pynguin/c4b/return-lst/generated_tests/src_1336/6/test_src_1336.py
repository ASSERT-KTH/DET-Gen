# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1336 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "8,["
    module_0.func(*str_0)


def test_case_2():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [bool_0, set_0]
    var_0 = module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "85["
    module_0.func(*str_0)


def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    set_0 = {bool_0, bool_0}
    tuple_0 = (bool_0, dict_0, bool_0, set_0)
    var_0 = module_0.func(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_1}
    tuple_0 = (bool_0, dict_0, bool_1, bool_0)
    var_0 = module_0.func(*tuple_0)
    str_0 = "87["
    module_0.func(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_1}
    set_0 = {bool_0, bool_1}
    tuple_0 = (bool_0, dict_0, bool_1, set_0)
    var_0 = module_0.func(*tuple_0)
    str_0 = "84#6"
    module_0.func(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    bool_1 = False
    set_0 = set()
    list_0 = [bool_1, set_0, bool_1, set_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_1}
    set_1 = {bool_0, bool_1}
    tuple_0 = (bool_0, dict_0, bool_1, set_1)
    var_2 = module_0.func(*tuple_0)
    str_0 = "86L="
    module_0.func(*str_0)
