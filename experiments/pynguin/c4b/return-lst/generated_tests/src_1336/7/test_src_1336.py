# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1336 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    set_0 = {bool_0}
    tuple_0 = (bool_0, set_0)
    var_0 = module_0.func(*tuple_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1280
    set_0 = {int_0}
    list_0 = [int_0, set_0, int_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    set_0 = {bool_0}
    tuple_0 = (bool_0, set_0)
    var_0 = module_0.func(*tuple_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    set_0 = set()
    tuple_0 = (bool_0, set_0)
    var_0 = module_0.func(*tuple_0)
    var_1 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    bytes_0 = b"\n\xd7\x1ae\x04\xb6\xdbD\xa9\x98a+\xcb\xc8\xa1\xef\n\xb5"
    list_0 = [bool_0, bytes_0]
    var_0 = module_0.func(*list_0)
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (bool_0, set_0)
    var_1 = module_0.func(*tuple_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    bytes_0 = b"sE\x89\x1f\xf7\xf4X\xe6@2\x05\x07\xa8<\xc8\xe7[\xd6\xb65"
    list_0 = [bool_0, bytes_0]
    var_0 = module_0.func(*list_0)
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (bool_0, set_0)
    var_1 = module_0.func(*tuple_0)
    module_0.func()
