# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import src_2633 as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    str_0 = 'J@/:B3\x0by~o0]q5"'
    list_0 = [str_0, object_0, str_0]
    var_0 = module_1.func(*list_0)
    bool_0 = False
    tuple_0 = (var_0, bool_0)
    list_1 = [tuple_0]
    var_1 = module_1.func(*list_1)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_0.object()
    set_0 = set()
    list_0 = [set_0, object_0, set_0]
    var_0 = module_1.func(*list_0)
    object_1 = module_0.object()
    var_1 = module_1.func(*var_0)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_0.object()
    set_0 = {object_0, object_0}
    list_0 = [set_0, object_0, set_0]
    var_0 = module_1.func(*list_0)
    object_1 = module_0.object()
    var_1 = module_1.func(*var_0)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    object_0 = module_0.object()
    str_0 = 'J@/:B3\x0by~o0]q5"'
    list_0 = [str_0, object_0, str_0]
    var_0 = module_1.func(*list_0)
    tuple_0 = (var_0, var_0)
    list_1 = [tuple_0]
    var_1 = module_1.func(*list_1)
    var_2 = module_0.object()
#    module_1.func()
