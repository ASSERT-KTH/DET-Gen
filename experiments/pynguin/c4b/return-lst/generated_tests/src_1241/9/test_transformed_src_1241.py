# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1241 as module_0


def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "57NmO*"
#    module_0.func(*str_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "6v?t{YmnGju@`\"a:$'!"
#    module_0.func(*str_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    str_0 = "szrk:501\\-M~losj"
    list_0 = [bool_0, str_0, str_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "4"
    list_0 = [str_0, str_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)
    bool_1 = True
    str_0 = "7D]n!<E\n?Q"
    list_0 = [bool_1, str_0, str_0]
    var_1 = module_0.func(*list_0)
#    module_0.func(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)
    bool_1 = True
    list_0 = [bool_1, var_0, tuple_0, bool_1, var_0, var_0, bool_1]
    str_0 = "4"
    list_1 = [bool_1, str_0, str_0, list_0, str_0]
    var_1 = module_0.func(*list_1)
#    module_0.func()
