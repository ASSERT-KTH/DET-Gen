# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1387 as module_0


def test_case_0():
    bytes_0 = b"\xf1\xfa\xc0"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)


def test_case_1():
    bytes_0 = b"\xf1\xfa\xc0"
    dict_0 = {}
    dict_1 = {bytes_0: dict_0}
    list_0 = [bytes_0, bytes_0, dict_1]
    float_0 = 915.7982
    complex_0 = 66.786197 + 1979.971j
    tuple_0 = (complex_0,)
    tuple_1 = (bytes_0, list_0, float_0, tuple_0)
    bool_0 = False
    list_1 = [tuple_1, tuple_1, tuple_1, bool_0]
    var_0 = module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


def test_case_3():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)


def test_case_4():
    bytes_0 = b"\xf1\xfa\xc0"
    dict_0 = {}
    tuple_0 = (dict_0,)
    list_0 = [bytes_0, bytes_0, tuple_0, dict_0]
    var_0 = module_0.func(*list_0)
    tuple_1 = (bytes_0, var_0, var_0, var_0)
    tuple_2 = (var_0,)
    bool_0 = False
    list_1 = [tuple_1, tuple_2, tuple_1, bool_0]
    var_1 = module_0.func(*list_1)
