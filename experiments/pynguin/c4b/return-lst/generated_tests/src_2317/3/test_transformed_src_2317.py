# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2317 as module_0


def test_case_0():
    bytes_0 = b"G\xec\x87\xbb<\x04\xe2\x167\xe9\xf3\x9d)\x1a\xca\xb6\x8d\x9a"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.func(*dict_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


def test_case_2():
    bool_0 = True
    dict_0 = {}
    tuple_0 = (bool_0, bool_0, dict_0)
    list_0 = [tuple_0, bool_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xdd\xe7"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    set_0 = module_0.func(*list_0)
    list_1 = [set_0, bytes_0]
    tuple_0 = (set_0, list_0, list_1)
    list_2 = [list_0, tuple_0, set_0]
    var_1 = module_0.func(*list_2)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xdd\xd0\xe7"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    set_0 = {bytes_0, bytes_0}
    list_1 = [set_0, bytes_0]
    tuple_0 = (set_0, list_1, list_1)
    list_2 = [list_0, tuple_0, set_0]
    var_1 = module_0.func(*list_2)
    object_0 = module_0.func(*var_1)
#    module_0.func()
