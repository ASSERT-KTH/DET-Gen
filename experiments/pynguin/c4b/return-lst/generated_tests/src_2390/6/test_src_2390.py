# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2390 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "m"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    var_0 = module_0.func(*list_0)
    float_0 = -910.0
    list_1 = [float_0, float_0]
    var_1 = module_0.func(*var_0)
    list_2 = [list_1, float_0, float_0, float_0]
    module_1.object(*list_2)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    tuple_0 = (bool_0, bool_0, dict_0)
    list_0 = [tuple_0, tuple_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, bool_0, bool_0, list_0]
    var_0 = module_0.func(*list_1)
    list_2 = [var_0]
    var_1 = module_0.func(*list_2)
    var_2 = module_0.func(*var_1)
    var_3 = module_1.object()
    module_0.func()
