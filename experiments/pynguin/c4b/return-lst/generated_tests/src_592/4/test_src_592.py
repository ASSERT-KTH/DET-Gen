# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_592 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "|S{2(&\rk/*z"
    bytes_0 = b"\xdf\xc9#\x85\x10\x8e\x164\xc8\xe2z2\xb9"
    list_0 = [str_0, str_0, str_0, bytes_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "Oyv"
    bytes_0 = b"\xdf\xc9#\x85\x10\x8e\x164\xc8\xe2z2\xb9"
    list_0 = [str_0, str_0, str_0, bytes_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'bG)V:c"s=@8*K1b%a\x0b\r'
    bytes_0 = b"\xdf\xc9#\x85\x10\x8e\x164\xc8z2\xb9"
    list_0 = [str_0, str_0, str_0, bytes_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "|q0ES>2(&\rk/*z"
    bytes_0 = b"\xdf\xc9#\x85\x10\x8e\x164\xc8\xe2z2\xb9"
    list_0 = [str_0, str_0, str_0, bytes_0]
    var_0 = module_0.func(*list_0)
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "^,;rI0iZ#5;5Q"
    bytes_0 = b"\xdf\xc9#\x85\x10\x8e\x164\xc8\xe2z2\xb9"
    list_0 = [str_0, str_0, str_0, bytes_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "2\\ub.uo?J<rB rO+\t?3"
    bytes_0 = b"{\xf8T\x15"
    list_0 = [str_0, str_0, str_0, bytes_0]
    var_0 = module_0.func(*list_0)
    module_0.func()
