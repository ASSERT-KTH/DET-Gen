# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1676 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    bytes_0 = b"x\xf1>\xfd\xb0*\x05\xa2$\xdd\xe2\x8c"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)
    none_type_0 = None
    module_0.func(*none_type_0)


def test_case_2():
    bool_0 = True
    bytes_0 = b"\x07"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)


def test_case_3():
    bool_0 = True
    bytes_0 = b"8O"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    bytes_0 = b"\x06"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)
    module_0.func()


def test_case_5():
    bool_0 = False
    bytes_0 = b"\x07"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    bytes_0 = b"\x04"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 146
    dict_0 = {}
    list_0 = [int_0, dict_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    bytes_0 = b"\x04\x07"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)
    module_1.object(*var_0)
