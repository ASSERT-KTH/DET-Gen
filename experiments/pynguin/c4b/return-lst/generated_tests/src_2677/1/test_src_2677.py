# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2677 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


def test_case_1():
    bool_0 = True
    str_0 = "^\tv\t*`aC(@)a?"
    tuple_0 = (str_0, bool_0, str_0)
    var_0 = module_0.func(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    str_0 = 'KX!d"9g4E$sQT"S\\\x0b4X'
    tuple_0 = (str_0, bool_0, str_0)
    module_0.func(*tuple_0)


def test_case_3():
    bool_0 = False
    str_0 = "^\tv\t*`aC(@)a?"
    tuple_0 = (str_0, bool_0, str_0)
    var_0 = module_0.func(*tuple_0)


def test_case_4():
    bool_0 = False
    str_0 = "^\t>bKG*aCC@\\a"
    tuple_0 = (str_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x9a\xebw\x92R"
    bool_0 = False
    tuple_0 = (bytes_0, bytes_0, bool_0)
    list_0 = [tuple_0, bool_0, bytes_0, bool_0, tuple_0]
    str_0 = "6~<D8|&$4^z{>"
    tuple_1 = (str_0, bool_0, list_0)
    module_0.func(*tuple_1)


def test_case_6():
    bool_0 = True
    str_0 = "^\t>bKG*aCC@\\a"
    tuple_0 = (str_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    str_0 = "^\tv\tG*aC(@\\a"
    tuple_0 = (str_0, bool_0, bool_0)
    int_0 = -498
    list_0 = [str_0, int_0, tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


def test_case_8():
    bool_0 = False
    str_0 = "^\t^bKG*aCF\\a"
    tuple_0 = (str_0, bool_0, bool_0)
    var_0 = module_0.func(*tuple_0)
