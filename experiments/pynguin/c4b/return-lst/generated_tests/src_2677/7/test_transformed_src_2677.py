# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2677 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, bool_0, list_0, list_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, bool_0, list_0, list_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "^es`%Yj{"
    bool_0 = False
    list_0 = [str_0, bool_0, bool_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "^es`%Yj{"
    bool_0 = True
    list_0 = [str_0, bool_0, bool_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "/P<g/_U;kZVd|cD"
    bool_0 = False
    list_0 = [str_0, bool_0, bool_0]
#    module_0.func(*list_0)


def test_case_6():
    str_0 = "^Z>%\nj{"
    bool_0 = True
    list_0 = [str_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)


def test_case_7():
    str_0 = "^Z>%\nj{"
    bool_0 = False
    list_0 = [str_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "^Z>%tj{"
    bool_0 = False
    int_0 = 1811
    list_0 = [str_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    list_1 = [str_0, bool_0, str_0]
    var_1 = module_0.func(*list_1)
    bool_1 = True
    list_2 = [str_0, bool_1, bool_1]
    var_2 = module_0.func(*list_2)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "QSv1\tR1!WS3"
    bool_0 = True
    list_0 = [str_0, bool_0, str_0]
#    module_0.func(*list_0)


def test_case_10():
    str_0 = "^Z<%t\t."
    bool_0 = False
    list_0 = [str_0, bool_0, str_0]
    var_0 = module_0.func(*list_0)
    bool_1 = True
    list_1 = [str_0, bool_1, bool_1]
    object_0 = module_1.object()
    var_1 = module_0.func(*list_1)
