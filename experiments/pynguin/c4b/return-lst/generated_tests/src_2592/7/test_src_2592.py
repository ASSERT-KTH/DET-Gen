# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2592 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, bool_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    list_1 = [list_0, list_0, list_0]
    module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "9999"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "999999999D99999"
    object_0 = module_1.object()
    list_0 = [str_0, object_0, object_0, object_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "99\\99999999999999"
    object_0 = module_1.object()
    list_0 = [str_0, object_0, object_0, object_0]
    var_0 = module_0.func(*list_0)
    tuple_0 = ()
    list_1 = [tuple_0, tuple_0]
    list_2 = [list_1, list_1]
    list_3 = [list_2, list_2, list_2]
    module_0.func(*list_3)
