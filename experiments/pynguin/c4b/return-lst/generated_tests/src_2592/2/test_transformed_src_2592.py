# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2592 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, bool_0, tuple_0, bool_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
#    module_0.func(*bool_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0,)
    dict_0 = {tuple_0: tuple_0, bool_0: tuple_0, tuple_0: bool_0, tuple_0: bool_0}
    object_0 = module_1.object()
    list_0 = [dict_0, tuple_0, object_0, dict_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "zms@arJ6+R|)v_F^9b"
    bytes_0 = b"\x8a\x97\xcb\xba\x85{`\x1f\\\x9d\xddw\xacE\xd5\x85"
    list_0 = [str_0, bytes_0, bytes_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    tuple_0 = (bool_0,)
    dict_0 = {tuple_0: tuple_0, bool_0: tuple_0, tuple_0: bool_0}
    list_0 = [dict_0, tuple_0, bool_0, dict_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "99999999999999999"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "L2"
    set_0 = {str_0, str_0}
    list_0 = [str_0, set_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "99i9999999999999999"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    var_2 = module_0.func(*list_0)
    var_3 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "999999999999999g9"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    object_0 = module_1.object()
#    module_0.func()
