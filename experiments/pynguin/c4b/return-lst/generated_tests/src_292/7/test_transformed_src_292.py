# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_292 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcd\xc7\x10+"
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"\xfe!\x88\xd6\xb7\xa7>\x9bj\xa1\xbd\xcc\xe8{\x8d"
    var_1 = module_0.func(*bytes_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_2)
    var_4 = module_0.func(*var_2)
    var_5 = module_0.func(*var_3)
    var_6 = module_0.func(*var_5)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xdd.\x8e\x12*\x87\x87\xcfi\xd0\x0c\x06\xad}\xbe\xc23"
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 100000
    object_0 = module_1.object()
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 99987
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()
