# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import src_2267 as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    bool_0 = False
    set_0 = {object_0, object_0, bool_0}
    tuple_0 = (set_0, set_0, bool_0, bool_0)
    list_0 = [tuple_0]
#    module_1.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ">6\x0bGVq~X$\txE"
    var_0 = module_1.func(*str_0)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    list_0 = [bytes_0]
    var_0 = module_1.func(*list_0)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ">6\x0bGVq~X$\txE"
    dict_0 = {str_0: str_0, str_0: str_0}
    bytes_0 = (
        b"\xb4\xc8\xb6\xf0\xaf\xbc\xc9\xbf\xa4\xf4\\c\xae\x00\x85g\xc0\x87\xf1\x1f"
    )
    bool_0 = False
    tuple_0 = (bytes_0, bool_0, str_0)
    tuple_1 = (dict_0, bytes_0, bytes_0, tuple_0)
    list_0 = [tuple_1]
    var_0 = module_1.func(*list_0)
    bytes_1 = b""
    list_1 = [bytes_1]
    var_1 = module_1.func(*list_1)
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ">6\x0bFGVq~X$\tE"
    dict_0 = {str_0: str_0, str_0: str_0}
    bytes_0 = b"[z\x8d\x12\x80\xfcM\x07\xaaV2\xf5#Z\xe3\xe5"
    bool_0 = False
    tuple_0 = (bytes_0, bool_0, str_0)
    tuple_1 = (dict_0, bytes_0, bytes_0, tuple_0)
    list_0 = [tuple_1]
#    module_1.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "I0WVu}4"
    var_0 = module_1.func(*str_0)
    var_1 = module_1.func(*var_0)
    bytes_0 = b""
    list_0 = [bytes_0]
    var_2 = module_1.func(*list_0)
    object_0 = module_0.object()
    var_3 = module_0.object()
    var_4 = module_1.func(*var_0)
#    module_1.func()
