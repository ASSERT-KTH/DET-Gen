# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1052 as module_0


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


def test_case_1():
    str_0 = "!EdeUK_\x0bQmim"
    bool_0 = True
    tuple_0 = (str_0, bool_0, str_0)
    var_0 = module_0.func(*tuple_0)


def test_case_2():
    str_0 = '<T"l2a?XDm^-cPCF962u'
    bool_0 = True
    tuple_0 = (str_0, bool_0, str_0)
    var_0 = module_0.func(*tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "'1+}h _5*Ge"
    bool_0 = False
    tuple_0 = (str_0, bool_0, str_0)
#    module_0.func(*tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '"k"'
    bool_0 = True
    tuple_0 = (str_0, bool_0, str_0)
#    module_0.func(*tuple_0)


def test_case_5():
    str_0 = "v_B~"
    bool_0 = True
    tuple_0 = (str_0, bool_0, str_0)
    var_0 = module_0.func(*tuple_0)


def test_case_6():
    str_0 = ">N*j1SpsxX81*"
    bool_0 = True
    tuple_0 = (str_0, bool_0, str_0)
    var_0 = module_0.func(*tuple_0)


def test_case_7():
    str_0 = "^EOdeUKQmH#6"
    bool_0 = True
    tuple_0 = (str_0, bool_0, str_0)
    var_0 = module_0.func(*tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "Rpk[83)U5k_)zo\\X"
    bool_0 = True
    tuple_0 = (str_0, bool_0, str_0)
    int_0 = 1989
    list_0 = [tuple_0, int_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "^`<"
    bool_0 = True
    tuple_0 = (str_0, bool_0, str_0)
#    module_0.func(*tuple_0)
