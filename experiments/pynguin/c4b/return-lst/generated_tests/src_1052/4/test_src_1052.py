# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1052 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    float_0 = -4422.809778
    tuple_0 = (dict_0, float_0, dict_0)
    list_0 = [tuple_0, float_0, float_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, bool_0, bool_0]
    module_0.func(*list_1)


def test_case_3():
    bool_0 = True
    str_0 = "PUM!4uU;<'t,~\"S"
    list_0 = [str_0, bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    float_0 = 849.060889
    tuple_0 = (dict_0, float_0, dict_0)
    list_0 = [tuple_0, float_0, float_0]
    module_0.func(*list_0)


def test_case_5():
    bool_0 = True
    str_0 = ">pTz"
    list_0 = [str_0, bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)


def test_case_6():
    bool_0 = True
    str_0 = "<#*i~gxx:\tCr"
    list_0 = [str_0, bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)


def test_case_7():
    bool_0 = True
    str_0 = "vUM!4uU!<'t,~qS"
    list_0 = [str_0, bool_0, bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)


def test_case_8():
    bool_0 = True
    str_0 = "^#-m.U#r/kjSm>\x0c6)2zA"
    list_0 = [str_0, bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = True
    str_0 = "^}<e<[Y{3F_&or\r@)n"
    list_0 = [
        str_0,
        bool_0,
        str_0,
        bool_0,
        bool_0,
        str_0,
        bool_0,
        str_0,
        str_0,
        bool_0,
        str_0,
        bool_0,
        str_0,
    ]
    module_0.func(*list_0)
