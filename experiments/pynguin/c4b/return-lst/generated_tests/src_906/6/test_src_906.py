# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_906 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\x0bSYjp:"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


def test_case_2():
    set_0 = set()
    str_0 = "=bji/-d"
    list_0 = [set_0, str_0]
    list_1 = [str_0, set_0, set_0, list_0]
    var_0 = module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "\taK"
    var_0 = module_0.func(*str_0)
    list_0 = [str_0, str_0, str_0, var_0]
    var_1 = module_0.func(*list_0)
    var_2 = module_0.func(*var_1)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "N&--C;yn{1XeV\t\x0b"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "|ziM'e6l\"uc}"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "V!\njE5F-XwCI&"
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "A#9|!#/T:"
    var_0 = module_0.func(*str_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "!9z*`&T1G![*oY"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "&x;OFyn{1XeV\t\x0b"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    module_1.object(*var_1)


@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "VS58NFfZG\x0cezB*!Sh/U"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_1.object()
    module_1.object(*var_1, **var_1)
