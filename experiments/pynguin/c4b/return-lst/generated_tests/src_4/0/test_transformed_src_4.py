# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_4 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 82
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    object_0 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -4308
    int_1 = 2559
    tuple_0 = (int_0, int_1)
    var_0 = module_0.func(*tuple_0)
    list_0 = [int_1, int_1, int_1]
    var_1 = module_0.func(*list_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 82
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 2.334
    list_0 = [float_0, float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    complex_0 = -1714.605 - 4832j
    list_1 = [complex_0, complex_0, complex_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    int_0 = 47
    list_1 = [int_0, int_0, int_0]
    var_1 = module_0.func(*list_1)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_2)
    var_4 = module_0.func(*var_3)
    var_5 = module_1.object()
#    module_0.func()
