# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1968 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "T gsQ/G{"
    var_0 = module_0.func(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'B@>5`O) }5"EaM'
    str_1 = "Cb9H"
    bytes_0 = b"M"
    list_0 = [str_0, str_0, str_1, bytes_0]
    list_1 = [str_1, list_0, str_1]
    var_0 = module_0.func(*list_1)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    list_2 = [dict_0]
    module_0.func(*list_2)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'B@>5`O) }5"EaM'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    str_1 = 'loM"nQh(FW<,J[A?O=M'
    bytes_0 = b"M"
    list_1 = [str_0, str_0, str_1, bytes_0]
    list_2 = [str_1, list_1, str_1]
    var_2 = module_0.func(*list_2)
    var_3 = module_1.object()
    list_3 = []
    module_0.func(*list_3)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'B@>5`O) }5"EaM'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    str_1 = '9SMo.0c^M6\x0cc)J(2\n"xH'
    bytes_0 = b"M"
    list_1 = [str_0, str_0, str_1, bytes_0]
    list_2 = [str_1, list_1, str_1]
    var_2 = module_0.func(*list_2)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    list_3 = [str_0, var_1, dict_0]
    var_3 = module_0.func(*list_3)
    var_4 = module_0.func(*var_3)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "HQn\\6T'o@\t1,<\tuGGIpS"
    var_0 = module_0.func(*str_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'B@>5`O)9F }5"EaM'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "Q'%v0,o<UZV&(ZPCn["
    var_0 = module_0.func(*str_0)
    module_0.func()
