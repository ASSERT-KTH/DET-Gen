# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_557 as module_0


def test_case_0():
    str_0 = "H"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x9e\xb1"
    list_0 = [bytes_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*list_0)
    str_0 = "A`+FU\x0bl_-UyD4h7"
    list_1 = [str_0]
    var_2 = module_0.func(*list_1)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_0, bool_0)
    str_0 = "x3Q9#=&<M"
    tuple_1 = (bool_0, tuple_0, bool_0, str_0)
    str_1 = ""
    bytes_0 = b"U\x03\xc7\xe9\r\xf6\xf6\xc6\xac\x86\x8b\x9c\xe4\xef\xbd\xf1PS"
    list_0 = [str_0, dict_0]
    var_0 = module_0.func(*list_0)
    int_0 = -2582
    bytes_1 = b"\x95\x15\xbc\xbb\xa4\xcd\xeb\xe4x^\xfd"
    tuple_2 = (bytes_0, int_0, tuple_1, bytes_1)
    tuple_3 = (tuple_1, str_1, tuple_2, int_0)
    list_1 = [tuple_3, tuple_0, bytes_1, tuple_0]
    var_1 = module_0.func(*list_1)
#    module_0.func()
