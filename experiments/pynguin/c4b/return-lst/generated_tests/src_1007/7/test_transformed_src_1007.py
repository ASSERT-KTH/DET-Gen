# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1007 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "3"
    var_0 = module_0.func(*str_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "4T.]\x0bLPO1LLYwz"
    var_0 = module_0.func(*str_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '9_"(I?[*'
    var_0 = module_0.func(*str_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "29QT-dKxc\x0cn"
    var_0 = module_0.func(*str_0)
#    module_1.object(**var_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "\r05"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    str_1 = "6N."
    var_1 = module_0.func(*str_1)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "\r0"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    str_1 = "16}<"
    var_1 = module_0.func(*str_1)
    bool_0 = True
    list_1 = [str_1, bool_0, bool_0, str_1]
#    module_0.func(*list_1)
