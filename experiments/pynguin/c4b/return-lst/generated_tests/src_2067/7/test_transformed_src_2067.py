# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2067 as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1628
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    int_0 = 926
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: int_0, int_0: int_0}
    tuple_0 = (bool_0, dict_0)
    var_0 = module_0.func(*tuple_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'\x10\x1d\xc6\xd2u\xb2\x88\xca\x17\x1c<N\x06"\xcb%P\xd8k'
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x02U:P_$M\x10\xa3"
    var_0 = module_0.func(*bytes_0)
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_1 = module_0.func(*list_0)
    var_2 = module_1.object()
    var_3 = module_0.func(*list_0)
#    module_0.func(*var_1)
