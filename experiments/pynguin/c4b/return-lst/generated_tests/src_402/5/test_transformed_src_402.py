# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_402 as module_0


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    list_0 = [bool_0, set_0, set_0, bool_0, set_0, bool_0]
    var_0 = module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    str_0 = "M=M;@!c"
    tuple_0 = (bool_0, str_0)
    var_0 = module_0.func(*tuple_0)
    set_0 = set()
    list_0 = [bool_0, set_0, set_0, bool_0, str_0, set_0, var_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    str_0 = ""
    tuple_0 = (bool_0, str_0)
    var_0 = module_0.func(*tuple_0)
#    module_0.func(*bool_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    str_0 = "4tcNM\t<cb_)"
    tuple_0 = (bool_0, str_0)
    var_0 = module_0.func(*tuple_0)
    set_0 = {bool_0, tuple_0}
    list_0 = [bool_0, set_0, set_0, bool_0, str_0, set_0, var_0]
    var_1 = module_0.func(*list_0)
    var_2 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    str_0 = "7=M;@]!c"
    tuple_0 = (bool_0, str_0)
    var_0 = module_0.func(*tuple_0)
    set_0 = set()
    list_0 = [bool_0, set_0, str_0, var_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    str_0 = "7"
    tuple_0 = (bool_0, str_0)
    var_0 = module_0.func(*tuple_0)
    set_0 = set()
    list_0 = [bool_0, set_0, set_0, bool_0, str_0, set_0, var_0]
#    module_0.func(*list_0)
