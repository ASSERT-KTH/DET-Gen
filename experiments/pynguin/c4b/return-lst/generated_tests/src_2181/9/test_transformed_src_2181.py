# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2181 as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xa1\x92iWu*\xc1r"
    var_0 = module_0.func(*bytes_0)


def test_case_1():
    bytes_0 = b"\x05\x04\x1b"
    var_0 = module_0.func(*bytes_0)


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"`\xb9\xbc\xbf(\xc9~\x08"
    var_1 = module_0.func(*bytes_0)
    var_2 = module_0.func(*var_1)
    object_0 = module_1.object()


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    bytes_0 = b"`\xb9\xbc\xbf(\xc9~\x08"
    var_1 = module_0.func(*bytes_0)
    var_2 = module_0.func(*var_1)


#@pytest.mark.xfail(strict=True)
#def test_case_4():
#    module_0.func()


def test_case_5():
    bytes_0 = b":k3O@\xe8\x83\xa4"
    var_0 = module_0.func(*bytes_0)


def test_case_6():
    bytes_0 = b"A\x85\xfc\x8e\x05\xbf\xfb\xa0\x81]\xae"
    var_0 = module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"\x1a\xf1e\xae\xa4\xff"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
#    module_1.object(**var_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b"\x18|g.\x89"
    var_0 = module_0.func(*bytes_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_9():
    bytes_0 = b"\x1a\xf1e\xae\xa4\xff"
    var_0 = module_0.func(*bytes_0)
#    module_1.object(**var_0)


def test_case_10():
    bytes_0 = b"`\xb9\xbc\xbf(\xc9~\x08"
    var_0 = module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    bytes_0 = b"\x1a\xbd\xc0\x0e\xf6*\x03\xc0\xdcL\x0b\xc3\xb2\xb0\r"
    var_2 = module_0.func(*bytes_0)
    var_3 = module_0.func(*var_2)
    var_4 = module_0.func(*var_3)
    var_5 = module_0.func(*var_4)
#    module_0.func()
