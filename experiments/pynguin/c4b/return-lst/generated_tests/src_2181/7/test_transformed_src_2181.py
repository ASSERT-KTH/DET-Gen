# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2181 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "8s<I^Q+q+n\\L\x0cuu"
    var_0 = module_0.func(*str_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 86
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x1c\x9cz\xe5\xe6\xd2\xd7t\xc7\x03\xad\xb5"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 86
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_1)
#    module_1.object(*var_1, **var_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 61
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 76
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
#    module_1.object(**list_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 86
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_2)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = 5494
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
#    module_0.func(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = 86
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_0)
    var_3 = module_0.func(*var_2)
    var_4 = module_0.func(*var_3)
    var_5 = module_0.func(*var_4)
#    module_0.func()
