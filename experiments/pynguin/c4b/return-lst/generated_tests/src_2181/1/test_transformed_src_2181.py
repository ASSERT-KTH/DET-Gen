# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2181 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    var_1 = module_1.object()


def test_case_3():
    int_0 = 2
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.func(*dict_0)
    var_1 = module_0.func(*dict_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 2
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.func(*dict_0)
    var_1 = module_0.func(*var_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 35
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.func(*dict_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 8
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.func(*dict_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 22
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.func(*dict_0)
#    module_0.func(*int_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 3984
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.func(*dict_0)
#    module_0.func(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = 49
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.func(*dict_0)
    object_0 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = 69
    dict_0 = {int_0: int_0}
    var_0 = module_0.func(*dict_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_11():
    int_0 = 92
    dict_0 = {int_0: int_0}
    var_0 = module_0.func(*dict_0)
    var_1 = module_1.object()
#    module_0.func()
