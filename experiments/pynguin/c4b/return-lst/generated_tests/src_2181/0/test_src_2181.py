# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2181 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"c\\c\xdfu"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"8\\c\xdfu"
    bytes_1 = b"f\xca\xf6I\xcb\xe48\xf7z&]\xf3\xce"
    var_0 = module_0.func(*bytes_1)
    var_1 = module_0.func(*bytes_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_2)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"c\\c\xdfu"
    bytes_1 = b"f\xca\xf6I\xcb\xe48\xf7z&]\xf3\xce"
    var_0 = module_0.func(*bytes_1)
    var_1 = module_0.func(*bytes_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_2)
    var_4 = module_0.func(*var_3)
    var_5 = module_0.func(*var_2)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"&\xb1"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
    module_1.object(**var_1)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"E\\c\xdfu"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
    object_0 = module_1.object()
    var_3 = module_0.func(*var_1)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b"c\\c\xdfu"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_2)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_9():
    bytes_0 = b"c\\c\xdfu"
    var_0 = module_0.func(*bytes_0)
    var_1 = module_0.func(*var_0)
    var_2 = module_0.func(*var_1)
    var_3 = module_0.func(*var_2)
    var_4 = module_0.func(*var_3)
    module_0.func()
