============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.4, pluggy-1.4.0
rootdir: /home/khashayar/projs/det-gen
plugins: anyio-4.3.0
collected 3 items

c4b_ret_list_bak/src_1360/2/test_transformed_src_1360.py FFF             [100%]

=================================== FAILURES ===================================
_________________________________ test_case_0 __________________________________

    def test_case_0():
        bool_0 = False
        list_0 = [bool_0]
>       var_0 = module_0.func(*list_0)

c4b_ret_list_bak/src_1360/2/test_transformed_src_1360.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
c4b_ret_list_bak/src_1360/2/src_1360.py:16: in func
    return(fun(n))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 0

    def fun(n):
        for i in range(maximo, (- 1), (- 1)):
            v = (n - (7 * i))
            if (v >= 0):
                x = (v % 4)
                if (x == 0):
                    string = (('4' * int((v // 4))) + ('7' * i))
>                   return int(string)
E                   ValueError: invalid literal for int() with base 10: ''

c4b_ret_list_bak/src_1360/2/src_1360.py:14: ValueError
_________________________________ test_case_1 __________________________________

    def test_case_1():
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0]
        var_0 = module_0.func(*list_0)
        bool_1 = False
        list_1 = [bool_1]
>       var_1 = module_0.func(*list_1)

c4b_ret_list_bak/src_1360/2/test_transformed_src_1360.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
c4b_ret_list_bak/src_1360/2/src_1360.py:16: in func
    return(fun(n))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 0

    def fun(n):
        for i in range(maximo, (- 1), (- 1)):
            v = (n - (7 * i))
            if (v >= 0):
                x = (v % 4)
                if (x == 0):
                    string = (('4' * int((v // 4))) + ('7' * i))
>                   return int(string)
E                   ValueError: invalid literal for int() with base 10: ''

c4b_ret_list_bak/src_1360/2/src_1360.py:14: ValueError
_________________________________ test_case_3 __________________________________

    def test_case_3():
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0]
        var_0 = module_0.func(*list_0)
        bytes_0 = b"\xa4\xbf"
        var_1 = module_0.func(*bytes_0)
        bool_1 = False
        var_2 = module_0.func(*list_0)
        list_1 = [bool_1]
>       var_3 = module_0.func(*list_1)

c4b_ret_list_bak/src_1360/2/test_transformed_src_1360.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
c4b_ret_list_bak/src_1360/2/src_1360.py:16: in func
    return(fun(n))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 0

    def fun(n):
        for i in range(maximo, (- 1), (- 1)):
            v = (n - (7 * i))
            if (v >= 0):
                x = (v % 4)
                if (x == 0):
                    string = (('4' * int((v // 4))) + ('7' * i))
>                   return int(string)
E                   ValueError: invalid literal for int() with base 10: ''

c4b_ret_list_bak/src_1360/2/src_1360.py:14: ValueError
=========================== short test summary info ============================
FAILED c4b_ret_list_bak/src_1360/2/test_transformed_src_1360.py::test_case_0
FAILED c4b_ret_list_bak/src_1360/2/test_transformed_src_1360.py::test_case_1
FAILED c4b_ret_list_bak/src_1360/2/test_transformed_src_1360.py::test_case_3
============================== 3 failed in 0.08s ===============================
