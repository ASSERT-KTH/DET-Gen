============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.4, pluggy-1.4.0
rootdir: /home/khashayar/projs/det-gen
plugins: anyio-4.3.0
collected 6 items

c4b_ret_list_bak/src_1895/4/test_transformed_src_1895.py F..FF.          [100%]

=================================== FAILURES ===================================
_________________________________ test_case_0 __________________________________

    def test_case_0():
        list_0 = []
        list_1 = [list_0, list_0]
>       var_0 = module_0.func(*list_1)

c4b_ret_list_bak/src_1895/4/test_transformed_src_1895.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = ([], []), n = [], ans = 0.5, n1 = ''

    def func(*args):
    
    	n = args[0]
    	ans = (2 ** (len(n) - 1))
    	n1 = ''
    	for i in range(1, len(n)):
    	    if (int(n[i]) > 0):
    	        n1 += '1'
    	    else:
    	        n1 += '0'
>   	n1 = (0 + int(n1))
E    ValueError: invalid literal for int() with base 10: ''

c4b_ret_list_bak/src_1895/4/src_1895.py:11: ValueError
_________________________________ test_case_3 __________________________________

    def test_case_3():
        set_0 = set()
        list_0 = [set_0, set_0]
>       var_0 = module_0.func(*list_0)

c4b_ret_list_bak/src_1895/4/test_transformed_src_1895.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (set(), set()), n = set(), ans = 0.5, n1 = ''

    def func(*args):
    
    	n = args[0]
    	ans = (2 ** (len(n) - 1))
    	n1 = ''
    	for i in range(1, len(n)):
    	    if (int(n[i]) > 0):
    	        n1 += '1'
    	    else:
    	        n1 += '0'
>   	n1 = (0 + int(n1))
E    ValueError: invalid literal for int() with base 10: ''

c4b_ret_list_bak/src_1895/4/src_1895.py:11: ValueError
_________________________________ test_case_4 __________________________________

    def test_case_4():
        bytes_0 = b"\x02\x98t3\x9a\x0f\\rT*"
        set_0 = {bytes_0}
        bool_0 = True
        tuple_0 = (bytes_0, set_0, set_0, bool_0)
        tuple_1 = (bool_0,)
        list_0 = [tuple_1, tuple_0]
>       var_0 = module_0.func(*list_0)

c4b_ret_list_bak/src_1895/4/test_transformed_src_1895.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = ((True,), (b'\x02\x98t3\x9a\x0f\\rT*', {b'\x02\x98t3\x9a\x0f\\rT*'}, {b'\x02\x98t3\x9a\x0f\\rT*'}, True))
n = (True,), ans = 1, n1 = ''

    def func(*args):
    
    	n = args[0]
    	ans = (2 ** (len(n) - 1))
    	n1 = ''
    	for i in range(1, len(n)):
    	    if (int(n[i]) > 0):
    	        n1 += '1'
    	    else:
    	        n1 += '0'
>   	n1 = (0 + int(n1))
E    ValueError: invalid literal for int() with base 10: ''

c4b_ret_list_bak/src_1895/4/src_1895.py:11: ValueError
=========================== short test summary info ============================
FAILED c4b_ret_list_bak/src_1895/4/test_transformed_src_1895.py::test_case_0
FAILED c4b_ret_list_bak/src_1895/4/test_transformed_src_1895.py::test_case_3
FAILED c4b_ret_list_bak/src_1895/4/test_transformed_src_1895.py::test_case_4
========================= 3 failed, 3 passed in 0.09s ==========================
