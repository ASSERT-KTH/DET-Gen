============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.4, pluggy-1.4.0
rootdir: /home/khashayar/projs/det-gen
plugins: anyio-4.3.0
collected 6 items

c4b_bak/src_2160/8/test_transformed_src_2160.py F..FFF                   [100%]

=================================== FAILURES ===================================
_________________________________ test_case_0 __________________________________

    def test_case_0():
        bool_0 = True
        set_0 = {bool_0, bool_0}
        list_0 = [set_0, set_0]
>       var_0 = module_0.func(*list_0)

c4b_bak/src_2160/8/test_transformed_src_2160.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
c4b_bak/src_2160/8/src_2160.py:16: in func
    return(f(args[0], 3, 0))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

t = {True}, k = 3, s = 0

    def f(t, k, s):
        if (k == 1):
            if ((t[0] == '0') and (len(t) > 1)):
                return (- 1)
            d = int(t)
            if (d > 1000000):
                return (- 1)
            return (s + d)
>       if (t[0] == '0'):
E       TypeError: 'set' object is not subscriptable

c4b_bak/src_2160/8/src_2160.py:12: TypeError
_________________________________ test_case_4 __________________________________

    def test_case_4():
        str_0 = "979846373"
        list_0 = [str_0, str_0]
        var_0 = module_0.func(*list_0)
        assert var_0 == 984737
>       var_1 = module_0.func(*str_0)

c4b_bak/src_2160/8/test_transformed_src_2160.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
c4b_bak/src_2160/8/src_2160.py:16: in func
    return(f(args[0], 3, 0))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

t = '9', k = 3, s = 0

    def f(t, k, s):
        if (k == 1):
            if ((t[0] == '0') and (len(t) > 1)):
                return (- 1)
            d = int(t)
            if (d > 1000000):
                return (- 1)
            return (s + d)
        if (t[0] == '0'):
            return f(t[1:], (k - 1), s)
        p = [(t[i:], int(t[:i])) for i in range(1, ((len(t) + 2) - k))]
>       return max((f(a, (k - 1), (s + b)) for (a, b) in p if (b < 1000001)))
E       ValueError: max() arg is an empty sequence

c4b_bak/src_2160/8/src_2160.py:15: ValueError
_________________________________ test_case_5 __________________________________

    def test_case_5():
        str_0 = "97984073"
        list_0 = [str_0, str_0]
        var_0 = module_0.func(*list_0)
        assert var_0 == 984089
>       var_1 = module_0.func(*str_0)

c4b_bak/src_2160/8/test_transformed_src_2160.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
c4b_bak/src_2160/8/src_2160.py:16: in func
    return(f(args[0], 3, 0))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

t = '9', k = 3, s = 0

    def f(t, k, s):
        if (k == 1):
            if ((t[0] == '0') and (len(t) > 1)):
                return (- 1)
            d = int(t)
            if (d > 1000000):
                return (- 1)
            return (s + d)
        if (t[0] == '0'):
            return f(t[1:], (k - 1), s)
        p = [(t[i:], int(t[:i])) for i in range(1, ((len(t) + 2) - k))]
>       return max((f(a, (k - 1), (s + b)) for (a, b) in p if (b < 1000001)))
E       ValueError: max() arg is an empty sequence

c4b_bak/src_2160/8/src_2160.py:15: ValueError
_________________________________ test_case_6 __________________________________

    def test_case_6():
        str_0 = "979840"
        list_0 = [str_0, str_0]
        var_0 = module_0.func(*list_0)
        assert var_0 == 9856
>       var_1 = module_0.func(*str_0)

c4b_bak/src_2160/8/test_transformed_src_2160.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
c4b_bak/src_2160/8/src_2160.py:16: in func
    return(f(args[0], 3, 0))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

t = '9', k = 3, s = 0

    def f(t, k, s):
        if (k == 1):
            if ((t[0] == '0') and (len(t) > 1)):
                return (- 1)
            d = int(t)
            if (d > 1000000):
                return (- 1)
            return (s + d)
        if (t[0] == '0'):
            return f(t[1:], (k - 1), s)
        p = [(t[i:], int(t[:i])) for i in range(1, ((len(t) + 2) - k))]
>       return max((f(a, (k - 1), (s + b)) for (a, b) in p if (b < 1000001)))
E       ValueError: max() arg is an empty sequence

c4b_bak/src_2160/8/src_2160.py:15: ValueError
=========================== short test summary info ============================
FAILED c4b_bak/src_2160/8/test_transformed_src_2160.py::test_case_0 - TypeErr...
FAILED c4b_bak/src_2160/8/test_transformed_src_2160.py::test_case_4 - ValueEr...
FAILED c4b_bak/src_2160/8/test_transformed_src_2160.py::test_case_5 - ValueEr...
FAILED c4b_bak/src_2160/8/test_transformed_src_2160.py::test_case_6 - ValueEr...
========================= 4 failed, 2 passed in 0.05s ==========================
