# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2362 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "(^r4%%u&"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".("
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "UCp\t8:"
    object_0 = module_1.object()
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    list_0 = []
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "(^r4%%u&"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".(.^.r.4.%.%.&"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b""
    int_0 = -1361
    set_0 = {bytes_0, int_0, bytes_0, int_0}
    var_0 = module_0.func(*set_0)
    assert var_0 == ""
    str_0 = "\n8bA/7a/@"
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == ".\n.8.b./.7./.@"
    var_2 = module_0.func(*var_1)
    assert var_2 == ".."
    var_3 = module_0.func(*list_0)
    assert var_3 == ".\n.8.b./.7./.@"
    module_0.func()
