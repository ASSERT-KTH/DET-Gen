# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1571 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\x0c_"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "\x0c_"


#@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ""
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "_"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "_"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "'<++B\"N`RF"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "'<++b\"n`rf"
    list_1 = [str_0, list_0]
    var_1 = module_0.func(*list_1)
    var_2 = module_0.func(*var_1)
    assert var_2 == "'"
    var_3 = module_1.object()
    var_4 = module_0.func(*list_1)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "bUM~"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "Bum~"
    list_1 = [str_0, str_0, list_0, str_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "Bum~"
    var_2 = module_1.object()
    var_3 = module_1.object()
#    module_0.func()
