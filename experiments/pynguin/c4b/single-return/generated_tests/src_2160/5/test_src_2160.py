# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2160 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "5\x0c[i"
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*str_0)
    assert var_0 == -1
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "XB\\[iF"
    list_0 = [str_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "5\x0c[i"
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "99\x0c8"
    list_0 = [str_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "50Z "
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    module_0.func(*list_0)


def test_case_6():
    str_0 = "1949078"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 94916


def test_case_7():
    str_0 = "990"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 18
    var_1 = module_0.func(*list_0)
    assert var_1 == 18


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "974900978"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 975005
    var_1 = module_0.func(*list_0)
    assert var_1 == 975005
    var_2 = module_0.func(*str_0)
    assert var_2 == -1
    module_1.object(*var_2)
