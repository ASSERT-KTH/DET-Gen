# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2160 as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, set_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -1


def test_case_1():
    str_0 = "863"
    dict_0 = {str_0: str_0}
    var_0 = module_0.func(*dict_0)
    assert var_0 == 17


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_0.func()


def test_case_3():
    str_0 = "8063"
    dict_0 = {str_0: str_0}
    var_0 = module_0.func(*dict_0)
    assert var_0 == 89


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "979846373"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 984737
    var_1 = module_0.func(*str_0)
    assert var_1 == -1
#    module_1.object(**var_1)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "97984073"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 984089
    var_1 = module_0.func(*str_0)
    assert var_1 == -1
#    module_1.object(*list_0, **str_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "979840"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 9856
    var_1 = module_0.func(*str_0)
    assert var_1 == -1
    object_0 = module_1.object()
#    module_1.object(*list_0, **object_0)
