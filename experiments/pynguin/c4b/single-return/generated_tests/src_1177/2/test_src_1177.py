# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1177 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "1"
    var_1 = module_0.func(*list_0)
    assert var_1 == "1"
    object_0 = module_1.object()
    var_2 = module_0.func(*var_0)
    assert var_2 == "7"
    var_3 = module_0.func(*list_0)
    assert var_3 == "1"
    var_4 = module_0.func(*var_2)
    assert var_4 == "711"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "1"
    list_1 = []
    module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "1"
    var_1 = module_0.func(*list_0)
    assert var_1 == "1"
    object_0 = module_1.object()
    bytes_0 = b"z\xd7"
    var_2 = module_0.func(*bytes_0)
    assert var_2 == "1111111111111111111111111111111111111111111111111111111111111"
    var_3 = module_1.object()
    module_0.func()
