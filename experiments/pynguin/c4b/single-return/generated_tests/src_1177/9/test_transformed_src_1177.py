# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1177 as module_0


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "1"
    var_1 = module_0.func(*list_0)
    assert var_1 == "1"
    var_2 = module_0.func(*var_0)
    assert var_2 == "7"
    var_3 = module_0.func(*var_0)
    assert var_3 == "7"
    list_1 = [list_0, var_3]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"}^B\x8b=\xc8\x01~\xebg\xb5d>\xd6L"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "71111111111111111111111111111111111111111111111111111111111111"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xd2\xcf\xc88UPH,\xa8P\xe9az\xc4\xc8"
    var_0 = module_0.func(*bytes_0)
    assert (
        var_0
        == "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )
    none_type_0 = None
    list_0 = [none_type_0]
#    module_0.func(*list_0)
