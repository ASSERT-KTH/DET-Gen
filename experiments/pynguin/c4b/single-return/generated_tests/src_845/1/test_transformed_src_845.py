# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_845 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"g\xb7\xb7\x19\x85\xce\xc2^I<\xca\x8a\x01\xefbl\x95\xa3"
#    module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xbf\x16\xaa\x07\xd0<\x11\x16\xe4\xd9\xcc"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
#    module_1.object(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'Y@"O$'
    tuple_0 = (str_0,)
    list_0 = [tuple_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    object_0 = module_1.object()
#    module_1.object(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "?H.~aS'DV\"C]v?h"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"
    var_1 = module_0.func(*str_0)
    assert var_1 == "NO"
#    module_1.object(*str_0)
