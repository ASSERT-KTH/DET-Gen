# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_592 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "xnYQ+KqCt[L[lXp\\-i/N"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".x.n.q.+.k.q.c.t.[.l.[.l.x.p.\\.-./.n"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "Oz2P"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    object_0 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ".eYQ+KqC[Lp[lXp\\-i/N"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".."
    object_0 = module_1.object()
    list_0 = [str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "...q.+.k.q.c.[.l.p.[.l.x.p.\\.-./.n"
#    module_1.object(*list_0, **var_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "aYlJ}\n9Jl(n]M+>v"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
#    module_0.func(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "&{udZ[a\rr%SKD=@"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".&.{.d.z.[.\r.r.%.s.k.d.=.@"
#    module_0.func()
