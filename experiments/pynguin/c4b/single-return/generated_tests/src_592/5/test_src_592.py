# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_592 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"F"
    list_0 = [bytes_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b""
    list_0 = [bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ""
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "&c2da$W7+"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".&.c.2.d.$.w.7.+"
    var_1 = module_0.func(*str_0)
    assert var_1 == ".&"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "y#F($kJ_CMNuy"
    list_0 = [str_0, str_0, str_0, str_0]
    list_1 = [str_0, str_0, list_0, str_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == ".#.f.(.$.k.j._.c.m.n"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "{E6[J^A;iOi8)``X"
    list_0 = [str_0, str_0, str_0, str_0]
    list_1 = [str_0, str_0, list_0, str_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == ".{.6.[.j.^.;.8.).`.`.x"
    var_1 = module_0.func(*list_0)
    assert var_1 == ".{.6.[.j.^.;.8.).`.`.x"
    var_2 = module_0.func(*var_0)
    assert var_2 == ".."
    module_0.func()
