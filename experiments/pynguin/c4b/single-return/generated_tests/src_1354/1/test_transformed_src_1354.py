# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1354 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"O\xf5\xa9\x0f\x975>\xc2x\x0f\xfbB\x8d\x14\x12\xb2$G\x89_"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 1
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 39
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 8
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 51
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3
#    module_0.func(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 21
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2
    list_1 = [var_0, var_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 1
#    module_1.object(*list_1)
