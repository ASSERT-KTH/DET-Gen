# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1354 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -308
    list_0 = [int_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = 1108.0514453696492
    list_0 = [float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2
    list_1 = [var_0, var_0, var_0, var_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 1
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 1108.0514453696492
    list_0 = [float_0, float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 1133.2011491741127
    list_0 = [float_0, float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3
    list_1 = [var_0, var_0, var_0, var_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 1
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 1133.2011491741127
    list_0 = [float_0, float_0, float_0, float_0]
    list_1 = module_0.func(*list_0)
    assert list_1 == 3
    module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = 1131.213434182374
    list_0 = [float_0, float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2
    none_type_0 = None
    module_0.func(*none_type_0)
