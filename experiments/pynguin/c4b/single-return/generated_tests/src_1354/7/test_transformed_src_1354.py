# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1354 as module_0


def test_case_0():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 1


#@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 1507
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3
    var_1 = module_0.func(*list_0)
    assert var_1 == 3
#    module_0.func(*var_1)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
#    module_0.func(*list_0)


def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 1


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"Z}\xed\xd5\xee\xa8\xc1\xcf"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 2
    tuple_0 = (var_0, var_0, bytes_0, bytes_0)
    list_0 = [var_0]
    var_1 = module_0.func(*tuple_0)
    assert var_1 == 1
    var_2 = module_0.func(*list_0)
    assert var_2 == 1
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"i\x9f\xdd\xb5\xe59k\xa9I\xf2\xdc\xa8a\xc3\xac\xcb\xe6\xed\xe9"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 2
    tuple_0 = (var_0, var_0, bytes_0, bytes_0)
    list_0 = [var_0]
    var_1 = module_0.func(*tuple_0)
    assert var_1 == 1
    var_2 = module_0.func(*list_0)
    assert var_2 == 1
    var_3 = module_0.func(*list_0)
    assert var_3 == 1
    var_4 = module_0.func(*bytes_0)
    assert var_4 == 2
#    module_0.func(*var_1)
