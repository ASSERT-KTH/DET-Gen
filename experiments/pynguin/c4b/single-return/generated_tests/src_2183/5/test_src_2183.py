# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2183 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


def test_case_1():
    float_0 = -992.88
    list_0 = [float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_0.func(*list_0)


def test_case_3():
    float_0 = 1243.9519
    bytes_0 = b"\x97\xff\x8a\x05d]11\x10\x85\xb1\xbdz\xb7\xb8f"
    list_0 = [float_0, bytes_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 1244.1267847626773
    bytes_0 = b"\x04\xe0\xcdE\xc6;um\xe6\xc2\xb0\x9d3\xef(\x8e\xfd"
    list_0 = [float_0, bytes_0, float_0, float_0]
    object_0 = module_1.object()
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 1177.785092708148
    bytes_0 = b"\x07L\xb8"
    list_0 = [float_0, bytes_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    object_0 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"
    list_1 = [bool_0, bool_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "YES"
    float_0 = 1.8957100408323404
    bytes_0 = b"\x04\t\x01\x1cE\xc6u\xfe\xb0x\xf7$\x99\x8e_"
    list_2 = [
        float_0,
        bytes_0,
        var_1,
        float_0,
        bool_0,
        bool_0,
        float_0,
        bytes_0,
        var_0,
        bytes_0,
        float_0,
        float_0,
    ]
    var_2 = module_0.func(*list_2)
    assert var_2 == "NO"
    module_0.func()
