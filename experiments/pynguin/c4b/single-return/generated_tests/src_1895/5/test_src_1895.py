# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1895 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x0f\xa8N}"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 15
    object_0 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "?sDdE}fSMq\r}l1ayQ7"
    module_0.func(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    list_1 = [list_0, list_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == 0
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x00\x98\xaa\xf01\xd1K\t\xd9i\xfe\x89D"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 4095
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x01\xd0"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = -996.98
    bytes_0 = b">\xbc\xc7\xca\xc1\xd1\xf3\\r3\x9b"
    float_1 = 4884.284
    set_0 = {float_1, float_0}
    tuple_0 = (float_0, bytes_0, float_1, set_0)
    float_2 = -1974.452184
    list_0 = [tuple_0, float_2]
    module_0.func(*list_0)
