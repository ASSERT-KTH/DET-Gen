# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1895 as module_0


def test_case_0():
    bytes_0 = b" \xdf\x18\xcc\xb6\x86"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [bytes_0, bytes_0, set_0, set_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 63


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == 0
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -327
    set_0 = {int_0, int_0, int_0}
    tuple_0 = (int_0, int_0, set_0, int_0)
    list_0 = [tuple_0, int_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    int_0 = -964
    list_0 = [bool_0, bool_0]
    complex_0 = 965.8894 + 2832.7j
    tuple_0 = (bool_0, int_0, list_0, complex_0)
    list_1 = [tuple_0, complex_0, int_0, bool_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    int_0 = -964
    list_0 = [bool_0, bool_0]
    complex_0 = 965.8894 + 2832.7j
    tuple_0 = (bool_0, int_0, list_0, complex_0)
    list_1 = [tuple_0, complex_0, int_0, bool_0]
#    module_0.func(*list_1)
