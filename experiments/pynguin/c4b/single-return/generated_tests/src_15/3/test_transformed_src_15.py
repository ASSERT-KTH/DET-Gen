# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_15 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "%=G>i(T"
    float_0 = 384.459
    list_0 = [float_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0
        == "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )
    list_1 = [str_0, float_0, var_0, var_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


def test_case_2():
    str_0 = "%=G>i(T"
    bool_0 = True
    list_0 = [bool_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "1"
    var_1 = module_0.func(*var_0)
    assert var_1 == "1"


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "%=G>0(T"
    float_0 = 349.67767249375106
    list_0 = [float_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0
        == "711111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )
#    module_1.object(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "%=G>i(T"
    float_0 = -2454.3
    list_0 = [float_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ""
#    module_0.func(*var_0)
