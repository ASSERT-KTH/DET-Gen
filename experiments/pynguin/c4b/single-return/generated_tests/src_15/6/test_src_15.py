# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_15 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "1"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "2TPF dk'KX,JY"
    var_0 = module_0.func(*str_0)
    assert var_0 == "1"
    var_1 = module_0.func(*var_0)
    assert var_1 == "1"
    var_2 = module_0.func(*var_1)
    assert var_2 == "1"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 1383.4557934847037
    list_0 = [float_0, float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0

    )
    var_1 = module_0.func(*list_0)
    assert (
        var_1

    )
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    dict_0 = {}
    list_0 = [bool_0, bool_0, dict_0, dict_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ""
    module_0.func()
