# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2593 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
    module_0.func()


def test_case_1():
    bytes_0 = b"i\x89o"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 99


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x97\xfbr\xf4\xb5\x89R\x9fC\x91XU\x98\xca\xe3"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 99
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 1881.0
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.func(*dict_0)
    assert var_0 == 999
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 191.572
    list_0 = [float_0, float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 189
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b";\x94\xde"
    float_0 = 2108.455524142956
    bytes_1 = b"l"
    list_0 = [float_0, bytes_1, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 1999
    var_1 = module_0.func(*bytes_1)
    assert var_1 == 99
    module_0.func(*var_1)
