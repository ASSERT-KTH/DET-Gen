# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2593 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 798
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 798
    list_1 = module_0.func(*list_0)
    assert list_1 == 798
    module_0.func(*list_1)


def test_case_1():
    int_0 = 1072
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 999


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 797
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 789
    module_0.func(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 9
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 9
    none_type_0 = None
    module_0.func(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 798
    list_0 = [int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 798
    int_1 = 108
    list_1 = [int_1, int_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 99
    list_2 = module_0.func(*list_1)
    assert list_2 == 99
    var_2 = module_1.object()
    module_0.func(*list_2)
