# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2593 as module_0
import builtins as module_1


def test_case_0():
    float_0 = -202.0
    str_0 = "dgC[nAf`\tttzo"
    tuple_0 = (float_0, str_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == -202


def test_case_1():
    float_0 = 498.6477757276284
    str_0 = "Ax-'xaX'[3\nf"
    list_0 = [float_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 498


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 459.4
    str_0 = ')5q7>&\x0b"UnG'
    list_0 = [float_0, float_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 399
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 3181.44
    str_0 = ')5Fp;q>\x0b"UnG'
    list_0 = [float_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2999
    object_0 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    bytes_0 = b"lr"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 99
    module_0.func(*list_0)
