# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_525 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "/8([{.qffK@tnH#7R3"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "./.8.(.[.{...q.f.f.k.@.t.n.h.#.7.r.3"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "x0+znTZPjr-q*dAXmE"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".x"
    list_0 = [str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == ".x.0.+.z.n.t.z.p.j.r.-.q.*.d.x.m"
    object_0 = module_1.object()
    list_1 = [object_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "x0+znTZPjr-q*dAXmE"
    str_1 = "u\n\\7$1"
    var_0 = module_0.func(*str_1)
    assert var_0 == ""
    list_0 = [str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == ".x.0.+.z.n.t.z.p.j.r.-.q.*.d.x.m"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "$\x0cObzh:G#[g_tri"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".$.\x0c.b.z.h.:.g.#.[.g._.t.r"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "Y"
    bool_0 = True
    list_0 = [str_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ""
#    module_0.func()
