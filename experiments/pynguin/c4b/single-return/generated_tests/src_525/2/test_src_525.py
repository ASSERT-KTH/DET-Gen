# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_525 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x89\xb0\xc0Q\nD\xc0\xde\x16\xa7\x81\x91"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "8"
    int_0 = -964
    list_0 = [str_0, int_0, str_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".8"
    var_1 = module_0.func(*var_0)
    assert var_1 == ".."
    var_2 = module_0.func(*list_0)
    assert var_2 == ".8"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "e"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "o"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    var_1 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "A"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "&SUe-$i^S\x0cX<\x0b~IkE}'"
    int_0 = -964
    list_0 = [str_0, int_0, str_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".&.s.-.$.^.s.\x0c.x.<.\x0b.~.k.}.'"
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "y"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    object_0 = module_1.object(*var_0)
    module_0.func()
