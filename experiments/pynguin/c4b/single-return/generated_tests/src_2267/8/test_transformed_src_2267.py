# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2267 as module_0


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [set_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "H0gb$cF)\t)<"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "H0gb$cF)\t)<"
    var_1 = module_0.func(*var_0)
    assert var_1 == "h"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"0\xd7\x08S\x82(\x8a=pi"
    tuple_0 = (bytes_0, bytes_0, bytes_0)
    dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0, bytes_0: tuple_0, tuple_0: tuple_0}
    list_0 = [dict_0, tuple_0, dict_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_3():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b""
    bytes_1 = b"0\xd7\x08S\x82(\x8a=pi"
    tuple_0 = (bytes_1, bytes_0, bytes_1)
    dict_0 = {bytes_0: tuple_0, bytes_0: bytes_1, bytes_0: tuple_0, tuple_0: tuple_0}
    list_0 = [tuple_0, dict_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "H0gb$cF)\t)<"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "H0gb$cF)\t)<"
    list_1 = module_0.func(*var_0)
    assert list_1 == "h"
    var_1 = module_0.func(*list_1)
    assert var_1 == "H"
#    module_0.func()
