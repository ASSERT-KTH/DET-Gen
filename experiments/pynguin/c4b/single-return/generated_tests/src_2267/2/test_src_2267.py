# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2267 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "m3x.`x"
    var_0 = module_0.func(*str_0)
    assert var_0 == "M"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x93\xe6\xf1N\xa7\x06F\xcd{\x85a\xeb"
    list_0 = [bytes_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Y3x.`x"
    var_0 = module_0.func(*str_0)
    assert var_0 == "y"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "m3x.`x"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "m3x.`x"
    var_1 = module_0.func(*var_0)
    assert var_1 == "M"
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "c(:R"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "C(:r"
    list_1 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "C(:r"
    module_0.func()
