# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_906 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '.j%2"tn*\x0cN_0e'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == '...j.%.2.".t.n.*.\x0c.n._.0'
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "rQ\tXnhq}C eo8B"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".r.q.\t.x.n.h.q.}.c. .8.b"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "xJcITCjz8*j\x0cW"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".x.j.c.t.c.j.z.8.*.j.\x0c.w"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "Q'jO:m|iq:0t{Y"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".q.'.j.:.m.|.q.:.0.t.{"
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "uc.8"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".c...8"
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "rQ\tXnha}C eo8B"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".r.q.\t.x.n.h.}.c. .8.b"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "a62g>2IJz:6`(A"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".6.2.g.>.2.j.z.:.6.`.("
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "E\r|[P\x0bvr8"
    dict_0 = {str_0: str_0}
    var_0 = module_0.func(*dict_0)
    assert var_0 == ".\r.|.[.p.\x0b.v.r.8"
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == ".\r.|.[.p.\x0b.v.r.8"
    list_1 = [var_1]
    var_2 = module_0.func(*list_1)
    assert var_2 == "...\r...|...[...p...\x0b...v...r...8"
    var_3 = module_0.func(*var_0)
    assert var_3 == ".."
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "_7#:g$^#,UOkS\tup(`:P"
    dict_0 = {str_0: str_0}
    var_0 = module_0.func(*dict_0)
    assert var_0 == "._.7.#.:.g.$.^.#.,.k.s.\t.p.(.`.:.p"
    var_1 = module_1.object()
    module_0.func(*var_1)


@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "yld?]w:_o\x0c"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    bool_0 = True
    list_0 = [bool_0]
    module_0.func(*list_0)
