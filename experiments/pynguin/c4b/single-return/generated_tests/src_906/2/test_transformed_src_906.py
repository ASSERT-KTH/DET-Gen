# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_906 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "ls@_?/:`"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".l"


#@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
#    module_0.func(*none_type_0)


def test_case_2():
    str_0 = "ls@E_?/:`"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".l"
    var_1 = module_0.func(*var_0)
    assert var_1 == ".."


def test_case_3():
    str_0 = "ls@E_?/:J`"
    tuple_0 = (str_0, str_0, str_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == ".l.s.@._.?./.:.j.`"


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "l?[ShsOX1xT"
    tuple_0 = (str_0, str_0, str_0)
    bytes_0 = b"\xcbJk"
    list_0 = [str_0, tuple_0, bytes_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".l.?.[.s.h.s.x.1.x.t"
    list_1 = [str_0, tuple_0, str_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == ".l.?.[.s.h.s.x.1.x.t"
    list_2 = []
#    module_0.func(*list_2)


def test_case_5():
    str_0 = "+VuII^wSjMB_"
    tuple_0 = (str_0, str_0, str_0)
    list_0 = [str_0, tuple_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".+.v.^.w.s.j.m.b._"


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "ezl>;*rA/"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
#    module_0.func()


def test_case_7():
    str_0 = '9`zV"3Fao>2X'
    tuple_0 = (str_0, str_0, str_0)
    list_0 = [str_0, tuple_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == '.9.`.z.v.".3.f.>.2.x'


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "\nnYM"
    tuple_0 = (str_0, str_0, str_0)
    list_0 = [str_0, tuple_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".\n.n.m"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "/itc9(#VJ;DT=D|"
    tuple_0 = (str_0, str_0, str_0)
    object_0 = module_0.func(*tuple_0)
    assert object_0 == "./.t.c.9.(.#.v.j.;.d.t.=.d.|"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "sy"
    tuple_0 = (str_0, str_0, str_0)
    list_0 = [str_0, tuple_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".s"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = "E]X\n\x0cd)c^U#Mp)i)*"
    tuple_0 = (str_0, str_0, str_0)
    list_0 = [str_0, tuple_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".].x.\n.\x0c.d.).c.^.#.m.p.).).*"
    var_1 = module_0.func(*tuple_0)
    assert var_1 == ".].x.\n.\x0c.d.).c.^.#.m.p.).).*"
#    module_1.object(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = "^RgC'\r5Y0<P{zAk\x0bY"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".^.r.g.c.'.\r.5.0.<.p.{.z.k.\x0b"
    str_1 = '9`zV"3gjFaorfX'
    tuple_0 = (str_1, str_1, str_1)
    list_1 = [str_1, tuple_0, str_1]
    var_1 = module_0.func(*list_1)
    assert var_1 == '.9.`.z.v.".3.g.j.f.r.f.x'
#    module_0.func()
