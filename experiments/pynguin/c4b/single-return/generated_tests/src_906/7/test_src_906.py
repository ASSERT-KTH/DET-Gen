# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_906 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "e0)l\x0b@o\n0"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "?!b"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".?"
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Wuwj+Z\nf"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".w"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "e0)l\x0b@o\n0"
    bytes_0 = b"\x1e\xc4R\x8d\xb5\xb7eD\xf0\xbc\xb6>\x82\x06"
    list_0 = [str_0, str_0, bytes_0]
    object_0 = module_1.object()
    var_0 = module_0.func(*list_0)
    assert var_0 == ".0.).l.\x0b.@.\n.0"
    module_0.func()


def test_case_5():
    str_0 = "Wuwj+Z\nf"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".w.w.j.+.z.\n.f"


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "WKwj+ZIf"
    set_0 = set()
    list_0 = [str_0, str_0, set_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".w.k.w.j.+.z.f"
    var_1 = module_0.func(*str_0)
    assert var_1 == ".w"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '(n\x0b\x0cYH<"!UG\t'
    var_0 = module_0.func(*str_0)
    assert var_0 == ".("
    var_1 = module_0.func(*var_0)
    assert var_1 == ".."
    var_2 = module_0.func(*var_1)
    assert var_2 == ".."
    var_3 = module_0.func(*var_2)
    assert var_3 == ".."
    list_0 = [str_0, var_2]
    var_4 = module_0.func(*list_0)
    assert var_4 == '.(.n.\x0b.\x0c.h.<.".!.g.\t'
    module_0.func()


def test_case_8():
    str_0 = "_#1O;xxKx_"
    var_0 = module_0.func(*str_0)
    assert var_0 == "._"
    object_0 = module_1.object()
    list_0 = [str_0, object_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "._.#.1.;.x.x.k.x._"
    var_2 = module_0.func(*var_0)
    assert var_2 == ".."


def test_case_9():
    str_0 = ".W2V)DuCxK{"
    str_1 = "V$BH~y\n`$\rR@c=TVBc"
    list_0 = [str_1, str_1, str_1, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".v.$.b.h.~.\n.`.$.\r.r.@.c.=.t.v.b.c"
    var_1 = module_0.func(*list_0)
    assert var_1 == ".v.$.b.h.~.\n.`.$.\r.r.@.c.=.t.v.b.c"
    object_0 = module_1.object()
    list_1 = [str_0]
    var_2 = module_0.func(*list_1)
    assert var_2 == "...w.2.v.).d.c.x.k.{"


@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "Auw`z=Z\nf"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    module_0.func(*var_0)


def test_case_11():
    str_0 = "F3iX}t%[9wT@P0Qj"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".f.3.x.}.t.%.[.9.w.t.@.p.0.q.j"
    var_1 = module_0.func(*str_0)
    assert var_1 == ".f"
    object_0 = module_1.object()
    object_1 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = "^bc\ri~O\x0cG\t\\}atK(%E<$"
    str_1 = "xwKoG[OdO^m[\n"
    list_0 = [str_1, str_1, str_1, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".x.w.k.g.[.d.^.m.[.\n"
    var_1 = module_0.func(*str_0)
    assert var_1 == ".^"
    var_2 = module_0.func(*var_1)
    assert var_2 == ".."
    list_1 = [str_0]
    var_3 = module_0.func(*list_1)
    assert var_3 == ".^.b.c.\r.~.\x0c.g.\t.\\.}.t.k.(.%.<.$"
    module_0.func()
