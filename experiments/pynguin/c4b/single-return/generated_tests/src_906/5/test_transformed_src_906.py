# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_906 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "X=u\x0b?\rx/Mr&S"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".x"
    var_1 = module_0.func(*str_0)
    assert var_1 == ".x"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "aX=u\x0b?\rx/Mr&S"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".x.=.\x0b.?.\r.x./.m.r.&.s"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ">j)P%`iv'J\rO>>t0"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".>.j.).p.%.`.v.'.j.\r.>.>.t.0"
    var_1 = module_0.func(*list_0)
    assert var_1 == ".>.j.).p.%.`.v.'.j.\r.>.>.t.0"
    var_2 = module_0.func(*var_0)
    assert var_2 == ".."
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "mLQ3].\\6eJ["
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".m.l.q.3.]...\\.6.j.["
    var_1 = module_0.func(*var_0)
    assert var_1 == ".."
    object_0 = module_1.object()
    float_0 = -2859.4
    list_1 = [list_0, str_0, float_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "!FS!25-'NV\nw{Qo=GEb1"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".!.f.s.!.2.5.-.'.n.v.\n.w.{.q.=.g.b.1"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "$u&D~5*AT7uE_>B]"
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".$.&.d.~.5.*.t.7._.>.b.]"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "zOIg$3a^Xx\r-TC@"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".z.g.$.3.^.x.x.\r.-.t.c.@"
    object_0 = module_1.object()
    object_1 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "zK9C$Rl^pYht="
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".z.k.9.c.$.r.l.^.p.h.t.="
    object_0 = module_1.object()
    var_1 = module_0.func(*list_0)
    assert var_1 == ".z.k.9.c.$.r.l.^.p.h.t.="
#    module_1.object(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "m#U\t/)"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".m.#.\t./.)"
    none_type_0 = None
#    module_0.func(*none_type_0)


#@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "By?jI{[ZvT{\n@P<g"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".b.?.j.{.[.z.v.t.{.\n.@.p.<.g"
    var_1 = module_0.func(*str_0)
    assert var_1 == ".b"
    object_0 = module_1.object()
    object_1 = module_1.object()
#    module_0.func()
