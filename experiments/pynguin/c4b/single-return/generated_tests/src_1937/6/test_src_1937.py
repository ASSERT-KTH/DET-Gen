# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1937 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xec\x1fk\x0c"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_1 = [bytes_0, bytes_0, list_0, bytes_0]
    module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, bool_0, tuple_0, tuple_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "O/``76WABS%jYn-Y~e~8"
    var_0 = module_0.func(*str_0)
    assert var_0 == "o"
    str_1 = "g]-K^j"
    var_1 = module_0.func(*str_1)
    assert var_1 == "G"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "04"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "<U"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "<U"
    var_1 = module_0.func(*var_0)
    assert var_1 == "<"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "BU"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "bu"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "fU"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "Fu"
    var_1 = module_0.func(*list_0)
    assert var_1 == "Fu"
    module_0.func()
