# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_402 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


def test_case_1():
    str_0 = "y*"
    bool_0 = True
    list_0 = [bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"


def test_case_2():
    str_0 = ""
    bool_0 = True
    list_0 = [bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -5100
    str_0 = "4"
    tuple_0 = (str_0,)
    list_0 = [int_0, tuple_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    bool_0 = True
    var_1 = module_0.func(*list_0)
    assert var_1 == "NO"
    list_1 = [int_0, str_0, bool_0]
    var_2 = module_0.func(*list_1)
    assert var_2 == "NO"
    module_0.func(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -5129
    str_0 = "7}"
    tuple_0 = module_0.func(*str_0)
    assert tuple_0 == "NO"
    list_0 = [int_0, tuple_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    bool_0 = False
    list_1 = [int_0, str_0, bool_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "NO"
    module_0.func()
