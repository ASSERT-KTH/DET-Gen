# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1930 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x13\xb7\xb7^)0\x11"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
#    module_0.func(*list_0)


def test_case_1():
    str_0 = "uXk^&ku9_J\\M[0"
    var_0 = module_0.func(*str_0)


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "02xcQ|#L4+\n>f"
    list_0 = [str_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "&02xcQ|#L4+\n>f"
    list_0 = [str_0]
#    module_0.func(*list_0)


def test_case_5():
    str_0 = "64069"
    tuple_0 = (str_0, str_0, str_0, str_0)
    var_0 = module_0.func(*tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "000xc3!|o+\n>'"
    var_0 = module_0.func(*str_0)
    tuple_0 = (str_0, str_0, str_0, str_0)
    var_1 = module_0.func(*tuple_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "940"
    bytes_0 = b"\x00\xa3^&\x13\x14\xd2\xf7\x8a1\xa6k"
    tuple_0 = (str_0, str_0, str_0, bytes_0)
    var_0 = module_0.func(*tuple_0)
#    module_0.func()


def test_case_8():
    list_0 = []
    list_1 = [list_0, list_0]
    str_0 = "665476069"
    var_0 = module_0.func(*list_1)
    tuple_0 = (str_0, str_0, str_0, var_0)
    var_1 = module_0.func(*tuple_0)
    var_2 = module_1.object()
    object_0 = module_1.object()
    var_3 = module_0.func(*list_1)
