# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1824 as module_0


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "# U0:"
    list_0 = [str_0, str_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
#    module_0.func(*none_type_0)


def test_case_2():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    list_0 = [tuple_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "7/8j_.ZSMY.W9S"
    var_0 = module_0.func(*str_0)
    assert var_0 == "NO"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b":\xa7\x12\xde\xe5\xbe\xd6S.\xcb"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"
    bool_0 = True
    list_1 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
    list_2 = [list_1, list_1]
    var_1 = module_0.func(*list_2)
    assert var_1 == "NO"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == "YES"
#    module_0.func()
