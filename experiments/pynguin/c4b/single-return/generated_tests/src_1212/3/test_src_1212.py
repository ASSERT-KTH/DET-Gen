# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1212 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x8c3{o4\x9d\xc4r\x17\xb0X\x07;C"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == "NO"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


def test_case_2():
    bytes_0 = b"\x8c3{o4\x9d\xc4r\x17\xb0X\x07;C"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == "NO"
    var_1 = module_0.func(*var_0)
    assert var_1 == "YES"


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == "NO"
    var_1 = module_0.func(*var_0)
    assert var_1 == "YES"
    var_2 = module_0.func(*var_0)
    assert var_2 == "YES"
    var_3 = module_1.object()
    module_0.func()


def test_case_4():
    bytes_0 = b"\x8c3{o4\x9d\xc4r\x17\xb0X\x07;C"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.func(*dict_0)
    assert var_0 == "NO"
    str_0 = "F<HVe^`hDu?kR,{x+6"
    list_0 = [var_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "YES"
