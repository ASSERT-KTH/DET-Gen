# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1212 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "s"
    list_0 = [str_0]
    list_1 = [list_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == "YES"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "t6|{G,UZ4"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    var_1 = module_1.object()
    var_2 = module_0.func(*var_0)
    assert var_2 == "YES"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "t6|{GUZ4"
    var_0 = module_0.func(*str_0)
    assert var_0 == "YES"
    list_0 = [var_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "YES"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    object_0 = module_1.object()
    list_1 = [list_0, bool_0, object_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == "NO"
    str_0 = "t6|{GUZ4"
    var_1 = module_0.func(*str_0)
    assert var_1 == "YES"
#    module_0.func()
