# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1212 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ")![R\rq')wwdRr5@fz>"
    var_0 = module_0.func(*str_0)
    assert var_0 == "YES"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '=cw@"%4RV5_0'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "._XBs'@`yQ+?1\r\x0c"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    list_1 = [var_0, str_0, var_0, var_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "YES"
    var_2 = module_0.func(*var_1)
    assert var_2 == "YES"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "._XBs'@`yQ+?1\r\x0c"
    list_0 = [str_0, str_0, str_0, str_0]
    list_1 = [list_0, str_0, list_0, list_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == "NO"
    module_0.func()
