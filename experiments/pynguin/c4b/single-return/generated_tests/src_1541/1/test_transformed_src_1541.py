# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1541 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 2722.1726
#    module_0.func(*float_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"n\x9a\xd8\xecw\xd8\xf7\xac\xe5\xb8\xdd"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 1
    var_1 = module_0.func(*bytes_0)
    assert var_1 == 1
#    module_0.func(*var_1)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xd8Q\xc9\xe0\xc4+\xabn\x02\x14\xb5\xc7\xbe\xe6\xb8b\xc3"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 2
    var_1 = module_1.object()
    var_2 = module_0.func(*bytes_0)
    assert var_2 == 2
    var_3 = module_0.func(*bytes_0)
    assert var_3 == 2
#    module_0.func(*var_1)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b")\xd3\x91Oro"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 3
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b")K\x91O\xe0o"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 10
    var_1 = module_0.func(*bytes_0)
    assert var_1 == 10
#    module_1.object(*var_0, **var_0)
