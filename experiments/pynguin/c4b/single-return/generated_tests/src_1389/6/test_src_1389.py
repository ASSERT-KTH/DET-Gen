# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1389 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "DQ8eZd\t|GCUb2t\ne\x0b|"
    var_0 = module_0.func(*str_0)
    assert var_0 == "2"
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "^hPU7yc^`(}7`)d%JM]]"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "17"
    var_1 = module_0.func(*var_0)
    assert var_1 == "2"
    object_0 = module_1.object()
    var_2 = module_0.func(*var_0)
    assert var_2 == "2"
    module_0.func()


def test_case_3():
    str_0 = "A"
    var_0 = module_0.func(*str_0)
    assert var_0 == "1"
    var_1 = module_0.func(*var_0)
    assert var_1 == "2"


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'L/yhEdF%2Uc"XV\x0c'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "6"
    var_1 = module_0.func(*list_0)
    assert var_1 == "6"
    list_1 = [str_0]
    module_1.object(**list_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '~>+F&I:/"u\nB#eYPP'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "9"
    list_1 = [str_0]
    var_1 = module_0.func(*var_0)
    assert var_1 == "2"
    object_0 = module_1.object()
    var_2 = module_0.func(*list_1)
    assert var_2 == "9"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "},hUz\x0cCXyk87DYa;"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "10"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '"|eTbOur/q'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "6"
    list_1 = [str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "6"
    var_2 = module_0.func(*var_0)
    assert var_2 == "2"
    object_0 = module_1.object()
    var_3 = module_0.func(*list_1)
    assert var_3 == "6"
    module_0.func()
