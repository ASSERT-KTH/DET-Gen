# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1580 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.func(*dict_0)
    assert var_0 == ""
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -317
    bool_0 = False
    dict_0 = {bool_0: bool_0, int_0: bool_0, bool_0: bool_0, int_0: int_0}
    dict_1 = {int_0: int_0, bool_0: int_0, int_0: dict_0, bool_0: int_0}
    var_0 = module_0.func(*dict_1)
    assert var_0 == "7"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 3
    bool_0 = True
    dict_0 = {bool_0: bool_0, int_0: bool_0, bool_0: bool_0, int_0: int_0}
    dict_1 = {int_0: int_0, bool_0: int_0, int_0: dict_0, bool_0: int_0}
    list_0 = [bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "7"
    var_1 = module_0.func(*dict_1)
    assert var_1 == "7"
#    module_1.object(*var_1, **list_0)
