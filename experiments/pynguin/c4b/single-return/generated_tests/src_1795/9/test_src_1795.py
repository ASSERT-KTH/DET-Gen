# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1795 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "{"
    var_0 = module_0.func(*str_0)
    assert var_0 == 2
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "F,_Q(yPk;|z;mI"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 14
    var_1 = module_0.func(*str_0)
    assert var_1 == 2
    module_1.object(**var_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'rfIjbI:=OgOr}Z?W0l"f'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 10
    var_1 = module_0.func(*list_0)
    assert var_1 == 10
    var_2 = module_0.func(*str_0)
    assert var_2 == 2
    none_type_0 = None
    module_1.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "F,_Q(yPk;|zEa;mI"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 12
    var_1 = module_0.func(*str_0)
    assert var_1 == 2
    module_1.object(**var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "B3VY-1rmwoZK0"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 10
    var_1 = module_1.object()
    var_2 = module_0.func(*str_0)
    assert var_2 == 2
    none_type_0 = None
    module_1.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "E"
    var_0 = module_0.func(*str_0)
    assert var_0 == 1
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "F^_(yk;Az;I"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 8
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "F~L{}%}<UrI"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 9
    object_0 = module_1.object()
    module_1.object(*list_0, **var_0)
