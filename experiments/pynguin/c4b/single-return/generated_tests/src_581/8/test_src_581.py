# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_581 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '\n!}ZQErv";'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == '\n!}ZQErv";'
    var_1 = module_0.func(*var_0)
    assert var_1 == "\n"
    var_2 = module_0.func(*var_0)
    assert var_2 == "\n"
    var_3 = module_0.func(*var_2)
    assert var_3 == "\n"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0]
    list_1 = [list_0]
    module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '\n!}ZQErv";'
    var_0 = module_0.func(*str_0)
    assert var_0 == "\n"
    var_1 = module_0.func(*var_0)
    assert var_1 == "\n"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "sd>>Y0#Go<:/i"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "sd>>Y0#Go<:/i"
    var_1 = module_0.func(*list_0)
    assert var_1 == "sd>>Y0#Go<:/i"
    var_2 = module_0.func(*str_0)
    assert var_2 == "S"
    module_0.func()
