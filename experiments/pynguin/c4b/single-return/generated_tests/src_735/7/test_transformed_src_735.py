# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_735 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "p<=p,u/U4r2P3~'^+k!"
    list_0 = [str_0, str_0]
#    module_0.func(*list_0)


def test_case_2():
    str_0 = "p<=p,u/U4r2P3~'^+k!"
    var_0 = module_0.func(*str_0)
    assert var_0 == -1


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "0]~~wQM5\x0c\x0b[`X>\n=W\nR0"
    list_0 = [str_0, str_0, str_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "15k_<)_&%&'I,)R\n"
    list_0 = [str_0]
#    module_0.func(*list_0)


def test_case_5():
    str_0 = "849"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 21


def test_case_6():
    str_0 = "809"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 17


def test_case_7():
    str_0 = "8409"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 93


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "800"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 8
#    module_0.func()


def test_case_9():
    str_0 = "84099\r"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 858


#@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "0979\r"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 106
#    module_0.func()


def test_case_11():
    str_0 = "80409719\r"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 804107


def test_case_12():
    str_0 = "804097619\r"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 804167


#@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = "8040976019\r"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 976823
#    module_1.object(*list_0, **var_0)
