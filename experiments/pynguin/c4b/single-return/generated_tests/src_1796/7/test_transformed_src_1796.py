# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1796 as module_0


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0


def test_case_2():
    str_0 = "4"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 7


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
#    module_0.func()


def test_case_4():
    str_0 = "9"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 14
    var_1 = module_0.func(*list_0)
    assert var_1 == 14


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "3"
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\xf8U\xa9b\x11& ]\xbc\x93\x88{0q\xfb\x91"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 294
    list_0 = [bytes_0, bytes_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b")w\xc6\xd5\x1bL\xccb\x9b\xb8\x19\xe5x\x1c\x8c\x8b\x8d"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 287
    list_0 = [bytes_0, bytes_0]
#    module_0.func(*list_0)
