# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_487 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "Z"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "z"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'o\x880\xaf"\x05G\xa7w\xc0\xe0#\x9em\x1a\x0f\xc0\xf2k'
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_0.func(*set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Z"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "z"
    var_1 = module_0.func(*var_0)
    assert var_1 == "Z"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "r>"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "r>"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "$z\r^Z"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "$z\r^Z"
    var_1 = module_0.func(*var_0)
    object_0 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "c(M"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "C(m"
    var_1 = module_1.object()
    object_0 = module_1.object()
    list_1 = [var_1]
    module_0.func(*list_1)
