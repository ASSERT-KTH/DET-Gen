# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1532 as module_0


def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
    bytes_0 = b"i\xc0\xa8\x1e1GM\xca;"
    module_0.func(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 442.45882385257386
    str_0 = "eV"
    set_0 = {float_0, float_0, str_0, str_0}
    module_0.func(*set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 442.45882385257386
    str_0 = "eV"
    bool_0 = True
    tuple_0 = (str_0, str_0, str_0, bool_0)
    list_0 = [float_0, tuple_0, str_0, tuple_0, tuple_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 16.190751078362354
    str_0 = "0V\x0chK<R/%/ nP6+6O`6`"
    bool_0 = True
    set_0 = {
        str_0,
        float_0,
        str_0,
        float_0,
        float_0,
        bool_0,
        bool_0,
        str_0,
        bool_0,
        bool_0,
        str_0,
        str_0,
        bool_0,
    }
    list_0 = [bool_0, set_0, bool_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
    list_1 = [float_0, str_0, set_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 0
    module_0.func()
