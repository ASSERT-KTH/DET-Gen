# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1532 as module_0


def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1490
    bool_0 = True
    str_0 = "3-RpYIQjHV1^p[_t"
    list_0 = [int_0, str_0, bool_0, int_0, str_0, str_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 611
    bool_0 = False
    str_0 = "rI!/r-e8Ii33`G"
    list_0 = [int_0, str_0, bool_0, int_0, str_0, str_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 16
    bool_0 = False
    str_0 = "4|DDHK]\x0cXbD^a\n)TA|2X"
    list_0 = [bool_0, bool_0, str_0, bool_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
    var_1 = module_0.func(*list_0)
    assert var_1 == 0
    list_1 = [int_0, str_0, bool_0, bool_0, int_0, str_0, str_0]
    var_2 = module_0.func(*list_1)
    assert var_2 == 1
#    module_0.func()
