# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_472 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


def test_case_1():
    str_0 = ":`:_Ui2aX ZVPP<s[h=\r"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x95u"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 1
#    module_0.func(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"u"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "KV"
    var_0 = module_0.func(*str_0)
    assert var_0 == 0
    list_0 = [str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == 0
    var_2 = module_0.func(*str_0)
    assert var_2 == 0
    object_0 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ")ry\\#KVVTD"
    var_0 = module_0.func(*str_0)
    assert var_0 == 0
    list_0 = [str_0, str_0, var_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == 1
    var_2 = module_0.func(*str_0)
    assert var_2 == 0
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "5ry\\#KK[Vr]D"
    var_0 = module_0.func(*str_0)
    assert var_0 == 0
    list_0 = [str_0, str_0, var_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == 1
    var_2 = module_0.func(*str_0)
    assert var_2 == 0
#    module_1.object(**var_1)
