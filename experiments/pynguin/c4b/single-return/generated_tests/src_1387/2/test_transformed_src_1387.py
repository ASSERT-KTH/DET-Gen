# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1387 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    var_1 = module_0.func(*list_0)
    assert var_1 == "NO"
    var_2 = module_0.func(*list_0)
    assert var_2 == "NO"
    var_3 = module_0.func(*var_0)
    assert var_3 == "YES"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "~g7(`YWq;i^b"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    dict_0 = {}
    var_1 = module_1.object()
    var_2 = module_0.func(*list_0)
    assert var_2 == "NO"
#    module_1.object(*var_2, **dict_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "~g7u]_`YWq;i^bT"
    list_0 = [str_0, str_0, str_0]
    list_1 = [list_0, list_0, list_0, list_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == "YES"
    var_1 = module_0.func(*list_1)
    assert var_1 == "YES"
    var_2 = module_0.func(*list_1)
    assert var_2 == "YES"
    var_3 = module_0.func(*var_0)
    assert var_3 == "YES"
#    module_0.func()
