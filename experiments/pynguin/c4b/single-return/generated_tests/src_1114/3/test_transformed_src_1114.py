# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1114 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    list_0 = [tuple_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


def test_case_2():
    bytes_0 = b"<\xb6\xbe\xeca\t\xfb\x9e\xd1\xfe\xd8Sn\xb4\xfe\xd6\x13\xdd\xdc\xb5"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0 == b"<\xb6\xbe\xeca\t\xfb\x9e\xd1\xfe\xd8Sn\xb4\xfe\xd6\x13\xdd\xdc\xb5"
    )


#@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0]
    list_1 = [list_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xee1\xa4\x7f\xc8M\xa5\xf4\x8eI\x98#\xe3\xd3\x1f\x11W\xb1\x1b"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "y`$C~s2Gx!v+Ri"
    var_0 = module_0.func(*str_0)
    assert var_0 == "Y"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b" \xca\xbd\xc1\x17\xa5"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    str_0 = "Q`$C~s2Gx!V+Ri"
    var_1 = module_0.func(*str_0)
    assert var_1 == "q"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"g\xce\xcaJ\xc1\x17\xa5"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == b"G\xce\xcaj\xc1\x17\xa5"
    str_0 = "y`$C~s2Gx!v+Ri"
    var_1 = module_0.func(*str_0)
    assert var_1 == "Y"
    var_2 = module_1.object()
#    module_0.func()
