# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2394 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "Ob];zKk_k31O4{\x0b/p8e"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"


#@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
#    module_0.func(*list_0)


def test_case_2():
    str_0 = "hKTMM~[kN4s\\mq~tI"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"


def test_case_3():
    bytes_0 = b"^\x01\x87:\xa8\xb2_S-\xae\n\xe9\x16\x93\xf7\xd4\x987h"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    set_0 = {bytes_0}
    list_1 = [list_0, set_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "YES"
    var_2 = module_0.func(*var_1)
    assert var_2 == "NO"


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xf7\xc3\xa8D\xa8=\x04\x89I\xbb\xa7\x17\x7f"
    list_0 = [bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"
    bytes_1 = b"^\x01\x87:\xa8\xb2SS\xae\n\xe9\x16\x93\xf7Y\x987h"
    list_1 = [bytes_1, bytes_1, bytes_1, bytes_1, bytes_1, bytes_1, bytes_1, list_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "NO"
    list_2 = [list_1, var_1]
    var_2 = module_0.func(*list_2)
    assert var_2 == "YES"
#    module_1.object(*var_1)
