# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2671 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    set_0 = set()
    list_0 = [set_0, set_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "0"
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "C]\x0c"
    var_0 = module_0.func(*str_0)
    assert var_0 == "1"
    object_0 = module_1.object()
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"v}\x8d\x06\xe6b\xa5\xbe\x8cj"
    set_0 = set()
    list_0 = []
    tuple_0 = (bytes_0, set_0, list_0, list_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == "0"
    list_1 = [var_0, var_0, var_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "0"
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"v}\x8d\x06\xe6b\xa5\xbe\x8cj"
    bool_0 = True
    list_0 = [bool_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "10"
    list_1 = []
    tuple_0 = (bytes_0, var_0, list_1, list_1)
    var_1 = module_0.func(*tuple_0)
    assert var_1 == "10"
    list_2 = [var_1, var_1, var_0]
    list_3 = [var_1, var_1, var_1]
    var_2 = module_0.func(*list_3)
    assert var_2 == "10"
    module_1.object(*list_2, **var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"v}\x8d\x06\xe6b\xa5\xbe\x8cj"
    set_0 = set()
    list_0 = []
    tuple_0 = (bytes_0, set_0, list_0, list_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == "0"
    list_1 = [var_0, var_0, set_0]
    str_0 = '}t3p_s"%'
    list_2 = [str_0, list_1]
    var_1 = module_0.func(*list_2)
    assert var_1 == "01"
    module_0.func()
