# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1502 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -577
    str_0 = '"r\\>Yo"Fnh6B'
    list_0 = [int_0, str_0, int_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "-164 -162"
#    module_0.func(*str_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 3403
    str_0 = '"r\\>Yo"Fnh6B'
    list_0 = [int_0, str_0, int_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "972 973"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 245.15
    list_0 = [float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "70 70"
    int_0 = -572
    str_0 = '"r\\>Yo"Fnh6B'
    list_1 = [int_0, int_0, int_0, str_0, int_0, str_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "-162 -160"
#    module_1.object(**str_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 214.75103454083836
    list_0 = [float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "60 62"
    int_0 = -572
    var_1 = module_0.func(*var_0)
    assert var_1 == "1 2"
    str_0 = '"r\\>Yo"Fnh6B'
    list_1 = [int_0, int_0, int_0, str_0, int_0, str_0]
    var_2 = module_0.func(*list_1)
    assert var_2 == "-162 -160"
#    module_1.object(**str_0)
