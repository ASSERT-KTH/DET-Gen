# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_215 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xd3\x00\xe8\xfa\xac\xee\x14_\x84\xdd\x80\x95"
    module_0.func(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x8d\x03\xed\xfc\x08@<T@Q>-"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 2
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x86\xaf\x87\x19\x1a\xb1M*/\x08\xb9\x07\x1f"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 1
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x19\x1a\xb1M*/\xb9\x07\x1f"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 2
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"i\xd68\xb9\x1f\\/\xc7\xa3\xf5-X\xa9"
    bytes_1 = b"-\xa7{N\xfa6t\xdc\xd8\xa7\x80{B7$:,_"
    var_0 = module_0.func(*bytes_1)
    assert var_0 == 11
    var_1 = module_0.func(*bytes_0)
    assert var_1 == 0
    var_2 = module_0.func(*bytes_1)
    assert var_2 == 11
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"r\xc8\x92+\x00\xf5\xbd\xe7)/\x17\xa7\x18\xe4\xa1"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 0
    object_0 = module_1.object()
    module_0.func()
