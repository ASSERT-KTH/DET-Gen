# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_215 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x07J1\xfa%y\x8d\x0fI\x06V\x8cLH\xbd"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 5
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x07J\xfa%y\x8d\x12\x06V\x8cLH\xbd"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 20
    module_1.object(*bytes_0, **var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xa0\x97)\x91@F\x8f\xef\x8c\xfbO\xc1"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 1
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x07J\xfay\x8d\x12\x06\x8cLH\xbd"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 22
    module_1.object(*bytes_0, **var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x14r{\xb9\x00y\xfd\x83\x14\xd9\xf6^\xac\xcc\xed[K\xede"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 0
    bytes_1 = b"<H\xa6\xc0\x03{\x08"
    var_1 = module_0.func(*bytes_1)
    assert var_1 == 0
    object_0 = module_1.object()
    module_0.func()
