# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1476 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = 483.74394
    list_0 = [float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 97
    module_0.func(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 331.0
    list_0 = [float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 67
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 462.94947280982257
    list_0 = [float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 93
    list_1 = [float_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 93
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -684.53
    list_0 = [float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 319.25054074481915
    list_0 = [float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 64
    list_1 = [float_0, float_0, float_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 64
    module_0.func()
