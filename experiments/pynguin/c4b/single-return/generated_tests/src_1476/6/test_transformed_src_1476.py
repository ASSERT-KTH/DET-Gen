# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1476 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
    none_type_0 = None
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
#    module_0.func(*none_type_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 1
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x80\xe5\r\xe0\x0bj\xe7f\x01\x8e\xb2\x0f"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 26
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ']\t}P"3\x0b$_!u2]lq,&'
    int_0 = 174
    list_0 = [int_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 35
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
    object_0 = module_1.object()
    bytes_0 = b"\x07\x11\xedd/6n\x9f\x14\xc6\x94\xaa&"
    var_1 = module_0.func(*bytes_0)
    assert var_1 == 2
#    module_0.func()
