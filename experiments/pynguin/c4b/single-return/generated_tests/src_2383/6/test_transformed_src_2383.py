# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2383 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ".EK7{HexKcv]\x0b:|nJ\\/ "
    var_0 = module_0.func(*str_0)
    assert var_0 == ".."
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ".EK7{HexKcv]\x0b:|nJ\\/ "
    var_0 = module_0.func(*str_0)
    assert var_0 == ".."
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "...k.7.{.h.x.k.c.v.].\x0b.:.|.n.j.\\./. "
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "/jnh@r^sy"
    var_0 = module_0.func(*str_0)
    assert var_0 == "./"
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "./.j.n.h.@.r.^.s"
    var_2 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "I.K7{HeKcN]\x0b:pnJ\\/ "
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'g"n^O*}'
    var_0 = module_0.func(*str_0)
    assert var_0 == ".g"
    object_0 = module_1.object()
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == '.g.".n.^.*.}'
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "(u`"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".(.`"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "A;p\x0cnB69R:DtV(nrq|"
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == ".;.p.\x0c.n.b.6.9.r.:.d.t.v.(.n.r.q.|"
#    module_0.func()
