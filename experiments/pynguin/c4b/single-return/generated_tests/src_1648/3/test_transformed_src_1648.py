# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1648 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "_Y;vu4N}o!(\n_r1J '"
    var_0 = module_0.func(*str_0)
    assert var_0 == "NO"


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "_Y;vh49Po!(\n_r1J f"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"
    var_1 = module_1.object()
    var_2 = module_0.func(*list_0)
    assert var_2 == "YES"
    var_3 = module_0.func(*var_2)
    assert var_3 == "NO"
    var_4 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '|\nl>T8qtLH7TZ.";fq/x'
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "=\reY\tVQ1@Eq1NZ2b$"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"
    var_1 = module_0.func(*list_0)
    assert var_1 == "YES"
    var_2 = module_1.object()
    var_3 = module_0.func(*var_0)
    assert var_3 == "NO"
#    module_0.func()
