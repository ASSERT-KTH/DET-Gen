# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2215 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xa3\xb6w\xa9\xdd\x1f\x0f\r\x85"
    list_0 = [bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "163182119169221311513133"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    list_0 = [set_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1131
    str_0 = "kD&n"
    bytes_0 = b"\xab\x1e\x7f\x82\xf3\t\xdc3\x9d\xbf\xa2\xae\xb5\x86<\x86"
    tuple_0 = (int_0, str_0, bytes_0, str_0)
    list_0 = [tuple_0, str_0, tuple_0, bytes_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.func(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xbb@\x11\x9d\x95\x01\xa7\x84\xe5\xc7\x1a\x1d\x01"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "1876417157149116713222919926289"
    var_1 = module_0.func(*var_0)
    assert var_1 == "1"
    object_0 = module_1.object()
    var_2 = module_1.object()
    module_0.func(*object_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xa3\x005;*\xc4\xcb\xedA\xcdG\x80J\x8e\xc4D\xf6\x83\xc0"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "163053594219620323765205711287414219668246131192"
    object_0 = module_1.object()
    module_0.func(*object_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\xbb@\x11\x9d\x95\x01\xa7\x84\xe5\xc7\x1a\x1d"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "187641715714911671322291992629"
    none_type_0 = None
    list_1 = [var_0, var_0, var_0, none_type_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "99999999999999999999999999999"
    var_2 = module_0.func(*var_0)
    assert var_2 == "1"
    object_0 = module_1.object()
    module_0.func()
