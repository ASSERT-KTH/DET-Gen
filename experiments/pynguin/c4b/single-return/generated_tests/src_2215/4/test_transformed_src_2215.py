# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2215 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 2945
    tuple_0 = (int_0,)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "2945"
#    module_1.object(*list_0, **var_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2945
    tuple_0 = (int_0,)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "2945"
    list_1 = [var_0, tuple_0, int_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "2899"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2906
    tuple_0 = (int_0,)
    tuple_1 = (tuple_0,)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "2906"
    list_1 = [var_0, tuple_1, int_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "2899"
#    module_0.func()


def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    set_0 = {bool_0}
    list_0 = [set_0]
    tuple_0 = (dict_0, dict_0, list_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == ""
