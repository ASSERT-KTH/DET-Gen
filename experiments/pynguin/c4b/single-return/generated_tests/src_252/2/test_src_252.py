# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_252 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "~}k"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 4


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


def test_case_2():
    str_0 = "1LLR]\\U#P`"
    bool_0 = False
    list_0 = [str_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 7


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "sfo?`\n?{CUY]_wgFKi["
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 10
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ")O`A`m^T&zeKPqe#i``"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 16
    var_1 = module_0.func(*list_0)
    assert var_1 == 16
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "1eILR]\\U#P`"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 5
    var_1 = module_0.func(*list_0)
    assert var_1 == 5
    var_2 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "E>\x0ceVy^8x<xfT%ou|"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 17
    var_1 = module_0.func(*list_0)
    assert var_1 == 17
    object_0 = module_1.object()
    module_0.func()
