# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import src_252 as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "`Y)\rhh\x0b"
    list_0 = [str_0]
    object_0 = module_0.object()
    var_0 = module_1.func(*list_0)
    assert var_0 == 6
    module_1.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_1.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ">ADC[n~D]%:_X\t?"
    list_0 = [str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == 14
    var_1 = module_1.func(*list_0)
    assert var_1 == 14
    var_2 = module_1.func(*list_0)
    assert var_2 == 14
    module_1.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ".>EPakL;\n}dt`\x0ben"
    list_0 = [str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == 14
    object_0 = module_0.object()
    object_1 = module_0.object()
    var_1 = module_1.func(*list_0)
    assert var_1 == 14
    module_1.func()


def test_case_4():
    str_0 = "`\nxFD1a N[GY"
    list_0 = [str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == 12
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "V\t=c&LKAu=;/lOk"
    list_0 = [str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == 8
    object_0 = module_0.object()
    object_1 = module_0.object()
    var_1 = module_1.func(*list_0)
    assert var_1 == 8
    module_1.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "Ym:tPU{{Y:@f9tR"
    list_0 = [str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == 7
    object_0 = module_0.object()
    object_1 = module_0.object()
    var_1 = module_1.func(*list_0)
    assert var_1 == 7
    module_1.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "`I\x0c\rh\x0b%"
    list_0 = [str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == 6
    module_1.func()
