# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_252 as module_0


def test_case_0():
    bytes_0 = b"C\x8aM\xdf\xf4\x84\xf19\xfc"
    tuple_0 = (bytes_0,)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == 10


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '!WVNqoEl@\\":,-O+'
    var_0 = module_0.func(*str_0)
    assert var_0 == 2
    list_0 = [str_0, str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == 8
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "UBX@l(A0e\x0bPg"
    var_0 = module_0.func(*str_0)
    assert var_0 == 1
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == 6
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "UBX@l(A0e\x0bPg"
    var_0 = module_0.func(*str_0)
    assert var_0 == 1
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '!WVNqoE@\\":,-O'
    var_0 = module_0.func(*str_0)
    assert var_0 == 2
    var_1 = module_0.func(*str_0)
    assert var_1 == 2
    list_0 = [str_0, str_0, str_0, str_0]
    var_2 = module_0.func(*list_0)
    assert var_2 == 7
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "`\x0cb[}Xi$34YAIS5"
    var_0 = module_0.func(*str_0)
    assert var_0 == 2
    var_1 = module_0.func(*str_0)
    assert var_1 == 2
    list_0 = [str_0, str_0, str_0, str_0]
    var_2 = module_0.func(*list_0)
    assert var_2 == 11
    module_0.func()
