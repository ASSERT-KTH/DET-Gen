# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2677 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    tuple_0 = (list_0, bool_0)
#    module_0.func(*tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    tuple_0 = (list_0, bool_0)
#    module_0.func(*tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "^M<2G"
    int_0 = -471
    list_0 = [str_0, int_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "ccw"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "^M<DG"
    int_0 = -496
    list_0 = [str_0, int_0, str_0, str_0]
    object_0 = module_1.object()
    var_0 = module_0.func(*list_0)
    assert var_0 == "undefined"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "^M<2G"
    int_0 = 2051
    list_0 = [str_0, int_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "cw"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = ">g<"
    int_0 = -416
    list_0 = [str_0, int_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "undefined"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = ";Fvh*(c'r^"
    int_0 = -479
    list_0 = [str_0, int_0, str_0, str_0, int_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "^M^<DG"
    int_0 = -472
    list_0 = [str_0, int_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "undefined"
#    module_0.func(*int_0)
