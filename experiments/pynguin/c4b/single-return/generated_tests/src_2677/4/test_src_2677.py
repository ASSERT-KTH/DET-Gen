# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2677 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    str_0 = "<8^"
    list_0 = [str_0, bool_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "cw"
    module_0.func(*str_0)


def test_case_2():
    bool_0 = False
    str_0 = "<tv"
    list_0 = [str_0, bool_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "undefined"


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    str_0 = "*V%Uq"
    list_0 = [str_0, bool_0, str_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    str_0 = ">B]A.nAulW}&<RiO0WrU"
    list_0 = [str_0, bool_0, str_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    str_0 = "<tv"
    list_0 = [str_0, bool_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "ccw"
    object_0 = module_1.object()
    object_1 = module_0.func(*list_0)
    assert object_1 == "ccw"
    module_0.func()


def test_case_6():
    bool_0 = False
    str_0 = "<m<"
    list_0 = [str_0, bool_0, bool_0, bool_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "undefined"
