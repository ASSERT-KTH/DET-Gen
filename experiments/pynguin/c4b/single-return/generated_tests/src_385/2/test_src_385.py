# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_385 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


def test_case_1():
    str_0 = "f"
    int_0 = 34
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 8


def test_case_2():
    str_0 = "f"
    int_0 = 6
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 8


def test_case_3():
    str_0 = "g"
    int_0 = 8
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 5


def test_case_4():
    str_0 = "b"
    int_0 = 1
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 5


def test_case_5():
    str_0 = "h"
    int_0 = 6
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 5


def test_case_6():
    str_0 = "a"
    int_0 = 6
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 5


def test_case_7():
    str_0 = "a"
    int_0 = 8
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, int_0, tuple_0, int_0, tuple_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3


def test_case_8():
    str_0 = "a"
    int_0 = 1
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, tuple_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3


def test_case_9():
    str_0 = "h"
    int_0 = 8
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, int_0, tuple_0, tuple_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3


def test_case_10():
    str_0 = "h"
    int_0 = 1
    tuple_0 = (str_0, int_0, int_0, int_0)
    list_0 = [tuple_0, int_0, tuple_0, tuple_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3
