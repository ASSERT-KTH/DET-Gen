# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1778 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


def test_case_1():
    str_0 = "9A=AQzgoKW)Q(fElp"
    var_0 = module_0.func(*str_0)
    assert var_0 == 8


def test_case_2():
    str_0 = ",I}/%R@BBH^"
    bool_0 = False
    list_0 = [bool_0, str_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -10


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ",I}/%R@BBBH^"
    bool_0 = False
    int_0 = -619
    list_0 = [bool_0, str_0, bool_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -10
    module_0.func()


def test_case_4():
    str_0 = "EIu/%RGGdBBH^"
    bool_0 = True
    list_0 = [bool_0, str_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -10


def test_case_5():
    str_0 = ",I}/RR@PBT^"
    bool_0 = False
    list_0 = [bool_0, str_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -10


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "EIuRRoGGGmBH^"
    bool_0 = True
    list_0 = [bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -9
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "EIuRRRGGdBH^"
    bool_0 = True
    list_0 = [bool_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -8
    object_0 = module_1.object()
    module_0.func()
