# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import src_1768 as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    list_0 = [dict_0, object_0, object_0]
#    module_1.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_0.object()
    dict_0 = {}
    list_0 = [dict_0, object_0, object_0]
#    module_1.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '\x0cyx6h"\x0c'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == '\x0cyx6h"\x0c'
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "v\\X1&lp\x0c&"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == "v\\X1&lp\x0c&"
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "L)8"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == "l)8"
    var_1 = module_1.func(*var_0)
    assert var_1 == "L"
#    module_1.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "vKX1&6M\x0c-&"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_1.func(*list_0)
    assert var_0 == "Vkx1&6m\x0c-&"
#    module_1.func()
