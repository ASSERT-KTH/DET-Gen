# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1539 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "ox3E4Fb5sZ8b"
    list_0 = [str_0]
    list_1 = [list_0, list_0, str_0]
    var_0 = module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "R`\x0c!\x0b>N"
    var_0 = module_0.func(*str_0)
    assert var_0 == "r"
    int_0 = 657
    bool_0 = False
    list_0 = [int_0, int_0, bool_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "R`\x0c!\x0b>N"
    bytes_0 = b"\xf1\x01]\xd5HQ\x8d\xb6\x1bK\x1f\x00']\x89\xddF"
    list_0 = [str_0, bytes_0, bytes_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "R`\x0c!\x0b>N"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "R`\x0c!\x0b>N"
    var_0 = module_0.func(*str_0)
    assert var_0 == "r"
    object_0 = module_1.object()
    int_0 = 2094
    list_0 = [int_0, int_0, var_0]
    var_1 = module_0.func(*var_0)
    assert var_1 == "R"
#    module_0.func(*list_0)
