# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1529 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "dta<\n:*9\t6'h\\\x0c=\"\tU?"
    var_0 = module_0.func(*str_0)
    assert var_0 == "D"
    var_1 = module_0.func(*var_0)
    assert var_1 == "d"
    dict_0 = {str_0: str_0, var_0: var_0}
    list_0 = [str_0, str_0, dict_0]
    var_2 = module_0.func(*list_0)
    assert var_2 == "dta<\n:*9\t6'h\\\x0c=\"\tU?"
    var_3 = module_0.func(*var_0)
    assert var_3 == "d"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = 1090.186
    tuple_0 = (float_0, float_0)
    list_0 = [tuple_0, float_0, tuple_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "dta<\n:*9\t6'h\\\x0c=\"\tU?"
    var_0 = module_0.func(*str_0)
    assert var_0 == "D"
    var_1 = module_0.func(*var_0)
    assert var_1 == "d"
    dict_0 = {str_0: str_0, var_0: var_0}
    list_0 = [str_0, str_0, dict_0]
    list_1 = [list_0, list_0]
    var_2 = module_0.func(*list_0)
    assert var_2 == "dta<\n:*9\t6'h\\\x0c=\"\tU?"
    var_3 = module_0.func(*var_0)
    assert var_3 == "d"
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "&U92Q2T-?a"
    var_0 = module_0.func(*str_0)
    assert var_0 == "&"
    str_1 = "\x0b\x0c&nfr})Bj^E9L"
    dict_0 = {str_0: str_0, str_1: str_1}
#    module_1.object(**dict_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "?'**=L;L"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "?'**=l;l"
    var_1 = module_0.func(*str_0)
    assert var_1 == "?"
    var_2 = module_0.func(*var_1)
    assert var_2 == "?"
    var_3 = module_0.func(*var_1)
    str_1 = "\x0b\x0c&nfr})Bj^E9L"
    dict_0 = {str_0: str_0, str_1: str_1}
    list_1 = [str_0, str_0, dict_0]
    list_2 = [list_1, list_1]
#    module_0.func(*list_2)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "q]$NY"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "Q]$ny"
    var_1 = module_0.func(*str_0)
    assert var_1 == "Q"
    var_2 = module_0.func(*var_1)
    assert var_2 == "q"
#    module_0.func()
