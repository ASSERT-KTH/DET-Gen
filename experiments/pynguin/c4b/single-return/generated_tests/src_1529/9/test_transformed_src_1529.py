# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1529 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x9b\x94\x907\x12+\x16\xa1\xc9k\x85\xcd\x11\xc8\x94\xdeY$\xa9"
    tuple_0 = (bytes_0,)
    list_0 = [tuple_0, tuple_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '~XK4R}"'
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == '~xk4r}"'
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '~XK4R}"'
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == '~xk4r}"'
    var_1 = module_0.func(*str_0)
    assert var_1 == "~"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'w~XK4R}"'
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 'W~xk4r}"'
    var_1 = module_1.object()
#    module_1.object(**var_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "u|p"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "u|p"
#    module_1.object(**var_0)


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "ecN!sJ'\x0cVJphuw\x0b*G7\x0c"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "ecN!sJ'\x0cVJphuw\x0b*G7\x0c"
    var_1 = module_0.func(*var_0)
    assert var_1 == "E"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "W|R~\\(vC{~j$V"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "W|R~\\(vC{~j$V"
    var_1 = module_0.func(*var_0)
    assert var_1 == "w"
#    module_0.func()
