# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1529 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ".2X\n^\tAt(uE\"'\n"
    var_0 = module_0.func(*str_0)
    assert var_0 == "."
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "68rN\x0c]T&%"
    tuple_0 = (str_0,)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == "68rN\x0c]T&%"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "P+C1~amMe+P,8^"
    var_0 = module_0.func(*str_0)
    assert var_0 == "p"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 's"-\\&@/c\x0c'
    var_0 = module_0.func(*str_0)
    assert var_0 == "S"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 's"-\\&@/c\x0c'
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 's"-\\&@/c\x0c'
    var_1 = module_0.func(*str_0)
    assert var_1 == "S"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "iB"
    str_1 = ".2X\n^\tAt(uE\"'\n"
    var_0 = module_0.func(*str_1)
    assert var_0 == "."
    tuple_0 = (str_0,)
    var_1 = module_0.func(*tuple_0)
    assert var_1 == "Ib"
    var_2 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "68N\x0c]T&%"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "68n\x0c]t&%"
    str_1 = ".2X\n^\tAt(uE\"'\nT"
    var_1 = module_0.func(*str_1)
    assert var_1 == "."
    module_0.func()
