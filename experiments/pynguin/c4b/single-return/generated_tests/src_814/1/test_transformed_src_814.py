# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_814 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "-1"


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ""


#@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -1545.527929009873
    list_0 = [float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "4444"
    object_0 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 1207.858
    list_0 = [float_0, float_0, float_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0
        == "4444447777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"
    )
    var_1 = module_1.object()
    var_2 = module_0.func(*var_0)
    assert var_2 == "4"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "-1"
    var_1 = module_0.func(*list_0)
    assert var_1 == "-1"
    none_type_0 = None
    list_1 = [var_0, var_1, none_type_0, var_0]
    var_2 = module_0.func(*list_1)
    assert var_2 == "-1"
#    module_0.func()
