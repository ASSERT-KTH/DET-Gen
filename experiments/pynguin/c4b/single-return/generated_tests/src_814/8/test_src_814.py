# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_814 as module_0


def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "-1"


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


def test_case_2():
    bool_0 = False
    tuple_0 = ()
    tuple_1 = (bool_0, bool_0, tuple_0)
    var_0 = module_0.func(*tuple_1)
    assert var_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -878.0
    bool_0 = True
    tuple_0 = ()
    tuple_1 = (float_0, bool_0, tuple_0)
    var_0 = module_0.func(*tuple_1)
    assert var_0 == "4"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1905
    list_0 = [int_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0
        == "447777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"
    )
    float_0 = 936.746
    bool_0 = True
    tuple_0 = ()
    tuple_1 = (float_0, bool_0, tuple_0)
    var_1 = module_0.func(*tuple_1)
    assert (
        var_1
        == "444777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"
    )
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = -877.305639466396
    bool_0 = False
    tuple_0 = ()
    tuple_1 = (float_0, bool_0, tuple_0)
    var_0 = module_0.func(*tuple_1)
    assert var_0 == "444"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -7
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "-1"
    bool_0 = True
    module_0.func(*bool_0)
