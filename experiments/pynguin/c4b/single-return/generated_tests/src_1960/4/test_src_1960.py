# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1960 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 739
    str_0 = "WjgwW0&:U["
    list_0 = [int_0, int_0, int_0, str_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0
        == "2 4 7 11 16 22 29 37 46 56 67 79 92 106 121 137 154 172 191 211 232 254 277 301 326 352 379 407 436 466 497 529 562 596 631 667 704 3 42 82 123 165 208 252 297 343 390 438 487 537 588 640 693 8 63 119 176 234 293 353 414 476 539 603 668 734 62 130 199 269 340 412 485 559 634 710 48 126 205 285 366 448 531 615 700 47 134 222 311 401 492 584 677 32 127 223 320 418 517 617 718 81 184 288 393 499 606 714 84 194 305 417 530 644 20 136 253 371 490 610 731 114 237 361 486 612 739 128 257 387 518 650 44 178 313 449 586 724 124 264 405 547 690 95 240 386 533 681 91 241 392 544 697 112 267 423 580 738 158 318 479 641 65 229 394 560 727 156 325 495 666 99 272 446 621 58 235 413 592 33 214 396 579 24 209 395 582 31 220 410 601 54 247 441 636 93 290 488 687 148 349 551 15 219 424 630 98 306 515 725 197 409 622 97 312 528 6 224 443 663 145 367 590 75 300 526 14 242 471 701 193 425 658 153 388 624 122 360 599 100 341 583 87 331 576 83 330 578 88 338 589 102 355 609 125 381 638 157 416 676 198 460 723 248 513 40 307 575 105 375 646 179 452 726 262 538 76 354 633 174 455 737 281 565 111 397 684 233 522 73 364 656 210 504 60 356 653 212 511 72 373 675 239 543 109 415 722 291 600 171 482 55 368 682 258 574 152 470 50 370 691 274 597 182 507 94 421 10 339 669 261 593 187 521 117 453 51 389 728 329 670 273 616 221 566 173 520 129 478 89 440 53 406 21 376 732 350 708 328 688 310 672 296 660 286 652 280 648 278 648 280 652 286 660 296 672 310 688 328 708 350 732 376 21 406 53 440 89 478 129 520 173 566 221 616 273 670 329 728 389 51 453 117 521 187 593 261 669 339 10 421 94 507 182 597 274 691 370 50 470 152 574 258 682 368 55 482 171 600 291 722 415 109 543 239 675 373 72 511 212 653 356 60 504 210 656 364 73 522 233 684 397 111 565 281 737 455 174 633 354 76 538 262 726 452 179 646 375 105 575 307 40 513 248 723 460 198 676 416 157 638 381 125 609 355 102 589 338 88 578 330 83 576 331 87 583 341 100 599 360 122 624 388 153 658 425 193 701 471 242 14 526 300 75 590 367 145 663 443 224 6 528 312 97 622 409 197 725 515 306 98 630 424 219 15 551 349 148 687 488 290 93 636 441 247 54 601 410 220 31 582 395 209 24 579 396 214 33 592 413 235 58 621 446 272 99 666 495 325 156 727 560 394 229 65 641 479 318 158 738 580 423 267 112 697 544 392 241 91 681 533 386 240 95 690 547 405 264 124 724 586 449 313 178 44 650 518 387 257 128 739 612 486 361 237 114 731 610 490 371 253 136 20 644 530 417 305 194 84 714 606 499 393 288 184 81 718 617 517 418 320 223 127 32 677 584 492 401 311 222 134 47 700 615 531 448 366 285 205 126 48 710 634 559 485 412 340 269 199 130 62 734 668 603 539 476 414 353 293 234 176 119 63 8 693 640 588 537 487 438 390 343 297 252 208 165 123 82 42 3 704 667 631 596 562 529 497 466 436 407 379 352 326 301 277 254 232 211 191 172 154 137 121 106 92 79 67 56 46 37 29 22 16 11 7 4 2 1"
    )
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()
