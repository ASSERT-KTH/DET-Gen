# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2384 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "c(CH1kWewE&~z~SP8GO"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "c(CH1kWewE&~z~SP8GO"
    object_0 = module_1.object()
    var_1 = module_0.func(*var_0)
    assert var_1 == "C"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ")<u"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ")<u"
    var_1 = module_0.func(*var_0)
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ")<u"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ")<u"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "c(CH1kWewE&~z~SP8GO"
    list_0 = [str_0]
    object_0 = module_1.object()
    var_0 = module_0.func(*list_0)
    assert var_0 == "c(CH1kWewE&~z~SP8GO"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '`"{W\x0b/%\x0c"'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == '`"{w\x0b/%\x0c"'
    var_1 = module_0.func(*var_0)
    assert var_1 == "`"
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "n|Y"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "N|y"
    var_1 = module_0.func(*var_0)
    assert var_1 == "n"
    module_1.object(*var_0)
