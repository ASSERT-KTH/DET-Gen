# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2384 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"3:m\xcb(&\x00K\xac\xfaU\xb8\xde"
    dict_0 = {bytes_0: bytes_0}
    bool_0 = False
    tuple_0 = (dict_0, bytes_0, bool_0)
#    module_0.func(*tuple_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "Y25Z\\>zrD0-)y.\t"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "Y25Z\\>zrD0-)y.\t"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_2():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Y25Z\\>zrD0-)y.\t"
    var_0 = module_0.func(*str_0)
    assert var_0 == "y"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'jy</NC"O2)EN\x0cI!`B4J'
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*str_0)
    assert var_0 == "J"
#    module_1.object(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "a(-I[PHd!_bN"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "a(-I[PHd!_bN"
    object_0 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = ">S8G"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ">s8g"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "e\rN"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "E\rn"
#    module_0.func()
