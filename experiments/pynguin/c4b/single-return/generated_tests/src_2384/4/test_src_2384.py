# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2384 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "qSyDs3o\t:Ij3"
    bool_0 = True
    list_0 = [str_0, str_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "qSyDs3o\t:Ij3"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"G\xd0y\xff\xe4x\xea\xc75\xdf"
    bool_0 = True
    list_0 = [bytes_0, bool_0, bytes_0, bool_0]
    list_1 = [list_0, bool_0, list_0, bool_0]
    module_0.func(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    set_0 = {object_0}
    list_0 = [set_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "q:Sy Ds3o\t:Ij3"
    var_0 = module_0.func(*str_0)
    assert var_0 == "Q"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "qSyDs3o\t:Ij3"
    list_0 = module_0.func(*str_0)
    assert list_0 == "Q"
    var_0 = module_0.func(*list_0)
    assert var_0 == "q"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "N`?OK!3@<Z+ "
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "n`?ok!3@<z+ "
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "nA"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "Na"
    module_0.func()
