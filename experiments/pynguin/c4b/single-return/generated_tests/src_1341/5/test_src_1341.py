# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1341 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


def test_case_1():
    str_0 = "7~"
    tuple_0 = (str_0, str_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == 16


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "0f"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -8
    module_1.object(**str_0)


def test_case_3():
    str_0 = "2~"
    tuple_0 = (str_0, str_0)
    var_0 = module_0.func(*tuple_0)
    assert var_0 == 7


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "7d"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 19
    list_1 = [str_0, str_0, str_0, str_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 19
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "7e"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 18
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "7c"
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 22
    object_0 = module_1.object()
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "7a"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 20
    module_1.object(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "7b"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 21
    var_1 = module_0.func(*list_0)
    assert var_1 == 21
    module_0.func()
