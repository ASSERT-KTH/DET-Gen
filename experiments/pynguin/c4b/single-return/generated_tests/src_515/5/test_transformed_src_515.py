# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_515 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x83\xbf\x11_q[\x7fp(\xc0\x06\xb3bHh\xb6\xcf"
    list_0 = [bytes_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "$\nWS)="
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".$.\n.w.s.).="
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "Z5o7=}}J06pKep|u>"
    int_0 = -3757
    bytes_0 = b"\x07l]\xf6\x95\xd0\x95\x03\xab\xd26\xe2\xa0B\x8a\xb4\x0cj'N"
    list_0 = []
    tuple_0 = (list_0,)
    tuple_1 = (int_0, str_0, bytes_0, tuple_0)
    tuple_2 = (tuple_1,)
    list_1 = [str_0, str_0, tuple_2]
    var_0 = module_0.func(*list_1)
    assert var_0 == ".z.5.7.=.}.}.j.0.6.p.k.p.|.>"
#    module_0.func()


def test_case_3():
    str_0 = "nE^3rlATt_[M>'g.U"
    int_0 = -3757
    list_0 = [str_0, int_0]
    tuple_0 = (list_0,)
    list_1 = [str_0, str_0, tuple_0]
    var_0 = module_0.func(*list_1)
    assert var_0 == ".n.^.3.r.l.t.t._.[.m.>.'.g.."


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "rI"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".r"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "rY"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".r"
#    module_1.object(**var_0)
