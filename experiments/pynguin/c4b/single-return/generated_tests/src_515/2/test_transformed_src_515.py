# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_515 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, bool_0]
#    module_0.func(*list_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "%@w"
    bytes_0 = b"\xc5c(\x05RU\xfa-"
    list_0 = [str_0, str_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".%.@.w"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'Ed\nyB\x0c"mSf'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == '.d.\n.b.\x0c.".m.s.f'
#    module_0.func()


def test_case_4():
    str_0 = ""
    bytes_0 = b"\xc5c(\x05RU\xfa-"
    list_0 = [str_0, str_0, bytes_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ""


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '"ov`R3ik/<K'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == '.".v.`.r.3.k./.<.k'
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ""
    str_0 = "U"
    list_1 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == ""
#    module_1.object(**var_1)


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'E|\nyB\x0c"maf'
    var_0 = module_0.func(*str_0)
    assert var_0 == ""
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == '.|.\n.b.\x0c.".m.f'
#    module_0.func()
