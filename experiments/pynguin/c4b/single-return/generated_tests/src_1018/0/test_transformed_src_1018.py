# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1018 as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\r9#("
    var_0 = module_0.func(*str_0)
    assert var_0 == 0


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


def test_case_2():
    str_0 = ")Z{k.`TwSfO}WMz\x0b\x0b"
    var_0 = module_0.func(*str_0)
    assert var_0 == -1


def test_case_3():
    str_0 = "\r9#("
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 323


def test_case_4():
    str_0 = "c;$J{P]6n*:oY\x0b "
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 662535


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "9D1l\rg$(0[~qT{\x0c<9"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 10615527
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "91l\r$(0[~qT9"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 314455
    object_0 = module_1.object()
    var_1 = module_0.func(*str_0)
    assert var_1 == 9
    object_1 = module_1.object()
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "912"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 326
    var_1 = module_0.func(*list_0)
    assert var_1 == 326
#    module_0.func()
