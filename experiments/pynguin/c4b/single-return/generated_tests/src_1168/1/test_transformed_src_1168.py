# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1168 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0
#    module_0.func()


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 0


#@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -1024
    bool_0 = True
    list_0 = [bool_0, bool_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -1792
#    module_0.func(*var_0)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -976
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -6832
    bool_0 = True
    list_1 = [bool_0, var_0, int_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == -23912
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -1016
    list_0 = [int_0, int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -7112
    bool_0 = False
    list_1 = [bool_0, var_0, bool_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == -24892
    object_0 = module_1.object()
#    module_0.func()
