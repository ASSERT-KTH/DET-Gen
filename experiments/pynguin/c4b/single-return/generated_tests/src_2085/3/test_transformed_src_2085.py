# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2085 as module_0


def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "NO"


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "IR6Qu~{U^"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"
    set_0 = set()
    list_1 = [set_0, set_0, set_0, set_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "NO"
    var_2 = module_0.func(*var_1)
    assert var_2 == "NO"
    var_3 = module_0.func(*list_1)
    assert var_3 == "NO"
    var_4 = module_0.func(*var_3)
    assert var_4 == "NO"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "zc@eHBc%>>PV\n):("
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "YES"
    set_0 = set()
    list_1 = [set_0, set_0, set_0, set_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == "NO"
    var_2 = module_0.func(*var_1)
    assert var_2 == "NO"
    var_3 = module_0.func(*list_1)
    assert var_3 == "NO"
    var_4 = module_0.func(*var_3)
    assert var_4 == "NO"
#    module_0.func()
