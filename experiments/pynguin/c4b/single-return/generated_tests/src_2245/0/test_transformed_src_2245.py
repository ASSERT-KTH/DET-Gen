# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2245 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "7L"
    var_0 = module_0.func(*str_0)
    assert var_0 == "7"
#    module_1.object(*str_0)


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "L"
    var_0 = module_0.func(*str_0)
    assert var_0 == "l"
    var_1 = module_0.func(*var_0)
    assert var_1 == "L"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "R=yM`SY`o5,O:Y\x0cHL9h8"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "R=yM`SY`o5,O:Y\x0cHL9h8"
    var_1 = module_0.func(*str_0)
    assert var_1 == "r"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "fyM`SY`o5,O:Y\x0cHL9h8"
    list_0 = [str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "fyM`SY`o5,O:Y\x0cHL9h8"
    var_1 = module_0.func(*str_0)
    assert var_1 == "F"
    var_2 = module_0.func(*var_1)
    assert var_2 == "f"
    var_3 = module_0.func(*var_1)
    assert var_3 == "f"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = " >"
    list_0 = [str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == " >"
    var_1 = module_1.object()
#    module_0.func(*var_1)
