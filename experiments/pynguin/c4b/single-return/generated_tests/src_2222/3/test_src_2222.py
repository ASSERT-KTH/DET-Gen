# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2222 as module_0


def test_case_0():
    str_0 = 'mBrlnanUr:?0"G {'
    var_0 = module_0.func(*str_0)
    assert var_0 == "NO"
    list_0 = [var_0, str_0, str_0]
    var_1 = module_0.func(*var_0)
    assert var_1 == "NO"
    var_2 = module_0.func(*list_0)
    assert var_2 == "NO"


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "H"
    var_0 = module_0.func(*str_0)
    assert var_0 == "YES"
    bool_0 = False
    list_0 = [str_0, str_0, bool_0, bool_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "YES"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "ZN>43?9T"
    var_0 = module_0.func(*str_0)
    assert var_0 == "NO"
    bool_0 = True
    list_0 = [str_0, str_0, bool_0, bool_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "YES"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "h%3(@,6z\r-* x:sJQ\x0b"
    var_0 = module_0.func(*str_0)
    assert var_0 == "NO"
    bool_0 = False
    list_0 = [str_0, str_0, bool_0, bool_0]
    var_1 = module_0.func(*list_0)
    assert var_1 == "YES"
    module_0.func()
