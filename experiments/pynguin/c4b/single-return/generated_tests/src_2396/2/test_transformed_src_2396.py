# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2396 as module_0


#@pytest.mark.xfail(strict=True)
#def test_case_0():
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "-0149de\t9u.%\\Z6uP>q"
    var_0 = module_0.func(*str_0)
    assert var_0 == ".-"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "-es"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".-.s"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "&xy571tm"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".&.x.5.7.1.t.m"
    str_1 = "-0149de\t9u.%\\Z6uP>q"
    var_1 = module_0.func(*str_1)
    assert var_1 == ".-"
    none_type_0 = None
    list_1 = [none_type_0, none_type_0, none_type_0, none_type_0]
#    module_0.func(*list_1)


#@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "-Is"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".-.s"
    str_1 = "-0149de\t9u.%\\Z6uP>q"
    var_1 = module_0.func(*str_1)
    assert var_1 == ".-"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "os"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".s"
    str_1 = "-0149de\t9u.%\\Z6uP>q"
    var_1 = module_0.func(*str_1)
    assert var_1 == ".-"
#    module_0.func()


#@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "\t;8%]bMzwQoayHd&Si"
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == ".\t.;.8.%.].b.m.z.w.q.h.d.&.s"
    str_1 = 'B?5bp19fP6uj<[2T]@\x0b"'
    list_1 = [str_1, list_0, list_0, list_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == '.b.?.5.b.p.1.9.f.p.6.j.<.[.2.t.].@.\x0b."'
    str_2 = "-0149de\t9u.%\\Z6uP>q"
    var_2 = module_0.func(*str_2)
    assert var_2 == ".-"
    none_type_0 = None
    list_2 = [none_type_0, none_type_0, none_type_0, none_type_0]
#    module_0.func(*list_2)
