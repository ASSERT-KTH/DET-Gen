# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_145 as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    bytes_0 = b"\x94\x17\x90P\x04"
    list_0 = [bool_0, bytes_0, bytes_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3


def test_case_1():
    int_0 = 1707
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3
    var_1 = module_0.func(*list_0)
    assert var_1 == 3


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bytes_0 = b"\x94\x90P\x04"
    list_0 = [bool_0, bytes_0, bytes_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2
    module_0.func()


def test_case_4():
    bytes_0 = b"\x94\x90P\x04"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 2
    var_1 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 1707
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 3
    list_1 = [var_0, var_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 1
    var_2 = module_0.func(*list_0)
    assert var_2 == 3
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 729
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 2
    list_1 = [var_0, var_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 1
    module_0.func()
