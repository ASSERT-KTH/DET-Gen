# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2491 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "o,q\r0\rB<*go&5u"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.func(*dict_0)


def test_case_1():
    str_0 = "o,q\r0\rB<*go&5u"
    var_0 = module_0.func(*str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "9066"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 102
    int_0 = -648
    module_0.func(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "9300706"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 93013
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "64 9300706"
    var_0 = module_0.func(*str_0)
    assert var_0 == -1
    list_0 = [str_0, var_0, var_0, str_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "|Bt"
    var_0 = module_0.func(*str_0)
    assert var_0 == -1
    str_1 = "693807061"
    var_1 = module_0.func(*str_1)
    assert var_1 == -1
    list_0 = [str_1, var_1, var_1, str_1]
    var_2 = module_0.func(*list_0)
    assert var_2 == 938137
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "00706"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 706
    var_1 = module_0.func(*list_0)
    assert var_1 == 706
    module_0.func()
