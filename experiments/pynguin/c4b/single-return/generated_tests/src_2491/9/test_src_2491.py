# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_2491 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x10\xe0)\xa4\xf2\xa0\xb5\xe0&\x19P\x1d\xefd\x97\xe1!?\xed"
    list_0 = [bytes_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, set_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == -1
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.func(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"5\x0b\x15\xb7\xfa\x1ds+\xa0'#\x0f\xdd\x1b"
    list_0 = [bytes_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x95{\x1b"
    list_0 = [bytes_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "76802"
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 815
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'MU0c-WoY,m@x5"'
    list_0 = [str_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "0756802"
    list_0 = [str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 75682
    module_1.object(**var_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "7569032"
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 75695
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "775690932"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.func(*str_0)
    assert var_0 == -1
    var_1 = module_0.func(*list_0)
    assert var_1 == 775785
    object_0 = module_1.object()
    var_2 = module_1.object()
    module_0.func()
