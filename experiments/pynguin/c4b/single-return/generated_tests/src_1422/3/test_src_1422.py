# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1422 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    list_0 = [bool_0]
    module_0.func(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x04\xc9\x04\xd7\xb0@\xe0F"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "11"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb5+\xd3\x18C2b_p(\xa1\xe9\xa3\xe0\x85~G\xb1"
    var_0 = module_0.func(*bytes_0)
    assert (
        var_0
        == "711111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )
    var_1 = module_0.func(*var_0)
    assert var_1 == "711"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b">+\xd3\x18C2b_(\xa1\xe9\xa3\xe0\x85NG\xb1"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "1111111111111111111111111111111"
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"G\x96ok\x17'"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "71111111111111111111111111111111111"
    bytes_1 = b"\x02\xc9\xd9\x04\xd7\xb0@F"
    var_1 = module_0.func(*bytes_1)
    assert var_1 == "1"
    var_2 = module_1.object()
    module_0.func(*var_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\x06=\xa7n<"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "111"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"\x03x\x1b\x94M\x9c\xe2\x90o\xe0\xee"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "7"
    bytes_1 = b"G\x96ok\xbd\x17'"
    var_1 = module_0.func(*bytes_1)
    assert var_1 == "71111111111111111111111111111111111"
    bytes_2 = b"\x04\xc9\xd9\x04\xd7\xb0@F"
    var_2 = module_0.func(*bytes_2)
    assert var_2 == "11"
    var_3 = module_0.func(*bytes_1)
    assert var_3 == "71111111111111111111111111111111111"
    var_4 = module_0.func(*var_1)
    assert var_4 == "711"
    module_0.func(*var_2)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b"\x05\xb7\xb5\xef\x91\xd42\xba\xa6~\xc4\x15\x94"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "71"
    bytes_1 = b""
    module_0.func(*bytes_1)
