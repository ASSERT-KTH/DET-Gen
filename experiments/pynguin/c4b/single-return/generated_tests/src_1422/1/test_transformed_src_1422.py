# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1422 as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xc4\x1e)\xaf-m\xe9\x9a\x81\x8b=s\xed\xf4X\x07"
    var_0 = module_0.func(*bytes_0)
    assert (
        var_0
        == "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )


#@pytest.mark.xfail(strict=True)
#def test_case_1():
#    module_0.func()


def test_case_2():
    bytes_0 = b"\x9f'\xea\xab\xe1\xaf\xc7\xcbi\xb0\xecn"
    var_0 = module_0.func(*bytes_0)
    assert (
        var_0
        == "7111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )
    var_1 = module_0.func(*var_0)
    assert var_1 == "711"


def test_case_3():
    bytes_0 = b"\x02\x9f\xb6\n?J\x88\xa9\xc44\xa5"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "1"


#@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xc4\x1e)\xaf-m\xe9\x9a\x81\x8b=s\xed\xf4X\x07"
    var_0 = module_0.func(*bytes_0)
    assert (
        var_0
        == "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )
#    module_0.func(*var_0)


def test_case_5():
    bytes_0 = b"\x04\x9f\xb6\n?J\x88\xa94}"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "11"


def test_case_6():
    bytes_0 = b"\x03\x0e4\x81R\xa5\xaae\xc2\x86Nj\xd3\xd6\xfd\x98\x0e"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "7"
    var_1 = module_0.func(*var_0)
    assert var_1 == "711"


#@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"\x06\xb4_\xe4\xa1&\x18\xa2\xadM"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "111"
#    module_1.object(*bytes_0)


#@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = '5nn/P",'
    var_0 = module_0.func(*str_0)
    assert var_0 == "71"
    bytes_0 = b"\x04\x9f\xb6\n?J\x88\xa94}"
    var_1 = module_0.func(*bytes_0)
    assert var_1 == "11"
#    module_0.func(*var_1)
