# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_1422 as module_0


def test_case_0():
    bytes_0 = b"\x14\x93\xdf\xd1m\x9b\x97L\x81\x7f\r"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "1111111111"


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x14\x93\xdf\xd1m\x9b\x97L\x81\x7f\r"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "1111111111"
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x03\x90\xbc\x1aH\xc9\xcc\x96SX\xc1\x93\x83\xc3\xc8"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == "7"
    module_0.func()


def test_case_4():
    int_0 = 651
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0
        == "7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )
    var_1 = module_0.func(*var_0)
    assert var_1 == "711"


def test_case_5():
    int_0 = 651
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert (
        var_0
        == "7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )
    var_1 = module_0.func(*list_0)
    assert (
        var_1
        == "7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    )


def test_case_6():
    int_0 = 6
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "111"


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 5
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "71"
    var_1 = module_0.func(*var_0)
    assert var_1 == "711"
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 2
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "1"
    module_0.func(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = 4
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == "11"
    var_1 = module_0.func(*list_0)
    assert var_1 == "11"
    module_0.func(*var_0)
