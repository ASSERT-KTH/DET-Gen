# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import src_445 as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    int_0 = 7
    bytes_0 = b"S\xdc\xc2\x1bi\xa7"
    set_0 = {int_0, bool_0, int_0, bytes_0}
    complex_0 = -492.0202 - 1355.13623j
    list_0 = [int_0, bool_0, set_0, complex_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 1
    list_1 = [bool_0, bool_0]
    var_1 = module_0.func(*list_1)
    assert var_1 == 0
    list_2 = [bool_0, bool_0, bool_0]
    var_2 = module_0.func(*list_2)
    assert var_2 == 0
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 1
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xca\xe5\xc3\xad\xb4\x90\x10U\xa5g\xdd]\x81e7"
    var_0 = module_0.func(*bytes_0)
    assert var_0 == 3
    module_0.func()


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 4
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.func(*list_0)
    assert var_0 == 1
    module_0.func()
