id,submission,sourceCode,author,memory,time,sent,countLine,problems_id,verdicts_id,languages_id,test_res,sanity,verdicts,bleu_score,diff_ratio,test_res_result,failed_tests_ratio
164179,26851068,"isa,isb,isc = map(int, input().split())
na,nb,nc = map(int, input().split())
fa = isa-na
fb = isb-nb
fc = isc-nc
fa = max(fa,0)
fb = max(fb,0)
fc = max(fc,0)
fa = fa // 2
fb = fb // 2
fc = fc // 2
canmake = fa+fb+fc

pa = na-isa
pb = nb-isb
pc = nc-isc

pa = max(0, pa)
pb = max(0, pb)
pc = max(0, pc)

needmake = pa+pb+pc
if(needmake <= canmake):
    print(""Yes"")
else:
    print(""No"")",9,8,62,5/4/17 18:31,26,133,1,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (True, 'Yes', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (True, 'Yes', 'Yes', 59002), (True, 'No', 'No', 59003), (True, 'Yes', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (True, 'Yes', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (True, 'Yes', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (True, 'Yes', 'Yes', 59023), (True, 'Yes', 'Yes', 59024), (True, 'No', 'No', 59025), (True, 'Yes', 'Yes', 59026), (True, 'No', 'No', 59027), (True, 'Yes', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (True, 'Yes', 'Yes', 59036), (True, 'Yes', 'Yes', 59037), (True, 'Yes', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (True, 'Yes', 'Yes', 59045), (True, 'Yes', 'Yes', 59046), (True, 'Yes', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (True, 'Yes', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",True,Accecpted,1.1321573108881766e-231,0.0775757575757575,False,0.0
164876,29369495,"s = list(map(int, input().split()))
t = list(map(int, input().split()))
xs = [ s[i] - t[i] for i in range(len(s)) ]

demand = []
supply = []
for x in xs:
    if x < 0:
        demand.append(-x)
    else:
        supply.append(x)

res = True
if len(demand):
    res = sum(supply) >= sum(demand) * 2
    if res and len(supply) == 2 and supply[0] % 2 == supply[1] % 2 == 1:
        res = False

print('Yes' if res else 'No')",9,4516,61,8/12/17 8:52,19,133,2,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (True, 'Yes', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (True, 'Yes', 'Yes', 59002), (True, 'No', 'No', 59003), (True, 'Yes', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (True, 'Yes', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (False, 'No', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (True, 'Yes', 'Yes', 59019), (False, 'No', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (True, 'Yes', 'Yes', 59023), (False, 'No', 'Yes', 59024), (True, 'No', 'No', 59025), (True, 'Yes', 'Yes', 59026), (True, 'No', 'No', 59027), (True, 'Yes', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (True, 'Yes', 'Yes', 59036), (True, 'Yes', 'Yes', 59037), (True, 'Yes', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (True, 'Yes', 'Yes', 59045), (True, 'Yes', 'Yes', 59046), (True, 'Yes', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (True, 'Yes', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",False,Wrong Answer,1.1321573108881766e-231,0.0775757575757575,False,0.0379746835443038
331321,25346581,"def main():
	a, b, c = map(int, input().split())
	min_a = min(a , b)
	max_a = max(a, b)
	for i in range(c // min_a + 1):
		if (c - min_a * i) % max_a == 0:
			return ""Yes""
	return ""No""

print(main())",9,4532,62,3/8/17 20:28,10,290,1,8,"[(True, 'No', 'No', 71050), (True, 'Yes', 'Yes', 71051), (True, 'Yes', 'Yes', 71052), (True, 'Yes', 'Yes', 71053), (True, 'Yes', 'Yes', 71054), (True, 'No', 'No', 71055), (True, 'Yes', 'Yes', 71056), (True, 'No', 'No', 71057), (True, 'No', 'No', 71058), (True, 'Yes', 'Yes', 71059), (True, 'Yes', 'Yes', 71060), (True, 'Yes', 'Yes', 71061), (True, 'Yes', 'Yes', 71062), (True, 'No', 'No', 71063), (True, 'No', 'No', 71064), (True, 'Yes', 'Yes', 71065), (True, 'Yes', 'Yes', 71066), (True, 'Yes', 'Yes', 71067), (True, 'Yes', 'Yes', 71068), (True, 'Yes', 'Yes', 71069), (True, 'Yes', 'Yes', 71070), (True, 'No', 'No', 71071), (True, 'No', 'No', 71072), (True, 'No', 'No', 71073), (True, 'Yes', 'Yes', 71074), (True, 'Yes', 'Yes', 71075), (True, 'Yes', 'Yes', 71076), (True, 'Yes', 'Yes', 71077), (True, 'Yes', 'Yes', 71078), (True, 'No', 'No', 71079), (True, 'Yes', 'Yes', 71080), (True, 'No', 'No', 71081), (True, 'Yes', 'Yes', 71082), (True, 'Yes', 'Yes', 71083), (True, 'No', 'No', 71084), (True, 'Yes', 'Yes', 71085), (True, 'No', 'No', 71086), (True, 'Yes', 'Yes', 71087), (True, 'Yes', 'Yes', 71088), (True, 'No', 'No', 71089), (True, 'Yes', 'Yes', 71090), (True, 'No', 'No', 71091), (True, 'Yes', 'Yes', 71092), (True, 'Yes', 'Yes', 71093), (True, 'No', 'No', 71094), (True, 'No', 'No', 71095), (True, 'Yes', 'Yes', 71096), (True, 'Yes', 'Yes', 71097), (True, 'No', 'No', 71098), (True, 'No', 'No', 71099), (True, 'Yes', 'Yes', 71100), (True, 'Yes', 'Yes', 71101), (True, 'No', 'No', 71102), (True, 'No', 'No', 71103), (True, 'No', 'No', 71104), (True, 'No', 'No', 71105), (True, 'No', 'No', 71106), (True, 'No', 'No', 71107), (True, 'No', 'No', 71108), (True, 'Yes', 'Yes', 71109), (True, 'Yes', 'Yes', 71110), (True, 'Yes', 'Yes', 71111), (True, 'Yes', 'Yes', 71112), (True, 'Yes', 'Yes', 71113), (True, 'Yes', 'Yes', 71114), (True, 'No', 'No', 71115), (True, 'Yes', 'Yes', 71116), (True, 'Yes', 'Yes', 71117), (True, 'No', 'No', 71118), (True, 'No', 'No', 71119), (True, 'No', 'No', 71120), (True, 'Yes', 'Yes', 71121), (True, 'Yes', 'Yes', 71122), (True, 'Yes', 'Yes', 71123), (True, 'Yes', 'Yes', 71124), (True, 'No', 'No', 71125), (True, 'No', 'No', 71126), (True, 'Yes', 'Yes', 71127), (True, 'No', 'No', 71128), (True, 'No', 'No', 71129), (True, 'Yes', 'Yes', 71130), (True, 'Yes', 'Yes', 71131), (True, 'Yes', 'Yes', 71132), (True, 'No', 'No', 71133), (True, 'Yes', 'Yes', 71134), (True, 'Yes', 'Yes', 71135), (True, 'Yes', 'Yes', 71136), (True, 'Yes', 'Yes', 71137), (True, 'No', 'No', 71138), (True, 'Yes', 'Yes', 71139), (True, 'Yes', 'Yes', 71140), (True, 'No', 'No', 71141), (True, 'No', 'No', 71142), (True, 'Yes', 'Yes', 71143), (True, 'Yes', 'Yes', 71144), (True, 'Yes', 'Yes', 71145), (True, 'Yes', 'Yes', 71146), (True, 'No', 'No', 71147), (True, 'No', 'No', 71148), (True, 'Yes', 'Yes', 71149), (True, 'Yes', 'Yes', 71150), (True, 'No', 'No', 71151), (True, 'No', 'No', 71152), (True, 'Yes', 'Yes', 71153), (True, 'Yes', 'Yes', 71154), (True, 'Yes', 'Yes', 71155), (True, 'No', 'No', 71156), (True, 'No', 'No', 71157), (True, 'Yes', 'Yes', 71158), (True, 'Yes', 'Yes', 71159), (True, 'Yes', 'Yes', 71160), (True, 'No', 'No', 71161), (True, 'No', 'No', 71162), (True, 'Yes', 'Yes', 71163), (True, 'Yes', 'Yes', 71164), (True, 'Yes', 'Yes', 71165), (True, 'Yes', 'Yes', 71166), (True, 'Yes', 'Yes', 71167), (True, 'Yes', 'Yes', 71168), (True, 'Yes', 'Yes', 71169), (True, 'No', 'No', 71170), (True, 'Yes', 'Yes', 71171), (True, 'No', 'No', 71172), (True, 'Yes', 'Yes', 71173), (True, 'No', 'No', 71174), (True, 'No', 'No', 71175), (True, 'No', 'No', 71176), (True, 'Yes', 'Yes', 71177), (True, 'Yes', 'Yes', 71178), (True, 'Yes', 'Yes', 71179), (True, 'Yes', 'Yes', 71180), (True, 'Yes', 'Yes', 71181), (True, 'Yes', 'Yes', 71182), (True, 'No', 'No', 71183)]",True,Accecpted,0.0962968178458495,0.2052117263843648,False,0.0
331324,25346921,"def d():
    a, b, c = map(int,input().split())
    if c < b and c < a:
        return ""No""
    if c % b == 0 or c % a == 0:
        return ""Yes""
    q = max(a,b)
    k = a + b - q
    v = c
    while c > 0:
        c -= q
        if c % k == 0:
            return ""Yes""
    c = v
    while c > 0:
        c -= k
        if c % q == 0:
            return ""Yes""
    return ""No""
print(d())",9,4516,62,3/8/17 20:47,20,290,2,8,"[(True, 'No', 'No', 71050), (True, 'Yes', 'Yes', 71051), (True, 'Yes', 'Yes', 71052), (True, 'Yes', 'Yes', 71053), (True, 'Yes', 'Yes', 71054), (True, 'No', 'No', 71055), (True, 'Yes', 'Yes', 71056), (True, 'No', 'No', 71057), (True, 'No', 'No', 71058), (True, 'Yes', 'Yes', 71059), (True, 'Yes', 'Yes', 71060), (True, 'Yes', 'Yes', 71061), (True, 'Yes', 'Yes', 71062), (True, 'No', 'No', 71063), (True, 'No', 'No', 71064), (True, 'Yes', 'Yes', 71065), (True, 'Yes', 'Yes', 71066), (True, 'Yes', 'Yes', 71067), (True, 'Yes', 'Yes', 71068), (True, 'Yes', 'Yes', 71069), (True, 'Yes', 'Yes', 71070), (True, 'No', 'No', 71071), (True, 'No', 'No', 71072), (True, 'No', 'No', 71073), (True, 'Yes', 'Yes', 71074), (True, 'Yes', 'Yes', 71075), (True, 'Yes', 'Yes', 71076), (True, 'Yes', 'Yes', 71077), (True, 'Yes', 'Yes', 71078), (True, 'No', 'No', 71079), (True, 'Yes', 'Yes', 71080), (True, 'No', 'No', 71081), (True, 'Yes', 'Yes', 71082), (True, 'Yes', 'Yes', 71083), (True, 'No', 'No', 71084), (True, 'Yes', 'Yes', 71085), (True, 'No', 'No', 71086), (True, 'Yes', 'Yes', 71087), (True, 'Yes', 'Yes', 71088), (True, 'No', 'No', 71089), (True, 'Yes', 'Yes', 71090), (True, 'No', 'No', 71091), (True, 'Yes', 'Yes', 71092), (True, 'Yes', 'Yes', 71093), (True, 'No', 'No', 71094), (True, 'No', 'No', 71095), (True, 'Yes', 'Yes', 71096), (True, 'Yes', 'Yes', 71097), (True, 'No', 'No', 71098), (True, 'No', 'No', 71099), (True, 'Yes', 'Yes', 71100), (True, 'Yes', 'Yes', 71101), (True, 'No', 'No', 71102), (True, 'No', 'No', 71103), (True, 'No', 'No', 71104), (True, 'No', 'No', 71105), (True, 'No', 'No', 71106), (True, 'No', 'No', 71107), (True, 'No', 'No', 71108), (True, 'Yes', 'Yes', 71109), (True, 'Yes', 'Yes', 71110), (True, 'Yes', 'Yes', 71111), (True, 'Yes', 'Yes', 71112), (True, 'Yes', 'Yes', 71113), (True, 'Yes', 'Yes', 71114), (True, 'No', 'No', 71115), (True, 'Yes', 'Yes', 71116), (True, 'Yes', 'Yes', 71117), (True, 'No', 'No', 71118), (True, 'No', 'No', 71119), (True, 'No', 'No', 71120), (True, 'Yes', 'Yes', 71121), (True, 'Yes', 'Yes', 71122), (True, 'Yes', 'Yes', 71123), (True, 'Yes', 'Yes', 71124), (True, 'No', 'No', 71125), (True, 'No', 'No', 71126), (True, 'Yes', 'Yes', 71127), (False, 'Yes', 'No', 71128), (True, 'No', 'No', 71129), (True, 'Yes', 'Yes', 71130), (True, 'Yes', 'Yes', 71131), (True, 'Yes', 'Yes', 71132), (True, 'No', 'No', 71133), (True, 'Yes', 'Yes', 71134), (True, 'Yes', 'Yes', 71135), (True, 'Yes', 'Yes', 71136), (True, 'Yes', 'Yes', 71137), (True, 'No', 'No', 71138), (True, 'Yes', 'Yes', 71139), (True, 'Yes', 'Yes', 71140), (True, 'No', 'No', 71141), (True, 'No', 'No', 71142), (True, 'Yes', 'Yes', 71143), (True, 'Yes', 'Yes', 71144), (True, 'Yes', 'Yes', 71145), (True, 'Yes', 'Yes', 71146), (True, 'No', 'No', 71147), (True, 'No', 'No', 71148), (True, 'Yes', 'Yes', 71149), (True, 'Yes', 'Yes', 71150), (True, 'No', 'No', 71151), (True, 'No', 'No', 71152), (True, 'Yes', 'Yes', 71153), (True, 'Yes', 'Yes', 71154), (True, 'Yes', 'Yes', 71155), (True, 'No', 'No', 71156), (True, 'No', 'No', 71157), (True, 'Yes', 'Yes', 71158), (True, 'Yes', 'Yes', 71159), (True, 'Yes', 'Yes', 71160), (True, 'No', 'No', 71161), (False, 'Yes', 'No', 71162), (True, 'Yes', 'Yes', 71163), (True, 'Yes', 'Yes', 71164), (True, 'Yes', 'Yes', 71165), (True, 'Yes', 'Yes', 71166), (True, 'Yes', 'Yes', 71167), (True, 'Yes', 'Yes', 71168), (True, 'Yes', 'Yes', 71169), (True, 'No', 'No', 71170), (True, 'Yes', 'Yes', 71171), (True, 'No', 'No', 71172), (True, 'Yes', 'Yes', 71173), (True, 'No', 'No', 71174), (False, 'Yes', 'No', 71175), (True, 'No', 'No', 71176), (True, 'Yes', 'Yes', 71177), (True, 'Yes', 'Yes', 71178), (True, 'Yes', 'Yes', 71179), (True, 'Yes', 'Yes', 71180), (True, 'Yes', 'Yes', 71181), (True, 'Yes', 'Yes', 71182), (True, 'No', 'No', 71183)]",False,Wrong Answer,0.0962968178458495,0.2052117263843648,False,0.0223880597014925
831488,25118180,"import sys
import math

def main():
	stdin = [int(x) for x in sys.stdin.read().split()]
	min_tot_dist(stdin)

def min_tot_dist(A):
	
	min_dist = math.inf

	for a in A:
		temp = sum([abs(x-a) for x in A])
		min_dist = min(min_dist, temp)

	print(min_dist)

if __name__ == '__main__':
	main()",9,4520,62,3/1/17 11:22,19,764,1,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (True, '99', '99', 109990), (True, '99', '99', 109991), (True, '99', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (True, '85', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (True, '88', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (True, '67', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (True, '67', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (True, '8', '8', 110026), (True, '10', '10', 110027), (True, '49', '49', 110028), (True, '10', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (True, '99', '99', 110034), (True, '5', '5', 110035)]",True,Accecpted,0.0,0.2425742574257425,False,0.0
836310,28975989,"a=int(input())
b=int(input())
c=int(input())
d=max(a,max(b,c))
f=min(a,min(b,c))
print(d-f)",9,4464,46,7/29/17 21:09,6,764,5,8,"[(False, '', '6', 109988), (False, '', '20', 109989), (False, '', '99', 109990), (False, '', '99', 109991), (False, '', '99', 109992), (False, '', '2', 109993), (False, '', '17', 109994), (False, '', '69', 109995), (False, '', '72', 109996), (False, '', '25', 109997), (False, '', '85', 109998), (False, '', '52', 109999), (False, '', '72', 110000), (False, '', '11', 110001), (False, '', '15', 110002), (False, '', '88', 110003), (False, '', '62', 110004), (False, '', '70', 110005), (False, '', '36', 110006), (False, '', '61', 110007), (False, '', '5', 110008), (False, '', '29', 110009), (False, '', '62', 110010), (False, '', '69', 110011), (False, '', '27', 110012), (False, '', '33', 110013), (False, '', '61', 110014), (False, '', '67', 110015), (False, '', '51', 110016), (False, '', '55', 110017), (False, '', '75', 110018), (False, '', '67', 110019), (False, '', '61', 110020), (False, '', '49', 110021), (False, '', '50', 110022), (False, '', '2', 110023), (False, '', '4', 110024), (False, '', '6', 110025), (False, '', '8', 110026), (False, '', '10', 110027), (False, '', '49', 110028), (False, '', '10', 110029), (False, '', '8', 110030), (False, '', '2', 110031), (False, '', '2', 110032), (False, '', '7', 110033), (False, '', '99', 110034), (False, '', '5', 110035)]",False,Runtime Error,0.0,0.2425742574257425,False,1.0
894892,24281383,"#VMSS7WC
n=int(input())
a=[0, 1]
while a[-1]<n:
    a+=[a[-1]+a[-2]+1]
print(len(a)-2)",9,4512,62,1/31/17 6:42,6,834,1,8,"[(True, '1', '1', 115431), (True, '2', '2', 115432), (True, '2', '2', 115433), (True, '4', '4', 115434), (True, '14', '14', 115435), (True, '15', '15', 115436), (True, '27', '27', 115437), (True, '45', '45', 115438), (True, '81', '81', 115439), (True, '3', '3', 115440), (True, '9', '9', 115441), (True, '10', '10', 115442), (True, '10', '10', 115443), (True, '10', '10', 115444), (True, '11', '11', 115445), (True, '11', '11', 115446), (True, '84', '84', 115447), (True, '85', '85', 115448), (True, '85', '85', 115449), (True, '85', '85', 115450), (True, '47', '47', 115451), (True, '43', '43', 115452), (True, '66', '66', 115453), (True, '68', '68', 115454), (True, '62', '62', 115455), (True, '62', '62', 115456), (True, '63', '63', 115457), (True, '56', '56', 115458), (True, '70', '70', 115459), (True, '71', '71', 115460), (True, '67', '67', 115461), (True, '47', '47', 115462), (True, '61', '61', 115463), (True, '58', '58', 115464), (True, '56', '56', 115465), (True, '51', '51', 115466), (True, '65', '65', 115467), (True, '75', '75', 115468), (True, '65', '65', 115469), (True, '71', '71', 115470), (True, '3', '3', 115471), (True, '3', '3', 115472), (True, '4', '4', 115473), (True, '4', '4', 115474), (True, '4', '4', 115475), (True, '4', '4', 115476), (True, '5', '5', 115477), (True, '5', '5', 115478), (True, '5', '5', 115479), (True, '5', '5', 115480), (True, '5', '5', 115481), (True, '5', '5', 115482), (True, '5', '5', 115483), (True, '5', '5', 115484), (True, '6', '6', 115485), (True, '6', '6', 115486), (True, '6', '6', 115487), (True, '69', '69', 115488), (True, '84', '84', 115489), (True, '49', '49', 115490), (True, '63', '63', 115491), (True, '56', '56', 115492), (True, '54', '54', 115493)]",True,Accecpted,0.7289545183625967,0.9036144578313252,False,0.0
894891,24281374,"#VMSS7WC
a=[0, 1]
while a[-1]<n:
    a+=[a[-1]+a[-2]+1]
print(len(a)-2)",9,4492,46,1/31/17 6:41,5,834,5,8,"[(False, '', '1', 115431), (False, '', '2', 115432), (False, '', '2', 115433), (False, '', '4', 115434), (False, '', '14', 115435), (False, '', '15', 115436), (False, '', '27', 115437), (False, '', '45', 115438), (False, '', '81', 115439), (False, '', '3', 115440), (False, '', '9', 115441), (False, '', '10', 115442), (False, '', '10', 115443), (False, '', '10', 115444), (False, '', '11', 115445), (False, '', '11', 115446), (False, '', '84', 115447), (False, '', '85', 115448), (False, '', '85', 115449), (False, '', '85', 115450), (False, '', '47', 115451), (False, '', '43', 115452), (False, '', '66', 115453), (False, '', '68', 115454), (False, '', '62', 115455), (False, '', '62', 115456), (False, '', '63', 115457), (False, '', '56', 115458), (False, '', '70', 115459), (False, '', '71', 115460), (False, '', '67', 115461), (False, '', '47', 115462), (False, '', '61', 115463), (False, '', '58', 115464), (False, '', '56', 115465), (False, '', '51', 115466), (False, '', '65', 115467), (False, '', '75', 115468), (False, '', '65', 115469), (False, '', '71', 115470), (False, '', '3', 115471), (False, '', '3', 115472), (False, '', '4', 115473), (False, '', '4', 115474), (False, '', '4', 115475), (False, '', '4', 115476), (False, '', '5', 115477), (False, '', '5', 115478), (False, '', '5', 115479), (False, '', '5', 115480), (False, '', '5', 115481), (False, '', '5', 115482), (False, '', '5', 115483), (False, '', '5', 115484), (False, '', '6', 115485), (False, '', '6', 115486), (False, '', '6', 115487), (False, '', '69', 115488), (False, '', '84', 115489), (False, '', '49', 115490), (False, '', '63', 115491), (False, '', '56', 115492), (False, '', '54', 115493)]",False,Runtime Error,0.7289545183625967,0.9036144578313252,False,1.0
905584,24256004,"players = int(input())

if players == 2:
  print(1)
elif players == 3:
  print(2)
  
else:
  fib = 3
  fist = 2
  sec = 3
  answer = 2
  
  while fib < players:
    answer += 1
  
    fib = fist + sec
    fist = sec
    sec = fib
  
  if fib > players:
    answer -= 1
    
  print(answer)",9,4520,62,1/30/17 0:12,24,836,1,8,"[(True, '1', '1', 115557), (True, '2', '2', 115558), (True, '2', '2', 115559), (True, '4', '4', 115560), (True, '14', '14', 115561), (True, '15', '15', 115562), (True, '27', '27', 115563), (True, '45', '45', 115564), (True, '81', '81', 115565), (True, '3', '3', 115566), (True, '9', '9', 115567), (True, '10', '10', 115568), (True, '10', '10', 115569), (True, '10', '10', 115570), (True, '11', '11', 115571), (True, '11', '11', 115572), (True, '84', '84', 115573), (True, '85', '85', 115574), (True, '85', '85', 115575), (True, '85', '85', 115576), (True, '47', '47', 115577), (True, '43', '43', 115578), (True, '66', '66', 115579), (True, '68', '68', 115580), (True, '62', '62', 115581), (True, '62', '62', 115582), (True, '63', '63', 115583), (True, '56', '56', 115584), (True, '70', '70', 115585), (True, '71', '71', 115586), (True, '67', '67', 115587), (True, '47', '47', 115588), (True, '61', '61', 115589), (True, '58', '58', 115590), (True, '56', '56', 115591), (True, '51', '51', 115592), (True, '65', '65', 115593), (True, '75', '75', 115594), (True, '65', '65', 115595), (True, '71', '71', 115596), (True, '3', '3', 115597), (True, '3', '3', 115598), (True, '4', '4', 115599), (True, '4', '4', 115600), (True, '4', '4', 115601), (True, '4', '4', 115602), (True, '5', '5', 115603), (True, '5', '5', 115604), (True, '5', '5', 115605), (True, '5', '5', 115606), (True, '5', '5', 115607), (True, '5', '5', 115608), (True, '5', '5', 115609), (True, '5', '5', 115610), (True, '6', '6', 115611), (True, '6', '6', 115612), (True, '6', '6', 115613), (True, '69', '69', 115614), (True, '84', '84', 115615), (True, '49', '49', 115616), (True, '63', '63', 115617), (True, '56', '56', 115618), (True, '54', '54', 115619)]",True,Accecpted,1.735088173752034e-78,0.2043010752688172,False,0.0
905578,24255506,"players = int(input())

games = 0

while True:
  lastpcount = players
  players = players//2
  games += 1
  if 2 * players == lastpcount and players == 1:
    break
  elif 2 * players != lastpcount:
    players += 1
    
print(games)",9,4464,62,1/29/17 23:23,14,836,2,8,"[(True, '1', '1', 115557), (True, '2', '2', 115558), (True, '2', '2', 115559), (True, '4', '4', 115560), (False, '10', '14', 115561), (False, '12', '15', 115562), (False, '20', '27', 115563), (False, '32', '45', 115564), (False, '57', '81', 115565), (True, '3', '3', 115566), (False, '8', '9', 115567), (False, '8', '10', 115568), (False, '8', '10', 115569), (False, '8', '10', 115570), (False, '8', '11', 115571), (False, '8', '11', 115572), (False, '60', '84', 115573), (False, '60', '85', 115574), (False, '60', '85', 115575), (False, '60', '85', 115576), (False, '34', '47', 115577), (False, '31', '43', 115578), (False, '47', '66', 115579), (False, '48', '68', 115580), (False, '44', '62', 115581), (False, '44', '62', 115582), (False, '45', '63', 115583), (False, '40', '56', 115584), (False, '50', '70', 115585), (False, '50', '71', 115586), (False, '47', '67', 115587), (False, '34', '47', 115588), (False, '44', '61', 115589), (False, '41', '58', 115590), (False, '40', '56', 115591), (False, '36', '51', 115592), (False, '47', '65', 115593), (False, '53', '75', 115594), (False, '46', '65', 115595), (False, '51', '71', 115596), (True, '3', '3', 115597), (True, '3', '3', 115598), (False, '3', '4', 115599), (True, '4', '4', 115600), (True, '4', '4', 115601), (True, '4', '4', 115602), (False, '4', '5', 115603), (False, '4', '5', 115604), (False, '4', '5', 115605), (False, '4', '5', 115606), (True, '5', '5', 115607), (True, '5', '5', 115608), (True, '5', '5', 115609), (True, '5', '5', 115610), (False, '5', '6', 115611), (False, '5', '6', 115612), (False, '5', '6', 115613), (False, '49', '69', 115614), (False, '59', '84', 115615), (False, '35', '49', 115616), (False, '45', '63', 115617), (False, '40', '56', 115618), (False, '38', '54', 115619)]",False,Wrong Answer,1.735088173752034e-78,0.2043010752688172,False,0.7777777777777778
938794,25336642,"def pow(x, k):
	if (k == 0):
		return 1
	a = pow(x, int(k/2))
	a = a*a
	if (k%2 == 1):
		a = a*x
	a = a%10
	return int(a)

a = int(input().strip())
print(pow(1378,a))",9,4516,62,3/8/17 11:24,12,868,1,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (True, '1', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",True,Accecpted,4.689769572037924e-155,0.1702127659574468,False,0.0
939104,25444622,"N = int(input())


if (N % 4 == 1):
    print(8)
elif (N % 4 == 2):
    print(4)
elif(N % 4 == 3):
    print(2)
elif(N % 4 == 0):
    print(6)",9,4512,61,3/13/17 2:08,11,868,2,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (False, '6', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",False,Wrong Answer,4.689769572037924e-155,0.1702127659574468,False,0.0333333333333333
1040689,24255386,"hobbit, pillow, bed = map(int, input().split())
pillow -= hobbit
#
start = 0
end = pillow

while start < end:
  mid = round((start + end + 1)/2)

  lside = int(min(bed - 1, mid - 1))
  rside = int(min(hobbit - bed, mid - 1))

  needed = mid + lside * ((mid - lside) + (mid - 1)) / 2 + rside * ((mid - rside) + (mid - 1)) / 2

  if(needed > pillow):
    end = mid - 1
  else:
    start = mid

print(start+1)",9,4520,77,1/29/17 23:11,20,966,1,8,"[(True, '2', '2', 125492), (True, '4', '4', 125493), (True, '3', '3', 125494), (True, '1', '1', 125495), (True, '1', '1', 125496), (True, '1000000000', '1000000000', 125497), (True, '10000034', '10000034', 125498), (True, '1', '1', 125499), (True, '10001', '10001', 125500), (True, '1', '1', 125501), (True, '1', '1', 125502), (True, '1', '1', 125503), (True, '1', '1', 125504), (True, '10001', '10001', 125505), (True, '1115', '1115', 125506), (True, '10002', '10002', 125507), (True, '112', '112', 125508), (True, '25', '25', 125509), (True, '46', '46', 125510), (True, '31', '31', 125511), (True, '117', '117', 125512), (True, '21965', '21965', 125513), (True, '147', '147', 125514), (True, '1465', '1465', 125515), (True, '1', '1', 125516), (True, '9999778', '9999778', 125517), (True, '5000053', '5000053', 125518), (True, '43849', '43849', 125519), (True, '38038', '38038', 125520), (True, '44320', '44320', 125521), (True, '31624', '31624', 125522), (True, '30217', '30217', 125523), (True, '31459', '31459', 125524), (True, '29887', '29887', 125525), (True, '1', '1', 125526), (True, '144', '144', 125527), (True, '84', '84', 125528), (True, '84', '84', 125529), (True, '28', '28', 125530), (True, '42', '42', 125531), (True, '223', '223', 125532), (True, '18389', '18389', 125533), (True, '866', '866', 125534), (True, '2510', '2510', 125535), (True, '1', '1', 125536), (True, '9999852', '9999852', 125537), (True, '5000046', '5000046', 125538), (True, '43846', '43846', 125539), (True, '37930', '37930', 125540), (True, '43163', '43163', 125541), (True, '43371', '43371', 125542), (True, '22853', '22853', 125543), (True, '31464', '31464', 125544), (True, '29998', '29998', 125545), (True, '1', '1', 125546), (True, '97976', '97976', 125547), (True, '97975', '97975', 125548), (True, '13903', '13903', 125549), (True, '13904', '13904', 125550), (True, '9707', '9707', 125551), (True, '9706', '9706', 125552), (True, '333333334', '333333334', 125553), (True, '500000000', '500000000', 125554), (True, '500000000', '500000000', 125555), (True, '333333334', '333333334', 125556), (True, '333333334', '333333334', 125557), (True, '500000000', '500000000', 125558), (True, '500000000', '500000000', 125559), (True, '999999999', '999999999', 125560)]",True,Accecpted,2.6342805048207627e-155,0.1956521739130435,False,0.0
1040117,24196029,"import sys
input = sys.stdin.readline

hobbits,pillows,bedspot = list(map(int, input().split()))

pillows -= hobbits

counter = 1
bottom = bedspot - 1
top = bedspot

while True:
    cat = top - bottom
    if cat <=pillows:
        pillows -= cat
        counter += 1
    else:
        break

    if bottom > 0:
        bottom-=1
    if top < hobbits:
        top+=1
print(counter)",9,4492,1000,1/27/17 21:05,24,966,3,8,"[(True, '2', '2', 125492), (True, '4', '4', 125493), (True, '3', '3', 125494), (True, '1', '1', 125495), (True, '1', '1', 125496)]",True,Time Limit,2.6342805048207627e-155,0.1956521739130435,False,0.0
2213962,28809631,"a, b, n = map(int, input().split())
if a % b == 0 or a * 10 % b == 0:
    print(a, end='')
    print('0' * n, end='')
elif b - (a % b * 10 % b) >= 10:
    print(-1)
else:
    print(a, end='')
    print(b - (a % b * 10 % b), end='')
    print('0' * (n - 1))",9,4808,62,7/24/17 3:16,10,1945,1,8,"[(True, '121', '121', 186954), (True, '-1', '-1', 186955), (True, '-1', '-1', 186956), (True, '-1', '-1', 186957), (True, '-1', '-1', 186968), (True, '12100', '12100', 186970), (True, '1100', '1100', 186972), (True, '-1', '-1', 186973), (True, '1500000000000', '1500000000000', 186974), (True, '50', '50', 186975), (True, '15000000000', '15000000000', 186976), (True, '390', '390', 186977)]",True,Accecpted,0.4386074529599466,0.7880184331797235,False,0.0
2213950,28809589,"a, b, n = map(int, input().split())
if b - (a % b * 10 % b) > 10:
    print(-1)
else:
    print(a, end='')
    print((b - (a % b * 10 % b)) % 10, end='')
    print('0' * (n - 1))",9,4804,62,7/24/17 3:11,7,1945,2,8,"[(True, '121', '121', 186954), (True, '-1', '-1', 186955), (True, '-1', '-1', 186956), (True, '-1', '-1', 186957), (True, '-1', '-1', 186968), (True, '12100', '12100', 186970), (True, '1100', '1100', 186972), (False, '30', '-1', 186973), (False, '-1', '1500000000000', 186974), (True, '50', '50', 186975), (True, '15000000000', '15000000000', 186976), (True, '390', '390', 186977)]",False,Wrong Answer,0.4386074529599466,0.7880184331797235,False,0.1666666666666666
2780237,22313261,"x=int(input())
if x>=-128 and x<=127:
    print(""byte"")
elif x>= -32768 and x <=32767:
    print(""short"")
elif x>= -2147483648  and x<=2147483647:
    print(""int"")
elif x>=-9223372036854775808 and x<=9223372036854775807:
    print(""long"")
else:
    print(""BigInteger"")",9,8,154,11/18/16 22:03,11,2385,1,8,"[(True, 'byte', 'byte', 211383), (True, 'short', 'short', 211384), (True, 'BigInteger', 'BigInteger', 211385), (True, 'byte', 'byte', 211386), (True, 'byte', 'byte', 211387), (True, 'byte', 'byte', 211388), (True, 'short', 'short', 211389), (True, 'short', 'short', 211390), (True, 'int', 'int', 211391), (True, 'short', 'short', 211392), (True, 'short', 'short', 211393), (True, 'int', 'int', 211394), (True, 'int', 'int', 211395), (True, 'int', 'int', 211396), (True, 'int', 'int', 211397), (True, 'int', 'int', 211398), (True, 'long', 'long', 211399), (True, 'long', 'long', 211400), (True, 'long', 'long', 211401), (True, 'long', 'long', 211402), (True, 'long', 'long', 211403), (True, 'BigInteger', 'BigInteger', 211404), (True, 'BigInteger', 'BigInteger', 211405), (True, 'BigInteger', 'BigInteger', 211406), (True, 'short', 'short', 211407), (True, 'BigInteger', 'BigInteger', 211408), (True, 'BigInteger', 'BigInteger', 211409), (True, 'BigInteger', 'BigInteger', 211410), (True, 'BigInteger', 'BigInteger', 211411), (True, 'long', 'long', 211412), (True, 'BigInteger', 'BigInteger', 211413), (True, 'BigInteger', 'BigInteger', 211414), (True, 'BigInteger', 'BigInteger', 211415), (True, 'BigInteger', 'BigInteger', 211416), (True, 'BigInteger', 'BigInteger', 211417), (True, 'BigInteger', 'BigInteger', 211418), (True, 'BigInteger', 'BigInteger', 211419), (True, 'BigInteger', 'BigInteger', 211420), (True, 'BigInteger', 'BigInteger', 211421), (True, 'BigInteger', 'BigInteger', 211422), (True, 'BigInteger', 'BigInteger', 211423), (True, 'BigInteger', 'BigInteger', 211424), (True, 'BigInteger', 'BigInteger', 211425), (True, 'BigInteger', 'BigInteger', 211426), (True, 'BigInteger', 'BigInteger', 211427), (True, 'BigInteger', 'BigInteger', 211428), (True, 'BigInteger', 'BigInteger', 211429), (True, 'BigInteger', 'BigInteger', 211430), (True, 'BigInteger', 'BigInteger', 211431), (True, 'BigInteger', 'BigInteger', 211432), (True, 'BigInteger', 'BigInteger', 211433), (True, 'BigInteger', 'BigInteger', 211434), (True, 'BigInteger', 'BigInteger', 211435), (True, 'BigInteger', 'BigInteger', 211436), (True, 'BigInteger', 'BigInteger', 211437), (True, 'BigInteger', 'BigInteger', 211438), (True, 'BigInteger', 'BigInteger', 211439), (True, 'BigInteger', 'BigInteger', 211440), (True, 'BigInteger', 'BigInteger', 211441), (True, 'BigInteger', 'BigInteger', 211442), (True, 'BigInteger', 'BigInteger', 211443), (True, 'BigInteger', 'BigInteger', 211444), (True, 'BigInteger', 'BigInteger', 211445), (True, 'BigInteger', 'BigInteger', 211446), (True, 'BigInteger', 'BigInteger', 211447), (True, 'BigInteger', 'BigInteger', 211448), (True, 'BigInteger', 'BigInteger', 211449), (True, 'BigInteger', 'BigInteger', 211450), (True, 'BigInteger', 'BigInteger', 211451), (True, 'BigInteger', 'BigInteger', 211452), (True, 'byte', 'byte', 211453), (True, 'long', 'long', 211454), (True, 'byte', 'byte', 211455), (True, 'long', 'long', 211456), (True, 'long', 'long', 211457), (True, 'long', 'long', 211458), (True, 'long', 'long', 211459), (True, 'long', 'long', 211460), (True, 'int', 'int', 211461), (True, 'int', 'int', 211462), (True, 'int', 'int', 211463), (True, 'int', 'int', 211464), (True, 'long', 'long', 211465), (True, 'long', 'long', 211466), (True, 'long', 'long', 211467), (True, 'long', 'long', 211468), (True, 'byte', 'byte', 211469), (True, 'long', 'long', 211470), (True, 'short', 'short', 211471), (True, 'long', 'long', 211472)]",True,Accecpted,0.780890894440774,0.9097744360902256,False,0.0
2780236,22313207,"x=int(input())
if x>=-128 and x<=127:
    print(""byte"")
elif x>= -32768 and x <=32767:
    print(""short"")
elif x>=-214783648 and x<=214783647:
    print(""int"")
elif x>=-9223372036854775808 and x<=9223372036854775807:
    print(""long"")
else:
    print(""BigInteger"")",9,4,124,11/18/16 22:00,11,2385,2,8,"[(True, 'byte', 'byte', 211383), (True, 'short', 'short', 211384), (True, 'BigInteger', 'BigInteger', 211385), (True, 'byte', 'byte', 211386), (True, 'byte', 'byte', 211387), (True, 'byte', 'byte', 211388), (True, 'short', 'short', 211389), (True, 'short', 'short', 211390), (True, 'int', 'int', 211391), (True, 'short', 'short', 211392), (True, 'short', 'short', 211393), (True, 'int', 'int', 211394), (True, 'int', 'int', 211395), (False, 'long', 'int', 211396), (False, 'long', 'int', 211397), (False, 'long', 'int', 211398), (True, 'long', 'long', 211399), (True, 'long', 'long', 211400), (True, 'long', 'long', 211401), (True, 'long', 'long', 211402), (True, 'long', 'long', 211403), (True, 'BigInteger', 'BigInteger', 211404), (True, 'BigInteger', 'BigInteger', 211405), (True, 'BigInteger', 'BigInteger', 211406), (True, 'short', 'short', 211407), (True, 'BigInteger', 'BigInteger', 211408), (True, 'BigInteger', 'BigInteger', 211409), (True, 'BigInteger', 'BigInteger', 211410), (True, 'BigInteger', 'BigInteger', 211411), (True, 'long', 'long', 211412), (True, 'BigInteger', 'BigInteger', 211413), (True, 'BigInteger', 'BigInteger', 211414), (True, 'BigInteger', 'BigInteger', 211415), (True, 'BigInteger', 'BigInteger', 211416), (True, 'BigInteger', 'BigInteger', 211417), (True, 'BigInteger', 'BigInteger', 211418), (True, 'BigInteger', 'BigInteger', 211419), (True, 'BigInteger', 'BigInteger', 211420), (True, 'BigInteger', 'BigInteger', 211421), (True, 'BigInteger', 'BigInteger', 211422), (True, 'BigInteger', 'BigInteger', 211423), (True, 'BigInteger', 'BigInteger', 211424), (True, 'BigInteger', 'BigInteger', 211425), (True, 'BigInteger', 'BigInteger', 211426), (True, 'BigInteger', 'BigInteger', 211427), (True, 'BigInteger', 'BigInteger', 211428), (True, 'BigInteger', 'BigInteger', 211429), (True, 'BigInteger', 'BigInteger', 211430), (True, 'BigInteger', 'BigInteger', 211431), (True, 'BigInteger', 'BigInteger', 211432), (True, 'BigInteger', 'BigInteger', 211433), (True, 'BigInteger', 'BigInteger', 211434), (True, 'BigInteger', 'BigInteger', 211435), (True, 'BigInteger', 'BigInteger', 211436), (True, 'BigInteger', 'BigInteger', 211437), (True, 'BigInteger', 'BigInteger', 211438), (True, 'BigInteger', 'BigInteger', 211439), (True, 'BigInteger', 'BigInteger', 211440), (True, 'BigInteger', 'BigInteger', 211441), (True, 'BigInteger', 'BigInteger', 211442), (True, 'BigInteger', 'BigInteger', 211443), (True, 'BigInteger', 'BigInteger', 211444), (True, 'BigInteger', 'BigInteger', 211445), (True, 'BigInteger', 'BigInteger', 211446), (True, 'BigInteger', 'BigInteger', 211447), (True, 'BigInteger', 'BigInteger', 211448), (True, 'BigInteger', 'BigInteger', 211449), (True, 'BigInteger', 'BigInteger', 211450), (True, 'BigInteger', 'BigInteger', 211451), (True, 'BigInteger', 'BigInteger', 211452), (True, 'byte', 'byte', 211453), (True, 'long', 'long', 211454), (True, 'byte', 'byte', 211455), (True, 'long', 'long', 211456), (True, 'long', 'long', 211457), (True, 'long', 'long', 211458), (True, 'long', 'long', 211459), (True, 'long', 'long', 211460), (False, 'long', 'int', 211461), (False, 'long', 'int', 211462), (True, 'int', 'int', 211463), (True, 'int', 'int', 211464), (True, 'long', 'long', 211465), (True, 'long', 'long', 211466), (True, 'long', 'long', 211467), (True, 'long', 'long', 211468), (True, 'byte', 'byte', 211469), (True, 'long', 'long', 211470), (True, 'short', 'short', 211471), (True, 'long', 'long', 211472)]",False,Wrong Answer,0.780890894440774,0.9097744360902256,False,0.0555555555555555
518617,28368182,print((2*int(input())+1)//3),11,5440,62,7/8/17 14:51,1,476,1,8,"[(True, '1', '1', 84238), (True, '1', '1', 84239), (True, '2', '2', 84240), (True, '3', '3', 84241), (True, '67', '67', 84242), (True, '67', '67', 84243), (True, '68', '68', 84244), (True, '666666667', '666666667', 84245), (True, '3', '3', 84246), (True, '4', '4', 84247), (True, '666666666', '666666666', 84248), (True, '666666665', '666666665', 84249), (True, '666666665', '666666665', 84250), (True, '666666664', '666666664', 84251), (True, '666666663', '666666663', 84252), (True, '666666663', '666666663', 84253), (True, '666666662', '666666662', 84254), (True, '666666661', '666666661', 84255), (True, '666666661', '666666661', 84256), (True, '667', '667', 84257), (True, '6667', '6667', 84258), (True, '66667', '66667', 84259), (True, '666667', '666667', 84260), (True, '6666667', '6666667', 84261), (True, '66666667', '66666667', 84262), (True, '5', '5', 84263)]",True,Accecpted,0.0,0.9642857142857144,False,0.0
518616,28368141,print((2*int(input())+2)//3),11,4500,31,7/8/17 14:49,1,476,2,8,"[(True, '1', '1', 84238), (False, '2', '1', 84239), (True, '2', '2', 84240), (True, '3', '3', 84241), (True, '67', '67', 84242), (False, '68', '67', 84243), (True, '68', '68', 84244), (True, '666666667', '666666667', 84245), (False, '4', '3', 84246), (True, '4', '4', 84247), (True, '666666666', '666666666', 84248), (False, '666666666', '666666665', 84249), (True, '666666665', '666666665', 84250), (True, '666666664', '666666664', 84251), (False, '666666664', '666666663', 84252), (True, '666666663', '666666663', 84253), (True, '666666662', '666666662', 84254), (False, '666666662', '666666661', 84255), (True, '666666661', '666666661', 84256), (True, '667', '667', 84257), (True, '6667', '6667', 84258), (True, '66667', '66667', 84259), (True, '666667', '666667', 84260), (True, '6666667', '6666667', 84261), (True, '66666667', '66666667', 84262), (True, '5', '5', 84263)]",False,Wrong Answer,0.0,0.9642857142857144,False,0.2307692307692307
554470,27940343,"a,b,c=map(int,input().split())
if c==0 and a==b:exit(print(""YES""))
elif c==0 and a!=b:exit(print(""NO""))
l,r=0,2*10**9
while l<=r:
  mid=(l+r)//2
  s=a+mid*c
  if s==b:exit(print(""YES""))
  elif s>b:
    if c>0:r=mid-1
    else:l=mid+1
  else:
    if c>0:l=mid+1
    else: r=mid-1 
print(""NO"")",11,5408,62,6/21/17 11:06,29,511,1,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (True, 'YES', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (True, 'YES', 'YES', 87956), (True, 'YES', 'YES', 87957), (True, 'YES', 'YES', 87958), (True, 'YES', 'YES', 87959), (True, 'YES', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (True, 'YES', 'YES', 87986), (True, 'YES', 'YES', 87987), (True, 'YES', 'YES', 87988), (True, 'YES', 'YES', 87989), (True, 'YES', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (True, 'YES', 'YES', 88016), (True, 'YES', 'YES', 88017), (True, 'YES', 'YES', 88018), (True, 'YES', 'YES', 88019), (True, 'YES', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (True, 'YES', 'YES', 88046), (True, 'YES', 'YES', 88047), (True, 'YES', 'YES', 88048), (True, 'YES', 'YES', 88049), (True, 'YES', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (True, 'YES', 'YES', 88076), (True, 'YES', 'YES', 88077), (True, 'YES', 'YES', 88078), (True, 'YES', 'YES', 88079), (True, 'YES', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (True, 'YES', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (True, 'YES', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",True,Accecpted,3.0334799735843844e-157,0.3524027459954233,False,0.0
554472,27940475,"a,b,c=map(int,input().split())
if c==0:print(['NO','YES'][a==b])
else:print(['NO','YES'][(b-a)//c>0and(b-a)%c==0])",11,4508,62,6/21/17 11:12,5,511,2,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (False, 'NO', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (False, 'NO', 'YES', 87956), (False, 'NO', 'YES', 87957), (True, 'YES', 'YES', 87958), (False, 'NO', 'YES', 87959), (False, 'NO', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (False, 'NO', 'YES', 87986), (False, 'NO', 'YES', 87987), (True, 'YES', 'YES', 87988), (False, 'NO', 'YES', 87989), (False, 'NO', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (False, 'NO', 'YES', 88016), (False, 'NO', 'YES', 88017), (True, 'YES', 'YES', 88018), (False, 'NO', 'YES', 88019), (False, 'NO', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (False, 'NO', 'YES', 88046), (False, 'NO', 'YES', 88047), (True, 'YES', 'YES', 88048), (False, 'NO', 'YES', 88049), (False, 'NO', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (False, 'NO', 'YES', 88076), (False, 'NO', 'YES', 88077), (True, 'YES', 'YES', 88078), (False, 'NO', 'YES', 88079), (False, 'NO', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (False, 'NO', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (False, 'NO', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",False,Wrong Answer,3.0334799735843844e-157,0.3524027459954233,False,0.1292134831460674
669293,26962721,"t,s,x=map(int,input().split())
if x<t:exit(print('NO'))
print('YES' if (x==t) or(x-t)%s==0 or((x-t-1)%s==0 and (x!=t+1 or s==1)) else 'NO')",11,0,62,5/8/17 21:45,5,624,1,8,"[(True, 'NO', 'NO', 96609), (True, 'YES', 'YES', 96610), (True, 'YES', 'YES', 96611), (True, 'YES', 'YES', 96612), (True, 'NO', 'NO', 96613), (True, 'YES', 'YES', 96614), (True, 'YES', 'YES', 96615), (True, 'NO', 'NO', 96616), (True, 'YES', 'YES', 96617), (True, 'YES', 'YES', 96618), (True, 'NO', 'NO', 96619), (True, 'NO', 'NO', 96620), (True, 'NO', 'NO', 96621), (True, 'NO', 'NO', 96622), (True, 'NO', 'NO', 96623), (True, 'NO', 'NO', 96624), (True, 'NO', 'NO', 96625), (True, 'NO', 'NO', 96626), (True, 'NO', 'NO', 96627), (True, 'NO', 'NO', 96628), (True, 'NO', 'NO', 96629), (True, 'NO', 'NO', 96630), (True, 'NO', 'NO', 96631), (True, 'NO', 'NO', 96632), (True, 'NO', 'NO', 96633), (True, 'NO', 'NO', 96634), (True, 'YES', 'YES', 96635), (True, 'YES', 'YES', 96636), (True, 'YES', 'YES', 96637), (True, 'YES', 'YES', 96638), (True, 'YES', 'YES', 96639), (True, 'YES', 'YES', 96640), (True, 'YES', 'YES', 96641), (True, 'YES', 'YES', 96642), (True, 'YES', 'YES', 96643), (True, 'YES', 'YES', 96644), (True, 'YES', 'YES', 96645), (True, 'YES', 'YES', 96646), (True, 'YES', 'YES', 96647), (True, 'YES', 'YES', 96648), (True, 'YES', 'YES', 96649), (True, 'YES', 'YES', 96650), (True, 'YES', 'YES', 96651), (True, 'YES', 'YES', 96652), (True, 'YES', 'YES', 96653), (True, 'NO', 'NO', 96654), (True, 'YES', 'YES', 96655), (True, 'YES', 'YES', 96656), (True, 'YES', 'YES', 96657), (True, 'NO', 'NO', 96658), (True, 'YES', 'YES', 96659), (True, 'NO', 'NO', 96660), (True, 'YES', 'YES', 96661), (True, 'NO', 'NO', 96662), (True, 'YES', 'YES', 96663), (True, 'NO', 'NO', 96664), (True, 'YES', 'YES', 96665), (True, 'YES', 'YES', 96666), (True, 'NO', 'NO', 96667), (True, 'YES', 'YES', 96668), (True, 'YES', 'YES', 96669), (True, 'NO', 'NO', 96670), (True, 'NO', 'NO', 96671), (True, 'NO', 'NO', 96672), (True, 'NO', 'NO', 96673), (True, 'YES', 'YES', 96674), (True, 'YES', 'YES', 96675), (True, 'NO', 'NO', 96676), (True, 'YES', 'YES', 96677), (True, 'NO', 'NO', 96678), (True, 'NO', 'NO', 96679), (True, 'YES', 'YES', 96680), (True, 'NO', 'NO', 96681), (True, 'YES', 'YES', 96682), (True, 'YES', 'YES', 96683), (True, 'NO', 'NO', 96684), (True, 'NO', 'NO', 96685), (True, 'YES', 'YES', 96686), (True, 'YES', 'YES', 96687), (True, 'NO', 'NO', 96688), (True, 'YES', 'YES', 96689), (True, 'YES', 'YES', 96690), (True, 'YES', 'YES', 96691), (True, 'YES', 'YES', 96692), (True, 'NO', 'NO', 96693), (True, 'YES', 'YES', 96694), (True, 'NO', 'NO', 96695), (True, 'NO', 'NO', 96696), (True, 'NO', 'NO', 96697), (True, 'YES', 'YES', 96698), (True, 'NO', 'NO', 96699), (True, 'NO', 'NO', 96700), (True, 'NO', 'NO', 96701), (True, 'YES', 'YES', 96702), (True, 'YES', 'YES', 96703)]",True,Accecpted,0.401391641510691,0.8514056224899599,False,0.0
669291,26962708,"t,s,x=map(int,input().split())
print('YES' if (x==t) or(x-t)%s==0 or((x-t-1)%s==0 and x!=t+1) else 'NO')",11,4,46,5/8/17 21:43,3,624,2,8,"[(True, 'NO', 'NO', 96609), (True, 'YES', 'YES', 96610), (True, 'YES', 'YES', 96611), (True, 'YES', 'YES', 96612), (True, 'NO', 'NO', 96613), (True, 'YES', 'YES', 96614), (True, 'YES', 'YES', 96615), (False, 'YES', 'NO', 96616), (True, 'YES', 'YES', 96617), (True, 'YES', 'YES', 96618), (True, 'NO', 'NO', 96619), (True, 'NO', 'NO', 96620), (True, 'NO', 'NO', 96621), (True, 'NO', 'NO', 96622), (True, 'NO', 'NO', 96623), (True, 'NO', 'NO', 96624), (True, 'NO', 'NO', 96625), (True, 'NO', 'NO', 96626), (True, 'NO', 'NO', 96627), (True, 'NO', 'NO', 96628), (True, 'NO', 'NO', 96629), (True, 'NO', 'NO', 96630), (True, 'NO', 'NO', 96631), (True, 'NO', 'NO', 96632), (True, 'NO', 'NO', 96633), (True, 'NO', 'NO', 96634), (True, 'YES', 'YES', 96635), (True, 'YES', 'YES', 96636), (True, 'YES', 'YES', 96637), (True, 'YES', 'YES', 96638), (True, 'YES', 'YES', 96639), (True, 'YES', 'YES', 96640), (True, 'YES', 'YES', 96641), (True, 'YES', 'YES', 96642), (True, 'YES', 'YES', 96643), (True, 'YES', 'YES', 96644), (True, 'YES', 'YES', 96645), (True, 'YES', 'YES', 96646), (True, 'YES', 'YES', 96647), (True, 'YES', 'YES', 96648), (True, 'YES', 'YES', 96649), (True, 'YES', 'YES', 96650), (True, 'YES', 'YES', 96651), (True, 'YES', 'YES', 96652), (True, 'YES', 'YES', 96653), (True, 'NO', 'NO', 96654), (True, 'YES', 'YES', 96655), (True, 'YES', 'YES', 96656), (True, 'YES', 'YES', 96657), (True, 'NO', 'NO', 96658), (True, 'YES', 'YES', 96659), (True, 'NO', 'NO', 96660), (True, 'YES', 'YES', 96661), (True, 'NO', 'NO', 96662), (True, 'YES', 'YES', 96663), (False, 'YES', 'NO', 96664), (True, 'YES', 'YES', 96665), (True, 'YES', 'YES', 96666), (True, 'NO', 'NO', 96667), (True, 'YES', 'YES', 96668), (True, 'YES', 'YES', 96669), (True, 'NO', 'NO', 96670), (True, 'NO', 'NO', 96671), (True, 'NO', 'NO', 96672), (True, 'NO', 'NO', 96673), (True, 'YES', 'YES', 96674), (True, 'YES', 'YES', 96675), (True, 'NO', 'NO', 96676), (True, 'YES', 'YES', 96677), (False, 'YES', 'NO', 96678), (True, 'NO', 'NO', 96679), (True, 'YES', 'YES', 96680), (False, 'YES', 'NO', 96681), (True, 'YES', 'YES', 96682), (True, 'YES', 'YES', 96683), (True, 'NO', 'NO', 96684), (True, 'NO', 'NO', 96685), (True, 'YES', 'YES', 96686), (True, 'YES', 'YES', 96687), (True, 'NO', 'NO', 96688), (True, 'YES', 'YES', 96689), (True, 'YES', 'YES', 96690), (True, 'YES', 'YES', 96691), (True, 'YES', 'YES', 96692), (True, 'NO', 'NO', 96693), (True, 'YES', 'YES', 96694), (True, 'NO', 'NO', 96695), (True, 'NO', 'NO', 96696), (True, 'NO', 'NO', 96697), (True, 'YES', 'YES', 96698), (True, 'NO', 'NO', 96699), (True, 'NO', 'NO', 96700), (False, 'YES', 'NO', 96701), (True, 'YES', 'YES', 96702), (True, 'YES', 'YES', 96703)]",False,Wrong Answer,0.401391641510691,0.8514056224899599,False,0.0526315789473684
1384157,28264929,"from math import*
n,R,r=map(int,input().split())
if n<3:exit(print(['NO','YES'][n*r<=R+1e-9]))
theta = (pi/180*360/n)
theta2 = ((180-(360/n))/2)
a=2*r+2*r*cos(pi/180*theta2)
b = a*sin((pi-theta)/2)/sin(theta)
print(['NO','YES'][b<=R+1e-9])",11,5432,184,7/4/17 0:13,8,1237,1,8,"[(True, 'YES', 'YES', 144713), (True, 'NO', 'NO', 144714), (True, 'YES', 'YES', 144715), (True, 'NO', 'NO', 144716), (True, 'NO', 'NO', 144717), (True, 'YES', 'YES', 144718), (True, 'NO', 'NO', 144719), (True, 'YES', 'YES', 144720), (True, 'YES', 'YES', 144721), (True, 'YES', 'YES', 144722), (True, 'YES', 'YES', 144723), (True, 'NO', 'NO', 144724), (True, 'NO', 'NO', 144725), (True, 'YES', 'YES', 144726), (True, 'NO', 'NO', 144727), (True, 'YES', 'YES', 144728), (True, 'NO', 'NO', 144729), (True, 'YES', 'YES', 144730), (True, 'NO', 'NO', 144731), (True, 'YES', 'YES', 144732), (True, 'NO', 'NO', 144733), (True, 'YES', 'YES', 144734), (True, 'NO', 'NO', 144735), (True, 'YES', 'YES', 144736), (True, 'NO', 'NO', 144737), (True, 'NO', 'NO', 144738), (True, 'NO', 'NO', 144739), (True, 'YES', 'YES', 144740), (True, 'YES', 'YES', 144741), (True, 'NO', 'NO', 144742), (True, 'NO', 'NO', 144743), (True, 'NO', 'NO', 144744), (True, 'NO', 'NO', 144745), (True, 'NO', 'NO', 144746), (True, 'YES', 'YES', 144747), (True, 'YES', 'YES', 144748), (True, 'YES', 'YES', 144749), (True, 'YES', 'YES', 144750), (True, 'NO', 'NO', 144751), (True, 'NO', 'NO', 144752), (True, 'NO', 'NO', 144753), (True, 'NO', 'NO', 144754), (True, 'NO', 'NO', 144755), (True, 'NO', 'NO', 144756), (True, 'NO', 'NO', 144757), (True, 'NO', 'NO', 144758)]",True,Accecpted,4.324223740015325e-232,0.2964824120603015,False,0.0
1384154,28263509,"x1,y1,r1=map(int,input().split())
x2,y2,r2=map(int,input().split())
d=((x1-x2)**2+(y1-y2)**2)**0.5
x=(d-r1-r2)/2
print(x if x>=0 else -x-min(r1,r2))",11,4500,92,7/3/17 22:28,5,1237,5,8,"[(False, '', 'YES', 144713), (False, '', 'NO', 144714), (False, '', 'YES', 144715), (False, '', 'NO', 144716), (False, '', 'NO', 144717), (False, '', 'YES', 144718), (False, '', 'NO', 144719), (False, '', 'YES', 144720), (False, '', 'YES', 144721), (False, '', 'YES', 144722), (False, '', 'YES', 144723), (False, '', 'NO', 144724), (False, '', 'NO', 144725), (False, '', 'YES', 144726), (False, '', 'NO', 144727), (False, '', 'YES', 144728), (False, '', 'NO', 144729), (False, '', 'YES', 144730), (False, '', 'NO', 144731), (False, '', 'YES', 144732), (False, '', 'NO', 144733), (False, '', 'YES', 144734), (False, '', 'NO', 144735), (False, '', 'YES', 144736), (False, '', 'NO', 144737), (False, '', 'NO', 144738), (False, '', 'NO', 144739), (False, '', 'YES', 144740), (False, '', 'YES', 144741), (False, '', 'NO', 144742), (False, '', 'NO', 144743), (False, '', 'NO', 144744), (False, '', 'NO', 144745), (False, '', 'NO', 144746), (False, '', 'YES', 144747), (False, '', 'YES', 144748), (False, '', 'YES', 144749), (False, '', 'YES', 144750), (False, '', 'NO', 144751), (False, '', 'NO', 144752), (False, '', 'NO', 144753), (False, '', 'NO', 144754), (False, '', 'NO', 144755), (False, '', 'NO', 144756), (False, '', 'NO', 144757), (False, '', 'NO', 144758)]",False,Runtime Error,4.324223740015325e-232,0.2964824120603015,False,1.0
2711968,24981836,"n,a,b,M,I=int(input()),1,1,1000000007,1000000005
for i in range(1,n):
  a=a*i%M
a=pow(a,I,M)
for i in range(n+1,n*2):
  b=b*i%M
print(((2*a*b)%M-n)%M)",11,4520,248,2/24/17 16:04,7,2330,1,8,"[(True, '4', '4', 28985), (True, '17', '17', 28986), (True, '2704144', '2704144', 28987), (True, '345263536', '345263536', 28988), (True, '846527841', '846527841', 28989), (True, '529476652', '529476652', 28990), (True, '358906180', '358906180', 28991), (True, '917151454', '917151454', 28992), (True, '769030659', '769030659', 28993), (True, '105516606', '105516606', 28994), (True, '121470312', '121470312', 28995), (True, '66828054', '66828054', 28996), (True, '72474738', '72474738', 28997), (True, '13198519', '13198519', 28998), (True, '910090838', '910090838', 28999), (True, '80236682', '80236682', 29000), (True, '649466350', '649466350', 29001), (True, '150738377', '150738377', 29002), (True, '671813603', '671813603', 29003), (True, '188470824', '188470824', 29004), (True, '68720508', '68720508', 29005), (True, '917915735', '917915735', 29006), (True, '540890446', '540890446', 29007), (True, '836170548', '836170548', 29008), (True, '407412105', '407412105', 29009), (True, '124840329', '124840329', 29010), (True, '448912826', '448912826', 29011), (True, '474688044', '474688044', 29012), (True, '895032755', '895032755', 29013), (True, '502088741', '502088741', 29014), (True, '228321485', '228321485', 29015), (True, '729228388', '729228388', 29016), (True, '466136228', '466136228', 29017), (True, '200164009', '200164009', 29018), (True, '926716958', '926716958', 29019), (True, '457356022', '457356022', 29020), (True, '287683730', '287683730', 29021), (True, '44271116', '44271116', 29022), (True, '568733613', '568733613', 29023), (True, '414342728', '414342728', 29024), (True, '487795363', '487795363', 29025), (True, '657147284', '657147284', 29026), (True, '891210641', '891210641', 29027), (True, '990883671', '990883671', 29028), (True, '385361995', '385361995', 29029), (True, '54476064', '54476064', 29030), (True, '75760676', '75760676', 29031), (True, '154508332', '154508332', 29032), (True, '469586508', '469586508', 29033), (True, '564997335', '564997335', 29034), (True, '879367333', '879367333', 29035), (True, '690990293', '690990293', 29036), (True, '37611412', '37611412', 29037), (True, '1', '1', 29038)]",True,Accecpted,0.0,0.1940298507462686,False,0.0
2711956,24915862,"from math import factorial as f
k=int(input())
n=2*k-1
ans=2*(f(n))//(f(k)*f(n-k))
print((ans-k)%1000000007)",11,5860,2000,2/23/17 15:29,5,2330,3,8,"[(True, '4', '4', 28985), (True, '17', '17', 28986), (True, '2704144', '2704144', 28987), (True, '345263536', '345263536', 28988), (True, '846527841', '846527841', 28989), (True, '529476652', '529476652', 28990), (True, '358906180', '358906180', 28991), (True, '917151454', '917151454', 28992), (True, '769030659', '769030659', 28993), (True, '105516606', '105516606', 28994), (True, '121470312', '121470312', 28995), (True, '66828054', '66828054', 28996), (True, '72474738', '72474738', 28997), (True, '13198519', '13198519', 28998), (True, '910090838', '910090838', 28999), (True, '80236682', '80236682', 29000), (True, '649466350', '649466350', 29001), (True, '150738377', '150738377', 29002), (True, '671813603', '671813603', 29003), (True, '188470824', '188470824', 29004), (True, '68720508', '68720508', 29005), (True, '917915735', '917915735', 29006), (True, '540890446', '540890446', 29007), (True, '836170548', '836170548', 29008), (True, '407412105', '407412105', 29009), (True, '124840329', '124840329', 29010), (True, '448912826', '448912826', 29011), (True, '474688044', '474688044', 29012), (True, '895032755', '895032755', 29013), (True, '502088741', '502088741', 29014), (True, '228321485', '228321485', 29015), (True, '729228388', '729228388', 29016), (True, '466136228', '466136228', 29017), (True, '200164009', '200164009', 29018), (True, '926716958', '926716958', 29019), (True, '457356022', '457356022', 29020), (True, '287683730', '287683730', 29021), (True, '44271116', '44271116', 29022), (True, '568733613', '568733613', 29023), (True, '414342728', '414342728', 29024), (True, '487795363', '487795363', 29025), (True, '657147284', '657147284', 29026), (True, '891210641', '891210641', 29027), (True, '990883671', '990883671', 29028), (True, '385361995', '385361995', 29029), (True, '54476064', '54476064', 29030), (True, '75760676', '75760676', 29031), (True, '154508332', '154508332', 29032), (True, '469586508', '469586508', 29033), (True, '564997335', '564997335', 29034), (True, '879367333', '879367333', 29035), (True, '690990293', '690990293', 29036), (True, '37611412', '37611412', 29037), (True, '1', '1', 29038)]",True,Time Limit,0.0,0.1940298507462686,False,0.0
2955578,25185904,"n=int(input())
def S(x):
  if x>n:return 0
  return 1+S(x*10)+S(x*10+1)
print(S(1))",11,4516,124,3/3/17 22:24,5,2521,1,8,"[(True, '2', '2', 218158), (True, '3', '3', 218159), (True, '3', '3', 218160), (True, '3', '3', 218161), (True, '4', '4', 218162), (True, '5', '5', 218163), (True, '5', '5', 218164), (True, '7', '7', 218165), (True, '7', '7', 218166), (True, '7', '7', 218167), (True, '31', '31', 218168), (True, '1', '1', 218169), (True, '83', '83', 218170), (True, '511', '511', 218171), (True, '512', '512', 218172), (True, '511', '511', 218173), (True, '511', '511', 218174), (True, '341', '341', 218175), (True, '511', '511', 218176), (True, '383', '383', 218177), (True, '511', '511', 218178), (True, '511', '511', 218179), (True, '1', '1', 218180), (True, '511', '511', 218181), (True, '1', '1', 218182), (True, '1', '1', 218183), (True, '1', '1', 218184), (True, '3', '3', 218185), (True, '3', '3', 218186), (True, '3', '3', 218187), (True, '351', '351', 218188), (True, '484', '484', 218189), (True, '437', '437', 218190), (True, '313', '313', 218191), (True, '36', '36', 218192), (True, '421', '421', 218193)]",True,Accecpted,0.0,0.2533333333333333,False,0.0
2955577,25185738,"import math
print(int(math.floor(math.log10(int(input())))+1))",11,4464,62,3/3/17 22:17,2,2521,2,8,"[(True, '2', '2', 218158), (False, '2', '3', 218159), (False, '2', '3', 218160), (False, '2', '3', 218161), (False, '3', '4', 218162), (False, '3', '5', 218163), (False, '3', '5', 218164), (False, '3', '7', 218165), (False, '3', '7', 218166), (False, '3', '7', 218167), (False, '5', '31', 218168), (True, '1', '1', 218169), (False, '7', '83', 218170), (False, '9', '511', 218171), (False, '10', '512', 218172), (False, '9', '511', 218173), (False, '9', '511', 218174), (False, '9', '341', 218175), (False, '9', '511', 218176), (False, '9', '383', 218177), (False, '9', '511', 218178), (False, '9', '511', 218179), (True, '1', '1', 218180), (False, '9', '511', 218181), (True, '1', '1', 218182), (True, '1', '1', 218183), (True, '1', '1', 218184), (False, '2', '3', 218185), (False, '2', '3', 218186), (False, '2', '3', 218187), (False, '9', '351', 218188), (False, '9', '484', 218189), (False, '9', '437', 218190), (False, '9', '313', 218191), (False, '6', '36', 218192), (False, '9', '421', 218193)]",False,Wrong Answer,0.0,0.2533333333333333,False,0.8333333333333334
3198286,26151530,"n=int(input())
a=""""
if n%2 and n>=3:n-=3;a+='7'
while n>0:n-=2;a+='1'
print(a)",11,5468,93,4/5/17 19:39,9,2742,1,8,"[(True, '1', '1', 231679), (True, '7', '7', 231680), (True, '11', '11', 231681), (True, '71', '71', 231682), (True, '111', '111', 231683), (True, '7111', '7111', 231689), (True, '111111111111111111111111111111111111111111111111111111111111111111111111111111', '111111111111111111111111111111111111111111111111111111111111111111111111111111', 231693), (True, '7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111', '7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111', 231694)]",True,Accecpted,6.227170448085464e-155,0.8131868131868132,False,0.0
3198169,26151331,"n=int(input())
a=""""
while(n-3>=0 and n-3!=1):a+='7';n-=3
while(n>0):n-=2;a+='1'
print(a)",11,4520,61,4/5/17 19:37,9,2742,2,8,"[(True, '1', '1', 231679), (True, '7', '7', 231680), (True, '11', '11', 231681), (True, '71', '71', 231682), (False, '77', '111', 231683), (False, '777', '7111', 231689), (False, '7777777777777777777777777777777777777777777777777777', '111111111111111111111111111111111111111111111111111111111111111111111111111111', 231693), (False, '7777777777777777777777777777777777777777777777777777777777777777777777777777777777777', '7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111', 231694)]",False,Wrong Answer,6.227170448085464e-155,0.8131868131868132,False,0.5
189153,26188716,"a=int(input())
if a<6 or a%2==1:
    print(0)
else:
    print((a-2)//4)",14,5452,62,4/7/17 12:34,5,153,1,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (True, '0', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (True, '499999999', '499999999', 60607), (True, '481176017', '481176017', 60608), (True, '18435146', '18435146', 60609), (True, '481272204', '481272204', 60610), (True, '148267747', '148267747', 60611), (True, '481368392', '481368392', 60612), (True, '157372546', '157372546', 60613), (True, '495162277', '495162277', 60614), (True, '9165330', '9165330', 60615), (True, '0', '0', 60616), (True, '17801758', '17801758', 60617), (True, '439394348', '439394348', 60618), (True, '42076323', '42076323', 60619), (True, '483724055', '483724055', 60620), (True, '74287271', '74287271', 60621), (True, '474500408', '474500408', 60622), (True, '44102424', '44102424', 60623), (True, '468256380', '468256380', 60624), (True, '1428690', '1428690', 60625), (True, '457387797', '457387797', 60626), (True, '4067359', '4067359', 60627), (True, '415820847', '415820847', 60628), (True, '0', '0', 60629), (True, '491836400', '491836400', 60630), (True, '213499', '213499', 60631), (True, '498971656', '498971656', 60632), (True, '0', '0', 60633), (True, '499048408', '499048408', 60634), (True, '2401294', '2401294', 60635), (True, '499114934', '499114934', 60636), (True, '8172986', '8172986', 60637), (True, '493975826', '493975826', 60638), (True, '494159283', '494159283', 60639), (True, '7450759', '7450759', 60640), (True, '494494922', '494494922', 60641), (True, '494648833', '494648833', 60642), (True, '6844835', '6844835', 60643), (True, '494932477', '494932477', 60644), (True, '495063444', '495063444', 60645), (True, '495187895', '495187895', 60646), (True, '13306219', '13306219', 60647), (True, '0', '0', 60648), (True, '0', '0', 60649), (True, '1', '1', 60650), (True, '0', '0', 60651), (True, '2', '2', 60652), (True, '0', '0', 60653), (True, '2', '2', 60654), (True, '0', '0', 60655), (True, '3', '3', 60656), (True, '0', '0', 60657), (True, '3', '3', 60658), (True, '0', '0', 60659), (True, '4', '4', 60660), (True, '0', '0', 60661), (True, '0', '0', 60662), (True, '5', '5', 60663), (True, '0', '0', 60664), (True, '5', '5', 60665), (True, '0', '0', 60666), (True, '6', '6', 60667), (True, '0', '0', 60668), (True, '6', '6', 60669), (True, '0', '0', 60670), (True, '7', '7', 60671), (True, '0', '0', 60672), (True, '0', '0', 60673), (True, '0', '0', 60674), (True, '0', '0', 60675), (True, '0', '0', 60676)]",True,Accecpted,3.2059459724048004e-155,0.3168316831683168,False,0.0
188719,24747361,"def pasha(m,n,x):
    m = m + 2    
    if m >= n:
        print(x)
    else:
        x = x + 1
        pasha(m,n,x)

z = int(input())

m = 0
if z%2 != 0:
    print(0)
else:
    x = 0
    n = z/2
    pasha(m,n,x)",14,5080,187,2/18/17 2:13,17,153,5,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (True, '0', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (False, '', '499999999', 60607), (False, '', '481176017', 60608), (False, '', '18435146', 60609), (False, '', '481272204', 60610), (False, '', '148267747', 60611), (False, '', '481368392', 60612), (False, '', '157372546', 60613), (False, '', '495162277', 60614), (False, '', '9165330', 60615), (True, '0', '0', 60616), (False, '', '17801758', 60617), (False, '', '439394348', 60618), (False, '', '42076323', 60619), (False, '', '483724055', 60620), (False, '', '74287271', 60621), (False, '', '474500408', 60622), (False, '', '44102424', 60623), (False, '', '468256380', 60624), (False, '', '1428690', 60625), (False, '', '457387797', 60626), (False, '', '4067359', 60627), (False, '', '415820847', 60628), (True, '0', '0', 60629), (False, '', '491836400', 60630), (False, '', '213499', 60631), (False, '', '498971656', 60632), (True, '0', '0', 60633), (False, '', '499048408', 60634), (False, '', '2401294', 60635), (False, '', '499114934', 60636), (False, '', '8172986', 60637), (False, '', '493975826', 60638), (False, '', '494159283', 60639), (False, '', '7450759', 60640), (False, '', '494494922', 60641), (False, '', '494648833', 60642), (False, '', '6844835', 60643), (False, '', '494932477', 60644), (False, '', '495063444', 60645), (False, '', '495187895', 60646), (False, '', '13306219', 60647), (True, '0', '0', 60648), (True, '0', '0', 60649), (True, '1', '1', 60650), (True, '0', '0', 60651), (True, '2', '2', 60652), (True, '0', '0', 60653), (True, '2', '2', 60654), (True, '0', '0', 60655), (True, '3', '3', 60656), (True, '0', '0', 60657), (True, '3', '3', 60658), (True, '0', '0', 60659), (True, '4', '4', 60660), (True, '0', '0', 60661), (True, '0', '0', 60662), (True, '5', '5', 60663), (True, '0', '0', 60664), (True, '5', '5', 60665), (True, '0', '0', 60666), (True, '6', '6', 60667), (True, '0', '0', 60668), (True, '6', '6', 60669), (True, '0', '0', 60670), (True, '7', '7', 60671), (True, '0', '0', 60672), (True, '0', '0', 60673), (True, '0', '0', 60674), (True, '0', '0', 60675), (True, '0', '0', 60676)]",False,Runtime Error,3.2059459724048004e-155,0.3168316831683168,False,0.5
212321,24107943,"#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import math

txt=input()
nums=txt.split("" "")
l=int(nums[0])
r=int(nums[1])
k=int(nums[2])
q=1
while q<l:
	q=q*k
if q>r:
	print(""-1"", end="""")
	exit()
print(""%d"" % q, end="""")
q=q*k
while q<=r:
	print("" %d"" % q, end="""")
	q=q*k",14,4516,92,1/25/17 12:04,21,178,1,8,"[(True, '1 2 4 8', '1 2 4 8', 62672), (True, '-1', '-1', 62673), (True, '28554 815330916', '28554 815330916', 62674), (True, '313325401', '313325401', 62675), (True, '97969 30664297 9597924961', '97969 30664297 9597924961', 62676), (True, '116964 40001688 13680577296', '116964 40001688 13680577296', 62677), (True, '10000 100000 1000000 10000000 100000000 1000000000 10000000000', '10000 100000 1000000 10000000 100000000 1000000000 10000000000', 62678), (True, '79507 3418801 147008443 6321363049', '79507 3418801 147008443 6321363049', 62679), (True, '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', 62680), (True, '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', 62681), (True, '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', 62683), (True, '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', 62684), (True, '5 25', '5 25', 62685), (True, '1 90', '1 90', 62686), (True, '4624 314432 21381376 1453933568 98867482624', '4624 314432 21381376 1453933568 98867482624', 62687), (True, '2809 148877 7890481 418195493 22164361129', '2809 148877 7890481 418195493 22164361129', 62688), (True, '198765', '198765', 62689), (True, '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', 62690), (True, '-1', '-1', 62691), (True, '1', '1', 62692), (True, '-1', '-1', 62693), (True, '-1', '-1', 62694), (True, '-1', '-1', 62695), (True, '-1', '-1', 62696), (True, '-1', '-1', 62697), (True, '-1', '-1', 62698), (True, '10', '10', 62699), (True, '-1', '-1', 62700), (True, '1 1000000000 1000000000000000000', '1 1000000000 1000000000000000000', 62701), (True, '1000000000000000000', '1000000000000000000', 62702), (True, '1000000000 1000000000000000000', '1000000000 1000000000000000000', 62703), (True, '1', '1', 62704), (True, '1 1000000000', '1 1000000000', 62705), (True, '1 999999990 999999980000000100', '1 999999990 999999980000000100', 62706), (True, '1 999999984 999999968000000256', '1 999999984 999999968000000256', 62707), (True, '1 324325 105186705625 34114678301828125', '1 324325 105186705625 34114678301828125', 62708), (True, '1 999999523 999999046000227529', '1 999999523 999999046000227529', 62709), (True, '1 3 9 27 81 243', '1 3 9 27 81 243', 62710), (True, '326816522793383797', '326816522793383797', 62711), (True, '1 690852001 477276487285704001', '1 690852001 477276487285704001', 62712), (True, '1 918745157 844092663510954649', '1 918745157 844092663510954649', 62713), (True, '1 131299843 17239648771824649', '1 131299843 17239648771824649', 62714), (True, '-1', '-1', 62715)]",True,Accecpted,0.7876123953250151,0.9948542024013722,False,0.0
212188,24105897,"#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import math

txt=input()
nums=txt.split("" "")
l=int(nums[0])
r=int(nums[1])
k=int(nums[2])
q=1
while q<=l:
	q=q*k
if q>=r:
	print(""-1"", end="""")
	exit()
print(""%d"" % q, end="""")
q=q*k
while q<r:
	print("" %d"" % q, end="""")
	q=q*k",14,4488,30,1/25/17 9:58,21,178,2,8,"[(False, '2 4 8', '1 2 4 8', 62672), (True, '-1', '-1', 62673), (True, '28554 815330916', '28554 815330916', 62674), (True, '313325401', '313325401', 62675), (True, '97969 30664297 9597924961', '97969 30664297 9597924961', 62676), (True, '116964 40001688 13680577296', '116964 40001688 13680577296', 62677), (True, '10000 100000 1000000 10000000 100000000 1000000000 10000000000', '10000 100000 1000000 10000000 100000000 1000000000 10000000000', 62678), (True, '79507 3418801 147008443 6321363049', '79507 3418801 147008443 6321363049', 62679), (True, '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', 62680), (True, '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', 62681), (True, '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', 62683), (False, '2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', 62684), (False, '-1', '5 25', 62685), (False, '-1', '1 90', 62686), (True, '4624 314432 21381376 1453933568 98867482624', '4624 314432 21381376 1453933568 98867482624', 62687), (True, '2809 148877 7890481 418195493 22164361129', '2809 148877 7890481 418195493 22164361129', 62688), (False, '-1', '198765', 62689), (True, '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', 62690), (True, '-1', '-1', 62691), (False, '-1', '1', 62692), (True, '-1', '-1', 62693), (True, '-1', '-1', 62694), (True, '-1', '-1', 62695), (True, '-1', '-1', 62696), (True, '-1', '-1', 62697), (True, '-1', '-1', 62698), (False, '-1', '10', 62699), (True, '-1', '-1', 62700), (False, '1000000000', '1 1000000000 1000000000000000000', 62701), (False, '-1', '1000000000000000000', 62702), (False, '-1', '1000000000 1000000000000000000', 62703), (False, '-1', '1', 62704), (False, '1000000000', '1 1000000000', 62705), (False, '999999990 999999980000000100', '1 999999990 999999980000000100', 62706), (False, '999999984 999999968000000256', '1 999999984 999999968000000256', 62707), (False, '324325 105186705625 34114678301828125', '1 324325 105186705625 34114678301828125', 62708), (False, '999999523 999999046000227529', '1 999999523 999999046000227529', 62709), (False, '3 9 27 81', '1 3 9 27 81 243', 62710), (True, '326816522793383797', '326816522793383797', 62711), (False, '690852001 477276487285704001', '1 690852001 477276487285704001', 62712), (False, '918745157 844092663510954649', '1 918745157 844092663510954649', 62713), (False, '131299843 17239648771824649', '1 131299843 17239648771824649', 62714), (True, '-1', '-1', 62715)]",False,Wrong Answer,0.7876123953250151,0.9948542024013722,False,0.4651162790697674
831407,25116941,"x = list(map(int, input().strip().split()))
print(abs(min(x)-max(x)))",14,4528,62,3/1/17 10:21,2,764,1,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (True, '99', '99', 109990), (True, '99', '99', 109991), (True, '99', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (True, '85', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (True, '88', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (True, '67', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (True, '67', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (True, '8', '8', 110026), (True, '10', '10', 110027), (True, '49', '49', 110028), (True, '10', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (True, '99', '99', 110034), (True, '5', '5', 110035)]",True,Accecpted,0.0,0.4341085271317829,False,0.0
836311,28976300,"a=input().split()
b=int(max(a))
c=int(min(a))
print(b-c)",14,4500,62,7/29/17 21:28,4,764,2,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (False, '3', '99', 109990), (False, '90', '99', 109991), (False, '44', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (False, '17', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (False, '72', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (False, '-27', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (False, '-41', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (False, '-4', '8', 110026), (False, '-5', '10', 110027), (True, '49', '49', 110028), (False, '-5', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (False, '1', '99', 110034), (True, '5', '5', 110035)]",False,Wrong Answer,0.0,0.4341085271317829,False,0.2291666666666666
938809,25336794,"import sys
n = int(sys.stdin.readline())
a = 1378
#for i in range(1,50):
#	print str(pow(a,i))[-1:]

#The exponential repeats very 4 exponents	giving (8,4,2,6)
endVals = [ 8, 4, 2, 6]

if( n != 0 ):
	print(endVals[n%4-1])
else :
	print(1)",14,4516,62,3/8/17 11:31,13,868,1,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (True, '1', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",True,Accecpted,5.5609898985171876e-232,0.25,False,0.0
939103,25444593,"N = int(input())

if (N % 5 == 0):
    print(8)
elif (N % 5 == 1):
    print(4)
elif(N % 5 == 2):
    print(2)
elif(N % 5 == 3):
    print(6)",14,4516,31,3/13/17 2:04,10,868,2,8,"[(False, '4', '8', 5205), (False, '2', '4', 5206), (False, '8', '6', 5207), (False, '6', '2', 5208), (False, '', '6', 5209), (False, '8', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (False, '', '2', 5213), (False, '6', '4', 5214), (False, '6', '4', 5215), (False, '6', '4', 5216), (False, '6', '4', 5217), (False, '2', '8', 5218), (False, '4', '8', 5219), (False, '8', '1', 5220), (False, '', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (False, '', '8', 5224), (False, '8', '4', 5225), (False, '4', '2', 5226), (False, '2', '6', 5227), (False, '6', '8', 5228), (False, '', '4', 5229), (False, '8', '2', 5230), (False, '4', '6', 5231), (False, '4', '6', 5232), (False, '8', '2', 5233), (False, '', '4', 5234)]",False,Wrong Answer,5.5609898985171876e-232,0.25,False,0.8666666666666667
1040249,24214254,"hobs, pillows, frodo = input().split()
hobs, pillows, frodo = int(hobs), int(pillows), int(frodo)
turn = 0
left = frodo
right = frodo
pilCount = 1
pillows-=hobs

while True:
     if left < 1 and right > hobs:
          pilCount+=pillows//hobs
          break
     elif left < 1:
          pillows-=(right)
     elif right > hobs:
          pillows-=(hobs-left+1)
     else:
          pillows-=(turn*2+1)

     if pillows < 0:
          break
     left-=1
     right+=1
     pilCount+=1
     turn+=1
     
print(pilCount)",14,4516,93,1/28/17 6:50,27,966,1,8,"[(True, '2', '2', 125492), (True, '4', '4', 125493), (True, '3', '3', 125494), (True, '1', '1', 125495), (True, '1', '1', 125496), (True, '1000000000', '1000000000', 125497), (True, '10000034', '10000034', 125498), (True, '1', '1', 125499), (True, '10001', '10001', 125500), (True, '1', '1', 125501), (True, '1', '1', 125502), (True, '1', '1', 125503), (True, '1', '1', 125504), (True, '10001', '10001', 125505), (True, '1115', '1115', 125506), (True, '10002', '10002', 125507), (True, '112', '112', 125508), (True, '25', '25', 125509), (True, '46', '46', 125510), (True, '31', '31', 125511), (True, '117', '117', 125512), (True, '21965', '21965', 125513), (True, '147', '147', 125514), (True, '1465', '1465', 125515), (True, '1', '1', 125516), (True, '9999778', '9999778', 125517), (True, '5000053', '5000053', 125518), (True, '43849', '43849', 125519), (True, '38038', '38038', 125520), (True, '44320', '44320', 125521), (True, '31624', '31624', 125522), (True, '30217', '30217', 125523), (True, '31459', '31459', 125524), (True, '29887', '29887', 125525), (True, '1', '1', 125526), (True, '144', '144', 125527), (True, '84', '84', 125528), (True, '84', '84', 125529), (True, '28', '28', 125530), (True, '42', '42', 125531), (True, '223', '223', 125532), (True, '18389', '18389', 125533), (True, '866', '866', 125534), (True, '2510', '2510', 125535), (True, '1', '1', 125536), (True, '9999852', '9999852', 125537), (True, '5000046', '5000046', 125538), (True, '43846', '43846', 125539), (True, '37930', '37930', 125540), (True, '43163', '43163', 125541), (True, '43371', '43371', 125542), (True, '22853', '22853', 125543), (True, '31464', '31464', 125544), (True, '29998', '29998', 125545), (True, '1', '1', 125546), (True, '97976', '97976', 125547), (True, '97975', '97975', 125548), (True, '13903', '13903', 125549), (True, '13904', '13904', 125550), (True, '9707', '9707', 125551), (True, '9706', '9706', 125552), (True, '333333334', '333333334', 125553), (True, '500000000', '500000000', 125554), (True, '500000000', '500000000', 125555), (True, '333333334', '333333334', 125556), (True, '333333334', '333333334', 125557), (True, '500000000', '500000000', 125558), (True, '500000000', '500000000', 125559), (True, '999999999', '999999999', 125560)]",True,Accecpted,4.538508784649611e-232,0.026948989412897,False,0.0
1040894,24270625,"import sys
beds,pillows,frodo=map(int,sys.stdin.readline().split())
pillows=pillows-beds-1 
layer=2
while pillows>0:
    if beds==1:
        layer=pillows+2
        pillows=0
        break
    if frodo-1<layer-1 and beds-frodo<layer-1:
        layer+=(int(pillows/(beds))+1)
        break
    else:

        pillows-=(min(frodo-1,layer-1)+min(layer-1,beds-frodo))
    if pillows>0:
        pillows-=1
    layer+=1  
if pillows==0:
    print(layer)
else:
    print(layer-1)",14,4504,46,1/30/17 18:20,22,966,2,8,"[(True, '2', '2', 125492), (True, '4', '4', 125493), (True, '3', '3', 125494), (True, '1', '1', 125495), (True, '1', '1', 125496), (True, '1000000000', '1000000000', 125497), (True, '10000034', '10000034', 125498), (True, '1', '1', 125499), (True, '10001', '10001', 125500), (True, '1', '1', 125501), (True, '1', '1', 125502), (True, '1', '1', 125503), (True, '1', '1', 125504), (False, '10002', '10001', 125505), (True, '1115', '1115', 125506), (True, '10002', '10002', 125507), (True, '112', '112', 125508), (True, '25', '25', 125509), (True, '46', '46', 125510), (True, '31', '31', 125511), (True, '117', '117', 125512), (True, '21965', '21965', 125513), (True, '147', '147', 125514), (True, '1465', '1465', 125515), (True, '1', '1', 125516), (True, '9999778', '9999778', 125517), (True, '5000053', '5000053', 125518), (True, '43849', '43849', 125519), (True, '38038', '38038', 125520), (True, '44320', '44320', 125521), (True, '31624', '31624', 125522), (True, '30217', '30217', 125523), (True, '31459', '31459', 125524), (True, '29887', '29887', 125525), (True, '1', '1', 125526), (True, '144', '144', 125527), (True, '84', '84', 125528), (True, '84', '84', 125529), (True, '28', '28', 125530), (True, '42', '42', 125531), (True, '223', '223', 125532), (True, '18389', '18389', 125533), (True, '866', '866', 125534), (True, '2510', '2510', 125535), (True, '1', '1', 125536), (True, '9999852', '9999852', 125537), (True, '5000046', '5000046', 125538), (True, '43846', '43846', 125539), (True, '37930', '37930', 125540), (True, '43163', '43163', 125541), (True, '43371', '43371', 125542), (True, '22853', '22853', 125543), (True, '31464', '31464', 125544), (True, '29998', '29998', 125545), (True, '1', '1', 125546), (True, '97976', '97976', 125547), (True, '97975', '97975', 125548), (False, '13904', '13903', 125549), (True, '13904', '13904', 125550), (True, '9707', '9707', 125551), (False, '9707', '9706', 125552), (True, '333333334', '333333334', 125553), (True, '500000000', '500000000', 125554), (True, '500000000', '500000000', 125555), (True, '333333334', '333333334', 125556), (True, '333333334', '333333334', 125557), (True, '500000000', '500000000', 125558), (True, '500000000', '500000000', 125559), (True, '999999999', '999999999', 125560)]",False,Wrong Answer,4.538508784649611e-232,0.026948989412897,False,0.0434782608695652
2667079,29324880,"n, m = map(int, input().split())
if m % 2 == 1: print(n*(m//2)+n//2)
else: print(n*(m//2))",14,4516,92,8/10/17 14:25,3,2296,1,8,"[(True, '4', '4', 207156), (True, '4', '4', 207157), (True, '2', '2', 207158), (True, '3', '3', 207159), (True, '7', '7', 207160), (True, '8', '8', 207161), (True, '5', '5', 207162), (True, '6', '6', 207163), (True, '7', '7', 207164), (True, '14', '14', 207165), (True, '15', '15', 207166), (True, '2', '2', 207167), (True, '16', '16', 207168), (True, '7', '7', 207169), (True, '9', '9', 207170), (True, '15', '15', 207171), (True, '21', '21', 207172), (True, '22', '22', 207173), (True, '24', '24', 207174), (True, '17', '17', 207175), (True, '128', '128', 207176), (True, '120', '120', 207177), (True, '3', '3', 207178), (True, '112', '112', 207179), (True, '112', '112', 207180), (True, '71', '71', 207181), (True, '40', '40', 207182), (True, '60', '60', 207183), (True, '2', '2', 207184), (True, '6', '6', 207185), (True, '8', '8', 207186), (True, '0', '0', 207187), (True, '1', '1', 207188), (True, '1', '1', 207189), (True, '105', '105', 207190)]",True,Accecpted,0.0,0.4050632911392405,False,0.0
2667643,29620426,"import math
a=int(input())
b=int(input())
print(math.floor((a*b)/2))",14,16,62,8/20/17 15:09,4,2296,5,8,"[(False, '', '4', 207156), (False, '', '4', 207157), (False, '', '2', 207158), (False, '', '3', 207159), (False, '', '7', 207160), (False, '', '8', 207161), (False, '', '5', 207162), (False, '', '6', 207163), (False, '', '7', 207164), (False, '', '14', 207165), (False, '', '15', 207166), (False, '', '2', 207167), (False, '', '16', 207168), (False, '', '7', 207169), (False, '', '9', 207170), (False, '', '15', 207171), (False, '', '21', 207172), (False, '', '22', 207173), (False, '', '24', 207174), (False, '', '17', 207175), (False, '', '128', 207176), (False, '', '120', 207177), (False, '', '3', 207178), (False, '', '112', 207179), (False, '', '112', 207180), (False, '', '71', 207181), (False, '', '40', 207182), (False, '', '60', 207183), (False, '', '2', 207184), (False, '', '6', 207185), (False, '', '8', 207186), (False, '', '0', 207187), (False, '', '1', 207188), (False, '', '1', 207189), (False, '', '105', 207190)]",False,Runtime Error,0.0,0.4050632911392405,False,1.0
3135162,28070159,"lst=[4,22,27,58,85,94,121,166,202,265,274,319,346,355,378,382,391,438,454,483,517,526,535,562,576,588,627,634,636,645,\
     648,654,663,666,690,706,728,729,762,778,825,852,861,895,913,915,922,958,985,1086,1111,1165]
n=int(input())
print(lst[n-1])",14,5408,46,6/27/17 9:59,4,2681,1,8,"[(True, '27', '27', 226729), (True, '4', '4', 226730), (True, '22', '22', 226731), (True, '58', '58', 226732), (True, '85', '85', 226733), (True, '94', '94', 226734), (True, '121', '121', 226735), (True, '166', '166', 226736), (True, '202', '202', 226737), (True, '265', '265', 226738), (True, '274', '274', 226739), (True, '319', '319', 226740), (True, '346', '346', 226741), (True, '355', '355', 226742), (True, '378', '378', 226743), (True, '382', '382', 226744), (True, '391', '391', 226745), (True, '438', '438', 226746), (True, '454', '454', 226747), (True, '483', '483', 226748), (True, '517', '517', 226749), (True, '526', '526', 226750), (True, '535', '535', 226751), (True, '562', '562', 226752), (True, '576', '576', 226753), (True, '588', '588', 226754), (True, '627', '627', 226755), (True, '634', '634', 226756), (True, '636', '636', 226757), (True, '645', '645', 226758)]",True,Accecpted,0.0,0.152317880794702,False,0.0
3132910,26317952,"a=int(input())
ans=int(3**((a**2-a)/2))
print(ans)",14,4456,46,4/12/17 16:08,3,2681,2,8,"[(True, '27', '27', 226729), (False, '1', '4', 226730), (False, '3', '22', 226731), (False, '729', '58', 226732), (False, '59049', '85', 226733), (False, '14348907', '94', 226734), (False, '10460353203', '121', 226735), (False, '22876792454961', '166', 226736), (False, '150094635296999136', '202', 226737), (False, '2954312706550833610752', '265', 226738), (False, '174449211009120166087753728', '274', 226739), (False, '30903154382632611407612103098368', '319', 226740), (False, '16423203268260656973350686764793069568', '346', 226741), (False, '26183890704263137149948414683244824564334592', '355', 226742), (False, '125236737537878753239620384797994551651349747990528', '378', 226743), (False, '1797010299914431055401678994746813871720176674767798009856', '382', 226744), (False, '77355401014542849554087352424303033926312883725576191665755914240', '391', 226745), (False, '9989689095948427631198394234399758062829662319366822230698846953511321600', '438', 226746), (False, '3870210234510307641574405409108654539021483464713730347301608547282619462355779584', '454', 226747), (False, '4498196224760364180112763581820564183270832762211675078290770778408315115024581475298181120', '483', 226748), (False, '15684240429131529609414993418219371432471546758948434974915837056611667817650421804053591782567444480', '517', 226749), (False, '164062694609488073391634402261565148472034092005409807160233444585321665130709109669801659526938586846922276864', '526', 226750), (False, '5148461199153508470234989456206394912779338202460098519671829562924207916904623633760755387366624099906200195519345590272', '535', 226751), (False, '484692503355779617808871647176731952331916384242693718066496973632769027850379456879455969958621405400573794359801594000605978820608', '562', 226752), (False, '136891479058588365278638579406081843806154550432912968328189155672326378147664925554064815633731961081259275756216637211407909925281068386091008', '576', 226753), (False, '115986590936146901007671579994039978340904362720562868552238639320518601050834005764730707800810733457725985803613368129102755064964260946109597353336897536', '588', 226754), (False, '294822352044965937165990667248555167584159036930931226665582155220536106714698424459634888821943608079431964432196247333411193333139064973662097071187900554263394254848', '627', 226755), (False, '2248196586272044188294704431379256359673708119560229647455906208266145467394120084387597579662195937621268993661799096356009422433561507342610042347527130227071180225365533557522432', '634', 226756), (False, '51431526702097374291715249381573281435442671044751620184328086049201096781387193979951843467599306924575327123306006324456763774066294413254460443184674602408692455461192604237853458579924713472', '636', 226757), (False, '3529765086016999188219326712565292509550935463855305511275664691480488229502835429172894667775909766156003839643175058990197606699666208702338072977419823441844109302031682269502430095785934149350322396463104', '645', 226758)]",False,Wrong Answer,0.0,0.152317880794702,False,0.9666666666666668
417668,27011045,"a,b=input().split("" "")
a=int(a)
b=int(b)
c = 0

while a>0 and b>0 and a+b>2 :
    if a < b:
        a += 1
        b -= 2
    else:
        a -= 2
        b += 1
    c += 1

print(c)",21,0,62,5/11/17 14:31,29,377,1,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (True, '0', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",True,Accecpted,0.8308008800303072,0.8454106280193237,False,0.0
417667,27010981,"a = int(input())
b = int(input())

c = 0

while a>0 and b>0 and a+b>2 :
    if a < b:
        a += 1
        b -= 2
    else:
        a -= 2
        b += 1
    c += 1

print(c)",21,0,46,5/11/17 14:27,29,377,5,8,"[(False, '', '6', 78107), (False, '', '5', 78108), (False, '', '197', 78109), (False, '', '98', 78110), (False, '', '98', 78111), (False, '', '2', 78112), (False, '', '0', 78113), (False, '', '13', 78114), (False, '', '7', 78115), (False, '', '36', 78116), (False, '', '47', 78117), (False, '', '44', 78118), (False, '', '27', 78119), (False, '', '89', 78120), (False, '', '38', 78121), (False, '', '102', 78122), (False, '', '74', 78123), (False, '', '47', 78124), (False, '', '122', 78125), (False, '', '86', 78126), (False, '', '155', 78127), (False, '', '28', 78128), (False, '', '97', 78129), (False, '', '78', 78130), (False, '', '33', 78131), (False, '', '99', 78132), (False, '', '97', 78133), (False, '', '97', 78134), (False, '', '81', 78135), (False, '', '82', 78136), (False, '', '84', 78137), (False, '', '1', 78138), (False, '', '1', 78139), (False, '', '1', 78140), (False, '', '2', 78141), (False, '', '2', 78142), (False, '', '2', 78143), (False, '', '3', 78144), (False, '', '3', 78145)]",False,Runtime Error,0.8308008800303072,0.8454106280193237,False,1.0
149310,24392317,"t = list(map(int, input().split()))
ws = list(map(int, input().split()))
hs, hu = map(int, input().split())

res = 0

for (minu, wrongs, punt) in zip(t, ws, [500, 1000, 1500, 2000, 2500]):
    res += max(0.3 * punt, (1 - minu / 250) * punt - 50 * wrongs)
print(int(res + (hs * 100 + hu * -50)))",34,4512,61,2/2/17 21:02,17,122,1,8,"[(True, '4900', '4900', 57848), (True, '4930', '4930', 57849), (True, '5088', '5088', 57850), (True, '4522', '4522', 57851), (True, '5178', '5178', 57852), (True, '6414', '6414', 57853), (True, '5188', '5188', 57854), (True, '4914', '4914', 57855), (True, '3416', '3416', 57856), (True, '6704', '6704', 57857), (True, '4292', '4292', 57858), (True, '2876', '2876', 57859), (True, '4324', '4324', 57860), (True, '6070', '6070', 57861), (True, '4032', '4032', 57862), (True, '5222', '5222', 57863), (True, '3288', '3288', 57864), (True, '6610', '6610', 57865), (True, '4924', '4924', 57866), (True, '4432', '4432', 57867), (True, '3104', '3104', 57868), (True, '4586', '4586', 57869), (True, '4754', '4754', 57870), (True, '5400', '5400', 57871), (True, '5388', '5388', 57872), (True, '4066', '4066', 57873), (True, '5156', '5156', 57874), (True, '3872', '3872', 57875), (True, '5242', '5242', 57876), (True, '5802', '5802', 57877), (True, '5854', '5854', 57878), (True, '5028', '5028', 57879), (True, '4386', '4386', 57880), (True, '4118', '4118', 57881), (True, '5144', '5144', 57882), (True, '6652', '6652', 57883), (True, '4476', '4476', 57884), (True, '4678', '4678', 57885), (True, '4868', '4868', 57886), (True, '5132', '5132', 57887), (True, '3992', '3992', 57888), (True, '5040', '5040', 57889), (True, '7500', '7500', 57890), (True, '9500', '9500', 57891), (True, '1310', '1310', 57892), (True, '4150', '4150', 57893), (True, '7400', '7400', 57894), (True, '7050', '7050', 57895), (True, '6450', '6450', 57896), (True, '6350', '6350', 57897), (True, '6060', '6060', 57898), (True, '7412', '7412', 57899), (True, '7174', '7174', 57900), (True, '6936', '6936', 57901), (True, '6698', '6698', 57902), (True, '6460', '6460', 57903), (True, '7212', '7212', 57904)]",True,Accecpted,0.9312457603037672,0.991869918699187,False,0.0
149309,24392283,"t = list(map(int, input().split()))
ws = list(map(int, input().split()))
hs, hu = map(int, input().split())

res = 0

for (minu, wrongs, punt) in zip(t, ws, [500, 1000, 1500, 2000, 2500]):
    res += max(0.3 * punt, (1 - minu / 250) * punt - 50 * wrongs)
print(res + (hs * 100 + hu * -50))",34,4464,46,2/2/17 21:01,17,122,2,8,"[(False, '4900.0', '4900', 57848), (False, '4930.0', '4930', 57849), (False, '5088.0', '5088', 57850), (False, '4522.0', '4522', 57851), (False, '5178.0', '5178', 57852), (False, '6414.0', '6414', 57853), (False, '5188.0', '5188', 57854), (False, '4914.0', '4914', 57855), (False, '3416.0', '3416', 57856), (False, '6704.0', '6704', 57857), (False, '4292.0', '4292', 57858), (False, '2876.0', '2876', 57859), (False, '4324.0', '4324', 57860), (False, '6070.0', '6070', 57861), (False, '4032.0', '4032', 57862), (False, '5222.0', '5222', 57863), (False, '3288.0', '3288', 57864), (False, '6610.0', '6610', 57865), (False, '4924.0', '4924', 57866), (False, '4432.0', '4432', 57867), (False, '3104.0000000000005', '3104', 57868), (False, '4586.0', '4586', 57869), (False, '4754.0', '4754', 57870), (False, '5400.0', '5400', 57871), (False, '5388.0', '5388', 57872), (False, '4066.0', '4066', 57873), (False, '5156.0', '5156', 57874), (False, '3872.0', '3872', 57875), (False, '5242.0', '5242', 57876), (False, '5802.0', '5802', 57877), (False, '5854.0', '5854', 57878), (False, '5028.0', '5028', 57879), (False, '4386.0', '4386', 57880), (False, '4118.0', '4118', 57881), (False, '5144.0', '5144', 57882), (False, '6652.0', '6652', 57883), (False, '4476.0', '4476', 57884), (False, '4678.0', '4678', 57885), (False, '4868.0', '4868', 57886), (False, '5132.0', '5132', 57887), (False, '3992.0', '3992', 57888), (False, '5040.0', '5040', 57889), (False, '7500.0', '7500', 57890), (False, '9500.0', '9500', 57891), (False, '1310.0', '1310', 57892), (False, '4150.0', '4150', 57893), (False, '7400.0', '7400', 57894), (False, '7050.0', '7050', 57895), (False, '6450.0', '6450', 57896), (False, '6350.0', '6350', 57897), (False, '6060.0', '6060', 57898), (False, '7412.0', '7412', 57899), (False, '7174.0', '7174', 57900), (False, '6936.0', '6936', 57901), (False, '6698.0', '6698', 57902), (False, '6460.0', '6460', 57903), (False, '7212.0', '7212', 57904)]",False,Wrong Answer,0.9312457603037672,0.991869918699187,False,1.0
163663,24478635,"a, b, c = map(int, input().split())
x, y, z = map(int, input().split())

a = a - x
b = b - y
c = c - z

have = 0
need = 0
for i in (a,b,c):
    if i > 0:
        have += i//2
    elif i < 0:
        need += i

if have >= abs(need):
    print(""Yes"")
else:
    print(""No"")",34,4516,77,2/7/17 3:48,37,133,1,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (True, 'Yes', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (True, 'Yes', 'Yes', 59002), (True, 'No', 'No', 59003), (True, 'Yes', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (True, 'Yes', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (True, 'Yes', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (True, 'Yes', 'Yes', 59023), (True, 'Yes', 'Yes', 59024), (True, 'No', 'No', 59025), (True, 'Yes', 'Yes', 59026), (True, 'No', 'No', 59027), (True, 'Yes', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (True, 'Yes', 'Yes', 59036), (True, 'Yes', 'Yes', 59037), (True, 'Yes', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (True, 'Yes', 'Yes', 59045), (True, 'Yes', 'Yes', 59046), (True, 'Yes', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (True, 'Yes', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",True,Accecpted,0.3112044844308492,0.5173410404624278,False,0.0
163657,24478567,"a, b, c = map(int, input().split())
x, y, z = map(int, input().split())

a = a - x
b = b - y
c = c - z
if (a < 0 and b < 0) or (a < 0 and c < 0) or (b < 0 and c < 0):
    print(""No"")
elif (a < 0 and b//2 + c//2 >= abs(a)) or (b < 0 and a//2 + c//2 >= abs(b) or (c < 0 and b//2 + a//2 >= abs(c)) or (a>=0 and b>= 0 and c>=0)):
    print(""Yes"")
else:
    print(""No"")",34,4500,62,2/7/17 3:39,23,133,2,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (False, 'No', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (True, 'Yes', 'Yes', 59002), (True, 'No', 'No', 59003), (True, 'Yes', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (True, 'Yes', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (False, 'No', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (False, 'No', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (False, 'No', 'Yes', 59023), (True, 'Yes', 'Yes', 59024), (True, 'No', 'No', 59025), (True, 'Yes', 'Yes', 59026), (True, 'No', 'No', 59027), (True, 'Yes', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (False, 'No', 'Yes', 59036), (False, 'No', 'Yes', 59037), (False, 'No', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (True, 'Yes', 'Yes', 59045), (True, 'Yes', 'Yes', 59046), (True, 'Yes', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (True, 'Yes', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",False,Wrong Answer,0.3112044844308492,0.5173410404624278,False,0.0886075949367088
193741,22770650,"n,a,b=map(str, input().split())
n=int(n)
if b==""week"":
    if n==5 or n==6:
        print(53)
    else:
        print(52)
else:
    if n==31:
        print(7)
    elif n==30:
        print(11)
    else:
        print(12)",34,4500,62,12/7/16 0:19,27,159,1,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (True, '52', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (True, '12', '12', 61032)]",True,Accecpted,0.7848518349390632,0.9780439121756488,False,0.0
193740,22770590,"n,a,b=map(str, input().split())
n=int(n)
if b==""week"":
    if n==5 or n==6:
        print(53)
    else:
        print(52)
else:
    if n==31:
        print(7)
    elif n>28 and n<=30:
        print(11)
    else:
        print(12)",34,4508,61,12/7/16 0:16,27,159,2,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (True, '52', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (False, '11', '12', 61032)]",False,Wrong Answer,0.7848518349390632,0.9780439121756488,False,0.0263157894736842
549292,23263161,"a, b, c = map(int, input().split())
if c < 0 and a < b:
    print(""NO"")
    exit(0)
if c > 0 and a > b:
    print(""NO"")
    exit(0)
if c == 0 and a == b:
    print(""YES"")
    exit(0)
if c == 0 and a != b:
    print(""NO"")
    exit(0)

if abs(a-b)%abs(c) != 0:
    print(""NO"")
else:
    print(""YES"")",34,4516,62,12/24/16 7:40,35,511,1,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (True, 'YES', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (True, 'YES', 'YES', 87956), (True, 'YES', 'YES', 87957), (True, 'YES', 'YES', 87958), (True, 'YES', 'YES', 87959), (True, 'YES', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (True, 'YES', 'YES', 87986), (True, 'YES', 'YES', 87987), (True, 'YES', 'YES', 87988), (True, 'YES', 'YES', 87989), (True, 'YES', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (True, 'YES', 'YES', 88016), (True, 'YES', 'YES', 88017), (True, 'YES', 'YES', 88018), (True, 'YES', 'YES', 88019), (True, 'YES', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (True, 'YES', 'YES', 88046), (True, 'YES', 'YES', 88047), (True, 'YES', 'YES', 88048), (True, 'YES', 'YES', 88049), (True, 'YES', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (True, 'YES', 'YES', 88076), (True, 'YES', 'YES', 88077), (True, 'YES', 'YES', 88078), (True, 'YES', 'YES', 88079), (True, 'YES', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (True, 'YES', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (True, 'YES', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",True,Accecpted,0.7925036722124434,0.6046511627906976,False,0.0
549291,23263097,"a, b, c = map(int, input().split())
if c < 0 and a < b:
    print(""NO"")
    exit(0)
if c > 0 and a > b:
    print(""NO"")
    exit(0)
if c == 0 and a != b:
    print(""NO"")
    exit(0)
if abs(a-b)%abs(c) != 0:
    print(""NO"")
else:
    print(""YES"")",34,4480,46,12/24/16 7:37,27,511,5,8,"[(True, 'YES', 'YES', 87931), (False, '', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (True, 'YES', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (False, '', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (True, 'YES', 'YES', 87956), (True, 'YES', 'YES', 87957), (False, '', 'YES', 87958), (True, 'YES', 'YES', 87959), (True, 'YES', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (True, 'YES', 'YES', 87986), (True, 'YES', 'YES', 87987), (False, '', 'YES', 87988), (True, 'YES', 'YES', 87989), (True, 'YES', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (True, 'YES', 'YES', 88016), (True, 'YES', 'YES', 88017), (False, '', 'YES', 88018), (True, 'YES', 'YES', 88019), (True, 'YES', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (True, 'YES', 'YES', 88046), (True, 'YES', 'YES', 88047), (False, '', 'YES', 88048), (True, 'YES', 'YES', 88049), (True, 'YES', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (True, 'YES', 'YES', 88076), (True, 'YES', 'YES', 88077), (False, '', 'YES', 88078), (True, 'YES', 'YES', 88079), (True, 'YES', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (True, 'YES', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (True, 'YES', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",False,Runtime Error,0.7925036722124434,0.6046511627906976,False,0.0393258426966292
584137,23490821,"l = list(map(int, input().split()))
l.append(0)
l.sort(reverse = True)
if l[0] == l[2]: 
    print(sum(l[3:]))
    exit(0)
elif l[1] == l[3]: 
    print(l[0] + l[4])
    exit(0)
elif l[2] == l[4] and l[0] == l[1]: 
    print(min(sum(l[:2]), sum(l[2:])))
    exit(0)
elif l[2] == l[4]:
    print(l[0] + l[1])
    exit(0)
else:
    for i in range(4): 
        if l[i] == l[i + 1]:
            l.pop(i)
            l.pop(i)
            print(sum(l))
            exit(0)
print(sum(l))",34,4528,62,1/2/17 1:10,45,538,1,8,"[(True, '26', '26', 90562), (True, '28', '28', 90563), (True, '20', '20', 90564), (True, '15', '15', 90565), (True, '16', '16', 90566), (True, '4', '4', 90567), (True, '6', '6', 90568), (True, '110', '110', 90569), (True, '200', '200', 90570), (True, '2', '2', 90571), (True, '58', '58', 90572), (True, '58', '58', 90573), (True, '60', '60', 90574), (True, '60', '60', 90575), (True, '60', '60', 90576), (True, '60', '60', 90577), (True, '60', '60', 90578), (True, '9', '9', 90579), (True, '9', '9', 90580), (True, '15', '15', 90581), (True, '490', '490', 90582), (True, '2', '2', 90583), (True, '296', '296', 90584), (True, '296', '296', 90585), (True, '181', '181', 90586), (True, '227', '227', 90587), (True, '95', '95', 90588), (True, '17', '17', 90589), (True, '110', '110', 90590), (True, '110', '110', 90591), (True, '199', '199', 90592), (True, '13', '13', 90593), (True, '2', '2', 90594), (True, '11', '11', 90595), (True, '101', '101', 90596), (True, '6', '6', 90597), (True, '3', '3', 90598), (True, '7', '7', 90599), (True, '9', '9', 90600), (True, '21', '21', 90601), (True, '6', '6', 90602), (True, '5', '5', 90603), (True, '121', '121', 90604), (True, '6', '6', 90605), (True, '9', '9', 90606), (True, '4', '4', 90607), (True, '3', '3', 90608), (True, '21', '21', 90609)]",True,Accecpted,0.9185266073273524,0.9847908745247148,False,0.0
584136,23490794,"l = list(map(int, input().split()))
l.append(0)
l.sort(reverse = True)
if l[0] == l[2]: 
    print(sum(l[3:]))
    exit(0)
elif l[1] == l[3]: 
    print(sum(l[0], l[4]))
    exit(0)
elif l[2] == l[4] and l[0] == l[1]: 
    print(min(sum(l[:2]), sum(l[2:])))
    exit(0)
elif l[2] == l[4]:
    print(l[0] + l[1])
    exit(0)
else:
    for i in range(4): 
        if l[i] == l[i + 1]:
            l.pop(i)
            l.pop(i)
            print(sum(l))
            exit(0)
print(sum(l))",34,4536,62,1/2/17 1:07,45,538,5,8,"[(True, '26', '26', 90562), (True, '28', '28', 90563), (True, '20', '20', 90564), (True, '15', '15', 90565), (True, '16', '16', 90566), (True, '4', '4', 90567), (True, '6', '6', 90568), (True, '110', '110', 90569), (True, '200', '200', 90570), (True, '2', '2', 90571), (True, '58', '58', 90572), (True, '58', '58', 90573), (True, '60', '60', 90574), (True, '60', '60', 90575), (True, '60', '60', 90576), (True, '60', '60', 90577), (True, '60', '60', 90578), (True, '9', '9', 90579), (False, '', '9', 90580), (True, '15', '15', 90581), (True, '490', '490', 90582), (True, '2', '2', 90583), (True, '296', '296', 90584), (True, '296', '296', 90585), (True, '181', '181', 90586), (True, '227', '227', 90587), (True, '95', '95', 90588), (True, '17', '17', 90589), (True, '110', '110', 90590), (True, '110', '110', 90591), (True, '199', '199', 90592), (False, '', '13', 90593), (True, '2', '2', 90594), (False, '', '11', 90595), (False, '', '101', 90596), (True, '6', '6', 90597), (True, '3', '3', 90598), (True, '7', '7', 90599), (True, '9', '9', 90600), (False, '', '21', 90601), (True, '6', '6', 90602), (False, '', '5', 90603), (True, '121', '121', 90604), (True, '6', '6', 90605), (True, '9', '9', 90606), (True, '4', '4', 90607), (False, '', '3', 90608), (True, '21', '21', 90609)]",False,Runtime Error,0.9185266073273524,0.9847908745247148,False,0.1458333333333333
596724,24141654,"n,m = map(int, input().split())
sum = 0
for i in range(1, n + 1):
    sum = sum +  (m+i%5)//5
print(sum)",34,4516,420,1/26/17 6:36,9,548,1,8,"[(True, '14', '14', 91448), (True, '31', '31', 91449), (True, '1', '1', 91450), (True, '5', '5', 91451), (True, '7', '7', 91452), (True, '88', '88', 91453), (True, '30', '30', 91454), (True, '0', '0', 91455), (True, '200000', '200000', 91456), (True, '200000', '200000', 91457), (True, '200000000000', '200000000000', 91458), (True, '159348', '159348', 91459), (True, '72423', '72423', 91460), (True, '131155', '131155', 91461), (True, '178296', '178296', 91462), (True, '41600', '41600', 91463), (True, '26112', '26112', 91464), (True, '55552', '55552', 91465), (True, '9856', '9856', 91466), (True, '148652', '148652', 91467), (True, '106218', '106218', 91468), (True, '7431', '7431', 91469), (True, '79157', '79157', 91470), (True, '33194', '33194', 91471), (True, '180', '180', 91472), (True, '25384', '25384', 91473), (True, '2462', '2462', 91474), (True, '1201', '1201', 91475), (True, '60512', '60512', 91476), (True, '60705', '60705', 91477), (True, '3208', '3208', 91478), (True, '75929310986', '75929310986', 91479), (True, '12052259926', '12052259926', 91480), (True, '105030916263', '105030916263', 91481), (True, '132638943', '132638943', 91482), (True, '12720276292', '12720276292', 91483), (True, '457187060', '457187060', 91484), (True, '32349225415', '32349225415', 91485), (True, '5812618980', '5812618980', 91486), (True, '61118498984', '61118498984', 91487), (True, '48660664382', '48660664382', 91488), (True, '33737759810', '33737759810', 91489), (True, '2611958008', '2611958008', 91490), (True, '38433636199', '38433636199', 91491), (True, '114818101284', '114818101284', 91492), (True, '62190480238', '62190480238', 91493), (True, '159985729411', '159985729411', 91494), (True, '93933134534', '93933134534', 91495), (True, '347531388', '347531388', 91496), (True, '7867827488', '7867827488', 91497), (True, '45248999219', '45248999219', 91498), (True, '131184195318', '131184195318', 91499), (True, '67552194859', '67552194859', 91500), (True, '178233305115', '178233305115', 91501), (True, '1853307952', '1853307952', 91502), (True, '20040948031', '20040948031', 91503), (True, '14525848875', '14525848875', 91504), (True, '51880446774', '51880446774', 91505), (True, '36705041203', '36705041203', 91506), (True, '88056992428', '88056992428', 91507), (True, '33673251230', '33673251230', 91508), (True, '16828704925', '16828704925', 91509), (True, '65393416268', '65393416268', 91510), (True, '37488632431', '37488632431', 91511), (True, '115542637921', '115542637921', 91512), (True, '32214852554', '32214852554', 91513), (True, '120403367155', '120403367155', 91514), (True, '53095895155', '53095895155', 91515), (True, '165869588', '165869588', 91516), (True, '4112144810', '4112144810', 91517), (True, '17893399803', '17893399803', 91518), (True, '126455602192', '126455602192', 91519), (True, '68236422', '68236422', 91520), (True, '17722349770', '17722349770', 91521), (True, '12162829017', '12162829017', 91522), (True, '46570587880', '46570587880', 91523), (True, '14104855884', '14104855884', 91524), (True, '70166746198', '70166746198', 91525), (True, '27354683301', '27354683301', 91526), (True, '102815540084', '102815540084', 91527), (True, '60653584944', '60653584944', 91528), (True, '2020', '2020', 91529), (True, '2040', '2040', 91530), (True, '2060', '2060', 91531), (True, '2080', '2080', 91532), (True, '3', '3', 91533), (True, '50', '50', 91534), (True, '23', '23', 91535), (True, '160372597', '160372597', 91536), (True, '1', '1', 91537), (True, '199999600001', '199999600001', 91538), (True, '1624', '1624', 91539), (True, '75', '75', 91540), (True, '10952', '10952', 91541), (True, '4', '4', 91542), (True, '15', '15', 91543), (True, '6', '6', 91544), (True, '1999960001', '1999960001', 91545), (True, '225', '225', 91546), (True, '0', '0', 91547), (True, '66', '66', 91548), (True, '2', '2', 91549), (True, '3', '3', 91550), (True, '966605', '966605', 91551), (True, '199999800000', '199999800000', 91552), (True, '135304750879', '135304750879', 91553), (True, '50', '50', 91554), (True, '190004183', '190004183', 91555), (True, '28', '28', 91556), (True, '8', '8', 91557), (True, '122689636154', '122689636154', 91558), (True, '0', '0', 91559), (True, '465', '465', 91560), (True, '26', '26', 91561), (True, '1', '1', 91562), (True, '57993', '57993', 91563), (True, '7896', '7896', 91564), (True, '12', '12', 91565), (True, '0', '0', 91566), (True, '3', '3', 91567), (True, '709707816', '709707816', 91568), (True, '8', '8', 91569), (True, '6', '6', 91570), (True, '8', '8', 91571), (True, '10462520', '10462520', 91572), (True, '4', '4', 91573), (True, '41542', '41542', 91574), (True, '2', '2', 91575)]",True,Accecpted,0.0527547089146296,0.2094861660079051,False,0.0
596723,24141450,"x,y = map(int, input().split())
n = max(x, y)
m = min(x,y)
res = 0
if n%10 != 0 and m%10 != 0:        
    for i in range(1, n%10 + 1):
        for j in range(1, m%10 + 1):
            if (i + j)%5 == 0:
                res += 1
    print((n // 10 * 2 * m) + (m // 10 * 2 * n%10) + res)
elif n%10 == 0:
    print(m * 2 * n//10)
elif m%10 == 0:
    print(n * 2 * m//10)",34,4496,62,1/26/17 6:17,27,548,2,8,"[(True, '14', '14', 91448), (True, '31', '31', 91449), (True, '1', '1', 91450), (True, '5', '5', 91451), (True, '7', '7', 91452), (True, '88', '88', 91453), (True, '30', '30', 91454), (True, '0', '0', 91455), (True, '200000', '200000', 91456), (True, '200000', '200000', 91457), (True, '200000000000', '200000000000', 91458), (False, '158678', '159348', 91459), (False, '72143', '72423', 91460), (False, '129895', '131155', 91461), (True, '178296', '178296', 91462), (True, '41600', '41600', 91463), (True, '26112', '26112', 91464), (True, '55552', '55552', 91465), (True, '9856', '9856', 91466), (False, '147322', '148652', 91467), (True, '106218', '106218', 91468), (False, '7351', '7431', 91469), (False, '78407', '79157', 91470), (False, '33124', '33194', 91471), (True, '180', '180', 91472), (False, '25354', '25384', 91473), (False, '2452', '2462', 91474), (True, '1201', '1201', 91475), (False, '60342', '60512', 91476), (False, '60355', '60705', 91477), (False, '3198', '3208', 91478), (False, '75928574606', '75929310986', 91479), (False, '12052244966', '12052259926', 91480), (False, '105030325283', '105030916263', 91481), (False, '132633263', '132638943', 91482), (False, '12720205772', '12720276292', 91483), (False, '457184400', '457187060', 91484), (False, '32348822625', '32349225415', 91485), (False, '5812572000', '5812618980', 91486), (False, '61118401534', '61118498984', 91487), (False, '48660559812', '48660664382', 91488), (False, '33737608790', '33737759810', 91489), (True, '2611958008', '2611958008', 91490), (False, '38433495009', '38433636199', 91491), (True, '114818101284', '114818101284', 91492), (False, '62190145878', '62190480238', 91493), (False, '159985398461', '159985729411', 91494), (False, '93932928274', '93933134534', 91495), (True, '347531388', '347531388', 91496), (False, '7867628848', '7867827488', 91497), (False, '45248430379', '45248999219', 91498), (False, '131183894328', '131184195318', 91499), (False, '67551690249', '67552194859', 91500), (False, '178233121255', '178233305115', 91501), (False, '1853244132', '1853307952', 91502), (False, '20040781601', '20040948031', 91503), (False, '14525525185', '14525848875', 91504), (False, '51880332484', '51880446774', 91505), (False, '36704558973', '36705041203', 91506), (False, '88056358818', '88056992428', 91507), (False, '33673109950', '33673251230', 91508), (False, '16828335535', '16828704925', 91509), (False, '65393255348', '65393416268', 91510), (False, '37487981661', '37488632431', 91511), (False, '115542511011', '115542637921', 91512), (False, '32214523504', '32214852554', 91513), (False, '120402615975', '120403367155', 91514), (False, '53095355125', '53095895155', 91515), (False, '165869208', '165869588', 91516), (False, '4112082790', '4112144810', 91517), (False, '17893228303', '17893399803', 91518), (False, '126455326702', '126455602192', 91519), (False, '68235852', '68236422', 91520), (False, '17722302750', '17722349770', 91521), (False, '12162587847', '12162829017', 91522), (False, '46570189710', '46570587880', 91523), (True, '14104855884', '14104855884', 91524), (False, '70166068658', '70166746198', 91525), (False, '27354297621', '27354683301', 91526), (False, '102815279764', '102815540084', 91527), (False, '60653504754', '60653584944', 91528), (True, '2020', '2020', 91529), (True, '2040', '2040', 91530), (True, '2060', '2060', 91531), (True, '2080', '2080', 91532), (True, '3', '3', 91533), (True, '50', '50', 91534), (True, '23', '23', 91535), (False, '160353867', '160372597', 91536), (True, '1', '1', 91537), (False, '199997800021', '199999600001', 91538), (False, '1484', '1624', 91539), (True, '75', '75', 91540), (False, '10772', '10952', 91541), (True, '4', '4', 91542), (True, '15', '15', 91543), (True, '6', '6', 91544), (False, '1999780021', '1999960001', 91545), (False, '205', '225', 91546), (True, '0', '0', 91547), (True, '66', '66', 91548), (True, '2', '2', 91549), (True, '3', '3', 91550), (False, '963135', '966605', 91551), (True, '199999800000', '199999800000', 91552), (False, '135303512159', '135304750879', 91553), (False, '40', '50', 91554), (False, '190001233', '190004183', 91555), (True, '28', '28', 91556), (True, '8', '8', 91557), (False, '122688466034', '122689636154', 91558), (True, '0', '0', 91559), (False, '435', '465', 91560), (True, '26', '26', 91561), (True, '1', '1', 91562), (False, '57683', '57993', 91563), (False, '7876', '7896', 91564), (True, '12', '12', 91565), (True, '0', '0', 91566), (True, '3', '3', 91567), (False, '709641366', '709707816', 91568), (True, '8', '8', 91569), (True, '6', '6', 91570), (True, '8', '8', 91571), (False, '10459160', '10462520', 91572), (True, '4', '4', 91573), (False, '41492', '41542', 91574), (True, '2', '2', 91575)]",False,Wrong Answer,0.0527547089146296,0.2094861660079051,False,0.5859375
775616,23893544,"l1 ,r1, l2, r2, k = map(int, input().split())
if l2 > r1 or l1 > r2:
    print(0)
elif l2 >= l1 and r2 <= r1:
    print(r2 - l2 + 1 - (k >= l2 and k <= r2))
elif l1 >= l2 and r1 <= r2:
    print(r1 - l1 + 1 - (k >= l1 and k <= r1))
elif l2 >= l1:
    print(r1 - l2 + 1 - (k >= l2 and k <= r1))
elif l1 >= l2:
    print(r2 - l1 + 1 - (k >= l1 and k <= r2))",34,4540,93,1/17/17 5:56,21,714,1,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (True, '1', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (True, '0', '0', 105701), (True, '999999997', '999999997', 105702), (True, '0', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (True, '81604391064', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (True, '0', '0', 105709), (True, '48172141432145241', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (True, '256787461333454149', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (True, '0', '0', 105715), (True, '0', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (True, '0', '0', 105719), (True, '5', '5', 105720), (True, '0', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (True, '1', '1', 105726), (True, '1', '1', 105727), (True, '0', '0', 105728), (True, '0', '0', 105729), (True, '0', '0', 105730), (True, '0', '0', 105731), (True, '0', '0', 105732), (True, '0', '0', 105733), (True, '0', '0', 105734), (True, '0', '0', 105735), (True, '0', '0', 105736), (True, '0', '0', 105737), (True, '0', '0', 105738), (True, '0', '0', 105739), (True, '0', '0', 105740), (True, '0', '0', 105741), (True, '0', '0', 105742), (True, '0', '0', 105743), (True, '0', '0', 105744), (True, '0', '0', 105745), (True, '0', '0', 105746), (True, '0', '0', 105747), (True, '0', '0', 105748), (True, '0', '0', 105749), (True, '0', '0', 105750), (True, '0', '0', 105751), (True, '0', '0', 105752), (True, '0', '0', 105753), (True, '0', '0', 105754), (True, '0', '0', 105755), (True, '0', '0', 105756), (True, '0', '0', 105757), (True, '0', '0', 105758), (True, '0', '0', 105759), (True, '0', '0', 105760), (True, '1', '1', 105761), (True, '0', '0', 105762), (True, '1', '1', 105763), (True, '0', '0', 105764), (True, '0', '0', 105765), (True, '0', '0', 105766), (True, '0', '0', 105767), (True, '0', '0', 105768), (True, '0', '0', 105769), (True, '0', '0', 105770), (True, '0', '0', 105771), (True, '0', '0', 105772), (True, '0', '0', 105773), (True, '0', '0', 105774), (True, '0', '0', 105775), (True, '0', '0', 105776), (True, '6', '6', 105777), (True, '0', '0', 105778), (True, '0', '0', 105779), (True, '0', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (True, '0', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (True, '4', '4', 105789)]",True,Accecpted,0.7388817958387482,0.6676602086438153,False,0.0
775615,23893496,"l1 ,r1, l2, r2, k = map(int, input().split())
if l2 > r1 or l1 > r2:
    print(0)
elif l2 >= l1 and r2 <= r1:
    print(r2 - l2 + 1 - (k >= l2 and k <= r2))
elif l2 >= l1:
    print(r1 - l2 + 1 - (k >= l2 and k <= r1))
elif l1 >= l2:
    print(r2 - l1 + 1 - (k >= l1 and k <= r2))",34,4496,46,1/17/17 5:51,17,714,2,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (False, '3', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (True, '0', '0', 105701), (True, '999999997', '999999997', 105702), (True, '0', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (False, '18210661356870', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (True, '0', '0', 105709), (False, '428628298203644362', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (False, '356268978966732294', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (True, '0', '0', 105715), (True, '0', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (True, '0', '0', 105719), (True, '5', '5', 105720), (True, '0', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (False, '2', '1', 105726), (True, '1', '1', 105727), (True, '0', '0', 105728), (True, '0', '0', 105729), (True, '0', '0', 105730), (True, '0', '0', 105731), (True, '0', '0', 105732), (True, '0', '0', 105733), (True, '0', '0', 105734), (True, '0', '0', 105735), (True, '0', '0', 105736), (True, '0', '0', 105737), (True, '0', '0', 105738), (True, '0', '0', 105739), (True, '0', '0', 105740), (True, '0', '0', 105741), (True, '0', '0', 105742), (True, '0', '0', 105743), (True, '0', '0', 105744), (True, '0', '0', 105745), (True, '0', '0', 105746), (True, '0', '0', 105747), (True, '0', '0', 105748), (True, '0', '0', 105749), (True, '0', '0', 105750), (True, '0', '0', 105751), (True, '0', '0', 105752), (True, '0', '0', 105753), (True, '0', '0', 105754), (True, '0', '0', 105755), (True, '0', '0', 105756), (True, '0', '0', 105757), (True, '0', '0', 105758), (True, '0', '0', 105759), (True, '0', '0', 105760), (True, '1', '1', 105761), (True, '0', '0', 105762), (True, '1', '1', 105763), (True, '0', '0', 105764), (True, '0', '0', 105765), (True, '0', '0', 105766), (True, '0', '0', 105767), (True, '0', '0', 105768), (True, '0', '0', 105769), (True, '0', '0', 105770), (True, '0', '0', 105771), (True, '0', '0', 105772), (True, '0', '0', 105773), (True, '0', '0', 105774), (True, '0', '0', 105775), (True, '0', '0', 105776), (True, '6', '6', 105777), (True, '0', '0', 105778), (True, '0', '0', 105779), (True, '0', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (True, '0', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (False, '6', '4', 105789)]",False,Wrong Answer,0.7388817958387482,0.6676602086438153,False,0.0625
944575,24599832,"n, k  = map(int, input().split())


while k != 2 ** n:
    if k < 2 ** n:
        k  = k
    else:
        k -= 2**n
    n -= 1

print(n+1)",34,4528,77,2/12/17 5:17,21,874,1,8,"[(True, '2', '2', 116868), (True, '4', '4', 116869), (True, '1', '1', 116870), (True, '3', '3', 116871), (True, '12', '12', 116872), (True, '3', '3', 116873), (True, '28', '28', 116874), (True, '38', '38', 116875), (True, '1', '1', 116876), (True, '1', '1', 116877), (True, '3', '3', 116878), (True, '6', '6', 116879), (True, '4', '4', 116880), (True, '15', '15', 116881), (True, '11', '11', 116882), (True, '20', '20', 116883), (True, '5', '5', 116884), (True, '30', '30', 116885), (True, '34', '34', 116886), (True, '3', '3', 116887), (True, '21', '21', 116888), (True, '15', '15', 116889), (True, '39', '39', 116890), (True, '2', '2', 116891), (True, '34', '34', 116892), (True, '47', '47', 116893), (True, '1', '1', 116894), (True, '2', '2', 116895), (True, '5', '5', 116896), (True, '17', '17', 116897), (True, '37', '37', 116898), (True, '48', '48', 116899), (True, '49', '49', 116900), (True, '50', '50', 116901), (True, '1', '1', 116902), (True, '1', '1', 116903), (True, '3', '3', 116904), (True, '1', '1', 116905), (True, '12', '12', 116906)]",True,Accecpted,0.1307118752097732,0.5751633986928104,False,0.0
944541,24579807,"n, k  = map(int, input().split())
s = ""1""
next = 2

for i in range(n - 1):
    s = s + str(next) + s
    next += 1

print(s[k - 1])",34,4540,61,2/11/17 2:46,17,874,2,8,"[(True, '2', '2', 116868), (True, '4', '4', 116869), (True, '1', '1', 116870), (True, '3', '3', 116871), (False, '1', '12', 116872), (False, '2', '3', 116873), (False, '3', '28', 116874)]",False,Wrong Answer,0.1307118752097732,0.5751633986928104,False,0.4285714285714285
961079,24559965,"s = input()
d = s + s
l = len(s)
c = set()
for i in range(l):
    aux = d[i:i + l]
    if aux not in c:
        c.add(aux)
print(len(c))",34,4512,62,2/10/17 3:44,17,883,1,8,"[(True, '4', '4', 117439), (True, '1', '1', 117440), (True, '2', '2', 117441), (True, '25', '25', 117442), (True, '14', '14', 117443), (True, '1', '1', 117444), (True, '2', '2', 117445), (True, '1', '1', 117446), (True, '49', '49', 117447), (True, '50', '50', 117448), (True, '8', '8', 117449), (True, '49', '49', 117450), (True, '49', '49', 117451), (True, '12', '12', 117452), (True, '3', '3', 117453), (True, '25', '25', 117454), (True, '4', '4', 117455), (True, '48', '48', 117456), (True, '49', '49', 117457), (True, '50', '50', 117458), (True, '50', '50', 117459), (True, '8', '8', 117460), (True, '12', '12', 117461), (True, '15', '15', 117462), (True, '47', '47', 117463), (True, '23', '23', 117464), (True, '9', '9', 117465), (True, '3', '3', 117466)]",True,Accecpted,0.471113978575501,0.7605633802816901,False,0.0
961078,24559943,"s = input()
d = s + s
l = len(s)
cont = 0
for i in range(l):
    if d[i:i + l] != s:
        cont += 1
print(cont + 1)",34,4480,31,2/10/17 3:40,15,883,2,8,"[(True, '4', '4', 117439), (True, '1', '1', 117440), (False, '3', '2', 117441), (False, '49', '25', 117442), (False, '40', '14', 117443), (True, '1', '1', 117444), (False, '26', '2', 117445), (True, '1', '1', 117446), (True, '49', '49', 117447), (True, '50', '50', 117448), (False, '43', '8', 117449), (True, '49', '49', 117450), (True, '49', '49', 117451), (False, '45', '12', 117452), (False, '33', '3', 117453), (False, '49', '25', 117454), (False, '37', '4', 117455), (True, '48', '48', 117456), (True, '49', '49', 117457), (True, '50', '50', 117458), (True, '50', '50', 117459), (True, '8', '8', 117460), (False, '45', '12', 117461), (False, '29', '15', 117462), (True, '47', '47', 117463), (False, '45', '23', 117464), (True, '9', '9', 117465), (True, '3', '3', 117466)]",False,Wrong Answer,0.471113978575501,0.7605633802816901,False,0.4285714285714285
1187570,24560764,"n = int(input())
e = int(input())


for i in range(1, 31):
    if n ** i == e:
        print(""YES"")
        print(i-1)
        exit()
        
print(""NO"")",34,4512,124,2/10/17 5:17,11,1082,1,8,"[(True, 'YES\n1', 'YES\n1', 133227), (True, 'NO', 'NO', 133228), (True, 'YES\n0', 'YES\n0', 133229), (True, 'NO', 'NO', 133230), (True, 'NO', 'NO', 133231), (True, 'NO', 'NO', 133232), (True, 'NO', 'NO', 133233), (True, 'YES\n1', 'YES\n1', 133234), (True, 'YES\n5', 'YES\n5', 133235), (True, 'NO', 'NO', 133236), (True, 'NO', 'NO', 133237), (True, 'YES\n2', 'YES\n2', 133238), (True, 'NO', 'NO', 133239), (True, 'YES\n5', 'YES\n5', 133240), (True, 'YES\n2', 'YES\n2', 133241), (True, 'NO', 'NO', 133242), (True, 'NO', 'NO', 133243), (True, 'NO', 'NO', 133244), (True, 'NO', 'NO', 133245), (True, 'YES\n2', 'YES\n2', 133246), (True, 'NO', 'NO', 133247), (True, 'NO', 'NO', 133248), (True, 'NO', 'NO', 133249), (True, 'YES\n1', 'YES\n1', 133250), (True, 'YES\n3', 'YES\n3', 133251), (True, 'NO', 'NO', 133252), (True, 'NO', 'NO', 133253), (True, 'NO', 'NO', 133254), (True, 'NO', 'NO', 133255), (True, 'NO', 'NO', 133256), (True, 'NO', 'NO', 133257), (True, 'YES\n1', 'YES\n1', 133258), (True, 'NO', 'NO', 133259), (True, 'YES\n2', 'YES\n2', 133260), (True, 'NO', 'NO', 133261), (True, 'NO', 'NO', 133262), (True, 'YES\n1', 'YES\n1', 133263), (True, 'YES\n5', 'YES\n5', 133264), (True, 'YES\n3', 'YES\n3', 133265), (True, 'NO', 'NO', 133266), (True, 'NO', 'NO', 133267), (True, 'NO', 'NO', 133268), (True, 'NO', 'NO', 133269), (True, 'NO', 'NO', 133270), (True, 'NO', 'NO', 133271), (True, 'NO', 'NO', 133272), (True, 'YES\n1', 'YES\n1', 133273), (True, 'NO', 'NO', 133274), (True, 'YES\n1', 'YES\n1', 133275), (True, 'YES\n0', 'YES\n0', 133276), (True, 'NO', 'NO', 133277), (True, 'NO', 'NO', 133278), (True, 'NO', 'NO', 133279), (True, 'NO', 'NO', 133280), (True, 'YES\n29', 'YES\n29', 133281), (True, 'NO', 'NO', 133282), (True, 'YES\n3', 'YES\n3', 133283), (True, 'NO', 'NO', 133284), (True, 'YES\n8', 'YES\n8', 133285), (True, 'NO', 'NO', 133286), (True, 'NO', 'NO', 133287), (True, 'NO', 'NO', 133288), (True, 'NO', 'NO', 133289), (True, 'NO', 'NO', 133290)]",True,Accecpted,0.8656030552541708,0.9939024390243902,False,0.0
1187569,24560744,"n = int(input())
e = int(input())


for i in range(2, 31):
    if n ** i == e:
        print(""YES"")
        print(i-1)
        exit()
        
print(""NO"")",34,4496,92,2/10/17 5:15,11,1082,2,8,"[(True, 'YES\n1', 'YES\n1', 133227), (True, 'NO', 'NO', 133228), (False, 'NO', 'YES\n0', 133229), (True, 'NO', 'NO', 133230), (True, 'NO', 'NO', 133231), (True, 'NO', 'NO', 133232), (True, 'NO', 'NO', 133233), (True, 'YES\n1', 'YES\n1', 133234), (True, 'YES\n5', 'YES\n5', 133235), (True, 'NO', 'NO', 133236), (True, 'NO', 'NO', 133237), (True, 'YES\n2', 'YES\n2', 133238), (True, 'NO', 'NO', 133239), (True, 'YES\n5', 'YES\n5', 133240), (True, 'YES\n2', 'YES\n2', 133241), (True, 'NO', 'NO', 133242), (True, 'NO', 'NO', 133243), (True, 'NO', 'NO', 133244), (True, 'NO', 'NO', 133245), (True, 'YES\n2', 'YES\n2', 133246), (True, 'NO', 'NO', 133247), (True, 'NO', 'NO', 133248), (True, 'NO', 'NO', 133249), (True, 'YES\n1', 'YES\n1', 133250), (True, 'YES\n3', 'YES\n3', 133251), (True, 'NO', 'NO', 133252), (True, 'NO', 'NO', 133253), (True, 'NO', 'NO', 133254), (True, 'NO', 'NO', 133255), (True, 'NO', 'NO', 133256), (True, 'NO', 'NO', 133257), (True, 'YES\n1', 'YES\n1', 133258), (True, 'NO', 'NO', 133259), (True, 'YES\n2', 'YES\n2', 133260), (True, 'NO', 'NO', 133261), (True, 'NO', 'NO', 133262), (True, 'YES\n1', 'YES\n1', 133263), (True, 'YES\n5', 'YES\n5', 133264), (True, 'YES\n3', 'YES\n3', 133265), (True, 'NO', 'NO', 133266), (True, 'NO', 'NO', 133267), (True, 'NO', 'NO', 133268), (True, 'NO', 'NO', 133269), (True, 'NO', 'NO', 133270), (True, 'NO', 'NO', 133271), (True, 'NO', 'NO', 133272), (True, 'YES\n1', 'YES\n1', 133273), (True, 'NO', 'NO', 133274), (True, 'YES\n1', 'YES\n1', 133275), (False, 'NO', 'YES\n0', 133276), (True, 'NO', 'NO', 133277), (True, 'NO', 'NO', 133278), (True, 'NO', 'NO', 133279), (True, 'NO', 'NO', 133280), (True, 'YES\n29', 'YES\n29', 133281), (True, 'NO', 'NO', 133282), (True, 'YES\n3', 'YES\n3', 133283), (True, 'NO', 'NO', 133284), (True, 'YES\n8', 'YES\n8', 133285), (True, 'NO', 'NO', 133286), (True, 'NO', 'NO', 133287), (True, 'NO', 'NO', 133288), (True, 'NO', 'NO', 133289), (True, 'NO', 'NO', 133290)]",False,Wrong Answer,0.8656030552541708,0.9939024390243902,False,0.03125
1259395,22863926,"n,a,b=map(int, input().split())
print(min((n-a),b+1))",34,12,124,12/10/16 22:03,2,1142,1,8,"[(True, '2', '2', 138318), (True, '3', '3', 138319), (True, '1', '1', 138320), (True, '1', '1', 138321), (True, '4', '4', 138322), (True, '7', '7', 138323), (True, '5', '5', 138324), (True, '6', '6', 138325), (True, '10', '10', 138326), (True, '7', '7', 138327), (True, '9', '9', 138328), (True, '15', '15', 138329), (True, '8', '8', 138330), (True, '2', '2', 138331), (True, '24', '24', 138332), (True, '5', '5', 138333), (True, '6', '6', 138334), (True, '16', '16', 138335), (True, '5', '5', 138336), (True, '12', '12', 138337), (True, '17', '17', 138338), (True, '38', '38', 138339), (True, '18', '18', 138340), (True, '38', '38', 138341), (True, '13', '13', 138342), (True, '8', '8', 138343), (True, '13', '13', 138344), (True, '1', '1', 138345), (True, '40', '40', 138346), (True, '53', '53', 138347), (True, '34', '34', 138348), (True, '23', '23', 138349), (True, '39', '39', 138350), (True, '38', '38', 138351), (True, '13', '13', 138352), (True, '36', '36', 138353), (True, '7', '7', 138354), (True, '21', '21', 138355), (True, '21', '21', 138356), (True, '2', '2', 138357), (True, '43', '43', 138358), (True, '9', '9', 138359), (True, '14', '14', 138360), (True, '23', '23', 138361), (True, '89', '89', 138362), (True, '32', '32', 138363), (True, '73', '73', 138364), (True, '89', '89', 138365), (True, '19', '19', 138366), (True, '1', '1', 138367)]",True,Accecpted,1.133422688662942e-154,0.981132075471698,False,0.0
1259394,22863856,"n,a,b=map(int, input().split())
print(min((n-a),b))",34,0,92,12/10/16 21:59,2,1142,2,8,"[(False, '1', '2', 138318), (True, '3', '3', 138319), (False, '0', '1', 138320), (True, '1', '1', 138321), (False, '3', '4', 138322), (False, '6', '7', 138323), (True, '5', '5', 138324), (False, '5', '6', 138325), (False, '9', '10', 138326), (True, '7', '7', 138327), (False, '8', '9', 138328), (False, '14', '15', 138329), (True, '8', '8', 138330), (False, '1', '2', 138331), (False, '23', '24', 138332), (True, '5', '5', 138333), (False, '5', '6', 138334), (False, '15', '16', 138335), (True, '5', '5', 138336), (False, '11', '12', 138337), (False, '16', '17', 138338), (True, '38', '38', 138339), (False, '17', '18', 138340), (False, '37', '38', 138341), (True, '13', '13', 138342), (False, '7', '8', 138343), (False, '12', '13', 138344), (True, '1', '1', 138345), (False, '39', '40', 138346), (False, '52', '53', 138347), (True, '34', '34', 138348), (False, '22', '23', 138349), (False, '38', '39', 138350), (True, '38', '38', 138351), (False, '12', '13', 138352), (False, '35', '36', 138353), (True, '7', '7', 138354), (False, '20', '21', 138355), (False, '20', '21', 138356), (True, '2', '2', 138357), (False, '42', '43', 138358), (False, '8', '9', 138359), (True, '14', '14', 138360), (False, '22', '23', 138361), (False, '88', '89', 138362), (True, '32', '32', 138363), (False, '72', '73', 138364), (False, '88', '89', 138365), (True, '19', '19', 138366), (False, '0', '1', 138367)]",False,Wrong Answer,1.133422688662942e-154,0.981132075471698,False,0.66
1368012,24947055,"n = int(input())
l = list(map(int, input().split()))
s = sum(l)
if n > s:
    n = n % s
if n == 0:
    for i in range(6, -1, -1):
        if l[i] != 0:
            print(i + 1)
            exit()
c = 0
for i in range(7):
    c += l[i]
    if c >= n:
        print(i + 1)
        exit()",34,4552,124,2/23/17 22:42,16,1226,1,8,"[(True, '6', '6', 144050), (True, '1', '1', 144051), (True, '1', '1', 144052), (True, '3', '3', 144053), (True, '1', '1', 144054), (True, '6', '6', 144055), (True, '6', '6', 144056), (True, '1', '1', 144057), (True, '1', '1', 144058), (True, '1', '1', 144059), (True, '3', '3', 144060), (True, '3', '3', 144061), (True, '7', '7', 144062), (True, '7', '7', 144063), (True, '1', '1', 144064), (True, '1', '1', 144065), (True, '6', '6', 144066), (True, '1', '1', 144067), (True, '1', '1', 144068), (True, '7', '7', 144069), (True, '1', '1', 144070), (True, '2', '2', 144071), (True, '7', '7', 144072), (True, '2', '2', 144073), (True, '6', '6', 144074), (True, '7', '7', 144075), (True, '6', '6', 144076), (True, '2', '2', 144077), (True, '7', '7', 144078), (True, '7', '7', 144079), (True, '6', '6', 144080), (True, '7', '7', 144081), (True, '7', '7', 144082), (True, '7', '7', 144083), (True, '6', '6', 144084), (True, '4', '4', 144085), (True, '6', '6', 144086), (True, '7', '7', 144087), (True, '7', '7', 144088), (True, '4', '4', 144089), (True, '7', '7', 144090), (True, '7', '7', 144091), (True, '4', '4', 144092), (True, '4', '4', 144093), (True, '7', '7', 144094), (True, '7', '7', 144095), (True, '7', '7', 144096), (True, '3', '3', 144097), (True, '6', '6', 144098)]",True,Accecpted,0.5878210813728206,0.7679671457905544,False,0.0
1368011,24946807,"n = int(input())
l = list(map(int, input().split()))
s = sum(l)
if n > s:
    n = n % s
c = 0
for i in range(7):
    c += l[i]
    if c >= n:
        print(i + 1)
        exit()",34,4528,122,2/23/17 22:30,11,1226,2,8,"[(True, '6', '6', 144050), (True, '1', '1', 144051), (True, '1', '1', 144052), (True, '3', '3', 144053), (True, '1', '1', 144054), (True, '6', '6', 144055), (True, '6', '6', 144056), (True, '1', '1', 144057), (True, '1', '1', 144058), (True, '1', '1', 144059), (True, '3', '3', 144060), (True, '3', '3', 144061), (True, '7', '7', 144062), (True, '7', '7', 144063), (True, '1', '1', 144064), (True, '1', '1', 144065), (True, '6', '6', 144066), (True, '1', '1', 144067), (True, '1', '1', 144068), (False, '1', '7', 144069), (True, '1', '1', 144070), (True, '2', '2', 144071), (True, '7', '7', 144072), (True, '2', '2', 144073), (True, '6', '6', 144074), (False, '1', '7', 144075), (True, '6', '6', 144076), (False, '1', '2', 144077), (True, '7', '7', 144078), (True, '7', '7', 144079), (True, '6', '6', 144080), (False, '1', '7', 144081), (False, '1', '7', 144082), (True, '7', '7', 144083), (True, '6', '6', 144084), (True, '4', '4', 144085), (True, '6', '6', 144086), (True, '7', '7', 144087), (True, '7', '7', 144088), (True, '4', '4', 144089), (True, '7', '7', 144090), (True, '7', '7', 144091), (False, '1', '4', 144092), (False, '1', '4', 144093), (False, '1', '7', 144094), (True, '7', '7', 144095), (True, '7', '7', 144096), (False, '1', '3', 144097), (False, '1', '6', 144098)]",False,Wrong Answer,0.5878210813728206,0.7679671457905544,False,0.2040816326530612
1865767,23113084,"n,m=map(int, input().split())
res=0
for i in range(int(n**0.5)+2):
    for j in range(n+1):
        if i**2+j==n and i+j**2==m:
            res+=1
print(res)",34,4520,154,12/18/16 21:39,7,1681,1,8,"[(True, '1', '1', 168975), (True, '1', '1', 168976), (True, '0', '0', 168977), (True, '1', '1', 168978), (True, '1', '1', 168979), (True, '1', '1', 168980), (True, '0', '0', 168981), (True, '0', '0', 168982), (True, '0', '0', 168983), (True, '0', '0', 168984), (True, '1', '1', 168985), (True, '2', '2', 168986), (True, '1', '1', 168987), (True, '1', '1', 168988), (True, '1', '1', 168989), (True, '1', '1', 168990), (True, '1', '1', 168991), (True, '1', '1', 168992), (True, '1', '1', 168993), (True, '1', '1', 168994), (True, '1', '1', 168995), (True, '1', '1', 168996), (True, '1', '1', 168997), (True, '1', '1', 168998), (True, '1', '1', 168999), (True, '1', '1', 169000), (True, '1', '1', 169001), (True, '1', '1', 169002), (True, '1', '1', 169003), (True, '1', '1', 169004), (True, '1', '1', 169005), (True, '1', '1', 169006), (True, '0', '0', 169007), (True, '0', '0', 169008), (True, '0', '0', 169009), (True, '0', '0', 169010), (True, '0', '0', 169011), (True, '0', '0', 169012), (True, '0', '0', 169013), (True, '0', '0', 169014), (True, '0', '0', 169015), (True, '0', '0', 169016), (True, '0', '0', 169017), (True, '0', '0', 169018), (True, '1', '1', 169019), (True, '0', '0', 169020), (True, '1', '1', 169021), (True, '0', '0', 169022), (True, '0', '0', 169023), (True, '0', '0', 169024), (True, '0', '0', 169025), (True, '0', '0', 169026), (True, '0', '0', 169027), (True, '0', '0', 169028)]",True,Accecpted,0.6422727797927412,0.9876543209876544,False,0.0
1865766,23113006,"n,m=map(int, input().split())
res=0
for i in range(int(n**0.5)+1):
    for j in range(n):
        if i**2+j==n and i+j**2==m:
            res+=1
print(res)",34,4496,124,12/18/16 21:35,7,1681,2,8,"[(True, '1', '1', 168975), (True, '1', '1', 168976), (True, '0', '0', 168977), (True, '1', '1', 168978), (True, '1', '1', 168979), (True, '1', '1', 168980), (True, '0', '0', 168981), (True, '0', '0', 168982), (True, '0', '0', 168983), (True, '0', '0', 168984), (True, '1', '1', 168985), (False, '1', '2', 168986), (True, '1', '1', 168987), (True, '1', '1', 168988), (True, '1', '1', 168989), (True, '1', '1', 168990), (True, '1', '1', 168991), (True, '1', '1', 168992), (True, '1', '1', 168993), (True, '1', '1', 168994), (True, '1', '1', 168995), (True, '1', '1', 168996), (True, '1', '1', 168997), (True, '1', '1', 168998), (True, '1', '1', 168999), (True, '1', '1', 169000), (True, '1', '1', 169001), (True, '1', '1', 169002), (True, '1', '1', 169003), (True, '1', '1', 169004), (True, '1', '1', 169005), (True, '1', '1', 169006), (True, '0', '0', 169007), (True, '0', '0', 169008), (True, '0', '0', 169009), (True, '0', '0', 169010), (True, '0', '0', 169011), (True, '0', '0', 169012), (True, '0', '0', 169013), (True, '0', '0', 169014), (True, '0', '0', 169015), (True, '0', '0', 169016), (True, '0', '0', 169017), (True, '0', '0', 169018), (True, '1', '1', 169019), (True, '0', '0', 169020), (True, '1', '1', 169021), (True, '0', '0', 169022), (True, '0', '0', 169023), (True, '0', '0', 169024), (True, '0', '0', 169025), (True, '0', '0', 169026), (True, '0', '0', 169027), (True, '0', '0', 169028)]",False,Wrong Answer,0.6422727797927412,0.9876543209876544,False,0.0185185185185185
1944287,24561389,"from math import sqrt
a,b,c = map(int, input().split())
s = int(sqrt(a*b*c))
print((s//a + s//b + s//c)*4)",34,4520,122,2/10/17 6:12,4,1738,1,8,"[(True, '12', '12', 173163), (True, '28', '28', 173164), (True, '68', '68', 173165), (True, '56', '56', 173166), (True, '184', '184', 173167), (True, '308', '308', 173168), (True, '380', '380', 173169), (True, '184', '184', 173170), (True, '444', '444', 173171), (True, '120', '120', 173172), (True, '40008', '40008', 173173), (True, '332', '332', 173174), (True, '528', '528', 173175), (True, '740', '740', 173176), (True, '60', '60', 173177), (True, '856', '856', 173178), (True, '336', '336', 173179), (True, '1308', '1308', 173180), (True, '1736', '1736', 173181), (True, '8964', '8964', 173182), (True, '16436', '16436', 173183), (True, '1200', '1200', 173184), (True, '14500', '14500', 173185), (True, '1188', '1188', 173186), (True, '40008', '40008', 173187), (True, '36', '36', 173188), (True, '1184', '1184', 173189)]",True,Accecpted,0.8153551038173115,0.976525821596244,False,0.0
1944286,24561387,"from math import sqrt
a,b,c = map(int, input().split())
s = sqrt(a*b*c)
print((s//a + s//b + s//c)*4)",34,4480,92,2/10/17 6:12,4,1738,2,8,"[(False, '12.0', '12', 173163), (False, '28.0', '28', 173164), (False, '68.0', '68', 173165), (False, '56.0', '56', 173166), (False, '184.0', '184', 173167), (False, '308.0', '308', 173168), (False, '380.0', '380', 173169), (False, '184.0', '184', 173170), (False, '444.0', '444', 173171), (False, '120.0', '120', 173172), (False, '40008.0', '40008', 173173), (False, '332.0', '332', 173174), (False, '528.0', '528', 173175), (False, '740.0', '740', 173176), (False, '60.0', '60', 173177), (False, '856.0', '856', 173178), (False, '336.0', '336', 173179), (False, '1308.0', '1308', 173180), (False, '1736.0', '1736', 173181), (False, '8964.0', '8964', 173182), (False, '16436.0', '16436', 173183), (False, '1200.0', '1200', 173184), (False, '14500.0', '14500', 173185), (False, '1188.0', '1188', 173186), (False, '40008.0', '40008', 173187), (False, '36.0', '36', 173188), (False, '1184.0', '1184', 173189)]",False,Wrong Answer,0.8153551038173115,0.976525821596244,False,1.0
2899780,22003099,"n=int(input())-1
while n>4:
    n=(n-5)//2
print([""Sheldon"",""Leonard"",""Penny"",""Rajesh"",""Howard""][n])",34,0,62,11/3/16 1:43,4,2481,1,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (True, 'Penny', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (True, 'Penny', 'Penny', 216618), (True, 'Rajesh', 'Rajesh', 216619), (True, 'Howard', 'Howard', 216620), (True, 'Howard', 'Howard', 216621), (True, 'Penny', 'Penny', 216622), (True, 'Rajesh', 'Rajesh', 216623), (True, 'Leonard', 'Leonard', 216624), (True, 'Penny', 'Penny', 216625), (True, 'Howard', 'Howard', 216626), (True, 'Rajesh', 'Rajesh', 216627), (True, 'Rajesh', 'Rajesh', 216628), (True, 'Leonard', 'Leonard', 216629), (True, 'Penny', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (True, 'Howard', 'Howard', 216632), (True, 'Leonard', 'Leonard', 216633), (True, 'Rajesh', 'Rajesh', 216634), (True, 'Sheldon', 'Sheldon', 216635), (True, 'Rajesh', 'Rajesh', 216636), (True, 'Leonard', 'Leonard', 216637), (True, 'Howard', 'Howard', 216638), (True, 'Penny', 'Penny', 216639), (True, 'Penny', 'Penny', 216640), (True, 'Rajesh', 'Rajesh', 216641), (True, 'Sheldon', 'Sheldon', 216642), (True, 'Penny', 'Penny', 216643), (True, 'Penny', 'Penny', 216644), (True, 'Leonard', 'Leonard', 216645), (True, 'Howard', 'Howard', 216646), (True, 'Penny', 'Penny', 216647), (True, 'Penny', 'Penny', 216648), (True, 'Penny', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",True,Accecpted,0.0,0.3100303951367781,False,0.0
2899778,22002217,"def bigbang(stack, s):
    for i in range(s):
        a=stack.pop(0)
        stack.append(a)
        stack.append(a)
    return a

s = int(input())
print(bigbang([""Sheldon"", ""Leonard"", ""Penny"", ""Rajesh"", ""Howard""], s))",34,1436,1000,11/3/16 0:21,9,2481,3,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (True, 'Penny', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (True, 'Penny', 'Penny', 216618), (True, 'Rajesh', 'Rajesh', 216619), (True, 'Howard', 'Howard', 216620), (True, 'Howard', 'Howard', 216621)]",True,Time Limit,0.0,0.3100303951367781,False,0.0
164881,29369554,"s = list(map(int, input().split()))
t = list(map(int, input().split()))
xs = [ s[i] - t[i] for i in range(len(s)) ]

demand = []
supply = []
for x in xs:
    if x < 0:
        demand.append(-x)
    else:
        supply.append(x)

for i in range(len(supply)):
    supply[i] = (supply[i] // 2) * 2

res = True
if len(demand):
    res = sum(supply) >= sum(demand) * 2

print('Yes' if res else 'No')",43,4520,62,8/12/17 8:56,20,133,1,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (True, 'Yes', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (True, 'Yes', 'Yes', 59002), (True, 'No', 'No', 59003), (True, 'Yes', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (True, 'Yes', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (True, 'Yes', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (True, 'Yes', 'Yes', 59023), (True, 'Yes', 'Yes', 59024), (True, 'No', 'No', 59025), (True, 'Yes', 'Yes', 59026), (True, 'No', 'No', 59027), (True, 'Yes', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (True, 'Yes', 'Yes', 59036), (True, 'Yes', 'Yes', 59037), (True, 'Yes', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (True, 'Yes', 'Yes', 59045), (True, 'Yes', 'Yes', 59046), (True, 'Yes', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (True, 'Yes', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",True,Accecpted,1.9178690540190823e-78,0.1515151515151515,False,0.0
164818,29367996,"a,b,c = [int(i) for i in input().split()]
x,y,z = [int(i) for i in input().split()]
a1 = [0,0,0]
a1[0] = max(0,  a - x)
a1[1] = max(0, b- y)
a1[2] = max(0, c - z)
lost = max(0, x - a) + max(0, y - b) + max(0, z - c)
for i in a1:
    lost -= i/2
if (lost  <= 0):
    print(""Yes"")
else:
    print(""No"")",43,4512,62,8/12/17 7:23,13,133,2,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (False, 'Yes', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (True, 'Yes', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (True, 'Yes', 'Yes', 59002), (False, 'Yes', 'No', 59003), (True, 'Yes', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (True, 'Yes', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (False, 'Yes', 'No', 59014), (False, 'Yes', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (True, 'Yes', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (False, 'Yes', 'No', 59021), (True, 'No', 'No', 59022), (True, 'Yes', 'Yes', 59023), (True, 'Yes', 'Yes', 59024), (False, 'Yes', 'No', 59025), (True, 'Yes', 'Yes', 59026), (True, 'No', 'No', 59027), (True, 'Yes', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (True, 'Yes', 'Yes', 59036), (True, 'Yes', 'Yes', 59037), (True, 'Yes', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (True, 'Yes', 'Yes', 59045), (True, 'Yes', 'Yes', 59046), (True, 'Yes', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (False, 'Yes', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (True, 'Yes', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",False,Wrong Answer,1.9178690540190823e-78,0.1515151515151515,False,0.0886075949367088
831420,25117215,"line = sorted([int(x) for x in input().split(' ')])
print(str(line[2] - line[0]))",43,4532,62,3/1/17 10:35,2,764,1,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (True, '99', '99', 109990), (True, '99', '99', 109991), (True, '99', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (True, '85', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (True, '88', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (True, '67', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (True, '67', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (True, '8', '8', 110026), (True, '10', '10', 110027), (True, '49', '49', 110028), (True, '10', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (True, '99', '99', 110034), (True, '5', '5', 110035)]",True,Accecpted,0.0,0.4561403508771929,False,0.0
836228,28933776,"a=input().split()
a.sort()
print((abs(int(a[1])-int(a[0])) + abs(int(a[1])-int(a[2]))))",43,4492,46,7/27/17 18:50,3,764,2,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (False, '195', '99', 109990), (False, '108', '99', 109991), (False, '154', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (False, '153', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (False, '104', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (False, '107', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (False, '93', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (False, '12', '8', 110026), (False, '15', '10', 110027), (True, '49', '49', 110028), (False, '15', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (False, '197', '99', 110034), (True, '5', '5', 110035)]",False,Wrong Answer,0.0,0.4561403508771929,False,0.2291666666666666
938748,25336158,"import sys

def main():
	print(power(1378, int(sys.stdin.readline()), mod=10))

def power(a, n, mod):
	cur_power = a
	ans = 1

	for i in range(32):
		if n & (1 << i):
			ans *= cur_power

		cur_power *= cur_power
		cur_power %= mod

	ans %= mod

	return ans


if __name__ == '__main__':
	main()",43,4492,61,3/8/17 11:03,23,868,1,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (True, '1', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",True,Accecpted,2.3546371141671664e-155,0.1733333333333333,False,0.0
938908,25338416,"n = int(input())
if n % 4 == 1:
  print(8)
elif n % 4 == 2:
  print(4)
elif n % 4 == 3:
  print(2)
elif n % 4 == 0:
  print(6)",43,4516,62,3/8/17 12:56,9,868,2,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (False, '6', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",False,Wrong Answer,2.3546371141671664e-155,0.1733333333333333,False,0.0333333333333333
1040453,24233193,"#Leo Chen
n, m, k = list(map(int,input().split()))
def g(a,b,d):
  return (a+a+(b-1)*d)*b//2
def f(x):
  return g(x,min(x,k),-1) + g(x-1,min(x-1,n-k),-1)
bl, br, ba = 1, m-n, 0
while bl <= br:
  mid = (bl + br) >> 1
  if f(mid) <= m-n:
    ba, bl = mid, mid + 1
  else:
    br = mid - 1
print(1+ba)",43,4516,78,1/28/17 22:10,14,966,1,8,"[(True, '2', '2', 125492), (True, '4', '4', 125493), (True, '3', '3', 125494), (True, '1', '1', 125495), (True, '1', '1', 125496), (True, '1000000000', '1000000000', 125497), (True, '10000034', '10000034', 125498), (True, '1', '1', 125499), (True, '10001', '10001', 125500), (True, '1', '1', 125501), (True, '1', '1', 125502), (True, '1', '1', 125503), (True, '1', '1', 125504), (True, '10001', '10001', 125505), (True, '1115', '1115', 125506), (True, '10002', '10002', 125507), (True, '112', '112', 125508), (True, '25', '25', 125509), (True, '46', '46', 125510), (True, '31', '31', 125511), (True, '117', '117', 125512), (True, '21965', '21965', 125513), (True, '147', '147', 125514), (True, '1465', '1465', 125515), (True, '1', '1', 125516), (True, '9999778', '9999778', 125517), (True, '5000053', '5000053', 125518), (True, '43849', '43849', 125519), (True, '38038', '38038', 125520), (True, '44320', '44320', 125521), (True, '31624', '31624', 125522), (True, '30217', '30217', 125523), (True, '31459', '31459', 125524), (True, '29887', '29887', 125525), (True, '1', '1', 125526), (True, '144', '144', 125527), (True, '84', '84', 125528), (True, '84', '84', 125529), (True, '28', '28', 125530), (True, '42', '42', 125531), (True, '223', '223', 125532), (True, '18389', '18389', 125533), (True, '866', '866', 125534), (True, '2510', '2510', 125535), (True, '1', '1', 125536), (True, '9999852', '9999852', 125537), (True, '5000046', '5000046', 125538), (True, '43846', '43846', 125539), (True, '37930', '37930', 125540), (True, '43163', '43163', 125541), (True, '43371', '43371', 125542), (True, '22853', '22853', 125543), (True, '31464', '31464', 125544), (True, '29998', '29998', 125545), (True, '1', '1', 125546), (True, '97976', '97976', 125547), (True, '97975', '97975', 125548), (True, '13903', '13903', 125549), (True, '13904', '13904', 125550), (True, '9707', '9707', 125551), (True, '9706', '9706', 125552), (True, '333333334', '333333334', 125553), (True, '500000000', '500000000', 125554), (True, '500000000', '500000000', 125555), (True, '333333334', '333333334', 125556), (True, '333333334', '333333334', 125557), (True, '500000000', '500000000', 125558), (True, '500000000', '500000000', 125559), (True, '999999999', '999999999', 125560)]",True,Accecpted,4.5161984234307724e-232,0.0149068322981366,False,0.0
1040889,24270198,"import sys
beds,pillows,frodo=map(int,sys.stdin.readline().split())
pillows=pillows-beds-1 
layer=2
while pillows>0:
    if beds==1:
        layer=pillows+2
        pillows=0
        break
    if frodo-1<layer-1 and beds-frodo<layer-1:
        layer+=(int(pillows/(beds-1))+1)
        break
    else:
        pillows-=(min(frodo-1,layer-1)+min(layer-1,beds-frodo))
    if pillows>0:
        pillows-=1
    layer+=1   
if pillows==0:
    print(layer)
else:
    print(layer-1)",43,4508,62,1/30/17 18:02,21,966,2,8,"[(True, '2', '2', 125492), (True, '4', '4', 125493), (True, '3', '3', 125494), (True, '1', '1', 125495), (True, '1', '1', 125496), (True, '1000000000', '1000000000', 125497), (False, '10101043', '10000034', 125498), (True, '1', '1', 125499), (True, '10001', '10001', 125500), (True, '1', '1', 125501), (True, '1', '1', 125502), (True, '1', '1', 125503), (True, '1', '1', 125504), (False, '10002', '10001', 125505), (False, '1126', '1115', 125506), (True, '10002', '10002', 125507), (True, '112', '112', 125508), (True, '25', '25', 125509), (True, '46', '46', 125510), (True, '31', '31', 125511), (True, '117', '117', 125512), (True, '21965', '21965', 125513), (True, '147', '147', 125514), (True, '1465', '1465', 125515), (True, '1', '1', 125516), (False, '10100785', '9999778', 125517), (False, '5025178', '5000053', 125518), (False, '43850', '43849', 125519), (True, '38038', '38038', 125520), (True, '44320', '44320', 125521), (True, '31624', '31624', 125522), (True, '30217', '30217', 125523), (True, '31459', '31459', 125524), (True, '29887', '29887', 125525), (True, '1', '1', 125526), (False, '145', '144', 125527), (True, '84', '84', 125528), (True, '84', '84', 125529), (True, '28', '28', 125530), (True, '42', '42', 125531), (True, '223', '223', 125532), (True, '18389', '18389', 125533), (True, '866', '866', 125534), (True, '2510', '2510', 125535), (True, '1', '1', 125536), (False, '10100860', '9999852', 125537), (False, '5025171', '5000046', 125538), (False, '43847', '43846', 125539), (True, '37930', '37930', 125540), (True, '43163', '43163', 125541), (True, '43371', '43371', 125542), (True, '22853', '22853', 125543), (True, '31464', '31464', 125544), (True, '29998', '29998', 125545), (True, '1', '1', 125546), (False, '98073', '97976', 125547), (False, '98073', '97975', 125548), (False, '13904', '13903', 125549), (True, '13904', '13904', 125550), (True, '9707', '9707', 125551), (False, '9707', '9706', 125552), (False, '499999999', '333333334', 125553), (False, '999999998', '500000000', 125554), (False, '999999998', '500000000', 125555), (False, '499999999', '333333334', 125556), (False, '499999999', '333333334', 125557), (False, '999999997', '500000000', 125558), (False, '999999997', '500000000', 125559), (True, '999999999', '999999999', 125560)]",False,Wrong Answer,4.5161984234307724e-232,0.0149068322981366,False,0.3043478260869565
2583150,29508376,"import sys

size = int(sys.stdin.readline().strip())

if size == 2:
  print(""NO"")
  sys.exit(0)

print(""YES"" if size % 2 == 0 else ""NO"")",43,20,124,8/16/17 18:00,9,2223,1,8,"[(True, 'YES', 'YES', 203575), (True, 'NO', 'NO', 203576), (True, 'YES', 'YES', 203577), (True, 'NO', 'NO', 203578), (True, 'NO', 'NO', 203579), (True, 'NO', 'NO', 203580), (True, 'NO', 'NO', 203581), (True, 'YES', 'YES', 203582), (True, 'YES', 'YES', 203583), (True, 'NO', 'NO', 203584), (True, 'NO', 'NO', 203585), (True, 'NO', 'NO', 203586), (True, 'YES', 'YES', 203587), (True, 'YES', 'YES', 203588), (True, 'YES', 'YES', 203589), (True, 'NO', 'NO', 203590), (True, 'YES', 'YES', 203591), (True, 'NO', 'NO', 203592), (True, 'YES', 'YES', 203593), (True, 'YES', 'YES', 203594)]",True,Accecpted,4.960142520714786e-232,0.4107142857142857,False,0.0
2584503,29626706,"n= int(input())
if n<4:
    if n%2!=0:
        print(""NO"")
elif n%2==0:
    print(""YES"")",43,0,124,8/20/17 20:27,6,2223,2,8,"[(True, 'YES', 'YES', 203575), (False, '', 'NO', 203576), (True, 'YES', 'YES', 203577), (True, 'NO', 'NO', 203578), (False, '', 'NO', 203579), (True, 'NO', 'NO', 203580), (False, '', 'NO', 203581), (True, 'YES', 'YES', 203582), (True, 'YES', 'YES', 203583), (False, '', 'NO', 203584), (False, '', 'NO', 203585), (False, '', 'NO', 203586), (True, 'YES', 'YES', 203587), (True, 'YES', 'YES', 203588), (True, 'YES', 'YES', 203589), (False, '', 'NO', 203590), (True, 'YES', 'YES', 203591), (False, '', 'NO', 203592), (True, 'YES', 'YES', 203593), (True, 'YES', 'YES', 203594)]",False,Wrong Answer,4.960142520714786e-232,0.4107142857142857,False,0.4
2899947,22186488,"from math import floor

n = int(input())

c=1
while(c*5<n):
    n-= c * 5
    c*=2


exp = floor((n - 1) / c)
if(exp==0):
    print(""Sheldon"")
if(exp==1):
    print(""Leonard"")
if(exp==2):
    print(""Penny"")
if(exp==3):
    print(""Rajesh"")
if(exp==4):
    print(""Howard"")",43,4,62,11/13/16 6:30,21,2481,1,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (True, 'Penny', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (True, 'Penny', 'Penny', 216618), (True, 'Rajesh', 'Rajesh', 216619), (True, 'Howard', 'Howard', 216620), (True, 'Howard', 'Howard', 216621), (True, 'Penny', 'Penny', 216622), (True, 'Rajesh', 'Rajesh', 216623), (True, 'Leonard', 'Leonard', 216624), (True, 'Penny', 'Penny', 216625), (True, 'Howard', 'Howard', 216626), (True, 'Rajesh', 'Rajesh', 216627), (True, 'Rajesh', 'Rajesh', 216628), (True, 'Leonard', 'Leonard', 216629), (True, 'Penny', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (True, 'Howard', 'Howard', 216632), (True, 'Leonard', 'Leonard', 216633), (True, 'Rajesh', 'Rajesh', 216634), (True, 'Sheldon', 'Sheldon', 216635), (True, 'Rajesh', 'Rajesh', 216636), (True, 'Leonard', 'Leonard', 216637), (True, 'Howard', 'Howard', 216638), (True, 'Penny', 'Penny', 216639), (True, 'Penny', 'Penny', 216640), (True, 'Rajesh', 'Rajesh', 216641), (True, 'Sheldon', 'Sheldon', 216642), (True, 'Penny', 'Penny', 216643), (True, 'Penny', 'Penny', 216644), (True, 'Leonard', 'Leonard', 216645), (True, 'Howard', 'Howard', 216646), (True, 'Penny', 'Penny', 216647), (True, 'Penny', 'Penny', 216648), (True, 'Penny', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",True,Accecpted,0.1286101475434366,0.7255985267034991,False,0.0
2899945,22186472,"n = int(input())

c=1
while(c*5<n):
    n-=c*5
    print(""n "",n)
    c*=2
    print(""C "",c)

if((n-1)/c==0):
    print(""Sheldon"")
if((n-1)/c==1):
    print(""Leonard"")
if((n-1)/c==2):
    print(""Penny"")
if((n-1)/c==3):
    print(""Rajesh"")
if((n-1)/c==4):
    print(""Howard"")",43,0,62,11/13/16 6:26,19,2481,2,8,"[(True, 'Sheldon', 'Sheldon', 216610), (False, 'n  1\nC  2\nSheldon', 'Sheldon', 216611), (False, 'n  1797\nC  2\nn  1787\nC  4\nn  1767\nC  8\nn  1727\nC  16\nn  1647\nC  32\nn  1487\nC  64\nn  1167\nC  128\nn  527\nC  256', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (False, 'n  5\nC  2\nPenny', 'Penny', 216618), (False, 'n  529\nC  2\nn  519\nC  4\nn  499\nC  8\nn  459\nC  16\nn  379\nC  32\nn  219\nC  64', 'Rajesh', 216619), (False, 'n  5028\nC  2\nn  5018\nC  4\nn  4998\nC  8\nn  4958\nC  16\nn  4878\nC  32\nn  4718\nC  64\nn  4398\nC  128\nn  3758\nC  256\nn  2478\nC  512', 'Howard', 216620), (False, 'n  10005\nC  2\nn  9995\nC  4\nn  9975\nC  8\nn  9935\nC  16\nn  9855\nC  32\nn  9695\nC  64\nn  9375\nC  128\nn  8735\nC  256\nn  7455\nC  512\nn  4895\nC  1024', 'Howard', 216621), (False, 'n  499999995\nC  2\nn  499999985\nC  4\nn  499999965\nC  8\nn  499999925\nC  16\nn  499999845\nC  32\nn  499999685\nC  64\nn  499999365\nC  128\nn  499998725\nC  256\nn  499997445\nC  512\nn  499994885\nC  1024\nn  499989765\nC  2048\nn  499979525\nC  4096\nn  499959045\nC  8192\nn  499918085\nC  16384\nn  499836165\nC  32768\nn  499672325\nC  65536\nn  499344645\nC  131072\nn  498689285\nC  262144\nn  497378565\nC  524288\nn  494757125\nC  1048576\nn  489514245\nC  2097152\nn  479028485\nC  4194304\nn  458056965\nC  8388608\nn  416113925\nC  16777216\nn  332227845\nC  33554432\nn  164455685\nC  67108864', 'Penny', 216622), (False, 'n  58\nC  2\nn  48\nC  4\nn  28\nC  8', 'Rajesh', 216623), (False, 'n  836\nC  2\nn  826\nC  4\nn  806\nC  8\nn  766\nC  16\nn  686\nC  32\nn  526\nC  64\nn  206\nC  128', 'Leonard', 216624), (False, 'n  3662\nC  2\nn  3652\nC  4\nn  3632\nC  8\nn  3592\nC  16\nn  3512\nC  32\nn  3352\nC  64\nn  3032\nC  128\nn  2392\nC  256\nn  1112\nC  512', 'Penny', 216625), (False, 'n  38609\nC  2\nn  38599\nC  4\nn  38579\nC  8\nn  38539\nC  16\nn  38459\nC  32\nn  38299\nC  64\nn  37979\nC  128\nn  37339\nC  256\nn  36059\nC  512\nn  33499\nC  1024\nn  28379\nC  2048\nn  18139\nC  4096', 'Howard', 216626), (False, 'n  282793\nC  2\nn  282783\nC  4\nn  282763\nC  8\nn  282723\nC  16\nn  282643\nC  32\nn  282483\nC  64\nn  282163\nC  128\nn  281523\nC  256\nn  280243\nC  512\nn  277683\nC  1024\nn  272563\nC  2048\nn  262323\nC  4096\nn  241843\nC  8192\nn  200883\nC  16384\nn  118963\nC  32768', 'Rajesh', 216627), (False, 'n  9266281\nC  2\nn  9266271\nC  4\nn  9266251\nC  8\nn  9266211\nC  16\nn  9266131\nC  32\nn  9265971\nC  64\nn  9265651\nC  128\nn  9265011\nC  256\nn  9263731\nC  512\nn  9261171\nC  1024\nn  9256051\nC  2048\nn  9245811\nC  4096\nn  9225331\nC  8192\nn  9184371\nC  16384\nn  9102451\nC  32768\nn  8938611\nC  65536\nn  8610931\nC  131072\nn  7955571\nC  262144\nn  6644851\nC  524288\nn  4023411\nC  1048576', 'Rajesh', 216628), (False, 'n  27385961\nC  2\nn  27385951\nC  4\nn  27385931\nC  8\nn  27385891\nC  16\nn  27385811\nC  32\nn  27385651\nC  64\nn  27385331\nC  128\nn  27384691\nC  256\nn  27383411\nC  512\nn  27380851\nC  1024\nn  27375731\nC  2048\nn  27365491\nC  4096\nn  27345011\nC  8192\nn  27304051\nC  16384\nn  27222131\nC  32768\nn  27058291\nC  65536\nn  26730611\nC  131072\nn  26075251\nC  262144\nn  24764531\nC  524288\nn  22143091\nC  1048576\nn  16900211\nC  2097152\nn  6414451\nC  4194304', 'Leonard', 216629), (False, 'n  121580137\nC  2\nn  121580127\nC  4\nn  121580107\nC  8\nn  121580067\nC  16\nn  121579987\nC  32\nn  121579827\nC  64\nn  121579507\nC  128\nn  121578867\nC  256\nn  121577587\nC  512\nn  121575027\nC  1024\nn  121569907\nC  2048\nn  121559667\nC  4096\nn  121539187\nC  8192\nn  121498227\nC  16384\nn  121416307\nC  32768\nn  121252467\nC  65536\nn  120924787\nC  131072\nn  120269427\nC  262144\nn  118958707\nC  524288\nn  116337267\nC  1048576\nn  111094387\nC  2097152\nn  100608627\nC  4194304\nn  79637107\nC  8388608\nn  37694067\nC  16777216', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (False, 'n  295\nC  2\nn  285\nC  4\nn  265\nC  8\nn  225\nC  16\nn  145\nC  32', 'Howard', 216632), (False, 'n  1740\nC  2\nn  1730\nC  4\nn  1710\nC  8\nn  1670\nC  16\nn  1590\nC  32\nn  1430\nC  64\nn  1110\nC  128\nn  470\nC  256', 'Leonard', 216633), (False, 'n  8297\nC  2\nn  8287\nC  4\nn  8267\nC  8\nn  8227\nC  16\nn  8147\nC  32\nn  7987\nC  64\nn  7667\nC  128\nn  7027\nC  256\nn  5747\nC  512\nn  3187\nC  1024', 'Rajesh', 216634), (False, 'n  184513\nC  2\nn  184503\nC  4\nn  184483\nC  8\nn  184443\nC  16\nn  184363\nC  32\nn  184203\nC  64\nn  183883\nC  128\nn  183243\nC  256\nn  181963\nC  512\nn  179403\nC  1024\nn  174283\nC  2048\nn  164043\nC  4096\nn  143563\nC  8192\nn  102603\nC  16384\nn  20683\nC  32768', 'Sheldon', 216635), (False, 'n  1154409\nC  2\nn  1154399\nC  4\nn  1154379\nC  8\nn  1154339\nC  16\nn  1154259\nC  32\nn  1154099\nC  64\nn  1153779\nC  128\nn  1153139\nC  256\nn  1151859\nC  512\nn  1149299\nC  1024\nn  1144179\nC  2048\nn  1133939\nC  4096\nn  1113459\nC  8192\nn  1072499\nC  16384\nn  990579\nC  32768\nn  826739\nC  65536\nn  499059\nC  131072', 'Rajesh', 216636), (False, 'n  28643945\nC  2\nn  28643935\nC  4\nn  28643915\nC  8\nn  28643875\nC  16\nn  28643795\nC  32\nn  28643635\nC  64\nn  28643315\nC  128\nn  28642675\nC  256\nn  28641395\nC  512\nn  28638835\nC  1024\nn  28633715\nC  2048\nn  28623475\nC  4096\nn  28602995\nC  8192\nn  28562035\nC  16384\nn  28480115\nC  32768\nn  28316275\nC  65536\nn  27988595\nC  131072\nn  27333235\nC  262144\nn  26022515\nC  524288\nn  23401075\nC  1048576\nn  18158195\nC  2097152\nn  7672435\nC  4194304', 'Leonard', 216637), (False, 'n  159222633\nC  2\nn  159222623\nC  4\nn  159222603\nC  8\nn  159222563\nC  16\nn  159222483\nC  32\nn  159222323\nC  64\nn  159222003\nC  128\nn  159221363\nC  256\nn  159220083\nC  512\nn  159217523\nC  1024\nn  159212403\nC  2048\nn  159202163\nC  4096\nn  159181683\nC  8192\nn  159140723\nC  16384\nn  159058803\nC  32768\nn  158894963\nC  65536\nn  158567283\nC  131072\nn  157911923\nC  262144\nn  156601203\nC  524288\nn  153979763\nC  1048576\nn  148736883\nC  2097152\nn  138251123\nC  4194304\nn  117279603\nC  8388608\nn  75336563\nC  16777216', 'Howard', 216638), (False, 'n  19\nC  2\nn  9\nC  4\nPenny', 'Penny', 216639), (False, 'n  500\nC  2\nn  490\nC  4\nn  470\nC  8\nn  430\nC  16\nn  350\nC  32\nn  190\nC  64', 'Penny', 216640), (False, 'n  4420\nC  2\nn  4410\nC  4\nn  4390\nC  8\nn  4350\nC  16\nn  4270\nC  32\nn  4110\nC  64\nn  3790\nC  128\nn  3150\nC  256\nn  1870\nC  512', 'Rajesh', 216641), (False, 'n  12074\nC  2\nn  12064\nC  4\nn  12044\nC  8\nn  12004\nC  16\nn  11924\nC  32\nn  11764\nC  64\nn  11444\nC  128\nn  10804\nC  256\nn  9524\nC  512\nn  6964\nC  1024\nn  1844\nC  2048', 'Sheldon', 216642), (False, 'n  469721\nC  2\nn  469711\nC  4\nn  469691\nC  8\nn  469651\nC  16\nn  469571\nC  32\nn  469411\nC  64\nn  469091\nC  128\nn  468451\nC  256\nn  467171\nC  512\nn  464611\nC  1024\nn  459491\nC  2048\nn  449251\nC  4096\nn  428771\nC  8192\nn  387811\nC  16384\nn  305891\nC  32768\nn  142051\nC  65536', 'Penny', 216643), (False, 'n  3961833\nC  2\nn  3961823\nC  4\nn  3961803\nC  8\nn  3961763\nC  16\nn  3961683\nC  32\nn  3961523\nC  64\nn  3961203\nC  128\nn  3960563\nC  256\nn  3959283\nC  512\nn  3956723\nC  1024\nn  3951603\nC  2048\nn  3941363\nC  4096\nn  3920883\nC  8192\nn  3879923\nC  16384\nn  3798003\nC  32768\nn  3634163\nC  65536\nn  3306483\nC  131072\nn  2651123\nC  262144\nn  1340403\nC  524288', 'Penny', 216644), (False, 'n  57710441\nC  2\nn  57710431\nC  4\nn  57710411\nC  8\nn  57710371\nC  16\nn  57710291\nC  32\nn  57710131\nC  64\nn  57709811\nC  128\nn  57709171\nC  256\nn  57707891\nC  512\nn  57705331\nC  1024\nn  57700211\nC  2048\nn  57689971\nC  4096\nn  57669491\nC  8192\nn  57628531\nC  16384\nn  57546611\nC  32768\nn  57382771\nC  65536\nn  57055091\nC  131072\nn  56399731\nC  262144\nn  55089011\nC  524288\nn  52467571\nC  1048576\nn  47224691\nC  2097152\nn  36738931\nC  4194304\nn  15767411\nC  8388608', 'Leonard', 216645), (False, 'n  80719465\nC  2\nn  80719455\nC  4\nn  80719435\nC  8\nn  80719395\nC  16\nn  80719315\nC  32\nn  80719155\nC  64\nn  80718835\nC  128\nn  80718195\nC  256\nn  80716915\nC  512\nn  80714355\nC  1024\nn  80709235\nC  2048\nn  80698995\nC  4096\nn  80678515\nC  8192\nn  80637555\nC  16384\nn  80555635\nC  32768\nn  80391795\nC  65536\nn  80064115\nC  131072\nn  79408755\nC  262144\nn  78098035\nC  524288\nn  75476595\nC  1048576\nn  70233715\nC  2097152\nn  59747955\nC  4194304\nn  38776435\nC  8388608', 'Howard', 216646), (False, 'n  999999995\nC  2\nn  999999985\nC  4\nn  999999965\nC  8\nn  999999925\nC  16\nn  999999845\nC  32\nn  999999685\nC  64\nn  999999365\nC  128\nn  999998725\nC  256\nn  999997445\nC  512\nn  999994885\nC  1024\nn  999989765\nC  2048\nn  999979525\nC  4096\nn  999959045\nC  8192\nn  999918085\nC  16384\nn  999836165\nC  32768\nn  999672325\nC  65536\nn  999344645\nC  131072\nn  998689285\nC  262144\nn  997378565\nC  524288\nn  994757125\nC  1048576\nn  989514245\nC  2097152\nn  979028485\nC  4194304\nn  958056965\nC  8388608\nn  916113925\nC  16777216\nn  832227845\nC  33554432\nn  664455685\nC  67108864\nn  328911365\nC  134217728', 'Penny', 216647), (False, 'n  999999994\nC  2\nn  999999984\nC  4\nn  999999964\nC  8\nn  999999924\nC  16\nn  999999844\nC  32\nn  999999684\nC  64\nn  999999364\nC  128\nn  999998724\nC  256\nn  999997444\nC  512\nn  999994884\nC  1024\nn  999989764\nC  2048\nn  999979524\nC  4096\nn  999959044\nC  8192\nn  999918084\nC  16384\nn  999836164\nC  32768\nn  999672324\nC  65536\nn  999344644\nC  131072\nn  998689284\nC  262144\nn  997378564\nC  524288\nn  994757124\nC  1048576\nn  989514244\nC  2097152\nn  979028484\nC  4194304\nn  958056964\nC  8388608\nn  916113924\nC  16777216\nn  832227844\nC  33554432\nn  664455684\nC  67108864\nn  328911364\nC  134217728', 'Penny', 216648), (False, 'n  999999993\nC  2\nn  999999983\nC  4\nn  999999963\nC  8\nn  999999923\nC  16\nn  999999843\nC  32\nn  999999683\nC  64\nn  999999363\nC  128\nn  999998723\nC  256\nn  999997443\nC  512\nn  999994883\nC  1024\nn  999989763\nC  2048\nn  999979523\nC  4096\nn  999959043\nC  8192\nn  999918083\nC  16384\nn  999836163\nC  32768\nn  999672323\nC  65536\nn  999344643\nC  131072\nn  998689283\nC  262144\nn  997378563\nC  524288\nn  994757123\nC  1048576\nn  989514243\nC  2097152\nn  979028483\nC  4194304\nn  958056963\nC  8388608\nn  916113923\nC  16777216\nn  832227843\nC  33554432\nn  664455683\nC  67108864\nn  328911363\nC  134217728', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",False,Wrong Answer,0.1286101475434366,0.7255985267034991,False,0.8048780487804879
3256881,27508089,"nums = input()
nums = nums.split(' ')
nums = list(map(int,nums))
if nums[0] == nums[1]:
    print(nums[0])
elif (nums[1] - nums[0]) % 2 == 0:
    print('2')
elif (nums[1] - nums[0]) % 2 == 1 and (nums[0] % 2 == 0 or nums[1] % 2 == 0):
    print('2')
else:
    print('3')",43,0,62,6/1/17 21:25,11,2819,1,8,"[(True, '2', '2', 238141), (True, '2', '2', 238142), (True, '2', '2', 238143), (True, '2', '2', 238144), (True, '2', '2', 238145), (True, '2', '2', 238146), (True, '2', '2', 238147), (True, '2', '2', 238148), (True, '2', '2', 238149), (True, '2', '2', 238150), (True, '2', '2', 238151), (True, '2', '2', 238152), (True, '2', '2', 238153), (True, '2', '2', 238154), (True, '2', '2', 238155), (True, '2', '2', 238156), (True, '2', '2', 238157), (True, '2', '2', 238158), (True, '2', '2', 238159), (True, '2', '2', 238160), (True, '2', '2', 238161), (True, '2', '2', 238162), (True, '2', '2', 238163), (True, '519002744', '519002744', 238164), (True, '331900277', '331900277', 238165), (True, '2', '2', 238166), (True, '349533413', '349533413', 238167), (True, '2', '2', 238168), (True, '568814539', '568814539', 238169), (True, '2', '2', 238170), (True, '2', '2', 238171), (True, '305693653', '305693653', 238172), (True, '2', '2', 238173), (True, '2', '2', 238174), (True, '2', '2', 238175), (True, '2', '2', 238176), (True, '2', '2', 238177), (True, '770439256', '770439256', 238178), (True, '2', '2', 238179), (True, '2', '2', 238180), (True, '2', '2', 238181), (True, '5', '5', 238182), (True, '999999937', '999999937', 238183), (True, '3', '3', 238184), (True, '2', '2', 238185), (True, '2', '2', 238186), (True, '2', '2', 238187), (True, '7', '7', 238188), (True, '39916801', '39916801', 238189), (True, '2', '2', 238190), (True, '13', '13', 238191), (True, '2', '2', 238192), (True, '2', '2', 238193), (True, '2', '2', 238194), (True, '999999103', '999999103', 238195), (True, '100000007', '100000007', 238196), (True, '2', '2', 238197), (True, '999999733', '999999733', 238198), (True, '2', '2', 238199), (True, '982451653', '982451653', 238200), (True, '2', '2', 238201), (True, '999727999', '999727999', 238202), (True, '2', '2', 238203), (True, '2', '2', 238204), (True, '2', '2', 238205), (True, '2', '2', 238206), (True, '998244353', '998244353', 238207), (True, '2', '2', 238208), (True, '999999797', '999999797', 238209), (True, '2', '2', 238210), (True, '999999929', '999999929', 238211), (True, '2', '2', 238212), (True, '2', '2', 238213), (True, '479001599', '479001599', 238214), (True, '10000019', '10000019', 238215), (True, '715827883', '715827883', 238216), (True, '999992977', '999992977', 238217), (True, '11', '11', 238218), (True, '29', '29', 238219), (True, '1000003', '1000003', 238220), (True, '2', '2', 238221), (True, '1200007', '1200007', 238222), (True, '2', '2', 238223), (True, '990000023', '990000023', 238224), (True, '1717', '1717', 238225), (True, '141650963', '141650963', 238226), (True, '1002523', '1002523', 238227), (True, '900000011', '900000011', 238228), (True, '104729', '104729', 238229), (True, '2', '2', 238230), (True, '100003', '100003', 238231), (True, '17', '17', 238232), (True, '2', '2', 238233)]",True,Accecpted,0.2527797491742931,0.6634844868735084,False,0.0
3256880,27506560,"nums = input()
nums = nums.split(' ')
nums = list(map(int,nums))
if (nums[1] - nums[0]) % 2 == 0:
    print('2')
else:
    print('3')",43,0,61,6/1/17 20:29,7,2819,2,8,"[(True, '2', '2', 238141), (False, '3', '2', 238142), (True, '2', '2', 238143), (True, '2', '2', 238144), (True, '2', '2', 238145), (True, '2', '2', 238146), (False, '3', '2', 238147), (False, '3', '2', 238148), (False, '3', '2', 238149), (True, '2', '2', 238150), (False, '3', '2', 238151), (True, '2', '2', 238152), (True, '2', '2', 238153), (False, '3', '2', 238154), (False, '3', '2', 238155), (True, '2', '2', 238156), (True, '2', '2', 238157), (False, '3', '2', 238158), (False, '3', '2', 238159), (True, '2', '2', 238160), (True, '2', '2', 238161), (False, '3', '2', 238162), (True, '2', '2', 238163), (False, '2', '519002744', 238164), (False, '2', '331900277', 238165), (False, '3', '2', 238166), (False, '2', '349533413', 238167), (False, '3', '2', 238168), (False, '2', '568814539', 238169), (False, '3', '2', 238170), (True, '2', '2', 238171), (False, '2', '305693653', 238172), (False, '3', '2', 238173), (False, '3', '2', 238174), (True, '2', '2', 238175), (True, '2', '2', 238176), (True, '2', '2', 238177), (False, '2', '770439256', 238178), (True, '2', '2', 238179), (True, '2', '2', 238180), (False, '3', '2', 238181), (False, '2', '5', 238182), (False, '2', '999999937', 238183), (False, '2', '3', 238184), (False, '3', '2', 238185), (True, '2', '2', 238186), (False, '3', '2', 238187), (False, '2', '7', 238188), (False, '2', '39916801', 238189), (False, '3', '2', 238190), (False, '2', '13', 238191), (True, '2', '2', 238192), (False, '3', '2', 238193), (True, '2', '2', 238194), (False, '2', '999999103', 238195), (False, '2', '100000007', 238196), (True, '2', '2', 238197), (False, '2', '999999733', 238198), (False, '3', '2', 238199), (False, '2', '982451653', 238200), (False, '3', '2', 238201), (False, '2', '999727999', 238202), (False, '3', '2', 238203), (True, '2', '2', 238204), (False, '3', '2', 238205), (True, '2', '2', 238206), (False, '2', '998244353', 238207), (True, '2', '2', 238208), (False, '2', '999999797', 238209), (False, '3', '2', 238210), (False, '2', '999999929', 238211), (True, '2', '2', 238212), (True, '2', '2', 238213), (False, '2', '479001599', 238214), (False, '2', '10000019', 238215), (False, '2', '715827883', 238216), (False, '2', '999992977', 238217), (False, '2', '11', 238218), (False, '2', '29', 238219), (False, '2', '1000003', 238220), (False, '3', '2', 238221), (False, '2', '1200007', 238222), (False, '3', '2', 238223), (False, '2', '990000023', 238224), (False, '2', '1717', 238225), (False, '2', '141650963', 238226), (False, '2', '1002523', 238227), (False, '2', '900000011', 238228), (False, '2', '104729', 238229), (True, '2', '2', 238230), (False, '2', '100003', 238231), (False, '2', '17', 238232), (True, '2', '2', 238233)]",False,Wrong Answer,0.2527797491742931,0.6634844868735084,False,0.6774193548387096
3278945,29471790,"def fun(n):
    ln = len(n)
    tmp = ord(n[0])
    tmp = tmp - 47
    for i in range(ln-1):
        tmp *=10
    print(tmp - int(n))
        

if __name__ == ""__main__"":
    n = input()
    fun(n)",43,4528,77,8/15/17 6:08,12,2837,1,8,"[(True, '1', '1', 239696), (True, '99', '99', 239697), (True, '1000', '1000', 239698), (True, '1', '1', 239699), (True, '10', '10', 239700), (True, '1', '1', 239701), (True, '100000000', '100000000', 239702), (True, '100000000', '100000000', 239703), (True, '1', '1', 239704), (True, '1000000000', '1000000000', 239705), (True, '1', '1', 239706), (True, '99999999', '99999999', 239707), (True, '340', '340', 239708), (True, '9', '9', 239709), (True, '99999999', '99999999', 239710), (True, '7089', '7089', 239711), (True, '9', '9', 239712), (True, '59697990', '59697990', 239713), (True, '9', '9', 239714), (True, '99', '99', 239715), (True, '910', '910', 239716), (True, '12345679', '12345679', 239717), (True, '96549526', '96549526', 239718), (True, '909', '909', 239719), (True, '1', '1', 239720), (True, '91', '91', 239721), (True, '10', '10', 239722), (True, '1', '1', 239723), (True, '1', '1', 239724), (True, '18', '18', 239725), (True, '1', '1', 239726), (True, '1', '1', 239727), (True, '1', '1', 239728), (True, '1', '1', 239729), (True, '1', '1', 239730), (True, '1', '1', 239731), (True, '1', '1', 239732), (True, '1', '1', 239733), (True, '1', '1', 239734), (True, '10', '10', 239735), (True, '9', '9', 239736), (True, '8', '8', 239737), (True, '7', '7', 239738), (True, '6', '6', 239739), (True, '5', '5', 239740), (True, '4', '4', 239741), (True, '3', '3', 239742), (True, '2', '2', 239743), (True, '1', '1', 239744), (True, '10', '10', 239745), (True, '9', '9', 239746), (True, '8', '8', 239747), (True, '7', '7', 239748), (True, '6', '6', 239749), (True, '5', '5', 239750), (True, '4', '4', 239751), (True, '3', '3', 239752), (True, '2', '2', 239753), (True, '1', '1', 239754), (True, '10', '10', 239755), (True, '9', '9', 239756), (True, '8', '8', 239757), (True, '7', '7', 239758), (True, '6', '6', 239759), (True, '5', '5', 239760), (True, '4', '4', 239761), (True, '3', '3', 239762), (True, '2', '2', 239763), (True, '1', '1', 239764), (True, '10', '10', 239765), (True, '9', '9', 239766), (True, '8', '8', 239767), (True, '7', '7', 239768), (True, '6', '6', 239769), (True, '5', '5', 239770), (True, '4', '4', 239771), (True, '3', '3', 239772), (True, '2', '2', 239773), (True, '1', '1', 239774), (True, '10', '10', 239775), (True, '9', '9', 239776), (True, '8', '8', 239777), (True, '7', '7', 239778), (True, '6', '6', 239779), (True, '5', '5', 239780), (True, '4', '4', 239781), (True, '3', '3', 239782), (True, '2', '2', 239783), (True, '1', '1', 239784), (True, '10', '10', 239785), (True, '9', '9', 239786), (True, '8', '8', 239787), (True, '7', '7', 239788), (True, '6', '6', 239789), (True, '5', '5', 239790), (True, '4', '4', 239791), (True, '3', '3', 239792), (True, '2', '2', 239793), (True, '1', '1', 239794), (True, '10', '10', 239795), (True, '9', '9', 239796), (True, '8', '8', 239797), (True, '7', '7', 239798), (True, '6', '6', 239799), (True, '5', '5', 239800), (True, '4', '4', 239801), (True, '3', '3', 239802), (True, '2', '2', 239803), (True, '1', '1', 239804), (True, '10', '10', 239805), (True, '9', '9', 239806), (True, '8', '8', 239807), (True, '7', '7', 239808), (True, '6', '6', 239809), (True, '5', '5', 239810), (True, '4', '4', 239811), (True, '3', '3', 239812), (True, '2', '2', 239813), (True, '1', '1', 239814), (True, '10', '10', 239815), (True, '9', '9', 239816), (True, '8', '8', 239817), (True, '7', '7', 239818), (True, '6', '6', 239819), (True, '5', '5', 239820), (True, '4', '4', 239821), (True, '3', '3', 239822), (True, '2', '2', 239823), (True, '1', '1', 239824), (True, '100', '100', 239825), (True, '100', '100', 239826), (True, '100', '100', 239827), (True, '1000', '1000', 239828), (True, '1000', '1000', 239829), (True, '1000', '1000', 239830), (True, '10000', '10000', 239831), (True, '10000', '10000', 239832), (True, '99', '99', 239833), (True, '90', '90', 239834), (True, '999', '999', 239835), (True, '900', '900', 239836), (True, '990', '990', 239837), (True, '9990', '9990', 239838), (True, '9900', '9900', 239839), (True, '98', '98', 239840), (True, '80', '80', 239841), (True, '998', '998', 239842), (True, '800', '800', 239843), (True, '980', '980', 239844), (True, '9980', '9980', 239845), (True, '9800', '9800', 239846), (True, '92', '92', 239847), (True, '20', '20', 239848), (True, '992', '992', 239849), (True, '200', '200', 239850), (True, '920', '920', 239851), (True, '9920', '9920', 239852), (True, '9200', '9200', 239853), (True, '91', '91', 239854), (True, '10', '10', 239855), (True, '991', '991', 239856), (True, '100', '100', 239857), (True, '910', '910', 239858), (True, '9910', '9910', 239859), (True, '9100', '9100', 239860), (True, '100', '100', 239861), (True, '100', '100', 239862), (True, '1000', '1000', 239863), (True, '1000', '1000', 239864), (True, '1000', '1000', 239865), (True, '10000', '10000', 239866), (True, '10000', '10000', 239867), (True, '99', '99', 239868), (True, '90', '90', 239869), (True, '999', '999', 239870), (True, '900', '900', 239871), (True, '990', '990', 239872), (True, '9990', '9990', 239873), (True, '9900', '9900', 239874), (True, '98', '98', 239875), (True, '80', '80', 239876), (True, '998', '998', 239877), (True, '800', '800', 239878), (True, '980', '980', 239879), (True, '9980', '9980', 239880), (True, '9800', '9800', 239881), (True, '92', '92', 239882), (True, '20', '20', 239883), (True, '992', '992', 239884), (True, '200', '200', 239885), (True, '920', '920', 239886), (True, '9920', '9920', 239887), (True, '9200', '9200', 239888), (True, '91', '91', 239889), (True, '10', '10', 239890), (True, '991', '991', 239891), (True, '100', '100', 239892), (True, '910', '910', 239893), (True, '9910', '9910', 239894), (True, '9100', '9100', 239895), (True, '100', '100', 239896), (True, '100', '100', 239897), (True, '1000', '1000', 239898), (True, '1000', '1000', 239899), (True, '1000', '1000', 239900), (True, '10000', '10000', 239901), (True, '10000', '10000', 239902), (True, '99', '99', 239903), (True, '90', '90', 239904), (True, '999', '999', 239905), (True, '900', '900', 239906), (True, '990', '990', 239907), (True, '9990', '9990', 239908), (True, '9900', '9900', 239909), (True, '98', '98', 239910), (True, '80', '80', 239911), (True, '998', '998', 239912), (True, '800', '800', 239913), (True, '980', '980', 239914), (True, '9980', '9980', 239915), (True, '9800', '9800', 239916), (True, '92', '92', 239917), (True, '20', '20', 239918), (True, '992', '992', 239919), (True, '200', '200', 239920), (True, '920', '920', 239921), (True, '9920', '9920', 239922), (True, '9200', '9200', 239923), (True, '91', '91', 239924), (True, '10', '10', 239925), (True, '991', '991', 239926), (True, '100', '100', 239927), (True, '910', '910', 239928), (True, '9910', '9910', 239929), (True, '9100', '9100', 239930), (True, '100', '100', 239931), (True, '100', '100', 239932), (True, '1000', '1000', 239933), (True, '1000', '1000', 239934), (True, '1000', '1000', 239935), (True, '10000', '10000', 239936), (True, '10000', '10000', 239937), (True, '99', '99', 239938), (True, '90', '90', 239939), (True, '999', '999', 239940), (True, '900', '900', 239941), (True, '990', '990', 239942), (True, '9990', '9990', 239943), (True, '9900', '9900', 239944), (True, '98', '98', 239945), (True, '80', '80', 239946), (True, '998', '998', 239947), (True, '800', '800', 239948), (True, '980', '980', 239949), (True, '9980', '9980', 239950), (True, '9800', '9800', 239951), (True, '92', '92', 239952), (True, '20', '20', 239953), (True, '992', '992', 239954), (True, '200', '200', 239955), (True, '920', '920', 239956), (True, '9920', '9920', 239957), (True, '9200', '9200', 239958), (True, '91', '91', 239959), (True, '10', '10', 239960), (True, '991', '991', 239961), (True, '100', '100', 239962), (True, '910', '910', 239963), (True, '9910', '9910', 239964), (True, '9100', '9100', 239965), (True, '7348759', '7348759', 239966)]",True,Accecpted,0.1405045818508999,0.254416961130742,False,0.0
3278942,29471680,"def fun(n):
    cnt = 0
    while n>0:
        now = n % 10
        ##print(n,now)
        n = n / 10
        if now>0:
            cnt+=1
        n = int(n)
    if cnt>1:
        return 0;
    else:
        return 1


if __name__ == ""__main__"":
    n = input()
    n = int(n)
    i = n+1
    while fun(i)!=1:
        i+=1
    print(i-n)",43,4508,1000,8/15/17 5:59,22,2837,3,8,"[(True, '1', '1', 239696), (True, '99', '99', 239697), (True, '1000', '1000', 239698), (True, '1', '1', 239699), (True, '10', '10', 239700), (True, '1', '1', 239701)]",True,Time Limit,0.1405045818508999,0.254416961130742,False,0.0
164820,29368028,"a,b,c = [int(i) for i in input().split()]
x,y,z = [int(i) for i in input().split()]
a1 = [0,0,0]
a1[0] = max(0,  a - x)
a1[1] = max(0, b - y)
a1[2] = max(0, c - z)
lost = max(0, x - a) + max(0, y - b) + max(0, z - c)
for i in a1:
    lost -= i//2
if (lost  <= 0):
    print(""Yes"")
else:
    print(""No"")",60,4524,62,8/12/17 7:25,13,133,1,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (True, 'Yes', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (True, 'Yes', 'Yes', 59002), (True, 'No', 'No', 59003), (True, 'Yes', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (True, 'Yes', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (True, 'Yes', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (True, 'Yes', 'Yes', 59023), (True, 'Yes', 'Yes', 59024), (True, 'No', 'No', 59025), (True, 'Yes', 'Yes', 59026), (True, 'No', 'No', 59027), (True, 'Yes', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (True, 'Yes', 'Yes', 59036), (True, 'Yes', 'Yes', 59037), (True, 'Yes', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (True, 'Yes', 'Yes', 59045), (True, 'Yes', 'Yes', 59046), (True, 'Yes', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (True, 'Yes', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",True,Accecpted,1.7172819010992763e-78,0.0152091254752851,False,0.0
164853,29368895,"l1 = list(map(int, input().split()))
l2 = list(map(int, input().split()))

def magicspheres(list1, list2):

	excess_demand = [b-a for a,b in zip(list1, list2)]

	for i in range(3):
		if excess_demand[i] > 0:
			for j in range(3):
				if excess_demand[j] <= -2:
					list1[i] +=1
					list1[j] -=2
			excess_demand = [b-a for a,b in zip(list1, list2)]

	for i in range(3):
		if excess_demand[i] > 0:
			return 'No'
	return 'Yes'

print(magicspheres(l1,l2))",60,4516,62,8/12/17 8:18,21,133,2,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (False, 'No', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (False, 'No', 'Yes', 59002), (True, 'No', 'No', 59003), (False, 'No', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (False, 'No', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (False, 'No', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (False, 'No', 'Yes', 59023), (False, 'No', 'Yes', 59024), (True, 'No', 'No', 59025), (False, 'No', 'Yes', 59026), (True, 'No', 'No', 59027), (False, 'No', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (False, 'No', 'Yes', 59036), (False, 'No', 'Yes', 59037), (False, 'No', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (False, 'No', 'Yes', 59045), (False, 'No', 'Yes', 59046), (False, 'No', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (False, 'No', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",False,Wrong Answer,1.7172819010992763e-78,0.0152091254752851,False,0.2025316455696202
570252,23335252,"x,y = map(int,input().split())
print(int(int(x/y+1)*y))",60,4516,61,12/26/16 10:59,2,528,1,8,"[(True, '6', '6', 89610), (True, '26', '26', 89611), (True, '39', '39', 89612), (True, '2', '2', 89613), (True, '16', '16', 89614), (True, '15', '15', 89615), (True, '894', '894', 89616), (True, '8581', '8581', 89617), (True, '125292', '125292', 89618), (True, '667250', '667250', 89619), (True, '4394826', '4394826', 89620), (True, '80104272', '80104272', 89621), (True, '710490435', '710490435', 89622), (True, '1999999998', '1999999998', 89623), (True, '2000000000', '2000000000', 89624), (True, '1000000000', '1000000000', 89625), (True, '1000000001', '1000000001', 89626), (True, '1000000002', '1000000002', 89627), (True, '1000000000', '1000000000', 89628), (True, '100000001', '100000001', 89629), (True, '1000000000', '1000000000', 89630), (True, '1000000000', '1000000000', 89631), (True, '1999999994', '1999999994', 89632), (True, '1000000000', '1000000000', 89633), (True, '999999985', '999999985', 89634), (True, '999999984', '999999984', 89635), (True, '666666667', '666666667', 89636), (True, '1980000000', '1980000000', 89637), (True, '48', '48', 89638), (True, '123458', '123458', 89639), (True, '222', '222', 89640), (True, '878788', '878788', 89641), (True, '122', '122', 89642), (True, '229028', '229028', 89643), (True, '1000000000', '1000000000', 89644), (True, '999999998', '999999998', 89645), (True, '100000010', '100000010', 89646)]",True,Accecpted,3.2662536004553127e-155,0.3247863247863248,False,0.0
570134,23179424,"n,k = map(int,input().split())
const = 0
num = 1

while const != -1:
    const += 1
    num = const
    num = k * const
    if num > n:
        print(num)
        break",60,4500,500,12/20/16 18:08,11,528,3,8,"[(True, '6', '6', 89610), (True, '26', '26', 89611), (True, '39', '39', 89612), (True, '2', '2', 89613), (True, '16', '16', 89614), (True, '15', '15', 89615), (True, '894', '894', 89616), (True, '8581', '8581', 89617), (True, '125292', '125292', 89618), (True, '667250', '667250', 89619), (True, '4394826', '4394826', 89620), (True, '80104272', '80104272', 89621), (True, '710490435', '710490435', 89622), (True, '1999999998', '1999999998', 89623), (True, '2000000000', '2000000000', 89624), (True, '1000000000', '1000000000', 89625)]",True,Time Limit,3.2662536004553127e-155,0.3247863247863248,False,0.0
894677,24212538,"import sys
input = sys.stdin.readline

players = int(input())
fib1 = 2
fib2 = 3

winner = 1

while True:
    cat = fib1
    fib1 = fib2
    fib2+=cat

    if fib1 > players:
        print(winner)
        break
    else:
        winner+=1",60,4512,93,1/28/17 2:45,19,834,1,8,"[(True, '1', '1', 115431), (True, '2', '2', 115432), (True, '2', '2', 115433), (True, '4', '4', 115434), (True, '14', '14', 115435), (True, '15', '15', 115436), (True, '27', '27', 115437), (True, '45', '45', 115438), (True, '81', '81', 115439), (True, '3', '3', 115440), (True, '9', '9', 115441), (True, '10', '10', 115442), (True, '10', '10', 115443), (True, '10', '10', 115444), (True, '11', '11', 115445), (True, '11', '11', 115446), (True, '84', '84', 115447), (True, '85', '85', 115448), (True, '85', '85', 115449), (True, '85', '85', 115450), (True, '47', '47', 115451), (True, '43', '43', 115452), (True, '66', '66', 115453), (True, '68', '68', 115454), (True, '62', '62', 115455), (True, '62', '62', 115456), (True, '63', '63', 115457), (True, '56', '56', 115458), (True, '70', '70', 115459), (True, '71', '71', 115460), (True, '67', '67', 115461), (True, '47', '47', 115462), (True, '61', '61', 115463), (True, '58', '58', 115464), (True, '56', '56', 115465), (True, '51', '51', 115466), (True, '65', '65', 115467), (True, '75', '75', 115468), (True, '65', '65', 115469), (True, '71', '71', 115470), (True, '3', '3', 115471), (True, '3', '3', 115472), (True, '4', '4', 115473), (True, '4', '4', 115474), (True, '4', '4', 115475), (True, '4', '4', 115476), (True, '5', '5', 115477), (True, '5', '5', 115478), (True, '5', '5', 115479), (True, '5', '5', 115480), (True, '5', '5', 115481), (True, '5', '5', 115482), (True, '5', '5', 115483), (True, '5', '5', 115484), (True, '6', '6', 115485), (True, '6', '6', 115486), (True, '6', '6', 115487), (True, '69', '69', 115488), (True, '84', '84', 115489), (True, '49', '49', 115490), (True, '63', '63', 115491), (True, '56', '56', 115492), (True, '54', '54', 115493)]",True,Accecpted,1.8826330961678333e-155,0.238095238095238,False,0.0
894799,24257674,"import sys
players=int(sys.stdin.readline().strip('\n'))
count=1
total=1
while True:
    if (players-1)-(total)>0:
        count+=1
        total+=count
    else:
        print(count)
        break",60,4504,61,1/30/17 3:18,11,834,2,8,"[(True, '1', '1', 115431), (True, '2', '2', 115432), (True, '2', '2', 115433), (True, '4', '4', 115434), (False, '45', '14', 115435), (False, '71', '15', 115436), (False, '1175', '27', 115437), (False, '77460', '45', 115438)]",False,Wrong Answer,1.8826330961678333e-155,0.238095238095238,False,0.5
1040919,24273186,"beds,pillows,frodo=map(int,input().split())
flag=0
if beds==pillows:
    flag=1
pillows=pillows-beds-1
layer=2
while pillows>0:
    if beds==1:
        layer=pillows+2
        pillows=0
        break
    if frodo-1<layer-1 and beds-frodo<layer-1:
        layer+=(int(pillows/(beds))+1)
        break
    else:
        pillows-=(min(frodo-1,layer-1)+min(layer-1,beds-frodo))     
    pillows-=1
    if pillows<0:
        layer-=1      
    layer+=1
if flag==1:
    print('1')
elif pillows<0:
    print(layer)
elif pillows==0:
    print(layer)
else:
    print(layer-1)",60,4516,124,1/30/17 20:15,28,966,1,8,"[(True, '2', '2', 125492), (True, '4', '4', 125493), (True, '3', '3', 125494), (True, '1', '1', 125495), (True, '1', '1', 125496), (True, '1000000000', '1000000000', 125497), (True, '10000034', '10000034', 125498), (True, '1', '1', 125499), (True, '10001', '10001', 125500), (True, '1', '1', 125501), (True, '1', '1', 125502), (True, '1', '1', 125503), (True, '1', '1', 125504), (True, '10001', '10001', 125505), (True, '1115', '1115', 125506), (True, '10002', '10002', 125507), (True, '112', '112', 125508), (True, '25', '25', 125509), (True, '46', '46', 125510), (True, '31', '31', 125511), (True, '117', '117', 125512), (True, '21965', '21965', 125513), (True, '147', '147', 125514), (True, '1465', '1465', 125515), (True, '1', '1', 125516), (True, '9999778', '9999778', 125517), (True, '5000053', '5000053', 125518), (True, '43849', '43849', 125519), (True, '38038', '38038', 125520), (True, '44320', '44320', 125521), (True, '31624', '31624', 125522), (True, '30217', '30217', 125523), (True, '31459', '31459', 125524), (True, '29887', '29887', 125525), (True, '1', '1', 125526), (True, '144', '144', 125527), (True, '84', '84', 125528), (True, '84', '84', 125529), (True, '28', '28', 125530), (True, '42', '42', 125531), (True, '223', '223', 125532), (True, '18389', '18389', 125533), (True, '866', '866', 125534), (True, '2510', '2510', 125535), (True, '1', '1', 125536), (True, '9999852', '9999852', 125537), (True, '5000046', '5000046', 125538), (True, '43846', '43846', 125539), (True, '37930', '37930', 125540), (True, '43163', '43163', 125541), (True, '43371', '43371', 125542), (True, '22853', '22853', 125543), (True, '31464', '31464', 125544), (True, '29998', '29998', 125545), (True, '1', '1', 125546), (True, '97976', '97976', 125547), (True, '97975', '97975', 125548), (True, '13903', '13903', 125549), (True, '13904', '13904', 125550), (True, '9707', '9707', 125551), (True, '9706', '9706', 125552), (True, '333333334', '333333334', 125553), (True, '500000000', '500000000', 125554), (True, '500000000', '500000000', 125555), (True, '333333334', '333333334', 125556), (True, '333333334', '333333334', 125557), (True, '500000000', '500000000', 125558), (True, '500000000', '500000000', 125559), (True, '999999999', '999999999', 125560)]",True,Accecpted,1.1150956108619836e-231,0.0899908172635445,False,0.0
1040231,24213403,"hobs, pillows, frodo = input().split()
hobs, pillows, frodo = int(hobs), int(pillows), int(frodo)
turn = 0
left = frodo
right = frodo
pilCount = 1
pillows-=hobs
while True:
     if left<= 1 and right > hobs:
          pilCount+=pillows//hobs
          break
     elif left <= 1 or right > hobs:
          pillows-=(turn+1)
     else:
          pillows-=(turn*2+1)

     if pillows < 0:
          break
     left-=1
     right+=1
     pilCount+=1
     turn+=1
print(pilCount)",60,4500,46,1/28/17 4:40,23,966,2,8,"[(True, '2', '2', 125492), (True, '4', '4', 125493), (True, '3', '3', 125494), (True, '1', '1', 125495), (True, '1', '1', 125496), (True, '1000000000', '1000000000', 125497), (False, '10000046', '10000034', 125498), (True, '1', '1', 125499), (True, '10001', '10001', 125500), (True, '1', '1', 125501), (True, '1', '1', 125502), (True, '1', '1', 125503), (True, '1', '1', 125504), (True, '10001', '10001', 125505), (False, '1127', '1115', 125506), (True, '10002', '10002', 125507), (False, '113', '112', 125508), (True, '25', '25', 125509), (True, '46', '46', 125510), (True, '31', '31', 125511), (True, '117', '117', 125512), (True, '21965', '21965', 125513), (True, '147', '147', 125514), (True, '1465', '1465', 125515), (True, '1', '1', 125516), (False, '9999782', '9999778', 125517), (False, '5000077', '5000053', 125518), (False, '47329', '43849', 125519), (False, '42985', '38038', 125520), (False, '44718', '44320', 125521), (False, '32339', '31624', 125522), (True, '30217', '30217', 125523), (True, '31459', '31459', 125524), (True, '29887', '29887', 125525), (True, '1', '1', 125526), (False, '152', '144', 125527), (False, '101', '84', 125528), (True, '84', '84', 125529), (True, '28', '28', 125530), (True, '42', '42', 125531), (True, '223', '223', 125532), (False, '19639', '18389', 125533), (True, '866', '866', 125534), (True, '2510', '2510', 125535), (True, '1', '1', 125536), (False, '9999859', '9999852', 125537), (False, '5000047', '5000046', 125538), (False, '47327', '43846', 125539), (False, '42895', '37930', 125540), (False, '44691', '43163', 125541), (False, '44692', '43371', 125542), (True, '22853', '22853', 125543), (True, '31464', '31464', 125544), (True, '29998', '29998', 125545), (True, '1', '1', 125546), (False, '98100', '97976', 125547), (False, '98100', '97975', 125548), (True, '13903', '13903', 125549), (True, '13904', '13904', 125550), (True, '9707', '9707', 125551), (True, '9706', '9706', 125552), (True, '333333334', '333333334', 125553), (True, '500000000', '500000000', 125554), (True, '500000000', '500000000', 125555), (True, '333333334', '333333334', 125556), (True, '333333334', '333333334', 125557), (True, '500000000', '500000000', 125558), (True, '500000000', '500000000', 125559), (True, '999999999', '999999999', 125560)]",False,Wrong Answer,1.1150956108619836e-231,0.0899908172635445,False,0.2898550724637681
1532699,25586910,"aaa =0

def f(l1,r1,l2,r2,top):
  global aaa
  if (l1>r1 or l2>  r2):
    return 0
  if (top-1<=aaa) or (r1-l1+1<=aaa) or (r2-l2+1<=aaa):
    return 0
  if top==2:
    return 1
  if (l1>top):
    l1 -=top
    r1 -= top
  if (l2>top):
    l2-=top
    r2-=top
  #print(l1,r1,l2,r2,top)
  if (l1==l2 and r1==r2):
    return r1-l1+1
  if (l1==0 and r1==top-1):
    return r2-l2+1
  if (l2==0 and r2==top-1):
    return r1-l1+1
  if ( (l1<= l2 and l2<= r1) or (l2<= l1 and l1<= r2)):
    ans =  min(r1,r2) -max(l1,l2)  +1
  else:
    ans = 0
  #print(ans)
  top = top//2
  ans = max(ans, f(l1,min(r1,top-1),l2,min(r2,top-1), top))
  ans = max(ans, f(l1,min(r1,top-1),max(top+1,l2),r2, top))
  ans = max(ans, f(max(l1,top+1),r1, l2,min(r2,top-1), top))
  ans = max(ans, f(max(l1,top+1),r1, max(l2,top+1),r2, top))
  aaa = max(aaa,ans)
  return ans

a = input().split()


print(f(int(a[0]),int(a[1]),int(a[2]),int(a[3]),2**36))",60,4780,62,3/18/17 4:30,40,1349,1,8,"[(True, '2', '2', 151949), (True, '0', '0', 151950), (True, '1', '1', 151951), (True, '379149396', '379149396', 151952), (True, '207899', '207899', 151953), (True, '1', '1', 151954), (True, '1', '1', 151955), (True, '1', '1', 151956), (True, '1', '1', 151957), (True, '2', '2', 151958), (True, '5', '5', 151959), (True, '103', '103', 151960), (True, '2901', '2901', 151961), (True, '19516', '19516', 151962), (True, '112739', '112739', 151963), (True, '4151539', '4151539', 151964), (True, '7731787', '7731787', 151965), (True, '530010446', '530010446', 151966), (True, '1000000000', '1000000000', 151967), (True, '71194568', '71194568', 151968), (True, '8140525', '8140525', 151969), (True, '28429169', '28429169', 151970), (True, '268435455', '268435455', 151971), (True, '463129088', '463129088', 151972), (True, '463129087', '463129087', 151973), (True, '548023467', '548023467', 151974), (True, '166034804', '166034804', 151975), (True, '125430608', '125430608', 151976), (True, '334370659', '334370659', 151977), (True, '270203257', '270203257', 151978), (True, '234585497', '234585497', 151979), (True, '106007055', '106007055', 151980), (True, '43091683', '43091683', 151981), (True, '161428126', '161428126', 151982), (True, '54059043', '54059043', 151983), (True, '84351312', '84351312', 151984), (True, '59349328', '59349328', 151985), (True, '36264682', '36264682', 151986), (True, '829157274', '829157274', 151987), (True, '117896414', '117896414', 151988), (True, '405131659', '405131659', 151989), (True, '76741398', '76741398', 151990), (True, '2', '2', 151991), (True, '1', '1', 151992), (True, '3', '3', 151993), (True, '3', '3', 151994), (True, '3', '3', 151995), (True, '3', '3', 151996), (True, '3', '3', 151997), (True, '4', '4', 151998), (True, '4', '4', 151999), (True, '3', '3', 152000), (True, '1', '1', 152001), (True, '1', '1', 152002), (True, '1', '1', 152003), (True, '2901', '2901', 152004), (True, '71194568', '71194568', 152005), (True, '28429169', '28429169', 152006), (True, '268435455', '268435455', 152007), (True, '2', '2', 152008), (True, '3', '3', 152009), (True, '3', '3', 152010)]",True,Accecpted,2.9529524499550004e-155,0.0455026455026455,False,0.0
1532702,25589017,"def solve(x,l1,r1,l2,r2):
	if x==0:return 1
	if l1>x:
		l1-=x+1
		r1-=x+1
	if l2>x:
		l2-=x+1
		r2-=x+1
	ans=max(0,min(r1,r2)-max(l1,l2)+1)
	if l1<=x and x<=r1 and l2<=x and x<=r2:
		if l1==0 or r1==x*2:
			ans=max(ans,max(x-12,r2-x))
		elif l2==0 or r2==x*2:
			ans=max(ans,max(x-11,r1-x))
		else:
			if l1<=x-1 and r2>=x+1:
				ans=max(ans,solve(x//2,l1,x-1,0,r2-x-1))
			if l2<=x-1 and r1>=x+1:
				ans=max(ans,solve(x//2,l2,x-1,0,r1-x-1))
	elif l1<=x and x<=r1:
		if l1==0 or r1==x*2:
			ans=max(ans,r2-l2+1)
		else:
			if l1<=x-1:
				ans=max(ans,solve(x//2,l1,x-1,l2,r2))
			if r1>=x+1:
				ans=max(ans,solve(x//2,0,r1-x-1,l2,r2))
	elif l2<=x and x<=r2:
		if l2==0 or r2==x*2:
			ans=max(ans,r1-l1+1)
		else:
			if l2<=x-1:
				ans=max(ans,solve(x//2,l2,x-1,l1,r1))
			if r2>=x+1:
				ans=max(ans,solve(x//2,0,r2-x-1,l1,r1))
	else:
		ans=max(ans,solve(x//2,l1,r1,l2,r2))
	return ans

l1,r1,l2,r2=map(int,input().split())
print(solve((1<<36)-1,l1-1,r1-1,l2-1,r2-1))",60,4780,61,3/18/17 7:46,41,1349,2,8,"[(True, '2', '2', 151949), (True, '0', '0', 151950), (True, '1', '1', 151951), (True, '379149396', '379149396', 151952), (True, '207899', '207899', 151953), (True, '1', '1', 151954), (True, '1', '1', 151955), (True, '1', '1', 151956), (True, '1', '1', 151957), (True, '2', '2', 151958), (True, '5', '5', 151959), (False, '243', '103', 151960), (False, '4083', '2901', 151961), (True, '19516', '19516', 151962), (True, '112739', '112739', 151963), (False, '4194291', '4151539', 151964), (True, '7731787', '7731787', 151965), (True, '530010446', '530010446', 151966), (True, '1000000000', '1000000000', 151967), (True, '71194568', '71194568', 151968), (True, '8140525', '8140525', 151969), (True, '28429169', '28429169', 151970), (False, '268435443', '268435455', 151971), (True, '463129088', '463129088', 151972), (True, '463129087', '463129087', 151973), (True, '548023467', '548023467', 151974), (False, '268435443', '166034804', 151975), (False, '134217715', '125430608', 151976), (True, '334370659', '334370659', 151977), (True, '270203257', '270203257', 151978), (False, '268435443', '234585497', 151979), (False, '268435443', '106007055', 151980), (True, '43091683', '43091683', 151981), (True, '161428126', '161428126', 151982), (True, '54059043', '54059043', 151983), (True, '84351312', '84351312', 151984), (False, '67108851', '59349328', 151985), (False, '134217715', '36264682', 151986), (True, '829157274', '829157274', 151987), (False, '134217715', '117896414', 151988), (True, '405131659', '405131659', 151989), (True, '76741398', '76741398', 151990), (True, '2', '2', 151991), (True, '1', '1', 151992), (True, '3', '3', 151993), (True, '3', '3', 151994), (True, '3', '3', 151995), (True, '3', '3', 151996), (True, '3', '3', 151997), (True, '4', '4', 151998), (True, '4', '4', 151999), (False, '1', '3', 152000), (True, '1', '1', 152001), (True, '1', '1', 152002), (True, '1', '1', 152003), (False, '4083', '2901', 152004), (True, '71194568', '71194568', 152005), (True, '28429169', '28429169', 152006), (False, '268435443', '268435455', 152007), (True, '2', '2', 152008), (True, '3', '3', 152009), (True, '3', '3', 152010)]",False,Wrong Answer,2.9529524499550004e-155,0.0455026455026455,False,0.2258064516129032
2524743,10139030,"import math
n,m,s = map(int, input().split())
c = 0
cc = 0
su = 0
ss = 0

if ((s >= m and s >= n) or s == 1 or (m%s==0 and n%s==0)):
    print(m*n)
else:
    #su = (math.ceil(n/s) * math.ceil(m/s))
    #print (su)
    print ((((n-1)//s)+1) * (((n-1)%s)+1) * (((m-1)//s)+1) * (((m-1)%s)+1))",60,0,124,3/4/15 2:00,13,2175,1,8,"[(True, '6', '6', 200969), (True, '4', '4', 200970), (True, '2', '2', 200971), (True, '20', '20', 200972), (True, '8', '8', 200973), (True, '1000000', '1000000', 200974), (True, '1', '1', 200975), (True, '1', '1', 200976), (True, '1', '1', 200977), (True, '1000000000000', '1000000000000', 200978), (True, '1000000000000', '1000000000000', 200979), (True, '4', '4', 200980), (True, '20340100', '20340100', 200981), (True, '12358324224', '12358324224', 200982), (True, '7822625112', '7822625112', 200983), (True, '39855894750', '39855894750', 200984), (True, '9566472400', '9566472400', 200985), (True, '100850467200', '100850467200', 200986), (True, '121529958681', '121529958681', 200987), (True, '31858297920', '31858297920', 200988), (True, '49085861565', '49085861565', 200989), (True, '20725481980', '20725481980', 200990), (True, '13934440800', '13934440800', 200991), (True, '738532121852', '738532121852', 200992), (True, '3360356107', '3360356107', 200993), (True, '256000621408', '256000621408', 200994), (True, '27867287808', '27867287808', 200995), (True, '16977831150', '16977831150', 200996), (True, '244300797618', '244300797618', 200997), (True, '521403613182', '521403613182', 200998), (True, '36370333530', '36370333530', 200999), (True, '19685613696', '19685613696', 201000), (True, '266309462610', '266309462610', 201001), (True, '8223314', '8223314', 201002)]",True,Accecpted,0.7538323743532604,0.7805825242718447,False,0.0
2524741,10138841,"import math
n,m,s = map(int, input().split())
c = 0
cc = 0
su = 0
ss = 0

if ((s >= m and s >= n) or s == 1 or (m%s==0 and n%s==0)):
    print(m*n)
else:
    su = (math.ceil(n/s) * math.ceil(m/s))
    print (su* (n%s) * (m%s))",60,0,154,3/4/15 1:26,12,2175,2,8,"[(True, '6', '6', 200969), (True, '4', '4', 200970), (True, '2', '2', 200971), (True, '20', '20', 200972), (True, '8', '8', 200973), (True, '1000000', '1000000', 200974), (True, '1', '1', 200975), (True, '1', '1', 200976), (True, '1', '1', 200977), (True, '1000000000000', '1000000000000', 200978), (True, '1000000000000', '1000000000000', 200979), (True, '4', '4', 200980), (True, '20340100', '20340100', 200981), (True, '12358324224', '12358324224', 200982), (True, '7822625112', '7822625112', 200983), (True, '39855894750', '39855894750', 200984), (True, '9566472400', '9566472400', 200985), (True, '100850467200', '100850467200', 200986), (True, '121529958681', '121529958681', 200987), (False, '0', '31858297920', 200988), (True, '49085861565', '49085861565', 200989), (True, '20725481980', '20725481980', 200990), (True, '13934440800', '13934440800', 200991), (True, '738532121852', '738532121852', 200992), (True, '3360356107', '3360356107', 200993), (True, '256000621408', '256000621408', 200994), (True, '27867287808', '27867287808', 200995), (True, '16977831150', '16977831150', 200996), (True, '244300797618', '244300797618', 200997), (True, '521403613182', '521403613182', 200998), (True, '36370333530', '36370333530', 200999), (True, '19685613696', '19685613696', 201000), (True, '266309462610', '266309462610', 201001), (True, '8223314', '8223314', 201002)]",False,Wrong Answer,0.7538323743532604,0.7805825242718447,False,0.0294117647058823
126,23739146,"x,y=map(int,input().split())
if x-y>1 :
    print(min(x,y),int((x-y)/2))
elif y-x>1:
    print(min(x,y),int((y-x)/2))
else:
    print(min(x,y),0)",64,4536,62,1/12/17 18:04,13,2,1,8,"[(True, '1 1', '1 1', 47757), (True, '2 0', '2 0', 47758), (True, '3 2', '3 2', 47759), (True, '100 0', '100 0', 47760), (True, '4 3', '4 3', 47761), (True, '6 2', '6 2', 47762), (True, '6 2', '6 2', 47763), (True, '10 15', '10 15', 47764), (True, '11 22', '11 22', 47765), (True, '30 2', '30 2', 47766), (True, '33 0', '33 0', 47767), (True, '45 27', '45 27', 47768), (True, '23 38', '23 38', 47769), (True, '12 16', '12 16', 47770), (True, '1 0', '1 0', 47771), (True, '1 49', '1 49', 47772), (True, '1 49', '1 49', 47773), (True, '59 4', '59 4', 47774), (True, '45 27', '45 27', 47775), (True, '99 0', '99 0', 47776), (True, '98 1', '98 1', 47777), (True, '12 23', '12 23', 47778), (True, '4 41', '4 41', 47779), (True, '21 23', '21 23', 47780), (True, '11 44', '11 44', 47781), (True, '10 45', '10 45', 47782), (True, '15 15', '15 15', 47783), (True, '11 10', '11 10', 47784), (True, '34 31', '34 31', 47785), (True, '89 0', '89 0', 47786)]",True,Accecpted,0.7860753021519787,0.9211356466876972,False,0.0
125,23739126,"x=int(input())
y=int(input())
if x-y>1 :
    print(min(x,y),int((x-y)/2))
elif y-x>1:
    print(min(x,y),int((y-x)/2))
else:
    print(min(x,y),0)",64,4476,46,1/12/17 18:02,15,2,5,8,"[(False, '', '1 1', 47757), (False, '', '2 0', 47758), (False, '', '3 2', 47759), (False, '', '100 0', 47760), (False, '', '4 3', 47761), (False, '', '6 2', 47762), (False, '', '6 2', 47763), (False, '', '10 15', 47764), (False, '', '11 22', 47765), (False, '', '30 2', 47766), (False, '', '33 0', 47767), (False, '', '45 27', 47768), (False, '', '23 38', 47769), (False, '', '12 16', 47770), (False, '', '1 0', 47771), (False, '', '1 49', 47772), (False, '', '1 49', 47773), (False, '', '59 4', 47774), (False, '', '45 27', 47775), (False, '', '99 0', 47776), (False, '', '98 1', 47777), (False, '', '12 23', 47778), (False, '', '4 41', 47779), (False, '', '21 23', 47780), (False, '', '11 44', 47781), (False, '', '10 45', 47782), (False, '', '15 15', 47783), (False, '', '11 10', 47784), (False, '', '34 31', 47785), (False, '', '89 0', 47786)]",False,Runtime Error,0.7860753021519787,0.9211356466876972,False,1.0
119598,23738361,"x,y,z=map(int,input().split())
print(min((x+y+z),2*(x+y),2*(y+z),2*(x+z)))",64,4528,77,1/12/17 17:16,3,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.0,0.7142857142857143,False,0.0
119594,23737034,"x=int(input())
y=int(input())
z=int(input())
print(min(x+y+z,2*(x+y),2*(x+z),2*(y+z)))",64,4480,46,1/12/17 15:43,7,102,5,8,"[(False, '', '60', 55884), (False, '', '4', 55885), (False, '', '134', 55886), (False, '', '2331', 55887), (False, '', '8', 55888), (False, '', '92', 55889), (False, '', '203802', 55890), (False, '', '55041796', 55891), (False, '', '12', 55892), (False, '', '543828', 55893), (False, '', '305580', 55894), (False, '', '7326', 55895), (False, '', '601800', 55896), (False, '', '955428', 55897), (False, '', '54676', 55898), (False, '', '2836', 55899), (False, '', '243848', 55900), (False, '', '300000000', 55901), (False, '', '8', 55902), (False, '', '4', 55903), (False, '', '4', 55904)]",False,Runtime Error,0.0,0.7142857142857143,False,1.0
750363,24411043,"x=input()
if x==""a1"" or x==""a8"" or x==""h1"" or x==""h8"":
    print(3)
elif x.count(""a"")==1 or x.count(""h"")==1 and x.count(""1"" or ""8"")==0:
    print(5)
elif x.count(""1"")==1 or x.count(""8"")==1 and x.count(""a"")==0 and x.count(""h"")==0:
    print(5)
else:
    print(8)",64,4504,93,2/3/17 16:10,17,694,1,8,"[(True, '8', '8', 103282), (True, '3', '3', 103283), (True, '3', '3', 103284), (True, '5', '5', 103285), (True, '8', '8', 103286), (True, '5', '5', 103287), (True, '8', '8', 103288), (True, '8', '8', 103289), (True, '5', '5', 103290), (True, '5', '5', 103291), (True, '5', '5', 103292), (True, '5', '5', 103293), (True, '3', '3', 103294), (True, '5', '5', 103295), (True, '3', '3', 103296), (True, '8', '8', 103297), (True, '5', '5', 103298), (True, '5', '5', 103299), (True, '5', '5', 103300), (True, '5', '5', 103301), (True, '5', '5', 103302), (True, '5', '5', 103303), (True, '5', '5', 103304), (True, '5', '5', 103305)]",True,Accecpted,0.9095930632220222,0.9945553539019965,False,0.0
750361,24410974,"x=input()
if x==""a1"" or x==""a8"" or x==""h1"" or x==""h8"":
    print(3)
elif x.count(""a"")==1 or x.count(""h"")==1 and x.count(""1"" or ""8"")==0:
    print(5)
elif x.count(""1"")==1 or x.count(""8"")==1 and x.count(""a"")==0 and x.count(""h""):
    print(5)
else:
    print(8)",64,4508,62,2/3/17 16:08,17,694,2,8,"[(True, '8', '8', 103282), (True, '3', '3', 103283), (True, '3', '3', 103284), (True, '5', '5', 103285), (True, '8', '8', 103286), (True, '5', '5', 103287), (True, '8', '8', 103288), (True, '8', '8', 103289), (True, '5', '5', 103290), (False, '8', '5', 103291), (True, '5', '5', 103292), (True, '5', '5', 103293), (True, '3', '3', 103294), (False, '8', '5', 103295), (True, '3', '3', 103296), (True, '8', '8', 103297), (False, '8', '5', 103298), (True, '5', '5', 103299), (False, '8', '5', 103300), (False, '8', '5', 103301), (False, '8', '5', 103302), (True, '5', '5', 103303), (True, '5', '5', 103304), (True, '5', '5', 103305)]",False,Wrong Answer,0.9095930632220222,0.9945553539019965,False,0.25
421637,17354449,"import math
h1,h2=map(int,input().split())
r,f=map(int,input().split())
if h1+r*8>=h2:print(0)
elif f>=r:print(-1)
else:print(math.ceil((h2-h1-8*r)/(12*(r-f))))",88,16,62,4/17/16 0:09,11,385,1,8,"[(True, '1', '1', 78643), (True, '0', '0', 78644), (True, '-1', '-1', 78645), (True, '1', '1', 78646), (True, '82', '82', 78647), (True, '0', '0', 78648), (True, '0', '0', 78649), (True, '0', '0', 78650), (True, '17', '17', 78651), (True, '-1', '-1', 78652), (True, '1', '1', 78653), (True, '8332', '8332', 78654), (True, '-1', '-1', 78655), (True, '832', '832', 78656), (True, '-1', '-1', 78657), (True, '0', '0', 78658), (True, '-1', '-1', 78659), (True, '0', '0', 78660), (True, '0', '0', 78661), (True, '0', '0', 78662), (True, '-1', '-1', 78663), (True, '-1', '-1', 78664), (True, '0', '0', 78665), (True, '1', '1', 78666), (True, '2', '2', 78667), (True, '1', '1', 78668), (True, '0', '0', 78669), (True, '6', '6', 78670), (True, '-1', '-1', 78671), (True, '2', '2', 78672), (True, '-1', '-1', 78673), (True, '0', '0', 78674), (True, '1', '1', 78675), (True, '-1', '-1', 78676), (True, '-1', '-1', 78677), (True, '0', '0', 78678), (True, '1', '1', 78679), (True, '0', '0', 78680), (True, '2', '2', 78681), (True, '-1', '-1', 78682), (True, '1', '1', 78683), (True, '-1', '-1', 78684), (True, '-1', '-1', 78685), (True, '-1', '-1', 78686), (True, '-1', '-1', 78687), (True, '1', '1', 78688), (True, '1', '1', 78689), (True, '1', '1', 78690), (True, '-1', '-1', 78691), (True, '-1', '-1', 78692), (True, '-1', '-1', 78693), (True, '1', '1', 78694), (True, '-1', '-1', 78695), (True, '0', '0', 78696), (True, '1', '1', 78697), (True, '-1', '-1', 78698), (True, '-1', '-1', 78699), (True, '-1', '-1', 78700), (True, '4', '4', 78701), (True, '-1', '-1', 78702), (True, '-1', '-1', 78703), (True, '-1', '-1', 78704), (True, '0', '0', 78705), (True, '-1', '-1', 78706), (True, '-1', '-1', 78707), (True, '-1', '-1', 78708), (True, '-1', '-1', 78709), (True, '-1', '-1', 78710), (True, '-1', '-1', 78711), (True, '2', '2', 78712), (True, '-1', '-1', 78713), (True, '-1', '-1', 78714), (True, '1', '1', 78715), (True, '9', '9', 78716), (True, '1', '1', 78717), (True, '2', '2', 78718)]",True,Accecpted,0.5969491792019646,0.9941176470588236,False,0.0
421636,17354419,"import math
h1,h2=map(int,input().split())
r,f=map(int,input().split())
if h1-r*8>=h2:print(0)
elif f>=r:print(-1)
else:print(math.ceil((h2-h1-8*r)/(12*(r-f))))",88,0,31,4/17/16 0:05,11,385,2,8,"[(True, '1', '1', 78643), (False, '-1', '0', 78644), (True, '-1', '-1', 78645), (True, '1', '1', 78646), (True, '82', '82', 78647), (False, '-1', '0', 78648), (False, '-1', '0', 78649), (True, '0', '0', 78650), (True, '17', '17', 78651), (True, '-1', '-1', 78652), (True, '1', '1', 78653), (True, '8332', '8332', 78654), (True, '-1', '-1', 78655), (True, '832', '832', 78656), (True, '-1', '-1', 78657), (False, '-1', '0', 78658), (True, '-1', '-1', 78659), (False, '-1', '0', 78660), (False, '-1', '0', 78661), (True, '0', '0', 78662), (True, '-1', '-1', 78663), (True, '-1', '-1', 78664), (False, '-2', '0', 78665), (True, '1', '1', 78666), (True, '2', '2', 78667), (True, '1', '1', 78668), (False, '-1', '0', 78669), (True, '6', '6', 78670), (True, '-1', '-1', 78671), (True, '2', '2', 78672), (True, '-1', '-1', 78673), (True, '0', '0', 78674), (True, '1', '1', 78675), (True, '-1', '-1', 78676), (True, '-1', '-1', 78677), (False, '-1', '0', 78678), (True, '1', '1', 78679), (False, '-1', '0', 78680), (True, '2', '2', 78681), (True, '-1', '-1', 78682), (True, '1', '1', 78683), (True, '-1', '-1', 78684), (True, '-1', '-1', 78685), (True, '-1', '-1', 78686), (True, '-1', '-1', 78687), (True, '1', '1', 78688), (True, '1', '1', 78689), (True, '1', '1', 78690), (True, '-1', '-1', 78691), (True, '-1', '-1', 78692), (True, '-1', '-1', 78693), (True, '1', '1', 78694), (True, '-1', '-1', 78695), (False, '-1', '0', 78696), (True, '1', '1', 78697), (True, '-1', '-1', 78698), (True, '-1', '-1', 78699), (True, '-1', '-1', 78700), (True, '4', '4', 78701), (True, '-1', '-1', 78702), (True, '-1', '-1', 78703), (True, '-1', '-1', 78704), (False, '-1', '0', 78705), (True, '-1', '-1', 78706), (True, '-1', '-1', 78707), (True, '-1', '-1', 78708), (True, '-1', '-1', 78709), (True, '-1', '-1', 78710), (True, '-1', '-1', 78711), (True, '2', '2', 78712), (True, '-1', '-1', 78713), (True, '-1', '-1', 78714), (True, '1', '1', 78715), (True, '9', '9', 78716), (True, '1', '1', 78717), (True, '2', '2', 78718)]",False,Wrong Answer,0.5969491792019646,0.9941176470588236,False,0.1578947368421052
718315,23112031,"a=int(input())
x=''
while a:
    if a%2:x='that I hate '+x
    else:x='that I love '+x
    a-=1
print(x[5:]+'it')",88,4504,62,12/18/16 20:48,13,668,1,8,"[(True, 'I hate it', 'I hate it', 100802), (True, 'I hate that I love it', 'I hate that I love it', 100803), (True, 'I hate that I love that I hate it', 'I hate that I love that I hate it', 100804), (True, 'I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love it', 100805), (True, 'I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate it', 100806), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100807), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100808), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100809), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100819), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100820)]",True,Accecpted,3.634616230905551e-78,0.624561403508772,False,0.0
718289,23035560,"a=int(input())-1
print('I hate ',end='')
while a:
    if a%2:print('that I love ',end='')
    else:print('that I hate ',end='')
    a-=1
print('it')",88,0,62,12/16/16 23:29,13,668,2,8,"[(True, 'I hate it', 'I hate it', 100802), (True, 'I hate that I love it', 'I hate that I love it', 100803), (False, 'I hate that I hate that I love it', 'I hate that I love that I hate it', 100804), (True, 'I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love it', 100805), (False, 'I hate that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate it', 100806), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100807), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100808), (False, 'I hate that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100809), (False, 'I hate that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100819), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100820)]",False,Wrong Answer,3.634616230905551e-78,0.624561403508772,False,0.4
764834,24418065,"b,a=map(int,input().split())
t=0
s=[a,a,a]
while min(s)<b:
    x=min(s)
    if s[0]==x:
        s[0]=min(s[1]+s[2]-1,b)
    elif s[1]==x:
        s[1]=min(s[0]+s[2]-1,b)
    else:
        s[2]=min(s[0]+s[1]-1,b)
    t+=1
print(t)",88,4524,62,2/3/17 21:41,25,706,1,8,"[(True, '4', '4', 105030), (True, '3', '3', 105031), (True, '6', '6', 105032), (True, '3', '3', 105033), (True, '4', '4', 105034), (True, '9', '9', 105035), (True, '3', '3', 105036), (True, '3', '3', 105037), (True, '4', '4', 105038), (True, '6', '6', 105039), (True, '3', '3', 105040), (True, '7', '7', 105041), (True, '3', '3', 105042), (True, '5', '5', 105043), (True, '25', '25', 105044), (True, '7', '7', 105045), (True, '20', '20', 105046), (True, '13', '13', 105047), (True, '12', '12', 105048), (True, '3', '3', 105049), (True, '7', '7', 105050), (True, '3', '3', 105051), (True, '7', '7', 105052), (True, '6', '6', 105053), (True, '3', '3', 105054), (True, '4', '4', 105055), (True, '3', '3', 105056), (True, '5', '5', 105057), (True, '3', '3', 105058), (True, '3', '3', 105059), (True, '4', '4', 105060), (True, '3', '3', 105061), (True, '6', '6', 105062), (True, '5', '5', 105063), (True, '3', '3', 105064), (True, '3', '3', 105065), (True, '4', '4', 105066), (True, '6', '6', 105067), (True, '3', '3', 105068), (True, '4', '4', 105069), (True, '6', '6', 105070), (True, '3', '3', 105071), (True, '5', '5', 105072), (True, '3', '3', 105073), (True, '7', '7', 105074), (True, '8', '8', 105075), (True, '6', '6', 105076), (True, '13', '13', 105077), (True, '3', '3', 105078), (True, '4', '4', 105079), (True, '4', '4', 105080), (True, '7', '7', 105081), (True, '7', '7', 105082), (True, '3', '3', 105083), (True, '5', '5', 105084), (True, '6', '6', 105085), (True, '3', '3', 105086), (True, '3', '3', 105087), (True, '4', '4', 105088), (True, '5', '5', 105089), (True, '3', '3', 105090), (True, '5', '5', 105091), (True, '12', '12', 105092), (True, '3', '3', 105093), (True, '5', '5', 105094), (True, '5', '5', 105095), (True, '9', '9', 105096), (True, '3', '3', 105097), (True, '7', '7', 105098), (True, '10', '10', 105099), (True, '8', '8', 105100), (True, '7', '7', 105101), (True, '12', '12', 105102), (True, '5', '5', 105103), (True, '20', '20', 105104), (True, '6', '6', 105105)]",True,Accecpted,0.532422158401508,0.899803536345776,False,0.0
764833,24417888,"b,a=map(int,input().split())
t=0
s=[a,a,a]
while min(s)<b:
    x=min(s)
    if s[0]==x:
        s[0]=s[1]+s[2]-0.0000001
    elif s[1]==x:
        s[1]=s[0]+s[2]-0.0000001
    else:
        s[2]=s[0]+s[1]-0.0000001
    t+=1
print(t)",88,4504,62,2/3/17 21:31,25,706,2,8,"[(True, '4', '4', 105030), (True, '3', '3', 105031), (True, '6', '6', 105032), (True, '3', '3', 105033), (True, '4', '4', 105034), (False, '8', '9', 105035), (True, '3', '3', 105036), (True, '3', '3', 105037), (True, '4', '4', 105038), (True, '6', '6', 105039), (True, '3', '3', 105040), (True, '7', '7', 105041), (True, '3', '3', 105042), (True, '5', '5', 105043), (False, '24', '25', 105044), (True, '7', '7', 105045), (False, '19', '20', 105046), (True, '13', '13', 105047), (True, '12', '12', 105048), (True, '3', '3', 105049), (True, '7', '7', 105050), (True, '3', '3', 105051), (True, '7', '7', 105052), (True, '6', '6', 105053), (True, '3', '3', 105054), (True, '4', '4', 105055), (True, '3', '3', 105056), (True, '5', '5', 105057), (True, '3', '3', 105058), (True, '3', '3', 105059), (True, '4', '4', 105060), (True, '3', '3', 105061), (True, '6', '6', 105062), (True, '5', '5', 105063), (True, '3', '3', 105064), (True, '3', '3', 105065), (True, '4', '4', 105066), (True, '6', '6', 105067), (True, '3', '3', 105068), (True, '4', '4', 105069), (True, '6', '6', 105070), (True, '3', '3', 105071), (True, '5', '5', 105072), (True, '3', '3', 105073), (True, '7', '7', 105074), (True, '8', '8', 105075), (True, '6', '6', 105076), (True, '13', '13', 105077), (True, '3', '3', 105078), (True, '4', '4', 105079), (True, '4', '4', 105080), (True, '7', '7', 105081), (True, '7', '7', 105082), (True, '3', '3', 105083), (True, '5', '5', 105084), (True, '6', '6', 105085), (True, '3', '3', 105086), (True, '3', '3', 105087), (True, '4', '4', 105088), (True, '5', '5', 105089), (True, '3', '3', 105090), (True, '5', '5', 105091), (True, '12', '12', 105092), (True, '3', '3', 105093), (True, '5', '5', 105094), (True, '5', '5', 105095), (True, '9', '9', 105096), (True, '3', '3', 105097), (True, '7', '7', 105098), (False, '9', '10', 105099), (True, '8', '8', 105100), (False, '6', '7', 105101), (True, '12', '12', 105102), (True, '5', '5', 105103), (False, '19', '20', 105104), (True, '6', '6', 105105)]",False,Wrong Answer,0.532422158401508,0.899803536345776,False,0.0789473684210526
1033577,27004239,"x=input()
a=x[x.index('R')%4::4]
b=x[x.index('B')%4::4]
c=x[x.index('Y')%4::4]
d=x[x.index('G')%4::4]

print(a.count('!'),b.count('!'),c.count('!'),d.count('!'))",88,0,62,5/11/17 2:39,13,957,1,8,"[(True, '0 0 0 0', '0 0 0 0', 124954), (True, '0 1 0 0', '0 1 0 0', 124955), (True, '1 1 1 1', '1 1 1 1', 124956), (True, '2 1 1 0', '2 1 1 0', 124957), (True, '0 0 0 0', '0 0 0 0', 124958), (True, '20 18 19 18', '20 18 19 18', 124959), (True, '3 5 2 1', '3 5 2 1', 124960), (True, '0 0 0 0', '0 0 0 0', 124961), (True, '0 0 0 1', '0 0 0 1', 124962), (True, '0 0 0 0', '0 0 0 0', 124963), (True, '0 0 0 0', '0 0 0 0', 124964), (True, '0 0 0 0', '0 0 0 0', 124965), (True, '0 0 0 0', '0 0 0 0', 124966), (True, '1 1 1 1', '1 1 1 1', 124967), (True, '2 1 1 1', '2 1 1 1', 124968), (True, '1 2 1 2', '1 2 1 2', 124969), (True, '2 2 1 2', '2 2 1 2', 124970), (True, '2 2 2 2', '2 2 2 2', 124971), (True, '24 24 24 24', '24 24 24 24', 124972), (True, '24 24 24 0', '24 24 24 0', 124973), (True, '24 24 0 24', '24 24 0 24', 124974), (True, '24 0 24 24', '24 0 24 24', 124975), (True, '0 24 24 24', '0 24 24 24', 124976), (True, '0 1 0 2', '0 1 0 2', 124977), (True, '1 0 3 1', '1 0 3 1', 124978), (True, '4 3 2 1', '4 3 2 1', 124979), (True, '3 6 6 4', '3 6 6 4', 124980), (True, '1 5 9 7', '1 5 9 7', 124981), (True, '5 7 5 7', '5 7 5 7', 124982), (True, '5 13 12 13', '5 13 12 13', 124983), (True, '14 2 13 11', '14 2 13 11', 124984), (True, '0 1 2 3', '0 1 2 3', 124985), (True, '20 20 21 21', '20 20 21 21', 124986), (True, '15 10 5 0', '15 10 5 0', 124987), (True, '23 24 23 24', '23 24 23 24', 124988), (True, '0 24 0 24', '0 24 0 24', 124989), (True, '13 12 17 20', '13 12 17 20', 124990), (True, '7 8 22 15', '7 8 22 15', 124991), (True, '11 14 0 24', '11 14 0 24', 124992), (True, '10 8 9 8', '10 8 9 8', 124993), (True, '15 10 4 0', '15 10 4 0', 124994), (True, '22 24 23 23', '22 24 23 23', 124995), (True, '19 17 18 17', '19 17 18 17', 124996), (True, '14 9 3 0', '14 9 3 0', 124997), (True, '21 23 22 22', '21 23 22 22', 124998), (True, '18 16 17 16', '18 16 17 16', 124999), (True, '10 10 15 18', '10 10 15 18', 125000), (True, '5 5 20 12', '5 5 20 12', 125001), (True, '8 11 0 21', '8 11 0 21', 125002), (True, '7 5 6 5', '7 5 6 5', 125003), (True, '3 3 3 3', '3 3 3 3', 125004), (True, '7 7 7 7', '7 7 7 7', 125005), (True, '0 0 0 0', '0 0 0 0', 125006), (True, '3 2 2 2', '3 2 2 2', 125007), (True, '0 0 1 0', '0 0 1 0', 125008), (True, '9 9 9 9', '9 9 9 9', 125009), (True, '2 2 1 2', '2 2 1 2', 125010), (True, '24 24 24 24', '24 24 24 24', 125011), (True, '3 3 3 3', '3 3 3 3', 125012), (True, '4 4 4 4', '4 4 4 4', 125013), (True, '2 1 2 2', '2 1 2 2', 125014), (True, '7 6 7 6', '7 6 7 6', 125015), (True, '3 3 3 3', '3 3 3 3', 125016), (True, '8 7 8 7', '8 7 8 7', 125017), (True, '10 10 10 10', '10 10 10 10', 125018)]",True,Accecpted,6.206021746903507e-78,0.9793510324483776,False,0.0
1033576,27004232,"x=input()
a=x[x.index('R')%4::4]
b=x[x.index('B')%4::4]
c=x[x.index('Y')::4]
d=x[x.index('G')::4]
print(a.count('!'),b.count('!'),c.count('!'),d.count('!'))",88,0,61,5/11/17 2:38,11,957,2,8,"[(True, '0 0 0 0', '0 0 0 0', 124954), (True, '0 1 0 0', '0 1 0 0', 124955), (False, '1 1 0 0', '1 1 1 1', 124956), (False, '2 1 0 0', '2 1 1 0', 124957), (True, '0 0 0 0', '0 0 0 0', 124958), (False, '20 18 19 16', '20 18 19 18', 124959), (False, '3 5 1 1', '3 5 2 1', 124960), (True, '0 0 0 0', '0 0 0 0', 124961), (True, '0 0 0 1', '0 0 0 1', 124962), (True, '0 0 0 0', '0 0 0 0', 124963), (True, '0 0 0 0', '0 0 0 0', 124964), (True, '0 0 0 0', '0 0 0 0', 124965), (True, '0 0 0 0', '0 0 0 0', 124966), (True, '1 1 1 1', '1 1 1 1', 124967), (False, '2 1 0 0', '2 1 1 1', 124968), (False, '1 2 1 1', '1 2 1 2', 124969), (False, '2 2 1 0', '2 2 1 2', 124970), (False, '2 2 0 0', '2 2 2 2', 124971), (False, '24 24 20 3', '24 24 24 24', 124972), (False, '24 24 17 0', '24 24 24 0', 124973), (False, '24 24 0 10', '24 24 0 24', 124974), (False, '24 0 6 19', '24 0 24 24', 124975), (False, '0 24 24 4', '0 24 24 24', 124976), (False, '0 1 0 1', '0 1 0 2', 124977), (False, '1 0 1 1', '1 0 3 1', 124978), (True, '4 3 2 1', '4 3 2 1', 124979), (False, '3 6 5 3', '3 6 6 4', 124980), (False, '1 5 1 3', '1 5 9 7', 124981), (False, '5 7 5 5', '5 7 5 7', 124982), (False, '5 13 10 13', '5 13 12 13', 124983), (False, '14 2 9 11', '14 2 13 11', 124984), (False, '0 1 1 3', '0 1 2 3', 124985), (False, '20 20 4 19', '20 20 21 21', 124986), (False, '15 10 4 0', '15 10 5 0', 124987), (False, '23 24 22 7', '23 24 23 24', 124988), (False, '0 24 0 15', '0 24 0 24', 124989), (False, '13 12 17 14', '13 12 17 20', 124990), (False, '7 8 11 15', '7 8 22 15', 124991), (False, '11 14 0 17', '11 14 0 24', 124992), (False, '10 8 9 7', '10 8 9 8', 124993), (False, '15 10 3 0', '15 10 4 0', 124994), (False, '22 24 23 19', '22 24 23 23', 124995), (False, '19 17 17 16', '19 17 18 17', 124996), (True, '14 9 3 0', '14 9 3 0', 124997), (False, '21 23 20 18', '21 23 22 22', 124998), (False, '18 16 16 15', '18 16 17 16', 124999), (False, '10 10 15 17', '10 10 15 18', 125000), (False, '5 5 13 12', '5 5 20 12', 125001), (False, '8 11 0 1', '8 11 0 21', 125002), (False, '7 5 5 5', '7 5 6 5', 125003), (False, '3 3 2 3', '3 3 3 3', 125004), (False, '7 7 7 5', '7 7 7 7', 125005), (True, '0 0 0 0', '0 0 0 0', 125006), (False, '3 2 0 0', '3 2 2 2', 125007), (True, '0 0 1 0', '0 0 1 0', 125008), (False, '9 9 3 0', '9 9 9 9', 125009), (True, '2 2 1 2', '2 2 1 2', 125010), (False, '24 24 18 12', '24 24 24 24', 125011), (False, '3 3 0 2', '3 3 3 3', 125012), (False, '4 4 2 1', '4 4 4 4', 125013), (False, '2 1 0 0', '2 1 2 2', 125014), (False, '7 6 2 4', '7 6 7 6', 125015), (False, '3 3 1 0', '3 3 3 3', 125016), (False, '8 7 2 5', '8 7 8 7', 125017), (False, '10 10 2 4', '10 10 10 10', 125018)]",False,Wrong Answer,6.206021746903507e-78,0.9793510324483776,False,0.7692307692307693
1246376,27459123,"a=input()
x=a.count('4')
y=a.count('7')

if y==x==0:
    print(-1)
elif y>x:
    print(7)
else:
    print(4)",88,0,124,5/31/17 7:39,10,1133,1,8,"[(True, '4', '4', 137812), (True, '-1', '-1', 137813), (True, '7', '7', 137814), (True, '-1', '-1', 137815), (True, '4', '4', 137816), (True, '4', '4', 137817), (True, '4', '4', 137818), (True, '7', '7', 137819), (True, '-1', '-1', 137820), (True, '-1', '-1', 137821), (True, '7', '7', 137822), (True, '7', '7', 137823), (True, '4', '4', 137824), (True, '4', '4', 137825), (True, '7', '7', 137826), (True, '4', '4', 137827), (True, '7', '7', 137828), (True, '7', '7', 137829), (True, '7', '7', 137830), (True, '7', '7', 137831), (True, '7', '7', 137832), (True, '7', '7', 137833), (True, '-1', '-1', 137834), (True, '4', '4', 137835), (True, '4', '4', 137836), (True, '4', '4', 137837), (True, '7', '7', 137838), (True, '7', '7', 137839), (True, '4', '4', 137840), (True, '4', '4', 137841), (True, '7', '7', 137842), (True, '-1', '-1', 137843), (True, '4', '4', 137844), (True, '4', '4', 137845), (True, '7', '7', 137846), (True, '4', '4', 137847), (True, '4', '4', 137848), (True, '4', '4', 137849), (True, '7', '7', 137850), (True, '7', '7', 137851), (True, '4', '4', 137852), (True, '4', '4', 137853)]",True,Accecpted,0.4752203774792173,0.8529411764705882,False,0.0
1246374,27458957,"a=input()
x=a.count('4')
y=a.count('7')

if y>x:
    print(7)
else:
    print(4)",88,0,92,5/31/17 7:19,8,1133,2,8,"[(True, '4', '4', 137812), (False, '4', '-1', 137813), (True, '7', '7', 137814), (False, '4', '-1', 137815), (True, '4', '4', 137816), (True, '4', '4', 137817), (True, '4', '4', 137818), (True, '7', '7', 137819), (False, '4', '-1', 137820), (False, '4', '-1', 137821), (True, '7', '7', 137822), (True, '7', '7', 137823), (True, '4', '4', 137824), (True, '4', '4', 137825), (True, '7', '7', 137826), (True, '4', '4', 137827), (True, '7', '7', 137828), (True, '7', '7', 137829), (True, '7', '7', 137830), (True, '7', '7', 137831), (True, '7', '7', 137832), (True, '7', '7', 137833), (False, '4', '-1', 137834), (True, '4', '4', 137835), (True, '4', '4', 137836), (True, '4', '4', 137837), (True, '7', '7', 137838), (True, '7', '7', 137839), (True, '4', '4', 137840), (True, '4', '4', 137841), (True, '7', '7', 137842), (False, '4', '-1', 137843), (True, '4', '4', 137844), (True, '4', '4', 137845), (True, '7', '7', 137846), (True, '4', '4', 137847), (True, '4', '4', 137848), (True, '4', '4', 137849), (True, '7', '7', 137850), (True, '7', '7', 137851), (True, '4', '4', 137852), (True, '4', '4', 137853)]",False,Wrong Answer,0.4752203774792173,0.8529411764705882,False,0.1428571428571428
1311645,27936800,"import math

b,g,t=map(int,input().split())
tot=0

for i in range(4,t):
    if i<=b and t-i<=g:
        tot+=(math.factorial(b)//(math.factorial(i)*math.factorial(b-i)))*(math.factorial(g)//(math.factorial(t-i)*math.factorial(g-t+i)))
print(tot)",88,5404,218,6/21/17 7:14,9,1188,1,8,"[(True, '10', '10', 141611), (True, '3', '3', 141612), (True, '1', '1', 141613), (True, '168', '168', 141614), (True, '118264581548187697', '118264581548187697', 141615), (True, '84990', '84990', 141616), (True, '168229', '168229', 141617), (True, '1', '1', 141618), (True, '23535820', '23535820', 141619), (True, '1', '1', 141620), (True, '62852101650', '62852101650', 141621), (True, '4845', '4845', 141622), (True, '1', '1', 141623), (True, '1', '1', 141624), (True, '1', '1', 141625), (True, '4845', '4845', 141626), (True, '96900', '96900', 141627), (True, '1', '1', 141628), (True, '60', '60', 141629), (True, '455126', '455126', 141630), (True, '1', '1', 141631), (True, '1', '1', 141632), (True, '54627300', '54627300', 141633), (True, '1', '1', 141634), (True, '1711', '1711', 141635), (True, '11899700525790', '11899700525790', 141636), (True, '1', '1', 141637), (True, '1', '1', 141638), (True, '75394027566', '75394027566', 141639), (True, '34220', '34220', 141640), (True, '1770', '1770', 141641), (True, '1225', '1225', 141642), (True, '30', '30', 141643), (True, '32468436', '32468436', 141644), (True, '56', '56', 141645), (True, '5461512', '5461512', 141646), (True, '1', '1', 141647), (True, '1', '1', 141648), (True, '252', '252', 141649)]",True,Accecpted,0.8385766789076257,0.730844793713163,False,0.0
1311644,27936759,"import math

b,g,t=map(int,input().split())
tot=0

for i in range(4,t):
    if i<=b and t-i<=g:
        tot+=(math.factorial(b)/(math.factorial(i)*math.factorial(b-i)))*(math.factorial(g)/(math.factorial(t-i)*math.factorial(g-t+i)))
print(int(tot))",88,4504,124,6/21/17 7:10,9,1188,2,8,"[(True, '10', '10', 141611), (True, '3', '3', 141612), (True, '1', '1', 141613), (True, '168', '168', 141614), (False, '118264581548187696', '118264581548187697', 141615), (True, '84990', '84990', 141616), (True, '168229', '168229', 141617), (True, '1', '1', 141618), (True, '23535820', '23535820', 141619), (True, '1', '1', 141620), (True, '62852101650', '62852101650', 141621), (True, '4845', '4845', 141622), (True, '1', '1', 141623), (True, '1', '1', 141624), (True, '1', '1', 141625), (True, '4845', '4845', 141626), (True, '96900', '96900', 141627), (True, '1', '1', 141628), (True, '60', '60', 141629), (True, '455126', '455126', 141630), (True, '1', '1', 141631), (True, '1', '1', 141632), (True, '54627300', '54627300', 141633), (True, '1', '1', 141634), (True, '1711', '1711', 141635), (True, '11899700525790', '11899700525790', 141636), (True, '1', '1', 141637), (True, '1', '1', 141638), (True, '75394027566', '75394027566', 141639), (True, '34220', '34220', 141640), (True, '1770', '1770', 141641), (True, '1225', '1225', 141642), (True, '30', '30', 141643), (True, '32468436', '32468436', 141644), (True, '56', '56', 141645), (True, '5461512', '5461512', 141646), (True, '1', '1', 141647), (True, '1', '1', 141648), (True, '252', '252', 141649)]",False,Wrong Answer,0.8385766789076257,0.730844793713163,False,0.0256410256410256
1425585,27957941,"a,b=map(str,input().split())

def mask(x):
    st=''
    for i in str(x):
        if i=='7' or i=='4':
            st+=i
    return(st)


for i in range(int(a)+1,177778):
    if mask(i)!=b:
        pass
    else:
        print(i)
        quit()",88,5408,310,6/22/17 8:55,16,1268,1,8,"[(True, '7', '7', 147404), (True, '147', '147', 147405), (True, '467', '467', 147406), (True, '17', '17', 147407), (True, '647', '647', 147408), (True, '177', '177', 147409), (True, '45', '45', 147410), (True, '804', '804', 147411), (True, '177777', '177777', 147412), (True, '177777', '177777', 147413), (True, '74', '74', 147414), (True, '77', '77', 147415), (True, '174', '174', 147416), (True, '107474', '107474', 147417), (True, '100004', '100004', 147418), (True, '100007', '100007', 147419), (True, '100047', '100047', 147420), (True, '50774', '50774', 147421), (True, '50007', '50007', 147422), (True, '45898', '45898', 147423), (True, '77777', '77777', 147424), (True, '100077', '100077', 147425), (True, '77777', '77777', 147426), (True, '47774', '47774', 147427), (True, '147774', '147774', 147428), (True, '47774', '47774', 147429), (True, '55574', '55574', 147430), (True, '64774', '64774', 147431), (True, '80447', '80447', 147432), (True, '77477', '77477', 147433), (True, '32074', '32074', 147434), (True, '407', '407', 147435), (True, '40000', '40000', 147436), (True, '40774', '40774', 147437), (True, '574', '574', 147438), (True, '74444', '74444', 147439), (True, '50074', '50074', 147440), (True, '4', '4', 147441), (True, '14', '14', 147442), (True, '704', '704', 147443), (True, '478', '478', 147444), (True, '100077', '100077', 147445), (True, '57', '57', 147446)]",True,Accecpted,0.8843865924896842,0.996124031007752,False,0.0
1425584,27957935,"a,b=map(str,input().split())

def mask(x):
    st=''
    for i in str(x):
        if i=='7' or i=='4':
            st+=i
    return(st)


for i in range(int(a),177778):
    if mask(i)!=b:
        pass
    else:
        print(i)
        quit()",88,5396,154,6/22/17 8:54,16,1268,2,8,"[(True, '7', '7', 147404), (True, '147', '147', 147405), (True, '467', '467', 147406), (False, '7', '17', 147407), (False, '547', '647', 147408), (False, '77', '177', 147409), (True, '45', '45', 147410), (True, '804', '804', 147411), (True, '177777', '177777', 147412), (False, '77777', '177777', 147413), (True, '74', '74', 147414), (True, '77', '77', 147415), (True, '174', '174', 147416), (True, '107474', '107474', 147417), (True, '100004', '100004', 147418), (True, '100007', '100007', 147419), (True, '100047', '100047', 147420), (True, '50774', '50774', 147421), (True, '50007', '50007', 147422), (False, '45896', '45898', 147423), (True, '77777', '77777', 147424), (True, '100077', '100077', 147425), (True, '77777', '77777', 147426), (True, '47774', '47774', 147427), (False, '47774', '147774', 147428), (True, '47774', '47774', 147429), (True, '55574', '55574', 147430), (True, '64774', '64774', 147431), (True, '80447', '80447', 147432), (True, '77477', '77477', 147433), (True, '32074', '32074', 147434), (True, '407', '407', 147435), (True, '40000', '40000', 147436), (True, '40774', '40774', 147437), (True, '574', '574', 147438), (True, '74444', '74444', 147439), (True, '50074', '50074', 147440), (True, '4', '4', 147441), (False, '4', '14', 147442), (True, '704', '704', 147443), (False, '476', '478', 147444), (True, '100077', '100077', 147445), (True, '57', '57', 147446)]",False,Wrong Answer,0.8843865924896842,0.996124031007752,False,0.1860465116279069
1923605,27717943,"a=int(input())
x=0
div=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        div.append(i)
b=len(div)
for i in div[:b]:
    div.append(a//i)
div=list(set(div))

for i in div:
    t=0
    for j in str(i):
        if j in str(a):
            t=1
    x+=t

print(x)",88,8,124,6/11/17 11:57,19,1722,1,8,"[(True, '1', '1', 171832), (True, '2', '2', 171833), (True, '1', '1', 171834), (True, '5', '5', 171835), (True, '6', '6', 171836), (True, '1', '1', 171837), (True, '2', '2', 171838), (True, '41', '41', 171839), (True, '91', '91', 171840), (True, '5', '5', 171841), (True, '6', '6', 171842), (True, '1', '1', 171843), (True, '1', '1', 171844), (True, '1', '1', 171845), (True, '3', '3', 171846), (True, '4', '4', 171847), (True, '4', '4', 171848), (True, '11', '11', 171849), (True, '44', '44', 171850), (True, '21', '21', 171851), (True, '7', '7', 171852), (True, '5', '5', 171853), (True, '6', '6', 171854), (True, '9', '9', 171855), (True, '244', '244', 171856), (True, '29', '29', 171857), (True, '698', '698', 171858), (True, '479', '479', 171859), (True, '639', '639', 171860), (True, '460', '460', 171861), (True, '1', '1', 171862), (True, '5', '5', 171863), (True, '8', '8', 171864), (True, '6', '6', 171865), (True, '8', '8', 171866), (True, '2', '2', 171867), (True, '2', '2', 171868), (True, '1', '1', 171869), (True, '6', '6', 171870)]",True,Accecpted,0.7022290794069234,0.5697896749521989,False,0.0
1923604,27717901,"a=int(input())
x=0
div=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        div.append(i)

for i in div:
    t=0
    for j in str(i):
        if j in str(a):
            t=1
    x+=t

x+=1
if a==1:
    x-=1
print(x)",88,0,92,6/11/17 11:54,18,1722,2,8,"[(True, '1', '1', 171832), (True, '2', '2', 171833), (True, '1', '1', 171834), (False, '3', '5', 171835), (False, '4', '6', 171836), (True, '1', '1', 171837), (True, '2', '2', 171838), (False, '18', '41', 171839), (False, '42', '91', 171840), (False, '3', '5', 171841), (False, '4', '6', 171842), (True, '1', '1', 171843), (True, '1', '1', 171844), (True, '1', '1', 171845), (False, '2', '3', 171846), (False, '3', '4', 171847), (False, '2', '4', 171848), (False, '6', '11', 171849), (False, '21', '44', 171850), (False, '10', '21', 171851), (False, '5', '7', 171852), (False, '3', '5', 171853), (False, '3', '6', 171854), (False, '4', '9', 171855), (False, '119', '244', 171856), (False, '15', '29', 171857), (False, '339', '698', 171858), (False, '231', '479', 171859), (False, '300', '639', 171860), (False, '211', '460', 171861), (True, '1', '1', 171862), (False, '2', '5', 171863), (False, '4', '8', 171864), (False, '3', '6', 171865), (False, '5', '8', 171866), (True, '2', '2', 171867), (True, '2', '2', 171868), (True, '1', '1', 171869), (False, '3', '6', 171870)]",False,Wrong Answer,0.7022290794069234,0.5697896749521989,False,0.6923076923076923
120519,24684647,"s1, s2, ss = [int(x) for x in input().split()]
a = s1 + ss + s2
b = 2*s1 + 2*s2
c = 2*s2 + 2*ss
d = 2*s1 + 2*ss

print(min(a, b, c, d))",99,4512,77,2/15/17 5:50,13,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.1148754224440722,0.5661764705882353,False,0.0
120030,24251428,"c1, c2, ll = [int(x) for x in input().split()]

if c1+c2 < ll:
    c1 += c1+c2
else:
    c1 += ll

print(c1+c2)",99,4460,46,1/29/17 19:02,15,102,2,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (False, '167', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (False, '127520897', '55041796', 55891), (False, '293554', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (False, '13552', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (False, '9', '8', 55902), (False, '1002', '4', 55903), (False, '100000002', '4', 55904)]",False,Wrong Answer,0.1148754224440722,0.5661764705882353,False,0.3333333333333333
944235,29295661,"#!/usr/bin/python3


def main():
    exp = int(input())
    data = [8, 4, 2, 6]
    print(data[(exp-1)%4] if exp else 1)


if __name__ == ""__main__"": main()",99,4520,62,8/9/17 4:32,19,868,1,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (True, '1', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",True,Accecpted,0.5343149081986374,0.9397590361445785,False,0.0
944234,29295634,"#!/usr/bin/python3


def main():
    exp = int(input())-1
    data = [8, 4, 2, 6]
    print(data[exp%4])


if __name__ == ""__main__"": main()",99,4520,77,8/9/17 4:30,19,868,2,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (False, '6', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",False,Wrong Answer,0.5343149081986374,0.9397590361445785,False,0.0333333333333333
1968087,23192843,"l=[int(x) for x in input().split()]
ans=0
d=[]
for e in l:
  if e in d:
    ans+=1
  else:
    d.append(e)
print(ans)",134,4500,154,12/21/16 10:11,9,1756,1,8,"[(True, '1', '1', 174780), (True, '3', '3', 174781), (True, '0', '0', 174782), (True, '0', '0', 174783), (True, '1', '1', 174784), (True, '1', '1', 174785), (True, '2', '2', 174786), (True, '2', '2', 174787), (True, '3', '3', 174788), (True, '3', '3', 174789), (True, '0', '0', 174790), (True, '0', '0', 174791), (True, '0', '0', 174792), (True, '0', '0', 174793), (True, '1', '1', 174794), (True, '1', '1', 174795), (True, '1', '1', 174796), (True, '1', '1', 174797), (True, '2', '2', 174798), (True, '2', '2', 174799), (True, '2', '2', 174800), (True, '2', '2', 174801), (True, '3', '3', 174802), (True, '3', '3', 174803), (True, '3', '3', 174804), (True, '3', '3', 174805), (True, '1', '1', 174806), (True, '1', '1', 174807), (True, '1', '1', 174808), (True, '1', '1', 174809), (True, '2', '2', 174810), (True, '2', '2', 174811), (True, '2', '2', 174812), (True, '2', '2', 174813)]",True,Accecpted,0.1798083432593665,0.2421052631578947,False,0.0
1968085,23192700,"l=[int(x) for x in input().split()]
a,b,c,d=map(int, l)
s=[0 for x in range(4)]
for e in l:
  if e==a:
    s[0]+=1
  if e==b:
    s[1]+=1
  if e==c:
    s[2]+=1
  if e==d:
    s[3]+=1
ans=0
for e in s:
  if e!=1:
    ans=e
    break

print(ans-1 if ans!=0 else 0)",134,4484,124,12/21/16 10:00,19,1756,2,8,"[(True, '1', '1', 174780), (True, '3', '3', 174781), (True, '0', '0', 174782), (True, '0', '0', 174783), (True, '1', '1', 174784), (True, '1', '1', 174785), (False, '1', '2', 174786), (False, '1', '2', 174787), (True, '3', '3', 174788), (True, '3', '3', 174789), (True, '0', '0', 174790), (True, '0', '0', 174791), (True, '0', '0', 174792), (True, '0', '0', 174793), (True, '1', '1', 174794), (True, '1', '1', 174795), (True, '1', '1', 174796), (True, '1', '1', 174797), (True, '2', '2', 174798), (False, '1', '2', 174799), (False, '1', '2', 174800), (False, '1', '2', 174801), (True, '3', '3', 174802), (True, '3', '3', 174803), (True, '3', '3', 174804), (True, '3', '3', 174805), (True, '1', '1', 174806), (True, '1', '1', 174807), (True, '1', '1', 174808), (True, '1', '1', 174809), (False, '1', '2', 174810), (True, '2', '2', 174811), (True, '2', '2', 174812), (True, '2', '2', 174813)]",False,Wrong Answer,0.1798083432593665,0.2421052631578947,False,0.1764705882352941
189319,26665115,"n=int(input())
t=0
z=n//2-1
if n%2==1:
    print(0)
else:
    print(z//2)",136,5420,62,4/25/17 18:46,13,153,1,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (True, '0', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (True, '499999999', '499999999', 60607), (True, '481176017', '481176017', 60608), (True, '18435146', '18435146', 60609), (True, '481272204', '481272204', 60610), (True, '148267747', '148267747', 60611), (True, '481368392', '481368392', 60612), (True, '157372546', '157372546', 60613), (True, '495162277', '495162277', 60614), (True, '9165330', '9165330', 60615), (True, '0', '0', 60616), (True, '17801758', '17801758', 60617), (True, '439394348', '439394348', 60618), (True, '42076323', '42076323', 60619), (True, '483724055', '483724055', 60620), (True, '74287271', '74287271', 60621), (True, '474500408', '474500408', 60622), (True, '44102424', '44102424', 60623), (True, '468256380', '468256380', 60624), (True, '1428690', '1428690', 60625), (True, '457387797', '457387797', 60626), (True, '4067359', '4067359', 60627), (True, '415820847', '415820847', 60628), (True, '0', '0', 60629), (True, '491836400', '491836400', 60630), (True, '213499', '213499', 60631), (True, '498971656', '498971656', 60632), (True, '0', '0', 60633), (True, '499048408', '499048408', 60634), (True, '2401294', '2401294', 60635), (True, '499114934', '499114934', 60636), (True, '8172986', '8172986', 60637), (True, '493975826', '493975826', 60638), (True, '494159283', '494159283', 60639), (True, '7450759', '7450759', 60640), (True, '494494922', '494494922', 60641), (True, '494648833', '494648833', 60642), (True, '6844835', '6844835', 60643), (True, '494932477', '494932477', 60644), (True, '495063444', '495063444', 60645), (True, '495187895', '495187895', 60646), (True, '13306219', '13306219', 60647), (True, '0', '0', 60648), (True, '0', '0', 60649), (True, '1', '1', 60650), (True, '0', '0', 60651), (True, '2', '2', 60652), (True, '0', '0', 60653), (True, '2', '2', 60654), (True, '0', '0', 60655), (True, '3', '3', 60656), (True, '0', '0', 60657), (True, '3', '3', 60658), (True, '0', '0', 60659), (True, '4', '4', 60660), (True, '0', '0', 60661), (True, '0', '0', 60662), (True, '5', '5', 60663), (True, '0', '0', 60664), (True, '5', '5', 60665), (True, '0', '0', 60666), (True, '6', '6', 60667), (True, '0', '0', 60668), (True, '6', '6', 60669), (True, '0', '0', 60670), (True, '7', '7', 60671), (True, '0', '0', 60672), (True, '0', '0', 60673), (True, '0', '0', 60674), (True, '0', '0', 60675), (True, '0', '0', 60676)]",True,Accecpted,3.4139826703418696e-78,0.6923076923076923,False,0.0
189318,26665056,"n=int(input())
t=0
z=n//2-1
print(z//2)",136,5412,46,4/25/17 18:44,7,153,2,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (False, '-1', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (True, '499999999', '499999999', 60607), (True, '481176017', '481176017', 60608), (True, '18435146', '18435146', 60609), (True, '481272204', '481272204', 60610), (True, '148267747', '148267747', 60611), (True, '481368392', '481368392', 60612), (True, '157372546', '157372546', 60613), (True, '495162277', '495162277', 60614), (True, '9165330', '9165330', 60615), (False, '485897697', '0', 60616), (True, '17801758', '17801758', 60617), (True, '439394348', '439394348', 60618), (True, '42076323', '42076323', 60619), (True, '483724055', '483724055', 60620), (True, '74287271', '74287271', 60621), (True, '474500408', '474500408', 60622), (True, '44102424', '44102424', 60623), (True, '468256380', '468256380', 60624), (True, '1428690', '1428690', 60625), (True, '457387797', '457387797', 60626), (True, '4067359', '4067359', 60627), (True, '415820847', '415820847', 60628), (False, '10637484', '0', 60629), (True, '491836400', '491836400', 60630), (True, '213499', '213499', 60631), (True, '498971656', '498971656', 60632), (False, '2582504', '0', 60633), (True, '499048408', '499048408', 60634), (True, '2401294', '2401294', 60635), (True, '499114934', '499114934', 60636), (True, '8172986', '8172986', 60637), (True, '493975826', '493975826', 60638), (True, '494159283', '494159283', 60639), (True, '7450759', '7450759', 60640), (True, '494494922', '494494922', 60641), (True, '494648833', '494648833', 60642), (True, '6844835', '6844835', 60643), (True, '494932477', '494932477', 60644), (True, '495063444', '495063444', 60645), (True, '495187895', '495187895', 60646), (True, '13306219', '13306219', 60647), (True, '0', '0', 60648), (False, '1', '0', 60649), (True, '1', '1', 60650), (False, '1', '0', 60651), (True, '2', '2', 60652), (False, '2', '0', 60653), (True, '2', '2', 60654), (False, '2', '0', 60655), (True, '3', '3', 60656), (False, '3', '0', 60657), (True, '3', '3', 60658), (False, '3', '0', 60659), (True, '4', '4', 60660), (False, '4', '0', 60661), (False, '4', '0', 60662), (True, '5', '5', 60663), (False, '5', '0', 60664), (True, '5', '5', 60665), (False, '5', '0', 60666), (True, '6', '6', 60667), (False, '6', '0', 60668), (True, '6', '6', 60669), (False, '6', '0', 60670), (True, '7', '7', 60671), (False, '27', '0', 60672), (False, '13', '0', 60673), (False, '25', '0', 60674), (False, '49', '0', 60675), (False, '37', '0', 60676)]",False,Wrong Answer,3.4139826703418696e-78,0.6923076923076923,False,0.2763157894736842
261663,27910301,"a=input()
c=int(input())
o=c//60
p=c%60
kasra=int(a[3:])
kasra+=p
if kasra>=60:
    o+=kasra//60
    kasra-=60
    
    if kasra<10:
        kasra='0'+str(kasra)
    else:
        kasra=str(kasra)
if len(str(kasra))==1:
    kasra='0'+str(kasra)
else:
    kasra=str(kasra)
z=int(a[:2])
z+=o
if z>=24:
    z-=24*(z//24)
if z<10:
    z='0'+str(z)
z=str(z)
g=z+':'+kasra
print(g)",136,4,62,6/19/17 20:55,53,218,1,8,"[(True, '00:09', '00:09', 65865), (True, '22:21', '22:21', 65866), (True, '10:10', '10:10', 65867), (True, '11:14', '11:14', 65868), (True, '22:40', '22:40', 65869), (True, '00:00', '00:00', 65870), (True, '23:59', '23:59', 65871), (True, '10:01', '10:01', 65872), (True, '04:05', '04:05', 65873), (True, '03:00', '03:00', 65874), (True, '05:25', '05:25', 65875), (True, '03:30', '03:30', 65876), (True, '09:11', '09:11', 65877), (True, '19:00', '19:00', 65878), (True, '00:00', '00:00', 65879), (True, '12:00', '12:00', 65880), (True, '05:00', '05:00', 65881), (True, '01:00', '01:00', 65882), (True, '03:30', '03:30', 65883), (True, '23:00', '23:00', 65884), (True, '00:00', '00:00', 65885), (True, '05:12', '05:12', 65886), (True, '10:00', '10:00', 65887), (True, '15:40', '15:40', 65888), (True, '06:00', '06:00', 65889), (True, '00:58', '00:58', 65890), (True, '19:46', '19:46', 65891), (True, '11:01', '11:01', 65892), (True, '17:00', '17:00', 65893), (True, '01:59', '01:59', 65894), (True, '20:07', '20:07', 65895), (True, '00:10', '00:10', 65896), (True, '12:43', '12:43', 65897), (True, '01:11', '01:11', 65898), (True, '00:00', '00:00', 65899), (True, '09:10', '09:10', 65900), (True, '02:39', '02:39', 65901), (True, '15:08', '15:08', 65902), (True, '16:05', '16:05', 65903), (True, '00:22', '00:22', 65904), (True, '12:00', '12:00', 65905), (True, '20:00', '20:00', 65906), (True, '20:01', '20:01', 65907), (True, '14:00', '14:00', 65908), (True, '01:54', '01:54', 65909), (True, '03:00', '03:00', 65910), (True, '09:03', '09:03', 65911), (True, '11:01', '11:01', 65912), (True, '01:00', '01:00', 65913), (True, '00:00', '00:00', 65914), (True, '02:00', '02:00', 65915), (True, '01:00', '01:00', 65916), (True, '16:52', '16:52', 65917), (True, '13:24', '13:24', 65918), (True, '01:00', '01:00', 65919), (True, '01:00', '01:00', 65920), (True, '00:56', '00:56', 65921), (True, '10:06', '10:06', 65922), (True, '00:00', '00:00', 65923)]",True,Accecpted,0.8088178216583023,0.918987341772152,False,0.0
261662,27910272,"a=input()
c=int(input())
o=c//60
p=c%60
kasra=int(a[3:])
kasra+=p
if kasra>=60:
    o+=kasra//60
    kasra-=60
    
    if kasra<10:
        kasra='0'+str(kasra)
    else:
        kasra=str(kasra)
kasra=str(kasra)
z=int(a[:2])
z+=o
if z>=24:
    z-=24*(z//24)
if z<10:
    z='0'+str(z)
z=str(z)
g=z+':'+kasra
print(g)",136,0,77,6/19/17 20:54,47,218,2,8,"[(True, '00:09', '00:09', 65865), (True, '22:21', '22:21', 65866), (True, '10:10', '10:10', 65867), (True, '11:14', '11:14', 65868), (True, '22:40', '22:40', 65869), (False, '00:0', '00:00', 65870), (True, '23:59', '23:59', 65871), (False, '10:1', '10:01', 65872), (False, '04:5', '04:05', 65873), (True, '03:00', '03:00', 65874), (True, '05:25', '05:25', 65875), (True, '03:30', '03:30', 65876), (True, '09:11', '09:11', 65877), (False, '19:0', '19:00', 65878), (True, '00:00', '00:00', 65879), (True, '12:00', '12:00', 65880), (True, '05:00', '05:00', 65881), (True, '01:00', '01:00', 65882), (True, '03:30', '03:30', 65883), (True, '23:00', '23:00', 65884), (True, '00:00', '00:00', 65885), (True, '05:12', '05:12', 65886), (True, '10:00', '10:00', 65887), (True, '15:40', '15:40', 65888), (True, '06:00', '06:00', 65889), (True, '00:58', '00:58', 65890), (True, '19:46', '19:46', 65891), (False, '11:1', '11:01', 65892), (True, '17:00', '17:00', 65893), (True, '01:59', '01:59', 65894), (True, '20:07', '20:07', 65895), (True, '00:10', '00:10', 65896), (True, '12:43', '12:43', 65897), (True, '01:11', '01:11', 65898), (True, '00:00', '00:00', 65899), (True, '09:10', '09:10', 65900), (True, '02:39', '02:39', 65901), (True, '15:08', '15:08', 65902), (True, '16:05', '16:05', 65903), (True, '00:22', '00:22', 65904), (False, '12:0', '12:00', 65905), (True, '20:00', '20:00', 65906), (True, '20:01', '20:01', 65907), (False, '14:0', '14:00', 65908), (True, '01:54', '01:54', 65909), (True, '03:00', '03:00', 65910), (False, '09:3', '09:03', 65911), (False, '11:1', '11:01', 65912), (True, '01:00', '01:00', 65913), (False, '00:0', '00:00', 65914), (True, '02:00', '02:00', 65915), (False, '01:0', '01:00', 65916), (True, '16:52', '16:52', 65917), (True, '13:24', '13:24', 65918), (True, '01:00', '01:00', 65919), (True, '01:00', '01:00', 65920), (True, '00:56', '00:56', 65921), (False, '10:6', '10:06', 65922), (False, '00:0', '00:00', 65923)]",False,Wrong Answer,0.8088178216583023,0.918987341772152,False,0.2203389830508474
420978,29306053,"a=[int(i) for i in input().split()]
t=0
if a==[1,1]:
    print(0)
else:
    while a[0]>0 and a[1]>0:
        if a[1]>a[0]:
            a[0]+=1
            a[1]-=2
        else:
            a[0]-=2
            a[1]+=1
        t+=1
    print(t)",136,4516,62,8/9/17 15:46,27,377,1,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (True, '0', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",True,Accecpted,0.7349031580666783,0.8398268398268398,False,0.0
420977,29305994,"a=[int(i) for i in input().split()]
t=0
while a[0]>0 and a[1]>0:
    if a[1]>a[0]:
        a[0]+=1
        a[1]-=2
    else:
        a[0]-=2
        a[1]+=1
    t+=1
print(t)",136,4520,46,8/9/17 15:44,21,377,2,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (False, '1', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",False,Wrong Answer,0.7349031580666783,0.8398268398268398,False,0.0256410256410256
515547,19322345,"n=int(input())
m=n%3
z=n//3
if m==0:
    print(z*2)
else:
    print(z*2+1)",136,32,62,7/22/16 14:09,13,476,1,8,"[(True, '1', '1', 84238), (True, '1', '1', 84239), (True, '2', '2', 84240), (True, '3', '3', 84241), (True, '67', '67', 84242), (True, '67', '67', 84243), (True, '68', '68', 84244), (True, '666666667', '666666667', 84245), (True, '3', '3', 84246), (True, '4', '4', 84247), (True, '666666666', '666666666', 84248), (True, '666666665', '666666665', 84249), (True, '666666665', '666666665', 84250), (True, '666666664', '666666664', 84251), (True, '666666663', '666666663', 84252), (True, '666666663', '666666663', 84253), (True, '666666662', '666666662', 84254), (True, '666666661', '666666661', 84255), (True, '666666661', '666666661', 84256), (True, '667', '667', 84257), (True, '6667', '6667', 84258), (True, '66667', '66667', 84259), (True, '666667', '666667', 84260), (True, '6666667', '6666667', 84261), (True, '66666667', '66666667', 84262), (True, '5', '5', 84263)]",True,Accecpted,0.5946035575013605,0.9883720930232558,False,0.0
515546,19322309,"n=int(input())
m=n%3
z=m//3
if m==0:
    print(z*2)
else:
    print(z*2+1)",136,0,46,7/22/16 14:07,13,476,2,8,"[(True, '1', '1', 84238), (True, '1', '1', 84239), (False, '0', '2', 84240), (False, '1', '3', 84241), (False, '1', '67', 84242), (False, '1', '67', 84243), (False, '0', '68', 84244), (False, '1', '666666667', 84245), (False, '1', '3', 84246), (False, '0', '4', 84247), (False, '0', '666666666', 84248), (False, '1', '666666665', 84249), (False, '1', '666666665', 84250), (False, '0', '666666664', 84251), (False, '1', '666666663', 84252), (False, '1', '666666663', 84253), (False, '0', '666666662', 84254), (False, '1', '666666661', 84255), (False, '1', '666666661', 84256), (False, '1', '667', 84257), (False, '1', '6667', 84258), (False, '1', '66667', 84259), (False, '1', '666667', 84260), (False, '1', '6666667', 84261), (False, '1', '66666667', 84262), (False, '1', '5', 84263)]",False,Wrong Answer,0.5946035575013605,0.9883720930232558,False,0.9230769230769232
553652,27302874,"a,b,c=[int(i) for i in input().split()]
if c==0:
    if a==b:
        print('YES')
    else:
        print('NO')
elif c>0:
    if b%c==a%c and b>=a:        
        print('YES')
    else:
        print('NO')
else:
    if a>=b and b%-c==a%-c:
        print('YES')
    else:
        print('NO')",136,16,62,5/23/17 17:05,31,511,1,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (True, 'YES', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (True, 'YES', 'YES', 87956), (True, 'YES', 'YES', 87957), (True, 'YES', 'YES', 87958), (True, 'YES', 'YES', 87959), (True, 'YES', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (True, 'YES', 'YES', 87986), (True, 'YES', 'YES', 87987), (True, 'YES', 'YES', 87988), (True, 'YES', 'YES', 87989), (True, 'YES', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (True, 'YES', 'YES', 88016), (True, 'YES', 'YES', 88017), (True, 'YES', 'YES', 88018), (True, 'YES', 'YES', 88019), (True, 'YES', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (True, 'YES', 'YES', 88046), (True, 'YES', 'YES', 88047), (True, 'YES', 'YES', 88048), (True, 'YES', 'YES', 88049), (True, 'YES', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (True, 'YES', 'YES', 88076), (True, 'YES', 'YES', 88077), (True, 'YES', 'YES', 88078), (True, 'YES', 'YES', 88079), (True, 'YES', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (True, 'YES', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (True, 'YES', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",True,Accecpted,0.8096427216101598,0.9921752738654148,False,0.0
553651,27302819,"a,b,c=[int(i) for i in input().split()]
if c==0:
    if a==b:
        print('YES')
    else:
        print('NO')
elif c>0:
    if b%c==a and b>=a:        
        print('YES')
    else:
        print('NO')
else:
    if a>=b and b%-c==a:
        print('YES')
    else:
        print('NO')",136,0,62,5/23/17 17:02,31,511,2,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (True, 'YES', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (False, 'NO', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (False, 'NO', 'YES', 87944), (False, 'NO', 'YES', 87945), (False, 'NO', 'YES', 87946), (False, 'NO', 'YES', 87947), (False, 'NO', 'YES', 87948), (False, 'NO', 'YES', 87949), (False, 'NO', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (False, 'NO', 'YES', 87956), (False, 'NO', 'YES', 87957), (True, 'YES', 'YES', 87958), (False, 'NO', 'YES', 87959), (False, 'NO', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (False, 'NO', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (False, 'NO', 'YES', 87969), (False, 'NO', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (False, 'NO', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (False, 'NO', 'YES', 87979), (False, 'NO', 'YES', 87980), (True, 'NO', 'NO', 87981), (False, 'NO', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (False, 'NO', 'YES', 87986), (False, 'NO', 'YES', 87987), (True, 'YES', 'YES', 87988), (False, 'NO', 'YES', 87989), (False, 'NO', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (False, 'NO', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (False, 'NO', 'YES', 87999), (False, 'NO', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (False, 'NO', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (True, 'YES', 'YES', 88016), (True, 'YES', 'YES', 88017), (True, 'YES', 'YES', 88018), (True, 'YES', 'YES', 88019), (True, 'YES', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (False, 'NO', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (False, 'NO', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (False, 'NO', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (True, 'YES', 'YES', 88046), (False, 'NO', 'YES', 88047), (True, 'YES', 'YES', 88048), (False, 'NO', 'YES', 88049), (True, 'YES', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (False, 'NO', 'YES', 88054), (True, 'NO', 'NO', 88055), (False, 'NO', 'YES', 88056), (False, 'NO', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (False, 'NO', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (False, 'NO', 'YES', 88066), (False, 'NO', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (False, 'NO', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (False, 'NO', 'YES', 88076), (False, 'NO', 'YES', 88077), (True, 'YES', 'YES', 88078), (False, 'NO', 'YES', 88079), (False, 'NO', 'YES', 88080), (False, 'NO', 'YES', 88081), (False, 'NO', 'YES', 88082), (False, 'NO', 'YES', 88083), (True, 'NO', 'NO', 88084), (False, 'NO', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (False, 'NO', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (False, 'NO', 'YES', 88094), (False, 'NO', 'YES', 88095), (True, 'YES', 'YES', 88096), (False, 'NO', 'YES', 88097), (False, 'NO', 'YES', 88098), (True, 'NO', 'NO', 88099), (False, 'NO', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (False, 'NO', 'YES', 88104), (False, 'NO', 'YES', 88105), (True, 'NO', 'NO', 88106), (False, 'NO', 'YES', 88107), (False, 'NO', 'YES', 88108)]",False,Wrong Answer,0.8096427216101598,0.9921752738654148,False,0.3202247191011236
586262,26803607,"A=[int(i) for i in input().split()]
z=sum(A)
d=z
for i in range(len(A)):
    zz=A.count(A[i])
    if zz>=2:
        if zz>=3:
            zz=3
        h=z-zz*A[i]
        if h<d:
            d=h
print(d)",136,5436,62,5/2/17 16:44,23,538,1,8,"[(True, '26', '26', 90562), (True, '28', '28', 90563), (True, '20', '20', 90564), (True, '15', '15', 90565), (True, '16', '16', 90566), (True, '4', '4', 90567), (True, '6', '6', 90568), (True, '110', '110', 90569), (True, '200', '200', 90570), (True, '2', '2', 90571), (True, '58', '58', 90572), (True, '58', '58', 90573), (True, '60', '60', 90574), (True, '60', '60', 90575), (True, '60', '60', 90576), (True, '60', '60', 90577), (True, '60', '60', 90578), (True, '9', '9', 90579), (True, '9', '9', 90580), (True, '15', '15', 90581), (True, '490', '490', 90582), (True, '2', '2', 90583), (True, '296', '296', 90584), (True, '296', '296', 90585), (True, '181', '181', 90586), (True, '227', '227', 90587), (True, '95', '95', 90588), (True, '17', '17', 90589), (True, '110', '110', 90590), (True, '110', '110', 90591), (True, '199', '199', 90592), (True, '13', '13', 90593), (True, '2', '2', 90594), (True, '11', '11', 90595), (True, '101', '101', 90596), (True, '6', '6', 90597), (True, '3', '3', 90598), (True, '7', '7', 90599), (True, '9', '9', 90600), (True, '21', '21', 90601), (True, '6', '6', 90602), (True, '5', '5', 90603), (True, '121', '121', 90604), (True, '6', '6', 90605), (True, '9', '9', 90606), (True, '4', '4', 90607), (True, '3', '3', 90608), (True, '21', '21', 90609)]",True,Accecpted,0.5826819708103759,0.824390243902439,False,0.0
586261,26803560,"A=[int(i) for i in input().split()]
z=sum(A)
d=z
for i in range(len(A)):
    if A.count(A[i])>=2:
        h=z-A.count(A[i])*A[i]
        if h<d:
            d=h
print(d)",136,4492,61,5/2/17 16:41,17,538,2,8,"[(True, '26', '26', 90562), (True, '28', '28', 90563), (False, '0', '20', 90564), (True, '15', '15', 90565), (True, '16', '16', 90566), (True, '4', '4', 90567), (True, '6', '6', 90568), (True, '110', '110', 90569), (False, '0', '200', 90570), (False, '0', '2', 90571), (True, '58', '58', 90572), (True, '58', '58', 90573), (True, '60', '60', 90574), (True, '60', '60', 90575), (True, '60', '60', 90576), (True, '60', '60', 90577), (True, '60', '60', 90578), (False, '1', '9', 90579), (False, '8', '9', 90580), (True, '15', '15', 90581), (True, '490', '490', 90582), (True, '2', '2', 90583), (True, '296', '296', 90584), (True, '296', '296', 90585), (True, '181', '181', 90586), (True, '227', '227', 90587), (True, '95', '95', 90588), (True, '17', '17', 90589), (True, '110', '110', 90590), (True, '110', '110', 90591), (True, '199', '199', 90592), (True, '13', '13', 90593), (True, '2', '2', 90594), (True, '11', '11', 90595), (False, '100', '101', 90596), (True, '6', '6', 90597), (False, '1', '3', 90598), (True, '7', '7', 90599), (True, '9', '9', 90600), (False, '11', '21', 90601), (True, '6', '6', 90602), (False, '4', '5', 90603), (False, '23', '121', 90604), (True, '6', '6', 90605), (True, '9', '9', 90606), (True, '4', '4', 90607), (False, '2', '3', 90608), (True, '21', '21', 90609)]",False,Wrong Answer,0.5826819708103759,0.824390243902439,False,0.2291666666666666
966815,26665673,"a=int(input())
b=int(input())
c=int(input())
cc=c//4
bb=b//2
print(min(cc,bb,a)+2*min(a,bb,cc)+4*min(a,bb,cc))",136,5424,77,4/25/17 19:14,11,888,1,8,"[(True, '7', '7', 118234), (True, '21', '21', 118235), (True, '0', '0', 118236), (True, '0', '0', 118237), (True, '7', '7', 118238), (True, '1750', '1750', 118239), (True, '0', '0', 118240), (True, '0', '0', 118241), (True, '7', '7', 118242), (True, '0', '0', 118243), (True, '7', '7', 118244), (True, '1750', '1750', 118245), (True, '7', '7', 118246), (True, '0', '0', 118247), (True, '21', '21', 118248), (True, '70', '70', 118249), (True, '693', '693', 118250), (True, '1400', '1400', 118251), (True, '1393', '1393', 118252), (True, '1400', '1400', 118253), (True, '1393', '1393', 118254), (True, '1400', '1400', 118255), (True, '1393', '1393', 118256), (True, '1400', '1400', 118257), (True, '882', '882', 118258), (True, '763', '763', 118259), (True, '903', '903', 118260), (True, '1127', '1127', 118261), (True, '273', '273', 118262), (True, '63', '63', 118263), (True, '959', '959', 118264), (True, '105', '105', 118265), (True, '1323', '1323', 118266), (True, '126', '126', 118267), (True, '1022', '1022', 118268), (True, '490', '490', 118269), (True, '1092', '1092', 118270), (True, '1176', '1176', 118271), (True, '322', '322', 118272), (True, '1218', '1218', 118273), (True, '1008', '1008', 118274), (True, '154', '154', 118275), (True, '980', '980', 118276), (True, '1218', '1218', 118277), (True, '1617', '1617', 118278), (True, '1057', '1057', 118279), (True, '616', '616', 118280), (True, '84', '84', 118281), (True, '1428', '1428', 118282), (True, '889', '889', 118283), (True, '1561', '1561', 118284), (True, '1015', '1015', 118285), (True, '574', '574', 118286), (True, '133', '133', 118287), (True, '1372', '1372', 118288), (True, '833', '833', 118289), (True, '1449', '1449', 118290), (True, '903', '903', 118291), (True, '462', '462', 118292), (True, '1708', '1708', 118293), (True, '1267', '1267', 118294), (True, '721', '721', 118295), (True, '7', '7', 118296), (True, '14', '14', 118297), (True, '7', '7', 118298), (True, '7', '7', 118299), (True, '7', '7', 118300), (True, '14', '14', 118301), (True, '7', '7', 118302), (True, '7', '7', 118303), (True, '14', '14', 118304), (True, '14', '14', 118305), (True, '7', '7', 118306), (True, '14', '14', 118307), (True, '7', '7', 118308), (True, '7', '7', 118309), (True, '7', '7', 118310), (True, '35', '35', 118311), (True, '0', '0', 118312), (True, '21', '21', 118313), (True, '14', '14', 118314), (True, '7', '7', 118315), (True, '0', '0', 118316), (True, '14', '14', 118317)]",True,Accecpted,0.7598356856515925,0.8571428571428571,False,0.0
966814,26665625,"a=int(input())
b=int(input())
c=int(input())
cc=c//4
bb=b//2
print(min(cc,bb,a))",136,5412,31,4/25/17 19:12,11,888,2,8,"[(False, '1', '7', 118234), (False, '3', '21', 118235), (True, '0', '0', 118236), (True, '0', '0', 118237), (False, '1', '7', 118238), (False, '250', '1750', 118239), (True, '0', '0', 118240), (True, '0', '0', 118241), (False, '1', '7', 118242), (True, '0', '0', 118243), (False, '1', '7', 118244), (False, '250', '1750', 118245), (False, '1', '7', 118246), (True, '0', '0', 118247), (False, '3', '21', 118248), (False, '10', '70', 118249), (False, '99', '693', 118250), (False, '200', '1400', 118251), (False, '199', '1393', 118252), (False, '200', '1400', 118253), (False, '199', '1393', 118254), (False, '200', '1400', 118255), (False, '199', '1393', 118256), (False, '200', '1400', 118257), (False, '126', '882', 118258), (False, '109', '763', 118259), (False, '129', '903', 118260), (False, '161', '1127', 118261), (False, '39', '273', 118262), (False, '9', '63', 118263), (False, '137', '959', 118264), (False, '15', '105', 118265), (False, '189', '1323', 118266), (False, '18', '126', 118267), (False, '146', '1022', 118268), (False, '70', '490', 118269), (False, '156', '1092', 118270), (False, '168', '1176', 118271), (False, '46', '322', 118272), (False, '174', '1218', 118273), (False, '144', '1008', 118274), (False, '22', '154', 118275), (False, '140', '980', 118276), (False, '174', '1218', 118277), (False, '231', '1617', 118278), (False, '151', '1057', 118279), (False, '88', '616', 118280), (False, '12', '84', 118281), (False, '204', '1428', 118282), (False, '127', '889', 118283), (False, '223', '1561', 118284), (False, '145', '1015', 118285), (False, '82', '574', 118286), (False, '19', '133', 118287), (False, '196', '1372', 118288), (False, '119', '833', 118289), (False, '207', '1449', 118290), (False, '129', '903', 118291), (False, '66', '462', 118292), (False, '244', '1708', 118293), (False, '181', '1267', 118294), (False, '103', '721', 118295), (False, '1', '7', 118296), (False, '2', '14', 118297), (False, '1', '7', 118298), (False, '1', '7', 118299), (False, '1', '7', 118300), (False, '2', '14', 118301), (False, '1', '7', 118302), (False, '1', '7', 118303), (False, '2', '14', 118304), (False, '2', '14', 118305), (False, '1', '7', 118306), (False, '2', '14', 118307), (False, '1', '7', 118308), (False, '1', '7', 118309), (False, '1', '7', 118310), (False, '5', '35', 118311), (True, '0', '0', 118312), (False, '3', '21', 118313), (False, '2', '14', 118314), (False, '1', '7', 118315), (True, '0', '0', 118316), (False, '2', '14', 118317)]",False,Wrong Answer,0.7598356856515925,0.8571428571428571,False,0.9047619047619048
1185837,19323047,"k=int(input())
l=int(input())
m=0
while k**m<l:
    m=m+1
if k**m>l:
    print('NO')
else:
    print('YES')
    print(m-1)",136,40,154,7/22/16 14:46,10,1082,1,8,"[(True, 'YES\n1', 'YES\n1', 133227), (True, 'NO', 'NO', 133228), (True, 'YES\n0', 'YES\n0', 133229), (True, 'NO', 'NO', 133230), (True, 'NO', 'NO', 133231), (True, 'NO', 'NO', 133232), (True, 'NO', 'NO', 133233), (True, 'YES\n1', 'YES\n1', 133234), (True, 'YES\n5', 'YES\n5', 133235), (True, 'NO', 'NO', 133236), (True, 'NO', 'NO', 133237), (True, 'YES\n2', 'YES\n2', 133238), (True, 'NO', 'NO', 133239), (True, 'YES\n5', 'YES\n5', 133240), (True, 'YES\n2', 'YES\n2', 133241), (True, 'NO', 'NO', 133242), (True, 'NO', 'NO', 133243), (True, 'NO', 'NO', 133244), (True, 'NO', 'NO', 133245), (True, 'YES\n2', 'YES\n2', 133246), (True, 'NO', 'NO', 133247), (True, 'NO', 'NO', 133248), (True, 'NO', 'NO', 133249), (True, 'YES\n1', 'YES\n1', 133250), (True, 'YES\n3', 'YES\n3', 133251), (True, 'NO', 'NO', 133252), (True, 'NO', 'NO', 133253), (True, 'NO', 'NO', 133254), (True, 'NO', 'NO', 133255), (True, 'NO', 'NO', 133256), (True, 'NO', 'NO', 133257), (True, 'YES\n1', 'YES\n1', 133258), (True, 'NO', 'NO', 133259), (True, 'YES\n2', 'YES\n2', 133260), (True, 'NO', 'NO', 133261), (True, 'NO', 'NO', 133262), (True, 'YES\n1', 'YES\n1', 133263), (True, 'YES\n5', 'YES\n5', 133264), (True, 'YES\n3', 'YES\n3', 133265), (True, 'NO', 'NO', 133266), (True, 'NO', 'NO', 133267), (True, 'NO', 'NO', 133268), (True, 'NO', 'NO', 133269), (True, 'NO', 'NO', 133270), (True, 'NO', 'NO', 133271), (True, 'NO', 'NO', 133272), (True, 'YES\n1', 'YES\n1', 133273), (True, 'NO', 'NO', 133274), (True, 'YES\n1', 'YES\n1', 133275), (True, 'YES\n0', 'YES\n0', 133276), (True, 'NO', 'NO', 133277), (True, 'NO', 'NO', 133278), (True, 'NO', 'NO', 133279), (True, 'NO', 'NO', 133280), (True, 'YES\n29', 'YES\n29', 133281), (True, 'NO', 'NO', 133282), (True, 'YES\n3', 'YES\n3', 133283), (True, 'NO', 'NO', 133284), (True, 'YES\n8', 'YES\n8', 133285), (True, 'NO', 'NO', 133286), (True, 'NO', 'NO', 133287), (True, 'NO', 'NO', 133288), (True, 'NO', 'NO', 133289), (True, 'NO', 'NO', 133290)]",True,Accecpted,0.4659538415189962,0.9505703422053232,False,0.0
1185836,19321928,"k=int(input())
l=int(input())
m=0
while k**m!=l:
    m=m+1
if l%k!=0:
    print('NO')
else:
    print('YES')
    print(m-1)",136,224,2000,7/22/16 13:46,10,1082,3,8,"[(True, 'YES\n1', 'YES\n1', 133227)]",True,Time Limit,0.4659538415189962,0.9505703422053232,False,0.0
1219877,23361347,"def bmm(a,b):
    if a==0:
        return b
    elif b==0:
        return a
    if a==b:
        return a
    
    elif a>b:
        z=0
        for i in range(b,0,-1):
            if a%i==0 and b%i==0:
                z=i
                break
        return z
    elif a<b:
        z=0
        for i in range(a,0,-1):
            if a%i==0 and b%i==0:
                z=i
                break
        return z
a,b,n=[int(i) for i in input().split()]
z=n
f=-1
while f==-1:
    if bmm(a,z)<=z:
        z=z-bmm(a,z)
    else:
        f=1
        break
    if bmm(b,z)<=z:
        z=z-bmm(b,z)
    else:
        f=0
        break
print(f)",136,4528,154,12/27/16 17:50,37,1107,1,8,"[(True, '0', '0', 136259), (True, '1', '1', 136260), (True, '1', '1', 136261), (True, '1', '1', 136262), (True, '1', '1', 136263), (True, '0', '0', 136264), (True, '1', '1', 136265), (True, '1', '1', 136266), (True, '0', '0', 136267), (True, '1', '1', 136268), (True, '1', '1', 136269), (True, '1', '1', 136270), (True, '1', '1', 136271), (True, '0', '0', 136272), (True, '1', '1', 136273), (True, '1', '1', 136274), (True, '1', '1', 136275), (True, '1', '1', 136276), (True, '1', '1', 136277), (True, '0', '0', 136278), (True, '1', '1', 136279), (True, '0', '0', 136280), (True, '0', '0', 136281), (True, '0', '0', 136282), (True, '0', '0', 136283), (True, '1', '1', 136284), (True, '1', '1', 136285), (True, '0', '0', 136286), (True, '1', '1', 136287), (True, '0', '0', 136288), (True, '0', '0', 136289), (True, '0', '0', 136290), (True, '0', '0', 136291), (True, '0', '0', 136292), (True, '1', '1', 136293), (True, '1', '1', 136294), (True, '1', '1', 136295), (True, '1', '1', 136296), (True, '1', '1', 136297), (True, '0', '0', 136298), (True, '0', '0', 136299), (True, '0', '0', 136300), (True, '1', '1', 136301), (True, '0', '0', 136302), (True, '0', '0', 136303)]",True,Accecpted,0.7559387527307753,0.9021479713603818,False,0.0
1219876,23361322,"def bmm(a,b):
    if a>b:
        z=0
        for i in range(b,0,-1):
            if a%i==0 and b%i==0:
                z=i
                break
        return z
    elif a<b:
        z=0
        for i in range(a,0,-1):
            if a%i==0 and b%i==0:
                z=i
                break
        return z
print(bmm(5,0))
a,b,n=[int(i) for i in input().split()]
z=n
f=-1
while f==-1:
    if bmm(a,z)<=z:
        z=z-bmm(a,z)
    else:
        f=1
        break
    if bmm(b,z)<=z:
        z=z-bmm(b,z)
    else:
        f=0
        break
print(f)",136,4492,92,12/27/16 17:48,31,1107,5,8,"[(True, '0', '0', 136259), (False, '0', '1', 136260)]",False,Runtime Error,0.7559387527307753,0.9021479713603818,False,0.5
1258797,21774048,"n,a,b=[int(i) for i in input().split()]
h=0
for i in range(1,n+1):
    if i-1>=a and n-i<=b:
        h+=1
print(h)",136,4,154,10/25/16 18:04,6,1142,1,8,"[(True, '2', '2', 138318), (True, '3', '3', 138319), (True, '1', '1', 138320), (True, '1', '1', 138321), (True, '4', '4', 138322), (True, '7', '7', 138323), (True, '5', '5', 138324), (True, '6', '6', 138325), (True, '10', '10', 138326), (True, '7', '7', 138327), (True, '9', '9', 138328), (True, '15', '15', 138329), (True, '8', '8', 138330), (True, '2', '2', 138331), (True, '24', '24', 138332), (True, '5', '5', 138333), (True, '6', '6', 138334), (True, '16', '16', 138335), (True, '5', '5', 138336), (True, '12', '12', 138337), (True, '17', '17', 138338), (True, '38', '38', 138339), (True, '18', '18', 138340), (True, '38', '38', 138341), (True, '13', '13', 138342), (True, '8', '8', 138343), (True, '13', '13', 138344), (True, '1', '1', 138345), (True, '40', '40', 138346), (True, '53', '53', 138347), (True, '34', '34', 138348), (True, '23', '23', 138349), (True, '39', '39', 138350), (True, '38', '38', 138351), (True, '13', '13', 138352), (True, '36', '36', 138353), (True, '7', '7', 138354), (True, '21', '21', 138355), (True, '21', '21', 138356), (True, '2', '2', 138357), (True, '43', '43', 138358), (True, '9', '9', 138359), (True, '14', '14', 138360), (True, '23', '23', 138361), (True, '89', '89', 138362), (True, '32', '32', 138363), (True, '73', '73', 138364), (True, '89', '89', 138365), (True, '19', '19', 138366), (True, '1', '1', 138367)]",True,Accecpted,0.3237722713145643,0.9310344827586208,False,0.0
1258649,21344751,"n,a,b=[int(i) for i in input().split()]
t=0
for i in range(n):
    if i>=a and i<=b:
        t+=1
print(t+1)",136,4504,154,10/10/16 21:39,6,1142,2,8,"[(True, '2', '2', 138318), (True, '3', '3', 138319), (True, '1', '1', 138320), (False, '2', '1', 138321), (False, '1', '4', 138322), (False, '4', '7', 138323), (False, '1', '5', 138324), (False, '2', '6', 138325), (False, '5', '10', 138326), (False, '6', '7', 138327), (False, '6', '9', 138328), (False, '8', '15', 138329), (False, '6', '8', 138330), (False, '1', '2', 138331), (False, '20', '24', 138332), (False, '1', '5', 138333), (False, '1', '6', 138334), (False, '1', '16', 138335), (False, '1', '5', 138336), (False, '1', '12', 138337), (False, '1', '17', 138338), (True, '38', '38', 138339), (False, '3', '18', 138340), (False, '28', '38', 138341), (False, '3', '13', 138342), (False, '1', '8', 138343), (False, '1', '13', 138344), (True, '1', '1', 138345), (False, '29', '40', 138346), (False, '45', '53', 138347), (False, '17', '34', 138348), (False, '1', '23', 138349), (False, '13', '39', 138350), (False, '22', '38', 138351), (False, '1', '13', 138352), (False, '1', '36', 138353), (False, '1', '7', 138354), (False, '1', '21', 138355), (False, '1', '21', 138356), (False, '1', '2', 138357), (False, '44', '43', 138358), (False, '1', '9', 138359), (False, '1', '14', 138360), (False, '22', '23', 138361), (False, '85', '89', 138362), (False, '1', '32', 138363), (False, '52', '73', 138364), (False, '79', '89', 138365), (False, '12', '19', 138366), (False, '2', '1', 138367)]",False,Wrong Answer,0.3237722713145643,0.9310344827586208,False,0.9
1423505,18882725,"def khoshans(n):
    if n==0:
        return 'no'
    m=0
    f='yes'
    while n!=0:
        y=n%10
        n=n//10
        if y!=4 and y!=7:
            f='no'
    return f
def tedad(n):
    t=0
    while n!=0:
        n=n//10
        t=t+1
    return t
c=int(input())
n=int(input())
a=n
t=tedad(n)
m=0
s=0
for i in range(t//2):
    m=m+n%10
    n=n//10
for j in range(t//2):
    s=s+n%10
    n=n//10
if m==s and khoshans(a)=='yes' and t==c:
    print('YES')
else:
    print('NO')",136,16,278,7/4/16 15:08,33,1267,1,8,"[(True, 'NO', 'NO', 147341), (True, 'NO', 'NO', 147342), (True, 'YES', 'YES', 147343), (True, 'NO', 'NO', 147344), (True, 'YES', 'YES', 147345), (True, 'YES', 'YES', 147346), (True, 'YES', 'YES', 147347), (True, 'YES', 'YES', 147348), (True, 'NO', 'NO', 147349), (True, 'NO', 'NO', 147350), (True, 'YES', 'YES', 147351), (True, 'NO', 'NO', 147352), (True, 'YES', 'YES', 147353), (True, 'NO', 'NO', 147354), (True, 'NO', 'NO', 147355), (True, 'NO', 'NO', 147356), (True, 'YES', 'YES', 147357), (True, 'YES', 'YES', 147358), (True, 'YES', 'YES', 147359), (True, 'YES', 'YES', 147360), (True, 'YES', 'YES', 147361), (True, 'YES', 'YES', 147362), (True, 'YES', 'YES', 147363), (True, 'YES', 'YES', 147364), (True, 'NO', 'NO', 147365), (True, 'NO', 'NO', 147366), (True, 'NO', 'NO', 147367), (True, 'NO', 'NO', 147368), (True, 'NO', 'NO', 147369), (True, 'NO', 'NO', 147370), (True, 'NO', 'NO', 147371), (True, 'NO', 'NO', 147372), (True, 'NO', 'NO', 147373), (True, 'NO', 'NO', 147374), (True, 'NO', 'NO', 147375), (True, 'NO', 'NO', 147376), (True, 'YES', 'YES', 147377), (True, 'NO', 'NO', 147378), (True, 'NO', 'NO', 147379), (True, 'NO', 'NO', 147380), (True, 'NO', 'NO', 147381), (True, 'NO', 'NO', 147382), (True, 'NO', 'NO', 147383), (True, 'NO', 'NO', 147384), (True, 'NO', 'NO', 147385), (True, 'NO', 'NO', 147386)]",True,Accecpted,0.9154819475168924,0.98922624877571,False,0.0
1423504,18882623,"def khoshans(n):
    if n==0:
        return 'no'
    m=0
    f='yes'
    while n!=0:
        y=n%10
        n=n//10
        if y!=4 and y!=7:
            f='no'
    return f
def tedad(n):
    t=0
    while n!=0:
        n=n//10
        t=t+1
    return t
c=int(input())
n=int(input())
a=n
t=tedad(n)
m=0
s=0

for i in range(t//2):
    m=m+n%10
    n=n//10
for j in range(t//2):
    s=s+n%10
    n=n//10
if m==s and khoshans(a)=='yes':
    print('YES')
else:
    print('NO')",136,24,156,7/4/16 15:01,34,1267,2,8,"[(True, 'NO', 'NO', 147341), (True, 'NO', 'NO', 147342), (True, 'YES', 'YES', 147343), (True, 'NO', 'NO', 147344), (True, 'YES', 'YES', 147345), (True, 'YES', 'YES', 147346), (True, 'YES', 'YES', 147347), (True, 'YES', 'YES', 147348), (True, 'NO', 'NO', 147349), (True, 'NO', 'NO', 147350), (True, 'YES', 'YES', 147351), (True, 'NO', 'NO', 147352), (True, 'YES', 'YES', 147353), (True, 'NO', 'NO', 147354), (True, 'NO', 'NO', 147355), (True, 'NO', 'NO', 147356), (True, 'YES', 'YES', 147357), (True, 'YES', 'YES', 147358), (True, 'YES', 'YES', 147359), (True, 'YES', 'YES', 147360), (True, 'YES', 'YES', 147361), (True, 'YES', 'YES', 147362), (True, 'YES', 'YES', 147363), (True, 'YES', 'YES', 147364), (True, 'NO', 'NO', 147365), (True, 'NO', 'NO', 147366), (True, 'NO', 'NO', 147367), (True, 'NO', 'NO', 147368), (True, 'NO', 'NO', 147369), (True, 'NO', 'NO', 147370), (True, 'NO', 'NO', 147371), (True, 'NO', 'NO', 147372), (True, 'NO', 'NO', 147373), (True, 'NO', 'NO', 147374), (True, 'NO', 'NO', 147375), (True, 'NO', 'NO', 147376), (True, 'YES', 'YES', 147377), (True, 'NO', 'NO', 147378), (True, 'NO', 'NO', 147379), (True, 'NO', 'NO', 147380), (True, 'NO', 'NO', 147381), (False, 'YES', 'NO', 147382), (False, 'YES', 'NO', 147383), (True, 'NO', 'NO', 147384), (True, 'NO', 'NO', 147385), (False, 'YES', 'NO', 147386)]",False,Wrong Answer,0.9154819475168924,0.98922624877571,False,0.0652173913043478
1706530,29130540,"n,a,b,c=[int(i) for i in input().split()]
p=[a,b,c]
p.sort()
dp=(n+1)*[-1]
dp[0]=0
dp[p[0]]=1
for i in range(p[0]+1,n+1):
    k=[]
    z=dp[i]
    for j in range(3):
        if i-p[j]>=0 and dp[i-p[j]]!=-1:
            k.append(dp[i-p[j]]+1)
    if len(k)==0:
        dp[i]=-1
    else:
        dp[i]=max(k)
print(dp[-1])",136,4776,62,8/2/17 15:54,17,1520,1,8,"[(True, '2', '2', 159338), (True, '2', '2', 159339), (True, '1', '1', 159340), (True, '1', '1', 159341), (True, '4000', '4000', 159342), (True, '1333', '1333', 159343), (True, '3', '3', 159344), (True, '2', '2', 159345), (True, '11', '11', 159346), (True, '9', '9', 159347), (True, '15', '15', 159348), (True, '7', '7', 159349), (True, '26', '26', 159350), (True, '370', '370', 159351), (True, '367', '367', 159352), (True, '29', '29', 159353), (True, '2', '2', 159354), (True, '7', '7', 159355), (True, '2', '2', 159356), (True, '3', '3', 159357), (True, '9', '9', 159358), (True, '1', '1', 159359), (True, '1', '1', 159360), (True, '9', '9', 159361), (True, '2', '2', 159362), (True, '1', '1', 159363), (True, '5', '5', 159364), (True, '1', '1', 159365), (True, '6', '6', 159366), (True, '1', '1', 159367), (True, '101', '101', 159368), (True, '3', '3', 159369), (True, '991', '991', 159370), (True, '683', '683', 159371), (True, '991', '991', 159372), (True, '595', '595', 159373), (True, '4000', '4000', 159374), (True, '1', '1', 159375), (True, '3', '3', 159376), (True, '8', '8', 159377), (True, '5', '5', 159378), (True, '100', '100', 159379), (True, '5', '5', 159380), (True, '4', '4', 159381), (True, '111', '111', 159382), (True, '1999', '1999', 159383), (True, '2', '2', 159384), (True, '5', '5', 159385), (True, '27', '27', 159386), (True, '2000', '2000', 159387), (True, '1332', '1332', 159388), (True, '2', '2', 159389), (True, '2000', '2000', 159390), (True, '1999', '1999', 159391), (True, '564', '564', 159392), (True, '4', '4', 159393), (True, '10', '10', 159394), (True, '334', '334', 159395)]",True,Accecpted,0.0856351233199501,0.2660287081339713,False,0.0
1704420,27615840,"n,a,b,c=[int(i) for i in input().split()]
dp=(n+1)*[-n-1]
l=[a,b,c]
dp[0]=0
l.sort()
for i in range(l[0],l[1]):
    if i%l[0]==0:
        dp[i]=i//l[0]
for i in range(l[1],l[2]):
    p=[]
    if dp[i-l[0]]!=-n-1:
        p.append(dp[i-l[0]]+1)
    if dp[i-l[1]]!=-n-1:
        p.append(dp[i-l[1]]+1)
    if len(p)>0 and max(p)>dp[i]:
        dp[i]=max(p)
    
for i in range(l[2],n+1):
    p=[]
    if i>=a and dp[i-a]!=-n-1:
        p.append(dp[i-a]+1)
    if i>=b and dp[i-b]!=-n-1:
        p.append(dp[i-b]+1)
    if i>=c and dp[i-c]!=-n-1:
        p.append(dp[i-c]+1)
    if len(p)>0 and max(p)>dp[i]:
        dp[i]=max(p)
if dp[n]==n+1:
    print(-1)
else:
    print(dp[n])",136,252,62,6/6/17 17:12,31,1520,5,8,"[(True, '2', '2', 159338), (True, '2', '2', 159339), (True, '1', '1', 159340), (True, '1', '1', 159341), (True, '4000', '4000', 159342), (True, '1333', '1333', 159343), (True, '3', '3', 159344), (True, '2', '2', 159345), (False, '', '11', 159346), (False, '', '9', 159347), (True, '15', '15', 159348), (True, '7', '7', 159349), (False, '', '26', 159350), (True, '370', '370', 159351), (True, '367', '367', 159352), (True, '29', '29', 159353), (False, '', '2', 159354), (False, '', '7', 159355), (True, '2', '2', 159356), (True, '3', '3', 159357), (True, '9', '9', 159358), (False, '', '1', 159359), (False, '', '1', 159360), (True, '9', '9', 159361), (False, '', '2', 159362), (False, '', '1', 159363), (True, '5', '5', 159364), (False, '', '1', 159365), (True, '6', '6', 159366), (True, '1', '1', 159367), (False, '', '101', 159368), (True, '3', '3', 159369), (True, '991', '991', 159370), (True, '683', '683', 159371), (True, '991', '991', 159372), (False, '', '595', 159373), (True, '4000', '4000', 159374), (True, '1', '1', 159375), (True, '3', '3', 159376), (True, '8', '8', 159377), (True, '5', '5', 159378), (True, '100', '100', 159379), (True, '5', '5', 159380), (True, '4', '4', 159381), (True, '111', '111', 159382), (True, '1999', '1999', 159383), (True, '2', '2', 159384), (True, '5', '5', 159385), (True, '27', '27', 159386), (True, '2000', '2000', 159387), (True, '1332', '1332', 159388), (True, '2', '2', 159389), (True, '2000', '2000', 159390), (True, '1999', '1999', 159391), (True, '564', '564', 159392), (True, '4', '4', 159393), (True, '10', '10', 159394), (True, '334', '334', 159395)]",False,Runtime Error,0.0856351233199501,0.2660287081339713,False,0.2068965517241379
2170029,23887571,"n=int(input())
a=[int(i) for i in input().split()]
b=3*[0]
d=['chest','biceps','back']
for i in range(n):
    b[i%3]+=a[i]
z=b.index(max(b))
print(d[z])",136,4536,186,1/16/17 20:39,8,1915,1,8,"[(True, 'biceps', 'biceps', 184998), (True, 'back', 'back', 184999), (True, 'chest', 'chest', 185000), (True, 'chest', 'chest', 185001), (True, 'chest', 'chest', 185002), (True, 'chest', 'chest', 185003), (True, 'chest', 'chest', 185004), (True, 'chest', 'chest', 185005), (True, 'biceps', 'biceps', 185006), (True, 'chest', 'chest', 185007), (True, 'chest', 'chest', 185008), (True, 'chest', 'chest', 185009), (True, 'back', 'back', 185010), (True, 'chest', 'chest', 185011), (True, 'biceps', 'biceps', 185012), (True, 'chest', 'chest', 185013), (True, 'back', 'back', 185014), (True, 'chest', 'chest', 185015), (True, 'chest', 'chest', 185016), (True, 'chest', 'chest', 185017), (True, 'chest', 'chest', 185018), (True, 'chest', 'chest', 185019), (True, 'chest', 'chest', 185020), (True, 'biceps', 'biceps', 185021), (True, 'back', 'back', 185022), (True, 'chest', 'chest', 185023), (True, 'biceps', 'biceps', 185024), (True, 'chest', 'chest', 185025), (True, 'back', 'back', 185026), (True, 'biceps', 'biceps', 185027), (True, 'chest', 'chest', 185028), (True, 'back', 'back', 185029), (True, 'biceps', 'biceps', 185030), (True, 'back', 'back', 185031), (True, 'chest', 'chest', 185032), (True, 'biceps', 'biceps', 185033), (True, 'chest', 'chest', 185034), (True, 'back', 'back', 185035), (True, 'back', 'back', 185036), (True, 'chest', 'chest', 185037), (True, 'biceps', 'biceps', 185038), (True, 'back', 'back', 185039), (True, 'chest', 'chest', 185040), (True, 'biceps', 'biceps', 185041), (True, 'biceps', 'biceps', 185042), (True, 'chest', 'chest', 185043), (True, 'back', 'back', 185044), (True, 'back', 'back', 185045), (True, 'back', 'back', 185046), (True, 'chest', 'chest', 185047), (True, 'back', 'back', 185048), (True, 'biceps', 'biceps', 185049), (True, 'biceps', 'biceps', 185050), (True, 'back', 'back', 185051), (True, 'chest', 'chest', 185052), (True, 'chest', 'chest', 185053), (True, 'chest', 'chest', 185054), (True, 'chest', 'chest', 185055), (True, 'biceps', 'biceps', 185056), (True, 'chest', 'chest', 185057), (True, 'biceps', 'biceps', 185058)]",True,Accecpted,0.8666415730847504,0.9937106918238994,False,0.0
2170028,23887540,"n=int(input())
a=[int(i) for i in input().split()]
b=3*[0]
d=['chest','biceps','back']
for i in range(n):
    b[i%3]+=a[i]
z=d.index(max(b))
print(d[z])",136,4456,124,1/16/17 20:37,8,1915,5,8,"[(False, '', 'biceps', 184998), (False, '', 'back', 184999), (False, '', 'chest', 185000), (False, '', 'chest', 185001), (False, '', 'chest', 185002), (False, '', 'chest', 185003), (False, '', 'chest', 185004), (False, '', 'chest', 185005), (False, '', 'biceps', 185006), (False, '', 'chest', 185007), (False, '', 'chest', 185008), (False, '', 'chest', 185009), (False, '', 'back', 185010), (False, '', 'chest', 185011), (False, '', 'biceps', 185012), (False, '', 'chest', 185013), (False, '', 'back', 185014), (False, '', 'chest', 185015), (False, '', 'chest', 185016), (False, '', 'chest', 185017), (False, '', 'chest', 185018), (False, '', 'chest', 185019), (False, '', 'chest', 185020), (False, '', 'biceps', 185021), (False, '', 'back', 185022), (False, '', 'chest', 185023), (False, '', 'biceps', 185024), (False, '', 'chest', 185025), (False, '', 'back', 185026), (False, '', 'biceps', 185027), (False, '', 'chest', 185028), (False, '', 'back', 185029), (False, '', 'biceps', 185030), (False, '', 'back', 185031), (False, '', 'chest', 185032), (False, '', 'biceps', 185033), (False, '', 'chest', 185034), (False, '', 'back', 185035), (False, '', 'back', 185036), (False, '', 'chest', 185037), (False, '', 'biceps', 185038), (False, '', 'back', 185039), (False, '', 'chest', 185040), (False, '', 'biceps', 185041), (False, '', 'biceps', 185042), (False, '', 'chest', 185043), (False, '', 'back', 185044), (False, '', 'back', 185045), (False, '', 'back', 185046), (False, '', 'chest', 185047), (False, '', 'back', 185048), (False, '', 'biceps', 185049), (False, '', 'biceps', 185050), (False, '', 'back', 185051), (False, '', 'chest', 185052), (False, '', 'chest', 185053), (False, '', 'chest', 185054), (False, '', 'chest', 185055), (False, '', 'biceps', 185056), (False, '', 'chest', 185057), (False, '', 'biceps', 185058)]",False,Runtime Error,0.8666415730847504,0.9937106918238994,False,1.0
2842069,19145385,"def kasra(n):
    m=0
    a=0
    while n!=0:
        y=n%10
        n=n//10
        if y!=0:
            m=m*10+y
    while m!=0:
        t=m%10
        m=m//10
        a=a*10+t
    return a
a=int(input())
b=int(input())
if kasra(a+b)==kasra(a)+kasra(b):
    print('YES')
else:
    print('NO')",136,8,122,7/15/16 9:55,19,2439,1,8,"[(True, 'YES', 'YES', 214611), (True, 'NO', 'NO', 214612), (True, 'YES', 'YES', 214613), (True, 'NO', 'NO', 214614), (True, 'NO', 'NO', 214615), (True, 'NO', 'NO', 214616), (True, 'NO', 'NO', 214617), (True, 'YES', 'YES', 214618), (True, 'YES', 'YES', 214619), (True, 'YES', 'YES', 214620), (True, 'YES', 'YES', 214621), (True, 'NO', 'NO', 214622), (True, 'YES', 'YES', 214623), (True, 'YES', 'YES', 214624), (True, 'NO', 'NO', 214625), (True, 'YES', 'YES', 214626), (True, 'NO', 'NO', 214627), (True, 'NO', 'NO', 214628), (True, 'YES', 'YES', 214629), (True, 'YES', 'YES', 214630), (True, 'YES', 'YES', 214631), (True, 'YES', 'YES', 214632), (True, 'NO', 'NO', 214633), (True, 'YES', 'YES', 214634), (True, 'NO', 'NO', 214635), (True, 'NO', 'NO', 214636), (True, 'NO', 'NO', 214637), (True, 'NO', 'NO', 214638), (True, 'NO', 'NO', 214639), (True, 'NO', 'NO', 214640), (True, 'NO', 'NO', 214641), (True, 'NO', 'NO', 214642), (True, 'NO', 'NO', 214643), (True, 'YES', 'YES', 214644), (True, 'YES', 'YES', 214645), (True, 'NO', 'NO', 214646), (True, 'YES', 'YES', 214647), (True, 'NO', 'NO', 214648), (True, 'YES', 'YES', 214649), (True, 'YES', 'YES', 214650), (True, 'NO', 'NO', 214651), (True, 'NO', 'NO', 214652), (True, 'NO', 'NO', 214653)]",True,Accecpted,0.7267072830982378,0.9807692307692308,False,0.0
2842068,19145277,"def kasra(a):
    m=0
    a=0
    while a!=0:
        y=a%10
        a=a//10
        if y!=0:
            m=m*10+y
    while m!=0:
        t=m%10
        m=m//10
        a=a*10+t
    return a
a=int(input())
b=int(input())
if kasra(a+b)==kasra(a)+kasra(b):
    print('YES')
else:
    print('NO')",136,0,124,7/15/16 9:51,19,2439,2,8,"[(True, 'YES', 'YES', 214611), (False, 'YES', 'NO', 214612), (True, 'YES', 'YES', 214613), (False, 'YES', 'NO', 214614), (False, 'YES', 'NO', 214615), (False, 'YES', 'NO', 214616), (False, 'YES', 'NO', 214617), (True, 'YES', 'YES', 214618), (True, 'YES', 'YES', 214619), (True, 'YES', 'YES', 214620), (True, 'YES', 'YES', 214621), (False, 'YES', 'NO', 214622), (True, 'YES', 'YES', 214623), (True, 'YES', 'YES', 214624), (False, 'YES', 'NO', 214625), (True, 'YES', 'YES', 214626), (False, 'YES', 'NO', 214627), (False, 'YES', 'NO', 214628), (True, 'YES', 'YES', 214629), (True, 'YES', 'YES', 214630), (True, 'YES', 'YES', 214631), (True, 'YES', 'YES', 214632), (False, 'YES', 'NO', 214633), (True, 'YES', 'YES', 214634), (False, 'YES', 'NO', 214635), (False, 'YES', 'NO', 214636), (False, 'YES', 'NO', 214637), (False, 'YES', 'NO', 214638), (False, 'YES', 'NO', 214639), (False, 'YES', 'NO', 214640), (False, 'YES', 'NO', 214641), (False, 'YES', 'NO', 214642), (False, 'YES', 'NO', 214643), (True, 'YES', 'YES', 214644), (True, 'YES', 'YES', 214645), (False, 'YES', 'NO', 214646), (True, 'YES', 'YES', 214647), (False, 'YES', 'NO', 214648), (True, 'YES', 'YES', 214649), (True, 'YES', 'YES', 214650), (False, 'YES', 'NO', 214651), (False, 'YES', 'NO', 214652), (False, 'YES', 'NO', 214653)]",False,Wrong Answer,0.7267072830982378,0.9807692307692308,False,0.5581395348837209
2976748,19324515,"n,m=[int(i) for i in input().split()]
d=n*(n+1)//2
dk=m//d
c=m-dk*d
i=1
while c>=i:
    c=c-i
    i=i+1
print(c)",136,24,154,7/22/16 15:58,9,2535,1,8,"[(True, '0', '0', 218695), (True, '2', '2', 218696), (True, '1', '1', 218697), (True, '35', '35', 218698), (True, '0', '0', 218699), (True, '14', '14', 218700), (True, '11', '11', 218701), (True, '5', '5', 218702), (True, '0', '0', 218703), (True, '26', '26', 218704), (True, '14', '14', 218705), (True, '5', '5', 218706), (True, '20', '20', 218707), (True, '12', '12', 218708), (True, '11', '11', 218709), (True, '0', '0', 218710), (True, '2', '2', 218711), (True, '4', '4', 218712), (True, '9', '9', 218713), (True, '12', '12', 218714), (True, '0', '0', 218715), (True, '40', '40', 218716), (True, '0', '0', 218717), (True, '0', '0', 218718), (True, '5', '5', 218719)]",True,Accecpted,0.2240750868020436,0.6016260162601627,False,0.0
2976747,19324195,"n,m=[int(i) for i in input().split()]
d=0
for i in range(n+1):
    d=d+i
c=d-m
if c<0:
    print(0)
else:
    print(c)",136,0,92,7/22/16 15:42,9,2535,2,8,"[(True, '0', '0', 218695), (False, '46', '2', 218696), (False, '0', '1', 218697), (False, '0', '35', 218698), (True, '0', '0', 218699), (False, '0', '14', 218700), (False, '0', '11', 218701), (False, '0', '5', 218702), (True, '0', '0', 218703), (False, '0', '26', 218704), (False, '0', '14', 218705), (False, '215', '5', 218706), (False, '0', '20', 218707), (False, '0', '12', 218708), (False, '0', '11', 218709), (True, '0', '0', 218710), (False, '0', '2', 218711), (False, '0', '4', 218712), (False, '0', '9', 218713), (False, '0', '12', 218714), (True, '0', '0', 218715), (False, '0', '40', 218716), (True, '0', '0', 218717), (False, '1274', '0', 218718), (False, '1225', '5', 218719)]",False,Wrong Answer,0.2240750868020436,0.6016260162601627,False,0.76
119842,24013248,"a,b,c = [int(x) for x in input().split()]
ans = 2*(a+b+c)
if c>a+b:
    ans = 2*(a+b)
else:
    if c<a:
        ans = 2*(b+c)
    if c<b:
        ans = min(ans,2*(a+c))
    ans = min(ans,a+b+c)
print(ans)",146,4532,77,1/21/17 17:21,21,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.1106005878313371,0.4590163934426229,False,0.0
119841,24013045,"arr = [int(x) for x in input().split()]
arr.sort()
if arr[0]==arr[1]==arr[2]:
    print(3*arr[0])
else:
    print(2*(arr[0]+arr[1]))",146,4500,77,1/21/17 17:12,11,102,2,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (False, '602200', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",False,Wrong Answer,0.1106005878313371,0.4590163934426229,False,0.0476190476190476
190012,27820920,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
if n % 2 == 0:
    print(n // 4 - (n % 4 == 0))
else:
    print(0)",153,12,62,6/16/17 11:55,8,153,1,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (True, '0', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (True, '499999999', '499999999', 60607), (True, '481176017', '481176017', 60608), (True, '18435146', '18435146', 60609), (True, '481272204', '481272204', 60610), (True, '148267747', '148267747', 60611), (True, '481368392', '481368392', 60612), (True, '157372546', '157372546', 60613), (True, '495162277', '495162277', 60614), (True, '9165330', '9165330', 60615), (True, '0', '0', 60616), (True, '17801758', '17801758', 60617), (True, '439394348', '439394348', 60618), (True, '42076323', '42076323', 60619), (True, '483724055', '483724055', 60620), (True, '74287271', '74287271', 60621), (True, '474500408', '474500408', 60622), (True, '44102424', '44102424', 60623), (True, '468256380', '468256380', 60624), (True, '1428690', '1428690', 60625), (True, '457387797', '457387797', 60626), (True, '4067359', '4067359', 60627), (True, '415820847', '415820847', 60628), (True, '0', '0', 60629), (True, '491836400', '491836400', 60630), (True, '213499', '213499', 60631), (True, '498971656', '498971656', 60632), (True, '0', '0', 60633), (True, '499048408', '499048408', 60634), (True, '2401294', '2401294', 60635), (True, '499114934', '499114934', 60636), (True, '8172986', '8172986', 60637), (True, '493975826', '493975826', 60638), (True, '494159283', '494159283', 60639), (True, '7450759', '7450759', 60640), (True, '494494922', '494494922', 60641), (True, '494648833', '494648833', 60642), (True, '6844835', '6844835', 60643), (True, '494932477', '494932477', 60644), (True, '495063444', '495063444', 60645), (True, '495187895', '495187895', 60646), (True, '13306219', '13306219', 60647), (True, '0', '0', 60648), (True, '0', '0', 60649), (True, '1', '1', 60650), (True, '0', '0', 60651), (True, '2', '2', 60652), (True, '0', '0', 60653), (True, '2', '2', 60654), (True, '0', '0', 60655), (True, '3', '3', 60656), (True, '0', '0', 60657), (True, '3', '3', 60658), (True, '0', '0', 60659), (True, '4', '4', 60660), (True, '0', '0', 60661), (True, '0', '0', 60662), (True, '5', '5', 60663), (True, '0', '0', 60664), (True, '5', '5', 60665), (True, '0', '0', 60666), (True, '6', '6', 60667), (True, '0', '0', 60668), (True, '6', '6', 60669), (True, '0', '0', 60670), (True, '7', '7', 60671), (True, '0', '0', 60672), (True, '0', '0', 60673), (True, '0', '0', 60674), (True, '0', '0', 60675), (True, '0', '0', 60676)]",True,Accecpted,0.6657696834587914,0.8664495114006515,False,0.0
190011,27820899,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
print(n // 4 - (n % 4 == 0))",153,0,61,6/16/17 11:54,5,153,2,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (True, '0', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (True, '499999999', '499999999', 60607), (True, '481176017', '481176017', 60608), (True, '18435146', '18435146', 60609), (True, '481272204', '481272204', 60610), (True, '148267747', '148267747', 60611), (True, '481368392', '481368392', 60612), (True, '157372546', '157372546', 60613), (True, '495162277', '495162277', 60614), (True, '9165330', '9165330', 60615), (False, '485897698', '0', 60616), (True, '17801758', '17801758', 60617), (True, '439394348', '439394348', 60618), (True, '42076323', '42076323', 60619), (True, '483724055', '483724055', 60620), (True, '74287271', '74287271', 60621), (True, '474500408', '474500408', 60622), (True, '44102424', '44102424', 60623), (True, '468256380', '468256380', 60624), (True, '1428690', '1428690', 60625), (True, '457387797', '457387797', 60626), (True, '4067359', '4067359', 60627), (True, '415820847', '415820847', 60628), (False, '10637485', '0', 60629), (True, '491836400', '491836400', 60630), (True, '213499', '213499', 60631), (True, '498971656', '498971656', 60632), (False, '2582504', '0', 60633), (True, '499048408', '499048408', 60634), (True, '2401294', '2401294', 60635), (True, '499114934', '499114934', 60636), (True, '8172986', '8172986', 60637), (True, '493975826', '493975826', 60638), (True, '494159283', '494159283', 60639), (True, '7450759', '7450759', 60640), (True, '494494922', '494494922', 60641), (True, '494648833', '494648833', 60642), (True, '6844835', '6844835', 60643), (True, '494932477', '494932477', 60644), (True, '495063444', '495063444', 60645), (True, '495187895', '495187895', 60646), (True, '13306219', '13306219', 60647), (False, '1', '0', 60648), (False, '1', '0', 60649), (True, '1', '1', 60650), (False, '2', '0', 60651), (True, '2', '2', 60652), (False, '2', '0', 60653), (True, '2', '2', 60654), (False, '3', '0', 60655), (True, '3', '3', 60656), (False, '3', '0', 60657), (True, '3', '3', 60658), (False, '4', '0', 60659), (True, '4', '4', 60660), (False, '4', '0', 60661), (False, '5', '0', 60662), (True, '5', '5', 60663), (False, '5', '0', 60664), (True, '5', '5', 60665), (False, '6', '0', 60666), (True, '6', '6', 60667), (False, '6', '0', 60668), (True, '6', '6', 60669), (False, '7', '0', 60670), (True, '7', '7', 60671), (False, '27', '0', 60672), (False, '13', '0', 60673), (False, '26', '0', 60674), (False, '49', '0', 60675), (False, '37', '0', 60676)]",False,Wrong Answer,0.6657696834587914,0.8664495114006515,False,0.2763157894736842
195514,24674313,"#n = int(input())
#n, m = map(int, input().split()) 
#s = input()
#c = list(map(int, input().split()))
n, m, s = input().split()
n = int(n)
if s == 'month':
    if n == 31:
        print(7)
    elif n == 30:
        print(11)
    else:
        print(12)
else:
    if n == 5 or n == 6:
        print(53)
    else:
        print(52)",153,4520,62,2/14/17 18:27,35,159,1,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (True, '52', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (True, '12', '12', 61032)]",True,Accecpted,0.8589834793008795,0.978319783197832,False,0.0
195513,24674283,"#n = int(input())
#n, m = map(int, input().split()) 
#s = input()
#c = list(map(int, input().split()))
n, m, s = input().split()
n = int(n)
if s == 'month':
    if n == 31:
        print(7)
    elif n < 31 and n > 28:
        print(11)
    else:
        print(12)
else:
    if n == 5 or n == 6:
        print(53)
    else:
        print(52)",153,4524,61,2/14/17 18:26,35,159,2,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (True, '52', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (False, '11', '12', 61032)]",False,Wrong Answer,0.8589834793008795,0.978319783197832,False,0.0263157894736842
416853,26131709,"#n = int(input())
n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
l = m + n - 3
if (m - n) % 3 != 0:
    l += 1
print(max(l, 0))",153,5436,62,4/4/17 23:35,11,377,1,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (True, '0', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",True,Accecpted,0.9234732618882052,0.9942196531791908,False,0.0
416852,26131690,"#n = int(input())
n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
l = m + n - 3
if (m + n) % 3 != 0:
    l += 1
print(max(l, 0))",153,4488,46,4/4/17 23:33,11,377,2,8,"[(True, '6', '6', 78107), (False, '6', '5', 78108), (False, '198', '197', 78109), (False, '99', '98', 78110), (False, '99', '98', 78111), (False, '3', '2', 78112), (True, '0', '0', 78113), (False, '14', '13', 78114), (False, '6', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (False, '123', '122', 78125), (False, '87', '86', 78126), (False, '156', '155', 78127), (False, '27', '28', 78128), (False, '96', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (False, '98', '97', 78133), (False, '96', '97', 78134), (True, '81', '81', 78135), (False, '83', '82', 78136), (True, '84', '84', 78137), (False, '0', '1', 78138), (False, '0', '1', 78139), (False, '2', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (False, '3', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",False,Wrong Answer,0.9234732618882052,0.9942196531791908,False,0.4871794871794871
520030,26188189,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
m = n // 7
l = n - m * 7
print(m * 2 + (l == 6), m * 2 + (l > 0) + (l > 1))",153,5440,77,4/7/17 12:09,7,481,1,8,"[(True, '4 4', '4 4', 84433), (True, '0 2', '0 2', 84434), (True, '0 1', '0 1', 84435), (True, '0 2', '0 2', 84436), (True, '0 2', '0 2', 84437), (True, '0 2', '0 2', 84438), (True, '1 2', '1 2', 84439), (True, '2 2', '2 2', 84440), (True, '2 3', '2 3', 84441), (True, '2 4', '2 4', 84442), (True, '2 4', '2 4', 84443), (True, '2 4', '2 4', 84444), (True, '2 4', '2 4', 84445), (True, '3 4', '3 4', 84446), (True, '285714 285715', '285714 285715', 84447), (True, '4 6', '4 6', 84448), (True, '4 6', '4 6', 84449), (True, '4 6', '4 6', 84450), (True, '4 6', '4 6', 84451), (True, '5 6', '5 6', 84452), (True, '6 6', '6 6', 84453), (True, '6 7', '6 7', 84454), (True, '6 8', '6 8', 84455), (True, '6 8', '6 8', 84456), (True, '6 8', '6 8', 84457), (True, '6 8', '6 8', 84458), (True, '7 8', '7 8', 84459), (True, '8 8', '8 8', 84460), (True, '8 9', '8 9', 84461), (True, '8 10', '8 10', 84462), (True, '28 30', '28 30', 84463), (True, '28 29', '28 29', 84464), (True, '28 28', '28 28', 84465), (True, '27 28', '27 28', 84466), (True, '26 28', '26 28', 84467), (True, '26 28', '26 28', 84468), (True, '26 28', '26 28', 84469), (True, '26 28', '26 28', 84470), (True, '26 27', '26 27', 84471), (True, '26 26', '26 26', 84472), (True, '25 26', '25 26', 84473), (True, '24 26', '24 26', 84474), (True, '24 26', '24 26', 84475), (True, '24 26', '24 26', 84476), (True, '24 26', '24 26', 84477), (True, '24 25', '24 25', 84478), (True, '24 24', '24 24', 84479), (True, '23 24', '23 24', 84480), (True, '22 24', '22 24', 84481), (True, '22 24', '22 24', 84482), (True, '22 24', '22 24', 84483), (True, '285 286', '285 286', 84484), (True, '284 286', '284 286', 84485), (True, '284 286', '284 286', 84486), (True, '284 286', '284 286', 84487), (True, '284 286', '284 286', 84488), (True, '284 285', '284 285', 84489), (True, '284 284', '284 284', 84490), (True, '283 284', '283 284', 84491), (True, '282 284', '282 284', 84492), (True, '282 284', '282 284', 84493), (True, '282 284', '282 284', 84494), (True, '282 284', '282 284', 84495), (True, '282 283', '282 283', 84496), (True, '282 282', '282 282', 84497), (True, '281 282', '281 282', 84498), (True, '280 282', '280 282', 84499), (True, '280 282', '280 282', 84500), (True, '280 282', '280 282', 84501), (True, '280 282', '280 282', 84502), (True, '280 281', '280 281', 84503), (True, '280 280', '280 280', 84504), (True, '2856 2858', '2856 2858', 84505), (True, '2856 2858', '2856 2858', 84506), (True, '2856 2858', '2856 2858', 84507), (True, '2856 2857', '2856 2857', 84508), (True, '2856 2856', '2856 2856', 84509), (True, '2855 2856', '2855 2856', 84510), (True, '2854 2856', '2854 2856', 84511), (True, '2854 2856', '2854 2856', 84512), (True, '2854 2856', '2854 2856', 84513), (True, '2854 2856', '2854 2856', 84514), (True, '2854 2855', '2854 2855', 84515), (True, '2854 2854', '2854 2854', 84516), (True, '2853 2854', '2853 2854', 84517), (True, '2852 2854', '2852 2854', 84518), (True, '2852 2854', '2852 2854', 84519), (True, '2852 2854', '2852 2854', 84520), (True, '2852 2854', '2852 2854', 84521), (True, '2852 2853', '2852 2853', 84522), (True, '2852 2852', '2852 2852', 84523), (True, '2851 2852', '2851 2852', 84524), (True, '2850 2852', '2850 2852', 84525), (True, '28570 28572', '28570 28572', 84526), (True, '28570 28572', '28570 28572', 84527), (True, '28570 28572', '28570 28572', 84528), (True, '28570 28572', '28570 28572', 84529), (True, '28570 28571', '28570 28571', 84530), (True, '28570 28570', '28570 28570', 84531), (True, '28569 28570', '28569 28570', 84532), (True, '28568 28570', '28568 28570', 84533), (True, '28568 28570', '28568 28570', 84534), (True, '28568 28570', '28568 28570', 84535), (True, '28568 28570', '28568 28570', 84536), (True, '28568 28569', '28568 28569', 84537), (True, '28568 28568', '28568 28568', 84538), (True, '28567 28568', '28567 28568', 84539), (True, '28566 28568', '28566 28568', 84540), (True, '28566 28568', '28566 28568', 84541), (True, '28566 28568', '28566 28568', 84542), (True, '28566 28568', '28566 28568', 84543), (True, '28566 28567', '28566 28567', 84544), (True, '28566 28566', '28566 28566', 84545), (True, '28565 28566', '28565 28566', 84546), (True, '285714 285714', '285714 285714', 84547), (True, '285713 285714', '285713 285714', 84548), (True, '285712 285714', '285712 285714', 84549), (True, '285712 285714', '285712 285714', 84550), (True, '285712 285714', '285712 285714', 84551), (True, '285712 285714', '285712 285714', 84552), (True, '285712 285713', '285712 285713', 84553), (True, '285712 285712', '285712 285712', 84554), (True, '285711 285712', '285711 285712', 84555), (True, '285710 285712', '285710 285712', 84556), (True, '285710 285712', '285710 285712', 84557), (True, '285710 285712', '285710 285712', 84558), (True, '285710 285712', '285710 285712', 84559), (True, '285710 285711', '285710 285711', 84560), (True, '285710 285710', '285710 285710', 84561), (True, '285709 285710', '285709 285710', 84562), (True, '285708 285710', '285708 285710', 84563), (True, '285708 285710', '285708 285710', 84564), (True, '285708 285710', '285708 285710', 84565), (True, '285708 285710', '285708 285710', 84566), (True, '66892 66893', '66892 66893', 84567), (True, '66892 66892', '66892 66892', 84568), (True, '66891 66892', '66891 66892', 84569), (True, '66890 66892', '66890 66892', 84570), (True, '66890 66892', '66890 66892', 84571), (True, '66890 66892', '66890 66892', 84572), (True, '66890 66892', '66890 66892', 84573), (True, '66890 66891', '66890 66891', 84574), (True, '66890 66890', '66890 66890', 84575), (True, '66889 66890', '66889 66890', 84576), (True, '66888 66890', '66888 66890', 84577), (True, '66888 66890', '66888 66890', 84578), (True, '66888 66890', '66888 66890', 84579), (True, '66888 66890', '66888 66890', 84580), (True, '66888 66889', '66888 66889', 84581), (True, '66888 66888', '66888 66888', 84582), (True, '66887 66888', '66887 66888', 84583), (True, '66886 66888', '66886 66888', 84584), (True, '66886 66888', '66886 66888', 84585), (True, '66886 66888', '66886 66888', 84586), (True, '66886 66888', '66886 66888', 84587), (True, '248151 248152', '248151 248152', 84588), (True, '248150 248152', '248150 248152', 84589), (True, '248150 248152', '248150 248152', 84590), (True, '248150 248152', '248150 248152', 84591), (True, '248150 248152', '248150 248152', 84592), (True, '248150 248151', '248150 248151', 84593), (True, '248150 248150', '248150 248150', 84594), (True, '248149 248150', '248149 248150', 84595), (True, '248148 248150', '248148 248150', 84596), (True, '248148 248150', '248148 248150', 84597), (True, '248148 248150', '248148 248150', 84598), (True, '248148 248150', '248148 248150', 84599), (True, '248148 248149', '248148 248149', 84600), (True, '248148 248148', '248148 248148', 84601), (True, '248147 248148', '248147 248148', 84602), (True, '248146 248148', '248146 248148', 84603), (True, '248146 248148', '248146 248148', 84604), (True, '248146 248148', '248146 248148', 84605), (True, '248146 248148', '248146 248148', 84606), (True, '248146 248147', '248146 248147', 84607), (True, '248146 248146', '248146 248146', 84608), (True, '35260 35262', '35260 35262', 84609), (True, '35260 35262', '35260 35262', 84610), (True, '35260 35261', '35260 35261', 84611), (True, '35260 35260', '35260 35260', 84612), (True, '35259 35260', '35259 35260', 84613), (True, '35258 35260', '35258 35260', 84614), (True, '35258 35260', '35258 35260', 84615), (True, '35258 35260', '35258 35260', 84616), (True, '35258 35260', '35258 35260', 84617), (True, '35258 35259', '35258 35259', 84618), (True, '35258 35258', '35258 35258', 84619), (True, '35257 35258', '35257 35258', 84620), (True, '35256 35258', '35256 35258', 84621), (True, '35256 35258', '35256 35258', 84622), (True, '35256 35258', '35256 35258', 84623), (True, '35256 35258', '35256 35258', 84624), (True, '35256 35257', '35256 35257', 84625), (True, '35256 35256', '35256 35256', 84626), (True, '35255 35256', '35255 35256', 84627), (True, '35254 35256', '35254 35256', 84628), (True, '35254 35256', '35254 35256', 84629), (True, '4 5', '4 5', 84630)]",True,Accecpted,0.9539918498375324,0.9863013698630136,False,0.0
520029,26188045,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
m = n // 7
l = n - m * 7
print(m * 2 + (l == 6), m * 2 + (l > 0) + (l == 2))",153,4492,46,4/7/17 12:04,7,481,2,8,"[(True, '4 4', '4 4', 84433), (True, '0 2', '0 2', 84434), (True, '0 1', '0 1', 84435), (False, '0 1', '0 2', 84436), (False, '0 1', '0 2', 84437), (False, '0 1', '0 2', 84438), (False, '1 1', '1 2', 84439), (True, '2 2', '2 2', 84440), (True, '2 3', '2 3', 84441), (True, '2 4', '2 4', 84442), (False, '2 3', '2 4', 84443), (False, '2 3', '2 4', 84444), (False, '2 3', '2 4', 84445), (False, '3 3', '3 4', 84446), (True, '285714 285715', '285714 285715', 84447), (True, '4 6', '4 6', 84448), (False, '4 5', '4 6', 84449), (False, '4 5', '4 6', 84450), (False, '4 5', '4 6', 84451), (False, '5 5', '5 6', 84452), (True, '6 6', '6 6', 84453), (True, '6 7', '6 7', 84454), (True, '6 8', '6 8', 84455), (False, '6 7', '6 8', 84456), (False, '6 7', '6 8', 84457), (False, '6 7', '6 8', 84458), (False, '7 7', '7 8', 84459), (True, '8 8', '8 8', 84460), (True, '8 9', '8 9', 84461), (True, '8 10', '8 10', 84462), (True, '28 30', '28 30', 84463), (True, '28 29', '28 29', 84464), (True, '28 28', '28 28', 84465), (False, '27 27', '27 28', 84466), (False, '26 27', '26 28', 84467), (False, '26 27', '26 28', 84468), (False, '26 27', '26 28', 84469), (True, '26 28', '26 28', 84470), (True, '26 27', '26 27', 84471), (True, '26 26', '26 26', 84472), (False, '25 25', '25 26', 84473), (False, '24 25', '24 26', 84474), (False, '24 25', '24 26', 84475), (False, '24 25', '24 26', 84476), (True, '24 26', '24 26', 84477), (True, '24 25', '24 25', 84478), (True, '24 24', '24 24', 84479), (False, '23 23', '23 24', 84480), (False, '22 23', '22 24', 84481), (False, '22 23', '22 24', 84482), (False, '22 23', '22 24', 84483), (False, '285 285', '285 286', 84484), (False, '284 285', '284 286', 84485), (False, '284 285', '284 286', 84486), (False, '284 285', '284 286', 84487), (True, '284 286', '284 286', 84488), (True, '284 285', '284 285', 84489), (True, '284 284', '284 284', 84490), (False, '283 283', '283 284', 84491), (False, '282 283', '282 284', 84492), (False, '282 283', '282 284', 84493), (False, '282 283', '282 284', 84494), (True, '282 284', '282 284', 84495), (True, '282 283', '282 283', 84496), (True, '282 282', '282 282', 84497), (False, '281 281', '281 282', 84498), (False, '280 281', '280 282', 84499), (False, '280 281', '280 282', 84500), (False, '280 281', '280 282', 84501), (True, '280 282', '280 282', 84502), (True, '280 281', '280 281', 84503), (True, '280 280', '280 280', 84504), (False, '2856 2857', '2856 2858', 84505), (False, '2856 2857', '2856 2858', 84506), (True, '2856 2858', '2856 2858', 84507), (True, '2856 2857', '2856 2857', 84508), (True, '2856 2856', '2856 2856', 84509), (False, '2855 2855', '2855 2856', 84510), (False, '2854 2855', '2854 2856', 84511), (False, '2854 2855', '2854 2856', 84512), (False, '2854 2855', '2854 2856', 84513), (True, '2854 2856', '2854 2856', 84514), (True, '2854 2855', '2854 2855', 84515), (True, '2854 2854', '2854 2854', 84516), (False, '2853 2853', '2853 2854', 84517), (False, '2852 2853', '2852 2854', 84518), (False, '2852 2853', '2852 2854', 84519), (False, '2852 2853', '2852 2854', 84520), (True, '2852 2854', '2852 2854', 84521), (True, '2852 2853', '2852 2853', 84522), (True, '2852 2852', '2852 2852', 84523), (False, '2851 2851', '2851 2852', 84524), (False, '2850 2851', '2850 2852', 84525), (False, '28570 28571', '28570 28572', 84526), (False, '28570 28571', '28570 28572', 84527), (False, '28570 28571', '28570 28572', 84528), (True, '28570 28572', '28570 28572', 84529), (True, '28570 28571', '28570 28571', 84530), (True, '28570 28570', '28570 28570', 84531), (False, '28569 28569', '28569 28570', 84532), (False, '28568 28569', '28568 28570', 84533), (False, '28568 28569', '28568 28570', 84534), (False, '28568 28569', '28568 28570', 84535), (True, '28568 28570', '28568 28570', 84536), (True, '28568 28569', '28568 28569', 84537), (True, '28568 28568', '28568 28568', 84538), (False, '28567 28567', '28567 28568', 84539), (False, '28566 28567', '28566 28568', 84540), (False, '28566 28567', '28566 28568', 84541), (False, '28566 28567', '28566 28568', 84542), (True, '28566 28568', '28566 28568', 84543), (True, '28566 28567', '28566 28567', 84544), (True, '28566 28566', '28566 28566', 84545), (False, '28565 28565', '28565 28566', 84546), (True, '285714 285714', '285714 285714', 84547), (False, '285713 285713', '285713 285714', 84548), (False, '285712 285713', '285712 285714', 84549), (False, '285712 285713', '285712 285714', 84550), (False, '285712 285713', '285712 285714', 84551), (True, '285712 285714', '285712 285714', 84552), (True, '285712 285713', '285712 285713', 84553), (True, '285712 285712', '285712 285712', 84554), (False, '285711 285711', '285711 285712', 84555), (False, '285710 285711', '285710 285712', 84556), (False, '285710 285711', '285710 285712', 84557), (False, '285710 285711', '285710 285712', 84558), (True, '285710 285712', '285710 285712', 84559), (True, '285710 285711', '285710 285711', 84560), (True, '285710 285710', '285710 285710', 84561), (False, '285709 285709', '285709 285710', 84562), (False, '285708 285709', '285708 285710', 84563), (False, '285708 285709', '285708 285710', 84564), (False, '285708 285709', '285708 285710', 84565), (True, '285708 285710', '285708 285710', 84566), (True, '66892 66893', '66892 66893', 84567), (True, '66892 66892', '66892 66892', 84568), (False, '66891 66891', '66891 66892', 84569), (False, '66890 66891', '66890 66892', 84570), (False, '66890 66891', '66890 66892', 84571), (False, '66890 66891', '66890 66892', 84572), (True, '66890 66892', '66890 66892', 84573), (True, '66890 66891', '66890 66891', 84574), (True, '66890 66890', '66890 66890', 84575), (False, '66889 66889', '66889 66890', 84576), (False, '66888 66889', '66888 66890', 84577), (False, '66888 66889', '66888 66890', 84578), (False, '66888 66889', '66888 66890', 84579), (True, '66888 66890', '66888 66890', 84580), (True, '66888 66889', '66888 66889', 84581), (True, '66888 66888', '66888 66888', 84582), (False, '66887 66887', '66887 66888', 84583), (False, '66886 66887', '66886 66888', 84584), (False, '66886 66887', '66886 66888', 84585), (False, '66886 66887', '66886 66888', 84586), (True, '66886 66888', '66886 66888', 84587), (False, '248151 248151', '248151 248152', 84588), (False, '248150 248151', '248150 248152', 84589), (False, '248150 248151', '248150 248152', 84590), (False, '248150 248151', '248150 248152', 84591), (True, '248150 248152', '248150 248152', 84592), (True, '248150 248151', '248150 248151', 84593), (True, '248150 248150', '248150 248150', 84594), (False, '248149 248149', '248149 248150', 84595), (False, '248148 248149', '248148 248150', 84596), (False, '248148 248149', '248148 248150', 84597), (False, '248148 248149', '248148 248150', 84598), (True, '248148 248150', '248148 248150', 84599), (True, '248148 248149', '248148 248149', 84600), (True, '248148 248148', '248148 248148', 84601), (False, '248147 248147', '248147 248148', 84602), (False, '248146 248147', '248146 248148', 84603), (False, '248146 248147', '248146 248148', 84604), (False, '248146 248147', '248146 248148', 84605), (True, '248146 248148', '248146 248148', 84606), (True, '248146 248147', '248146 248147', 84607), (True, '248146 248146', '248146 248146', 84608), (False, '35260 35261', '35260 35262', 84609), (True, '35260 35262', '35260 35262', 84610), (True, '35260 35261', '35260 35261', 84611), (True, '35260 35260', '35260 35260', 84612), (False, '35259 35259', '35259 35260', 84613), (False, '35258 35259', '35258 35260', 84614), (False, '35258 35259', '35258 35260', 84615), (False, '35258 35259', '35258 35260', 84616), (True, '35258 35260', '35258 35260', 84617), (True, '35258 35259', '35258 35259', 84618), (True, '35258 35258', '35258 35258', 84619), (False, '35257 35257', '35257 35258', 84620), (False, '35256 35257', '35256 35258', 84621), (False, '35256 35257', '35256 35258', 84622), (False, '35256 35257', '35256 35258', 84623), (True, '35256 35258', '35256 35258', 84624), (True, '35256 35257', '35256 35257', 84625), (True, '35256 35256', '35256 35256', 84626), (False, '35255 35255', '35255 35256', 84627), (False, '35254 35255', '35254 35256', 84628), (False, '35254 35255', '35254 35256', 84629), (True, '4 5', '4 5', 84630)]",False,Wrong Answer,0.9539918498375324,0.9863013698630136,False,0.5656565656565656
536459,26186271,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
s = ''
for i in range(1, 1000):
    s += str(i)
print(s[n - 1])",153,5372,77,4/7/17 10:37,8,494,1,8,"[(True, '3', '3', 86532), (True, '0', '0', 86533), (True, '1', '1', 86534), (True, '1', '1', 86535), (True, '9', '9', 86536), (True, '2', '2', 86537), (True, '3', '3', 86538), (True, '9', '9', 86539), (True, '5', '5', 86540), (True, '6', '6', 86541), (True, '8', '8', 86542), (True, '3', '3', 86543), (True, '1', '1', 86544), (True, '4', '4', 86545), (True, '0', '0', 86546), (True, '9', '9', 86547), (True, '1', '1', 86548), (True, '7', '7', 86549), (True, '3', '3', 86550), (True, '5', '5', 86551), (True, '2', '2', 86552), (True, '1', '1', 86553), (True, '6', '6', 86554), (True, '2', '2', 86555), (True, '7', '7', 86556), (True, '0', '0', 86557), (True, '2', '2', 86558), (True, '6', '6', 86559), (True, '6', '6', 86560), (True, '0', '0', 86561), (True, '2', '2', 86562), (True, '1', '1', 86563), (True, '5', '5', 86564), (True, '0', '0', 86565), (True, '9', '9', 86566), (True, '0', '0', 86567), (True, '0', '0', 86568)]",True,Accecpted,0.9061874434879644,0.9912023460410556,False,0.0
536458,26186257,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
s = ''
for i in range(1, 200):
    s += str(i)
print(s[n - 1])",153,5420,62,4/7/17 10:36,8,494,5,8,"[(True, '3', '3', 86532), (True, '0', '0', 86533), (True, '1', '1', 86534), (True, '1', '1', 86535), (True, '9', '9', 86536), (True, '2', '2', 86537), (False, '', '3', 86538), (False, '', '9', 86539), (True, '5', '5', 86540), (True, '6', '6', 86541), (True, '8', '8', 86542), (True, '3', '3', 86543), (True, '1', '1', 86544), (True, '4', '4', 86545), (False, '', '0', 86546), (False, '', '9', 86547), (True, '1', '1', 86548), (True, '7', '7', 86549), (False, '', '3', 86550), (True, '5', '5', 86551), (False, '', '2', 86552), (False, '', '1', 86553), (True, '6', '6', 86554), (False, '', '2', 86555), (True, '7', '7', 86556), (True, '0', '0', 86557), (False, '', '2', 86558), (False, '', '6', 86559), (False, '', '6', 86560), (False, '', '0', 86561), (True, '2', '2', 86562), (True, '1', '1', 86563), (True, '5', '5', 86564), (False, '', '0', 86565), (True, '9', '9', 86566), (False, '', '0', 86567), (True, '0', '0', 86568)]",False,Runtime Error,0.9061874434879644,0.9912023460410556,False,0.3783783783783784
552938,26175857,"#n = int(input())
a, b, c = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
k = (a < b) * (c > 0) + (a > b) * (c < 0)
if a == b:
    print('YES')
else:
    if c == 0:
        print('NO')
    else:
        if (c == 0 and a == b) or (k and (b - a) % c == 0):
            print('YES')
        else:
            print('NO')",153,5440,77,4/6/17 20:17,15,511,1,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (True, 'YES', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (True, 'YES', 'YES', 87956), (True, 'YES', 'YES', 87957), (True, 'YES', 'YES', 87958), (True, 'YES', 'YES', 87959), (True, 'YES', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (True, 'YES', 'YES', 87986), (True, 'YES', 'YES', 87987), (True, 'YES', 'YES', 87988), (True, 'YES', 'YES', 87989), (True, 'YES', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (True, 'YES', 'YES', 88016), (True, 'YES', 'YES', 88017), (True, 'YES', 'YES', 88018), (True, 'YES', 'YES', 88019), (True, 'YES', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (True, 'YES', 'YES', 88046), (True, 'YES', 'YES', 88047), (True, 'YES', 'YES', 88048), (True, 'YES', 'YES', 88049), (True, 'YES', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (True, 'YES', 'YES', 88076), (True, 'YES', 'YES', 88077), (True, 'YES', 'YES', 88078), (True, 'YES', 'YES', 88079), (True, 'YES', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (True, 'YES', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (True, 'YES', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",True,Accecpted,0.7889296880814302,0.6512396694214876,False,0.0
552937,26175778,"#n = int(input())
a, b, c = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
k = (a < b) * (c > 0) + (a > b) * (c < 0)
if (c == 0 and a == b) or (k and (b - a) % c == 0):
    print('YES')
else:
    print('NO')",153,5416,61,4/6/17 20:13,9,511,2,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (False, 'NO', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (False, 'NO', 'YES', 87956), (False, 'NO', 'YES', 87957), (True, 'YES', 'YES', 87958), (False, 'NO', 'YES', 87959), (False, 'NO', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (False, 'NO', 'YES', 87986), (False, 'NO', 'YES', 87987), (True, 'YES', 'YES', 87988), (False, 'NO', 'YES', 87989), (False, 'NO', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (False, 'NO', 'YES', 88016), (False, 'NO', 'YES', 88017), (True, 'YES', 'YES', 88018), (False, 'NO', 'YES', 88019), (False, 'NO', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (False, 'NO', 'YES', 88046), (False, 'NO', 'YES', 88047), (True, 'YES', 'YES', 88048), (False, 'NO', 'YES', 88049), (False, 'NO', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (False, 'NO', 'YES', 88076), (False, 'NO', 'YES', 88077), (True, 'YES', 'YES', 88078), (False, 'NO', 'YES', 88079), (False, 'NO', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (False, 'NO', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (False, 'NO', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",False,Wrong Answer,0.7889296880814302,0.6512396694214876,False,0.1292134831460674
586059,26475836,"#n = int(input()) 
#n, m = map(int, input().split())
#s = input()
c = list(map(int, input().split()))
s = sum(c)
a = [0] * 101
for i in range(5):
    a[c[i]] += 1
l = 0
for i in range(100, 0, -1):
    if a[i] > 1:
        l = max(i * min(a[i], 3), l)
print(s - l)",153,5412,62,4/18/17 15:43,13,538,1,8,"[(True, '26', '26', 90562), (True, '28', '28', 90563), (True, '20', '20', 90564), (True, '15', '15', 90565), (True, '16', '16', 90566), (True, '4', '4', 90567), (True, '6', '6', 90568), (True, '110', '110', 90569), (True, '200', '200', 90570), (True, '2', '2', 90571), (True, '58', '58', 90572), (True, '58', '58', 90573), (True, '60', '60', 90574), (True, '60', '60', 90575), (True, '60', '60', 90576), (True, '60', '60', 90577), (True, '60', '60', 90578), (True, '9', '9', 90579), (True, '9', '9', 90580), (True, '15', '15', 90581), (True, '490', '490', 90582), (True, '2', '2', 90583), (True, '296', '296', 90584), (True, '296', '296', 90585), (True, '181', '181', 90586), (True, '227', '227', 90587), (True, '95', '95', 90588), (True, '17', '17', 90589), (True, '110', '110', 90590), (True, '110', '110', 90591), (True, '199', '199', 90592), (True, '13', '13', 90593), (True, '2', '2', 90594), (True, '11', '11', 90595), (True, '101', '101', 90596), (True, '6', '6', 90597), (True, '3', '3', 90598), (True, '7', '7', 90599), (True, '9', '9', 90600), (True, '21', '21', 90601), (True, '6', '6', 90602), (True, '5', '5', 90603), (True, '121', '121', 90604), (True, '6', '6', 90605), (True, '9', '9', 90606), (True, '4', '4', 90607), (True, '3', '3', 90608), (True, '21', '21', 90609)]",True,Accecpted,0.8869634816894617,0.985239852398524,False,0.0
586058,26475802,"#n = int(input()) 
#n, m = map(int, input().split())
#s = input()
c = list(map(int, input().split()))
s = sum(c)
a = [0] * 101
for i in range(5):
    a[c[i]] += 1
l = 0
for i in range(100, 0, -1):
    if a[i] > 1:
        l = i * min(a[i], 3)
print(s - l)",153,4468,31,4/18/17 15:41,13,538,2,8,"[(False, '34', '26', 90562), (True, '28', '28', 90563), (True, '20', '20', 90564), (False, '17', '15', 90565), (True, '16', '16', 90566), (False, '24', '4', 90567), (False, '16', '6', 90568), (True, '110', '110', 90569), (True, '200', '200', 90570), (True, '2', '2', 90571), (True, '58', '58', 90572), (True, '58', '58', 90573), (False, '62', '60', 90574), (False, '62', '60', 90575), (False, '62', '60', 90576), (True, '60', '60', 90577), (True, '60', '60', 90578), (True, '9', '9', 90579), (True, '9', '9', 90580), (True, '15', '15', 90581), (True, '490', '490', 90582), (False, '300', '2', 90583), (False, '298', '296', 90584), (False, '298', '296', 90585), (True, '181', '181', 90586), (True, '227', '227', 90587), (False, '195', '95', 90588), (False, '55', '17', 90589), (False, '112', '110', 90590), (True, '110', '110', 90591), (True, '199', '199', 90592), (True, '13', '13', 90593), (False, '9', '2', 90594), (True, '11', '11', 90595), (True, '101', '101', 90596), (False, '200', '6', 90597), (True, '3', '3', 90598), (False, '9', '7', 90599), (True, '9', '9', 90600), (True, '21', '21', 90601), (False, '20', '6', 90602), (True, '5', '5', 90603), (True, '121', '121', 90604), (True, '6', '6', 90605), (False, '25', '9', 90606), (False, '9', '4', 90607), (True, '3', '3', 90608), (False, '24', '21', 90609)]",False,Wrong Answer,0.8869634816894617,0.985239852398524,False,0.4166666666666667
600323,28180116,"#n = int(input())
n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
l = (n // 5) * (m // 5)
for i in range(1, 5):
    l += ((n - i) // 5 + 1) * ((m - 5 + i) // 5 + 1)
print(l)",153,5436,77,6/30/17 23:43,8,548,1,8,"[(True, '14', '14', 91448), (True, '31', '31', 91449), (True, '1', '1', 91450), (True, '5', '5', 91451), (True, '7', '7', 91452), (True, '88', '88', 91453), (True, '30', '30', 91454), (True, '0', '0', 91455), (True, '200000', '200000', 91456), (True, '200000', '200000', 91457), (True, '200000000000', '200000000000', 91458), (True, '159348', '159348', 91459), (True, '72423', '72423', 91460), (True, '131155', '131155', 91461), (True, '178296', '178296', 91462), (True, '41600', '41600', 91463), (True, '26112', '26112', 91464), (True, '55552', '55552', 91465), (True, '9856', '9856', 91466), (True, '148652', '148652', 91467), (True, '106218', '106218', 91468), (True, '7431', '7431', 91469), (True, '79157', '79157', 91470), (True, '33194', '33194', 91471), (True, '180', '180', 91472), (True, '25384', '25384', 91473), (True, '2462', '2462', 91474), (True, '1201', '1201', 91475), (True, '60512', '60512', 91476), (True, '60705', '60705', 91477), (True, '3208', '3208', 91478), (True, '75929310986', '75929310986', 91479), (True, '12052259926', '12052259926', 91480), (True, '105030916263', '105030916263', 91481), (True, '132638943', '132638943', 91482), (True, '12720276292', '12720276292', 91483), (True, '457187060', '457187060', 91484), (True, '32349225415', '32349225415', 91485), (True, '5812618980', '5812618980', 91486), (True, '61118498984', '61118498984', 91487), (True, '48660664382', '48660664382', 91488), (True, '33737759810', '33737759810', 91489), (True, '2611958008', '2611958008', 91490), (True, '38433636199', '38433636199', 91491), (True, '114818101284', '114818101284', 91492), (True, '62190480238', '62190480238', 91493), (True, '159985729411', '159985729411', 91494), (True, '93933134534', '93933134534', 91495), (True, '347531388', '347531388', 91496), (True, '7867827488', '7867827488', 91497), (True, '45248999219', '45248999219', 91498), (True, '131184195318', '131184195318', 91499), (True, '67552194859', '67552194859', 91500), (True, '178233305115', '178233305115', 91501), (True, '1853307952', '1853307952', 91502), (True, '20040948031', '20040948031', 91503), (True, '14525848875', '14525848875', 91504), (True, '51880446774', '51880446774', 91505), (True, '36705041203', '36705041203', 91506), (True, '88056992428', '88056992428', 91507), (True, '33673251230', '33673251230', 91508), (True, '16828704925', '16828704925', 91509), (True, '65393416268', '65393416268', 91510), (True, '37488632431', '37488632431', 91511), (True, '115542637921', '115542637921', 91512), (True, '32214852554', '32214852554', 91513), (True, '120403367155', '120403367155', 91514), (True, '53095895155', '53095895155', 91515), (True, '165869588', '165869588', 91516), (True, '4112144810', '4112144810', 91517), (True, '17893399803', '17893399803', 91518), (True, '126455602192', '126455602192', 91519), (True, '68236422', '68236422', 91520), (True, '17722349770', '17722349770', 91521), (True, '12162829017', '12162829017', 91522), (True, '46570587880', '46570587880', 91523), (True, '14104855884', '14104855884', 91524), (True, '70166746198', '70166746198', 91525), (True, '27354683301', '27354683301', 91526), (True, '102815540084', '102815540084', 91527), (True, '60653584944', '60653584944', 91528), (True, '2020', '2020', 91529), (True, '2040', '2040', 91530), (True, '2060', '2060', 91531), (True, '2080', '2080', 91532), (True, '3', '3', 91533), (True, '50', '50', 91534), (True, '23', '23', 91535), (True, '160372597', '160372597', 91536), (True, '1', '1', 91537), (True, '199999600001', '199999600001', 91538), (True, '1624', '1624', 91539), (True, '75', '75', 91540), (True, '10952', '10952', 91541), (True, '4', '4', 91542), (True, '15', '15', 91543), (True, '6', '6', 91544), (True, '1999960001', '1999960001', 91545), (True, '225', '225', 91546), (True, '0', '0', 91547), (True, '66', '66', 91548), (True, '2', '2', 91549), (True, '3', '3', 91550), (True, '966605', '966605', 91551), (True, '199999800000', '199999800000', 91552), (True, '135304750879', '135304750879', 91553), (True, '50', '50', 91554), (True, '190004183', '190004183', 91555), (True, '28', '28', 91556), (True, '8', '8', 91557), (True, '122689636154', '122689636154', 91558), (True, '0', '0', 91559), (True, '465', '465', 91560), (True, '26', '26', 91561), (True, '1', '1', 91562), (True, '57993', '57993', 91563), (True, '7896', '7896', 91564), (True, '12', '12', 91565), (True, '0', '0', 91566), (True, '3', '3', 91567), (True, '709707816', '709707816', 91568), (True, '8', '8', 91569), (True, '6', '6', 91570), (True, '8', '8', 91571), (True, '10462520', '10462520', 91572), (True, '4', '4', 91573), (True, '41542', '41542', 91574), (True, '2', '2', 91575)]",True,Accecpted,0.3452397779126381,0.6844919786096256,False,0.0
600322,28175223,"#n = int(input())
n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
print((n // 5 + m // 5) * 4 + (n // 10 + m // 10) * 2)",153,4508,46,6/30/17 17:45,5,548,2,8,"[(True, '14', '14', 91448), (False, '20', '31', 91449), (False, '4', '1', 91450), (False, '4', '5', 91451), (False, '8', '7', 91452), (False, '40', '88', 91453), (False, '24', '30', 91454), (True, '0', '0', 91455), (False, '1000000', '200000', 91456), (False, '1000000', '200000', 91457), (False, '2000000', '200000000000', 91458), (False, '1780', '159348', 91459), (False, '1344', '72423', 91460), (False, '1614', '131155', 91461), (False, '1884', '178296', 91462), (False, '964', '41600', 91463), (False, '934', '26112', 91464), (False, '1204', '55552', 91465), (False, '470', '9856', 91466), (False, '1734', '148652', 91467), (False, '1470', '106218', 91468), (False, '734', '7431', 91469), (False, '1298', '79157', 91470), (False, '1080', '33194', 91471), (False, '54', '180', 91472), (False, '914', '25384', 91473), (False, '884', '2462', 91474), (False, '858', '1201', 91475), (False, '1130', '60512', 91476), (False, '1208', '60705', 91477), (False, '574', '3208', 91478), (False, '1247758', '75929310986', 91479), (False, '880030', '12052259926', 91480), (False, '1479594', '105030916263', 91481), (False, '144564', '132638943', 91482), (False, '809534', '12720276292', 91483), (False, '184910', '457187060', 91484), (False, '849878', '32349225415', 91485), (False, '449444', '5812618980', 91486), (False, '1114420', '61118498984', 91487), (False, '1192074', '48660664382', 91488), (False, '824340', '33737759810', 91489), (False, '489314', '2611958008', 91490), (False, '897390', '38433636199', 91491), (False, '1529660', '114818101284', 91492), (False, '1161924', '62190480238', 91493), (False, '1794194', '159985729411', 91494), (False, '1426464', '93933134534', 91495), (False, '91440', '347531388', 91496), (False, '466804', '7867827488', 91497), (False, '991884', '45248999219', 91498), (False, '1624154', '131184195318', 91499), (False, '1223718', '67552194859', 91500), (False, '1888690', '178233305115', 91501), (False, '296764', '1853307952', 91502), (False, '961738', '20040948031', 91503), (False, '561304', '14525848875', 91504), (False, '1193574', '51880446774', 91505), (False, '858544', '36705041203', 91506), (False, '1425404', '88056992428', 91507), (False, '950480', '33673251230', 91508), (False, '582748', '16828704925', 91509), (False, '1215020', '65393416268', 91510), (False, '879988', '37488632431', 91511), (False, '1544964', '115542637921', 91512), (False, '920334', '32214852554', 91513), (False, '1552604', '120403367155', 91514), (False, '1184868', '53095895155', 91515), (False, '849844', '165869588', 91516), (False, '449408', '4112144810', 91517), (False, '941778', '17893399803', 91518), (False, '1606754', '126455602192', 91519), (False, '239024', '68236422', 91520), (False, '871290', '17722349770', 91521), (False, '503558', '12162829017', 91522), (False, '1103124', '46570587880', 91523), (False, '576610', '14104855884', 91524), (False, '1208874', '70166746198', 91525), (False, '808438', '27354683301', 91526), (False, '1440710', '102815540084', 91527), (False, '1157274', '60653584944', 91528), (False, '200', '2020', 91529), (False, '200', '2040', 91530), (False, '200', '2060', 91531), (False, '200', '2080', 91532), (False, '0', '3', 91533), (False, '30', '50', 91534), (False, '14', '23', 91535), (False, '57650', '160372597', 91536), (False, '0', '1', 91537), (False, '1999988', '199999600001', 91538), (False, '174', '1624', 91539), (False, '34', '75', 91540), (False, '460', '10952', 91541), (False, '0', '4', 91542), (False, '14', '15', 91543), (False, '4', '6', 91544), (False, '199988', '1999960001', 91545), (False, '60', '225', 91546), (True, '0', '0', 91547), (False, '330', '66', 91548), (False, '0', '2', 91549), (False, '4', '3', 91550), (False, '4388', '966605', 91551), (False, '1999994', '199999800000', 91552), (False, '1648028', '135304750879', 91553), (False, '24', '50', 91554), (False, '578108', '190004183', 91555), (False, '20', '28', 91556), (True, '8', '8', 91557), (False, '1593724', '122689636154', 91558), (True, '0', '0', 91559), (False, '90', '465', 91560), (False, '14', '26', 91561), (False, '0', '1', 91562), (False, '1070', '57993', 91563), (False, '440', '7896', 91564), (False, '20', '12', 91565), (True, '0', '0', 91566), (False, '0', '3', 91567), (False, '122214', '709707816', 91568), (False, '4', '8', 91569), (False, '4', '6', 91570), (False, '4', '8', 91571), (False, '16620', '10462520', 91572), (True, '4', '4', 91573), (False, '1070', '41542', 91574), (False, '0', '2', 91575)]",False,Wrong Answer,0.3452397779126381,0.6844919786096256,False,0.9453125
753991,27831107,"#n = int(input())
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
l = 8
h = 0
if s[1] == '1' or s[1] == '8':
    h = 1
    l -= 3
if s[0] == 'a' or s[0] == 'h':
    if h == 1:
        l -= 2
    else:
        l -= 3
print(l)",153,0,62,6/16/17 21:11,15,694,1,8,"[(True, '8', '8', 103282), (True, '3', '3', 103283), (True, '3', '3', 103284), (True, '5', '5', 103285), (True, '8', '8', 103286), (True, '5', '5', 103287), (True, '8', '8', 103288), (True, '8', '8', 103289), (True, '5', '5', 103290), (True, '5', '5', 103291), (True, '5', '5', 103292), (True, '5', '5', 103293), (True, '3', '3', 103294), (True, '5', '5', 103295), (True, '3', '3', 103296), (True, '8', '8', 103297), (True, '5', '5', 103298), (True, '5', '5', 103299), (True, '5', '5', 103300), (True, '5', '5', 103301), (True, '5', '5', 103302), (True, '5', '5', 103303), (True, '5', '5', 103304), (True, '5', '5', 103305)]",True,Accecpted,0.8756064465032128,0.9853479853479854,False,0.0
753990,27831098,"#n = int(input())
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
l = 8
h = 0
if s[0] == '1' or s[0] == '8':
    h = 1
    l -= 3
if s[1] == 'a' or s[1] == 'h':
    if h == 1:
        l -= 2
    else:
        l -= 3
print(l)",153,0,46,6/16/17 21:10,15,694,2,8,"[(True, '8', '8', 103282), (False, '8', '3', 103283), (False, '8', '3', 103284), (False, '8', '5', 103285), (True, '8', '8', 103286), (False, '8', '5', 103287), (True, '8', '8', 103288), (True, '8', '8', 103289), (False, '8', '5', 103290), (False, '8', '5', 103291), (False, '8', '5', 103292), (False, '8', '5', 103293), (False, '8', '3', 103294), (False, '8', '5', 103295), (False, '8', '3', 103296), (True, '8', '8', 103297), (False, '8', '5', 103298), (False, '8', '5', 103299), (False, '8', '5', 103300), (False, '8', '5', 103301), (False, '8', '5', 103302), (False, '8', '5', 103303), (False, '8', '5', 103304), (False, '8', '5', 103305)]",False,Wrong Answer,0.8756064465032128,0.9853479853479854,False,0.7916666666666666
780361,27867171,"#n = int(input())
n, m, l, r, k = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
x = max(n, l)
y = min(m, r)
l = y - x + 1
if x <= k and k <= y:
    l -= 1
print(max(0, l))",153,8,62,6/17/17 21:12,10,714,1,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (True, '1', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (True, '0', '0', 105701), (True, '999999997', '999999997', 105702), (True, '0', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (True, '81604391064', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (True, '0', '0', 105709), (True, '48172141432145241', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (True, '256787461333454149', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (True, '0', '0', 105715), (True, '0', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (True, '0', '0', 105719), (True, '5', '5', 105720), (True, '0', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (True, '1', '1', 105726), (True, '1', '1', 105727), (True, '0', '0', 105728), (True, '0', '0', 105729), (True, '0', '0', 105730), (True, '0', '0', 105731), (True, '0', '0', 105732), (True, '0', '0', 105733), (True, '0', '0', 105734), (True, '0', '0', 105735), (True, '0', '0', 105736), (True, '0', '0', 105737), (True, '0', '0', 105738), (True, '0', '0', 105739), (True, '0', '0', 105740), (True, '0', '0', 105741), (True, '0', '0', 105742), (True, '0', '0', 105743), (True, '0', '0', 105744), (True, '0', '0', 105745), (True, '0', '0', 105746), (True, '0', '0', 105747), (True, '0', '0', 105748), (True, '0', '0', 105749), (True, '0', '0', 105750), (True, '0', '0', 105751), (True, '0', '0', 105752), (True, '0', '0', 105753), (True, '0', '0', 105754), (True, '0', '0', 105755), (True, '0', '0', 105756), (True, '0', '0', 105757), (True, '0', '0', 105758), (True, '0', '0', 105759), (True, '0', '0', 105760), (True, '1', '1', 105761), (True, '0', '0', 105762), (True, '1', '1', 105763), (True, '0', '0', 105764), (True, '0', '0', 105765), (True, '0', '0', 105766), (True, '0', '0', 105767), (True, '0', '0', 105768), (True, '0', '0', 105769), (True, '0', '0', 105770), (True, '0', '0', 105771), (True, '0', '0', 105772), (True, '0', '0', 105773), (True, '0', '0', 105774), (True, '0', '0', 105775), (True, '0', '0', 105776), (True, '6', '6', 105777), (True, '0', '0', 105778), (True, '0', '0', 105779), (True, '0', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (True, '0', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (True, '4', '4', 105789)]",True,Accecpted,0.9130175707729784,0.9809523809523808,False,0.0
780360,27865908,"#n = int(input())
n, m, l, r, k = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
x = max(n, l)
y = min(m, r)
l = x - y + 1
if x <= k and k <= y:
    l -= 1
print(max(0, l))",153,0,46,6/17/17 20:37,10,714,2,8,"[(False, '0', '2', 105694), (False, '0', '50', 105695), (True, '1', '1', 105696), (False, '0', '999999999', 105697), (True, '0', '0', 105698), (False, '0', '99999999999999997', 105699), (True, '0', '0', 105700), (False, '2', '0', 105701), (False, '0', '999999997', 105702), (False, '11046655888171', '0', 105703), (False, '0', '27788438422925', 105704), (False, '0', '5076', 105705), (False, '0', '29117730788587', 105706), (False, '0', '81604391064', 105707), (False, '0', '47247500916780901', 105708), (False, '473238220625527127', '0', 105709), (False, '0', '48172141432145241', 105710), (False, '0', '99277597320376979', 105711), (False, '0', '256787461333454149', 105712), (False, '0', '37925278862451249', 105713), (True, '0', '0', 105714), (False, '4', '0', 105715), (False, '3', '0', 105716), (True, '1', '1', 105717), (False, '0', '1', 105718), (False, '8', '0', 105719), (False, '0', '5', 105720), (False, '6', '0', 105721), (True, '1', '1', 105722), (False, '0', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (False, '0', '1', 105726), (True, '1', '1', 105727), (False, '99', '0', 105728), (False, '3', '0', 105729), (False, '3', '0', 105730), (False, '5', '0', 105731), (False, '4', '0', 105732), (False, '4', '0', 105733), (False, '4', '0', 105734), (False, '3', '0', 105735), (False, '31', '0', 105736), (False, '4', '0', 105737), (False, '4', '0', 105738), (False, '4', '0', 105739), (False, '31', '0', 105740), (False, '4', '0', 105741), (False, '6', '0', 105742), (False, '99', '0', 105743), (False, '6', '0', 105744), (False, '6', '0', 105745), (False, '4', '0', 105746), (False, '3', '0', 105747), (False, '3', '0', 105748), (False, '5', '0', 105749), (False, '16', '0', 105750), (False, '11', '0', 105751), (False, '4', '0', 105752), (False, '4', '0', 105753), (False, '301', '0', 105754), (False, '4', '0', 105755), (False, '12', '0', 105756), (False, '101', '0', 105757), (False, '5', '0', 105758), (False, '3', '0', 105759), (False, '101', '0', 105760), (True, '1', '1', 105761), (False, '91', '0', 105762), (True, '1', '1', 105763), (False, '11', '0', 105764), (False, '4', '0', 105765), (False, '5', '0', 105766), (False, '6', '0', 105767), (False, '91', '0', 105768), (False, '99', '0', 105769), (False, '11', '0', 105770), (False, '6', '0', 105771), (False, '3', '0', 105772), (False, '3', '0', 105773), (False, '10', '0', 105774), (False, '4', '0', 105775), (False, '6', '0', 105776), (False, '0', '6', 105777), (False, '5', '0', 105778), (False, '3', '0', 105779), (False, '401', '0', 105780), (True, '1', '1', 105781), (False, '0', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (False, '3', '0', 105786), (False, '0', '2', 105787), (False, '0', '11', 105788), (False, '0', '4', 105789)]",False,Wrong Answer,0.9130175707729784,0.9809523809523808,False,0.84375
966395,26201318,"#n = int(input()) 
a = int(input()) 
b = int(input()) 
c = int(input()) 
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
l = min(a, b // 2, c // 4)
print(l * 7)",153,5440,62,4/7/17 21:25,9,888,1,8,"[(True, '7', '7', 118234), (True, '21', '21', 118235), (True, '0', '0', 118236), (True, '0', '0', 118237), (True, '7', '7', 118238), (True, '1750', '1750', 118239), (True, '0', '0', 118240), (True, '0', '0', 118241), (True, '7', '7', 118242), (True, '0', '0', 118243), (True, '7', '7', 118244), (True, '1750', '1750', 118245), (True, '7', '7', 118246), (True, '0', '0', 118247), (True, '21', '21', 118248), (True, '70', '70', 118249), (True, '693', '693', 118250), (True, '1400', '1400', 118251), (True, '1393', '1393', 118252), (True, '1400', '1400', 118253), (True, '1393', '1393', 118254), (True, '1400', '1400', 118255), (True, '1393', '1393', 118256), (True, '1400', '1400', 118257), (True, '882', '882', 118258), (True, '763', '763', 118259), (True, '903', '903', 118260), (True, '1127', '1127', 118261), (True, '273', '273', 118262), (True, '63', '63', 118263), (True, '959', '959', 118264), (True, '105', '105', 118265), (True, '1323', '1323', 118266), (True, '126', '126', 118267), (True, '1022', '1022', 118268), (True, '490', '490', 118269), (True, '1092', '1092', 118270), (True, '1176', '1176', 118271), (True, '322', '322', 118272), (True, '1218', '1218', 118273), (True, '1008', '1008', 118274), (True, '154', '154', 118275), (True, '980', '980', 118276), (True, '1218', '1218', 118277), (True, '1617', '1617', 118278), (True, '1057', '1057', 118279), (True, '616', '616', 118280), (True, '84', '84', 118281), (True, '1428', '1428', 118282), (True, '889', '889', 118283), (True, '1561', '1561', 118284), (True, '1015', '1015', 118285), (True, '574', '574', 118286), (True, '133', '133', 118287), (True, '1372', '1372', 118288), (True, '833', '833', 118289), (True, '1449', '1449', 118290), (True, '903', '903', 118291), (True, '462', '462', 118292), (True, '1708', '1708', 118293), (True, '1267', '1267', 118294), (True, '721', '721', 118295), (True, '7', '7', 118296), (True, '14', '14', 118297), (True, '7', '7', 118298), (True, '7', '7', 118299), (True, '7', '7', 118300), (True, '14', '14', 118301), (True, '7', '7', 118302), (True, '7', '7', 118303), (True, '14', '14', 118304), (True, '14', '14', 118305), (True, '7', '7', 118306), (True, '14', '14', 118307), (True, '7', '7', 118308), (True, '7', '7', 118309), (True, '7', '7', 118310), (True, '35', '35', 118311), (True, '0', '0', 118312), (True, '21', '21', 118313), (True, '14', '14', 118314), (True, '7', '7', 118315), (True, '0', '0', 118316), (True, '14', '14', 118317)]",True,Accecpted,0.8241390281987155,0.9665071770334928,False,0.0
966394,26201303,"#n = int(input()) 
a = int(input()) 
b = int(input()) 
c = int(input()) 
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
l = min(a, b // 2, c // 4)
print(l, l * 2, l * 4)",153,5436,46,4/7/17 21:24,9,888,2,8,"[(False, '1 2 4', '7', 118234), (False, '3 6 12', '21', 118235), (False, '0 0 0', '0', 118236), (False, '0 0 0', '0', 118237), (False, '1 2 4', '7', 118238), (False, '250 500 1000', '1750', 118239), (False, '0 0 0', '0', 118240), (False, '0 0 0', '0', 118241), (False, '1 2 4', '7', 118242), (False, '0 0 0', '0', 118243), (False, '1 2 4', '7', 118244), (False, '250 500 1000', '1750', 118245), (False, '1 2 4', '7', 118246), (False, '0 0 0', '0', 118247), (False, '3 6 12', '21', 118248), (False, '10 20 40', '70', 118249), (False, '99 198 396', '693', 118250), (False, '200 400 800', '1400', 118251), (False, '199 398 796', '1393', 118252), (False, '200 400 800', '1400', 118253), (False, '199 398 796', '1393', 118254), (False, '200 400 800', '1400', 118255), (False, '199 398 796', '1393', 118256), (False, '200 400 800', '1400', 118257), (False, '126 252 504', '882', 118258), (False, '109 218 436', '763', 118259), (False, '129 258 516', '903', 118260), (False, '161 322 644', '1127', 118261), (False, '39 78 156', '273', 118262), (False, '9 18 36', '63', 118263), (False, '137 274 548', '959', 118264), (False, '15 30 60', '105', 118265), (False, '189 378 756', '1323', 118266), (False, '18 36 72', '126', 118267), (False, '146 292 584', '1022', 118268), (False, '70 140 280', '490', 118269), (False, '156 312 624', '1092', 118270), (False, '168 336 672', '1176', 118271), (False, '46 92 184', '322', 118272), (False, '174 348 696', '1218', 118273), (False, '144 288 576', '1008', 118274), (False, '22 44 88', '154', 118275), (False, '140 280 560', '980', 118276), (False, '174 348 696', '1218', 118277), (False, '231 462 924', '1617', 118278), (False, '151 302 604', '1057', 118279), (False, '88 176 352', '616', 118280), (False, '12 24 48', '84', 118281), (False, '204 408 816', '1428', 118282), (False, '127 254 508', '889', 118283), (False, '223 446 892', '1561', 118284), (False, '145 290 580', '1015', 118285), (False, '82 164 328', '574', 118286), (False, '19 38 76', '133', 118287), (False, '196 392 784', '1372', 118288), (False, '119 238 476', '833', 118289), (False, '207 414 828', '1449', 118290), (False, '129 258 516', '903', 118291), (False, '66 132 264', '462', 118292), (False, '244 488 976', '1708', 118293), (False, '181 362 724', '1267', 118294), (False, '103 206 412', '721', 118295), (False, '1 2 4', '7', 118296), (False, '2 4 8', '14', 118297), (False, '1 2 4', '7', 118298), (False, '1 2 4', '7', 118299), (False, '1 2 4', '7', 118300), (False, '2 4 8', '14', 118301), (False, '1 2 4', '7', 118302), (False, '1 2 4', '7', 118303), (False, '2 4 8', '14', 118304), (False, '2 4 8', '14', 118305), (False, '1 2 4', '7', 118306), (False, '2 4 8', '14', 118307), (False, '1 2 4', '7', 118308), (False, '1 2 4', '7', 118309), (False, '1 2 4', '7', 118310), (False, '5 10 20', '35', 118311), (False, '0 0 0', '0', 118312), (False, '3 6 12', '21', 118313), (False, '2 4 8', '14', 118314), (False, '1 2 4', '7', 118315), (False, '0 0 0', '0', 118316), (False, '2 4 8', '14', 118317)]",False,Wrong Answer,0.8241390281987155,0.9665071770334928,False,1.0
1260290,24630464,"#n = int(input())
n, k, m = map(int, input().split()) 
#s = input()
#c = list(map(int, input().split()))
print(n - max(k + 1, n - m) + 1)",153,4512,122,2/13/17 18:06,5,1142,1,8,"[(True, '2', '2', 138318), (True, '3', '3', 138319), (True, '1', '1', 138320), (True, '1', '1', 138321), (True, '4', '4', 138322), (True, '7', '7', 138323), (True, '5', '5', 138324), (True, '6', '6', 138325), (True, '10', '10', 138326), (True, '7', '7', 138327), (True, '9', '9', 138328), (True, '15', '15', 138329), (True, '8', '8', 138330), (True, '2', '2', 138331), (True, '24', '24', 138332), (True, '5', '5', 138333), (True, '6', '6', 138334), (True, '16', '16', 138335), (True, '5', '5', 138336), (True, '12', '12', 138337), (True, '17', '17', 138338), (True, '38', '38', 138339), (True, '18', '18', 138340), (True, '38', '38', 138341), (True, '13', '13', 138342), (True, '8', '8', 138343), (True, '13', '13', 138344), (True, '1', '1', 138345), (True, '40', '40', 138346), (True, '53', '53', 138347), (True, '34', '34', 138348), (True, '23', '23', 138349), (True, '39', '39', 138350), (True, '38', '38', 138351), (True, '13', '13', 138352), (True, '36', '36', 138353), (True, '7', '7', 138354), (True, '21', '21', 138355), (True, '21', '21', 138356), (True, '2', '2', 138357), (True, '43', '43', 138358), (True, '9', '9', 138359), (True, '14', '14', 138360), (True, '23', '23', 138361), (True, '89', '89', 138362), (True, '32', '32', 138363), (True, '73', '73', 138364), (True, '89', '89', 138365), (True, '19', '19', 138366), (True, '1', '1', 138367)]",True,Accecpted,0.905766335288725,0.9929078014184396,False,0.0
1260289,24630455,"#n = int(input())
n, k, m = map(int, input().split()) 
#s = input()
#c = list(map(int, input().split()))
print(n - max(k + 1, n - b) + 1)",153,4500,92,2/13/17 18:06,5,1142,5,8,"[(False, '', '2', 138318), (False, '', '3', 138319), (False, '', '1', 138320), (False, '', '1', 138321), (False, '', '4', 138322), (False, '', '7', 138323), (False, '', '5', 138324), (False, '', '6', 138325), (False, '', '10', 138326), (False, '', '7', 138327), (False, '', '9', 138328), (False, '', '15', 138329), (False, '', '8', 138330), (False, '', '2', 138331), (False, '', '24', 138332), (False, '', '5', 138333), (False, '', '6', 138334), (False, '', '16', 138335), (False, '', '5', 138336), (False, '', '12', 138337), (False, '', '17', 138338), (False, '', '38', 138339), (False, '', '18', 138340), (False, '', '38', 138341), (False, '', '13', 138342), (False, '', '8', 138343), (False, '', '13', 138344), (False, '', '1', 138345), (False, '', '40', 138346), (False, '', '53', 138347), (False, '', '34', 138348), (False, '', '23', 138349), (False, '', '39', 138350), (False, '', '38', 138351), (False, '', '13', 138352), (False, '', '36', 138353), (False, '', '7', 138354), (False, '', '21', 138355), (False, '', '21', 138356), (False, '', '2', 138357), (False, '', '43', 138358), (False, '', '9', 138359), (False, '', '14', 138360), (False, '', '23', 138361), (False, '', '89', 138362), (False, '', '32', 138363), (False, '', '73', 138364), (False, '', '89', 138365), (False, '', '19', 138366), (False, '', '1', 138367)]",False,Runtime Error,0.905766335288725,0.9929078014184396,False,1.0
1425701,28567343,"n = int(input())
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
k = s[:n // 2].count('4') * 4 + s[:n // 2].count('7') * 7
l = s[n // 2:].count('4') * 4 + s[n // 2:].count('7') * 7
if (n % 2 == 0 and s.count('4') + s.count('7') == n and 
    k == l):
    print('YES')
else:
    print('NO')",153,5424,124,7/15/17 10:48,11,1267,1,8,"[(True, 'NO', 'NO', 147341), (True, 'NO', 'NO', 147342), (True, 'YES', 'YES', 147343), (True, 'NO', 'NO', 147344), (True, 'YES', 'YES', 147345), (True, 'YES', 'YES', 147346), (True, 'YES', 'YES', 147347), (True, 'YES', 'YES', 147348), (True, 'NO', 'NO', 147349), (True, 'NO', 'NO', 147350), (True, 'YES', 'YES', 147351), (True, 'NO', 'NO', 147352), (True, 'YES', 'YES', 147353), (True, 'NO', 'NO', 147354), (True, 'NO', 'NO', 147355), (True, 'NO', 'NO', 147356), (True, 'YES', 'YES', 147357), (True, 'YES', 'YES', 147358), (True, 'YES', 'YES', 147359), (True, 'YES', 'YES', 147360), (True, 'YES', 'YES', 147361), (True, 'YES', 'YES', 147362), (True, 'YES', 'YES', 147363), (True, 'YES', 'YES', 147364), (True, 'NO', 'NO', 147365), (True, 'NO', 'NO', 147366), (True, 'NO', 'NO', 147367), (True, 'NO', 'NO', 147368), (True, 'NO', 'NO', 147369), (True, 'NO', 'NO', 147370), (True, 'NO', 'NO', 147371), (True, 'NO', 'NO', 147372), (True, 'NO', 'NO', 147373), (True, 'NO', 'NO', 147374), (True, 'NO', 'NO', 147375), (True, 'NO', 'NO', 147376), (True, 'YES', 'YES', 147377), (True, 'NO', 'NO', 147378), (True, 'NO', 'NO', 147379), (True, 'NO', 'NO', 147380), (True, 'NO', 'NO', 147381), (True, 'NO', 'NO', 147382), (True, 'NO', 'NO', 147383), (True, 'NO', 'NO', 147384), (True, 'NO', 'NO', 147385), (True, 'NO', 'NO', 147386)]",True,Accecpted,0.4132637341933441,0.5714285714285714,False,0.0
1425700,28567228,"n = int(input())
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
if (n % 2 == 0 and s.count('4') + s.count('7') == n and 
    int(s[:n // 2]) == int(s[n // 2:])):
    print('YES')
else:
    print('NO')",153,4508,124,7/15/17 10:42,9,1267,2,8,"[(True, 'NO', 'NO', 147341), (True, 'NO', 'NO', 147342), (False, 'NO', 'YES', 147343), (True, 'NO', 'NO', 147344), (True, 'YES', 'YES', 147345), (True, 'YES', 'YES', 147346), (True, 'YES', 'YES', 147347), (True, 'YES', 'YES', 147348), (True, 'NO', 'NO', 147349), (True, 'NO', 'NO', 147350), (False, 'NO', 'YES', 147351), (True, 'NO', 'NO', 147352), (True, 'YES', 'YES', 147353), (True, 'NO', 'NO', 147354), (True, 'NO', 'NO', 147355), (True, 'NO', 'NO', 147356), (True, 'YES', 'YES', 147357), (False, 'NO', 'YES', 147358), (False, 'NO', 'YES', 147359), (False, 'NO', 'YES', 147360), (False, 'NO', 'YES', 147361), (False, 'NO', 'YES', 147362), (False, 'NO', 'YES', 147363), (False, 'NO', 'YES', 147364), (True, 'NO', 'NO', 147365), (True, 'NO', 'NO', 147366), (True, 'NO', 'NO', 147367), (True, 'NO', 'NO', 147368), (True, 'NO', 'NO', 147369), (True, 'NO', 'NO', 147370), (True, 'NO', 'NO', 147371), (True, 'NO', 'NO', 147372), (True, 'NO', 'NO', 147373), (True, 'NO', 'NO', 147374), (True, 'NO', 'NO', 147375), (True, 'NO', 'NO', 147376), (True, 'YES', 'YES', 147377), (True, 'NO', 'NO', 147378), (True, 'NO', 'NO', 147379), (True, 'NO', 'NO', 147380), (True, 'NO', 'NO', 147381), (True, 'NO', 'NO', 147382), (True, 'NO', 'NO', 147383), (True, 'NO', 'NO', 147384), (True, 'NO', 'NO', 147385), (True, 'NO', 'NO', 147386)]",False,Wrong Answer,0.4132637341933441,0.5714285714285714,False,0.1956521739130435
1431333,23685953,"b = [0] * 4
b[0] = int(input())
b[1] = int(input())
b[2]= int(input())
b[3] = int(input())
d = int(input())
if 1 in b:
    print(d)
else:
    l = 0
    for i in range(1, d + 1):
        for j in range(4):
            if i % b[j] == 0:
                l += 1
                break
    print(l)",153,4548,342,1/10/17 21:09,16,1274,1,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (True, '35246', '35246', 147728), (True, '75083', '75083', 147729), (True, '24656', '24656', 147730), (True, '36320', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (True, '21956', '21956', 147738), (True, '32736', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (True, '36019', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (True, '9224', '9224', 147750), (True, '43539', '43539', 147751), (True, '2438', '2438', 147752), (True, '415', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",True,Accecpted,0.8923575006167597,0.9760765550239234,False,0.0
1431332,23685906,"b = [0] * 4
b[0] = int(input())
b[1] = int(input())
b[2]= int(input())
b[3] = int(input())
d = int(input())
a = []
if 1 in b:
    print(d)
else:
    l = 0
    for i in range(1, d + 1):
        for j in range(4):
            if i % b[j] == 0:
                l += 1
                break
    print(len(a))",153,4524,92,1/10/17 21:06,17,1274,2,8,"[(True, '12', '12', 147720), (False, '0', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (False, '0', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (False, '0', '35246', 147728), (True, '75083', '75083', 147729), (False, '0', '24656', 147730), (False, '0', '36320', 147731), (False, '0', '28244', 147732), (False, '0', '16540', 147733), (False, '0', '36302', 147734), (False, '0', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (False, '0', '21956', 147738), (False, '0', '32736', 147739), (False, '0', '11118', 147740), (True, '49547', '49547', 147741), (False, '0', '36019', 147742), (True, '63537', '63537', 147743), (False, '0', '53678', 147744), (True, '99831', '99831', 147745), (False, '0', '20360', 147746), (False, '0', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (False, '0', '9224', 147750), (False, '0', '43539', 147751), (False, '0', '2438', 147752), (False, '0', '415', 147753), (False, '0', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",False,Wrong Answer,0.8923575006167597,0.9760765550239234,False,0.525
1867073,26116824,"#n = int(input())
n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
l = 0
x = n - m
for a in range(1000):
    for b in range(1000):
        if a**2 + b == n and b** 2 + a ==m:
            l += 1
print(l)",153,5436,1152,4/4/17 11:30,11,1681,1,8,"[(True, '1', '1', 168975), (True, '1', '1', 168976), (True, '0', '0', 168977), (True, '1', '1', 168978), (True, '1', '1', 168979), (True, '1', '1', 168980), (True, '0', '0', 168981), (True, '0', '0', 168982), (True, '0', '0', 168983), (True, '0', '0', 168984), (True, '1', '1', 168985), (True, '2', '2', 168986), (True, '1', '1', 168987), (True, '1', '1', 168988), (True, '1', '1', 168989), (True, '1', '1', 168990), (True, '1', '1', 168991), (True, '1', '1', 168992), (True, '1', '1', 168993), (True, '1', '1', 168994), (True, '1', '1', 168995), (True, '1', '1', 168996), (True, '1', '1', 168997), (True, '1', '1', 168998), (True, '1', '1', 168999), (True, '1', '1', 169000), (True, '1', '1', 169001), (True, '1', '1', 169002), (True, '1', '1', 169003), (True, '1', '1', 169004), (True, '1', '1', 169005), (True, '1', '1', 169006), (True, '0', '0', 169007), (True, '0', '0', 169008), (True, '0', '0', 169009), (True, '0', '0', 169010), (True, '0', '0', 169011), (True, '0', '0', 169012), (True, '0', '0', 169013), (True, '0', '0', 169014), (True, '0', '0', 169015), (True, '0', '0', 169016), (True, '0', '0', 169017), (True, '0', '0', 169018), (True, '1', '1', 169019), (True, '0', '0', 169020), (True, '1', '1', 169021), (True, '0', '0', 169022), (True, '0', '0', 169023), (True, '0', '0', 169024), (True, '0', '0', 169025), (True, '0', '0', 169026), (True, '0', '0', 169027), (True, '0', '0', 169028)]",True,Accecpted,0.6153995350989815,0.7541666666666667,False,0.0
1867068,26116567,"#n = int(input())
n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
l = 0
for a in range(1000):
    for b in range(1000):
        if (a - b) * (a + b - 1) == n - m:
            l += 1
print(l)",153,4460,778,4/4/17 11:17,10,1681,2,8,"[(False, '3', '1', 168975), (False, '2', '1', 168976), (False, '1', '0', 168977), (False, '6', '1', 168978), (False, '2', '1', 168979), (False, '4', '1', 168980), (False, '1', '0', 168981), (False, '3', '0', 168982), (False, '3', '0', 168983), (True, '0', '0', 168984), (False, '8', '1', 168985), (False, '1002', '2', 168986), (False, '4', '1', 168987), (False, '2', '1', 168988), (False, '4', '1', 168989), (False, '6', '1', 168990), (False, '6', '1', 168991), (False, '12', '1', 168992), (False, '2', '1', 168993), (False, '8', '1', 168994), (False, '9', '1', 168995), (False, '5', '1', 168996), (False, '4', '1', 168997), (False, '3', '1', 168998), (False, '6', '1', 168999), (False, '6', '1', 169000), (False, '2', '1', 169001), (False, '12', '1', 169002), (False, '4', '1', 169003), (False, '4', '1', 169004), (False, '8', '1', 169005), (False, '4', '1', 169006), (False, '4', '0', 169007), (True, '0', '0', 169008), (False, '6', '0', 169009), (False, '4', '0', 169010), (True, '0', '0', 169011), (True, '0', '0', 169012), (True, '0', '0', 169013), (True, '0', '0', 169014), (False, '2', '0', 169015), (False, '1002', '0', 169016), (False, '1002', '0', 169017), (False, '2', '0', 169018), (False, '1002', '1', 169019), (False, '2', '0', 169020), (False, '1002', '1', 169021), (False, '2', '0', 169022), (False, '2', '0', 169023), (False, '1002', '0', 169024), (False, '1', '0', 169025), (False, '2', '0', 169026), (False, '1002', '0', 169027), (False, '8', '0', 169028)]",False,Wrong Answer,0.6153995350989815,0.7541666666666667,False,0.8888888888888888
2012562,27867716,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
if n % 2 == 1:
    print(-1)
else:
    a = list(range(1, n + 1))
    for i in range(0, n, 2):
        a[i], a[i + 1] = a[i + 1], a[i]
    print(*a)",153,0,124,6/17/17 21:24,11,1787,1,8,"[(True, '-1', '-1', 176708), (True, '2 1', '2 1', 176709), (True, '2 1 4 3', '2 1 4 3', 176710), (True, '-1', '-1', 176711), (True, '-1', '-1', 176712), (True, '2 1 4 3 6 5', '2 1 4 3 6 5', 176713), (True, '-1', '-1', 176714), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19', 176715), (True, '2 1 4 3 6 5 8 7', '2 1 4 3 6 5 8 7', 176716), (True, '-1', '-1', 176717), (True, '2 1 4 3 6 5 8 7 10 9', '2 1 4 3 6 5 8 7 10 9', 176718), (True, '-1', '-1', 176719), (True, '-1', '-1', 176720), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49', 176721), (True, '-1', '-1', 176722), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51', 176723), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83', 176724), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85', 176725), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95 98 97 100 99', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95 98 97 100 99', 176726), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95 98 97', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95 98 97', 176727), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95', 176728), (True, '-1', '-1', 176729), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33', 176730), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35', 176731), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37', 176732), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39', 176733), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41', 176734), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43', 176735), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45', 176736), (True, '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47', 176737)]",True,Accecpted,0.9769961126936092,0.98989898989899,False,0.0
2012561,27867705,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
if n % 2 == 1:
    print(-1)
else:
    a = list(range(1, n + 1))
    for i in range(0, n, 2):
        a[i], a[i + 1] = a[i + 1], a[i]
    print(a)",153,0,92,6/17/17 21:23,11,1787,2,8,"[(True, '-1', '-1', 176708), (False, '[2, 1]', '2 1', 176709), (False, '[2, 1, 4, 3]', '2 1 4 3', 176710), (True, '-1', '-1', 176711), (True, '-1', '-1', 176712), (False, '[2, 1, 4, 3, 6, 5]', '2 1 4 3 6 5', 176713), (True, '-1', '-1', 176714), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19', 176715), (False, '[2, 1, 4, 3, 6, 5, 8, 7]', '2 1 4 3 6 5 8 7', 176716), (True, '-1', '-1', 176717), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9]', '2 1 4 3 6 5 8 7 10 9', 176718), (True, '-1', '-1', 176719), (True, '-1', '-1', 176720), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49', 176721), (True, '-1', '-1', 176722), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51', 176723), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51, 54, 53, 56, 55, 58, 57, 60, 59, 62, 61, 64, 63, 66, 65, 68, 67, 70, 69, 72, 71, 74, 73, 76, 75, 78, 77, 80, 79, 82, 81, 84, 83]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83', 176724), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51, 54, 53, 56, 55, 58, 57, 60, 59, 62, 61, 64, 63, 66, 65, 68, 67, 70, 69, 72, 71, 74, 73, 76, 75, 78, 77, 80, 79, 82, 81, 84, 83, 86, 85]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85', 176725), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51, 54, 53, 56, 55, 58, 57, 60, 59, 62, 61, 64, 63, 66, 65, 68, 67, 70, 69, 72, 71, 74, 73, 76, 75, 78, 77, 80, 79, 82, 81, 84, 83, 86, 85, 88, 87, 90, 89, 92, 91, 94, 93, 96, 95, 98, 97, 100, 99]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95 98 97 100 99', 176726), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51, 54, 53, 56, 55, 58, 57, 60, 59, 62, 61, 64, 63, 66, 65, 68, 67, 70, 69, 72, 71, 74, 73, 76, 75, 78, 77, 80, 79, 82, 81, 84, 83, 86, 85, 88, 87, 90, 89, 92, 91, 94, 93, 96, 95, 98, 97]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95 98 97', 176727), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51, 54, 53, 56, 55, 58, 57, 60, 59, 62, 61, 64, 63, 66, 65, 68, 67, 70, 69, 72, 71, 74, 73, 76, 75, 78, 77, 80, 79, 82, 81, 84, 83, 86, 85, 88, 87, 90, 89, 92, 91, 94, 93, 96, 95]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95', 176728), (True, '-1', '-1', 176729), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33', 176730), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35', 176731), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37', 176732), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39', 176733), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41', 176734), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43', 176735), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45', 176736), (False, '[2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47]', '2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47', 176737)]",False,Wrong Answer,0.9769961126936092,0.98989898989899,False,0.7
2262042,24016868,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
l = 0
for i in range(1,n):
    l += i * (n - i)
print(l + n)",153,4504,154,1/21/17 20:52,8,1983,1,8,"[(True, '3', '3', 189204), (True, '7', '7', 189205), (True, '14', '14', 189206), (True, '1', '1', 189207), (True, '175', '175', 189208), (True, '1333335000', '1333335000', 189209), (True, '888644743', '888644743', 189210), (True, '117099969', '117099969', 189211), (True, '1331335999', '1331335999', 189212), (True, '127259419', '127259419', 189213), (True, '164675486', '164675486', 189214), (True, '833', '833', 189215), (True, '20875', '20875', 189216), (True, '125671', '125671', 189217), (True, '129858', '129858', 189218), (True, '2796416', '2796416', 189219), (True, '22370048', '22370048', 189220), (True, '49235271', '49235271', 189221), (True, '49457383', '49457383', 189222), (True, '5160119', '5160119', 189223), (True, '318541121', '318541121', 189224), (True, '562501250', '562501250', 189225), (True, '1033182073', '1033182073', 189226), (True, '166667500', '166667500', 189227)]",True,Accecpted,0.4125460601637692,0.7903780068728522,False,0.0
2262031,24010714,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
print(n*n - n + 1)",153,4500,124,1/21/17 15:15,5,1983,2,8,"[(True, '3', '3', 189204), (True, '7', '7', 189205), (False, '13', '14', 189206), (True, '1', '1', 189207), (False, '91', '175', 189208), (False, '3998001', '1333335000', 189209), (False, '3050263', '888644743', 189210), (False, '789433', '117099969', 189211), (False, '3994003', '1331335999', 189212), (False, '834483', '127259419', 189213), (False, '991021', '164675486', 189214), (False, '273', '833', 189215), (False, '2451', '20875', 189216), (False, '8191', '125671', 189217), (False, '8373', '129858', 189218), (False, '65281', '2796416', 189219), (False, '261633', '22370048', 189220), (False, '442891', '49235271', 189221), (False, '444223', '49457383', 189222), (False, '98283', '5160119', 189223), (False, '1538841', '318541121', 189224), (False, '2248501', '562501250', 189225), (False, '3372733', '1033182073', 189226), (False, '999001', '166667500', 189227)]",False,Wrong Answer,0.4125460601637692,0.7903780068728522,False,0.875
2957541,27984110,"#n = int(input())
n, m = map(int, input().split())
#s = input() 
#c = list(map(int, input().split()))
x = str(max(n, m))
if x == '1':
    print('1/1')
elif x == '2':
    print('5/6')
elif x == '3':
    print('2/3')
elif x == '4':
    print('1/2')
elif x == '5':
    print('1/3')
else:
    print('1/6')",153,5416,124,6/23/17 14:58,17,2520,1,8,"[(True, '1/2', '1/2', 218095), (True, '1/1', '1/1', 218096), (True, '5/6', '5/6', 218097), (True, '2/3', '2/3', 218098), (True, '1/2', '1/2', 218099), (True, '1/3', '1/3', 218100), (True, '1/6', '1/6', 218101), (True, '5/6', '5/6', 218102), (True, '5/6', '5/6', 218103), (True, '2/3', '2/3', 218104), (True, '1/2', '1/2', 218105), (True, '1/3', '1/3', 218106), (True, '1/6', '1/6', 218107), (True, '2/3', '2/3', 218108), (True, '2/3', '2/3', 218109), (True, '2/3', '2/3', 218110), (True, '1/2', '1/2', 218111), (True, '1/3', '1/3', 218112), (True, '1/6', '1/6', 218113), (True, '1/2', '1/2', 218114), (True, '1/2', '1/2', 218115), (True, '1/2', '1/2', 218116), (True, '1/3', '1/3', 218117), (True, '1/6', '1/6', 218118), (True, '1/3', '1/3', 218119), (True, '1/3', '1/3', 218120), (True, '1/3', '1/3', 218121), (True, '1/3', '1/3', 218122), (True, '1/3', '1/3', 218123), (True, '1/6', '1/6', 218124), (True, '1/6', '1/6', 218125), (True, '1/6', '1/6', 218126), (True, '1/6', '1/6', 218127), (True, '1/6', '1/6', 218128), (True, '1/6', '1/6', 218129), (True, '1/6', '1/6', 218130)]",True,Accecpted,0.7785009120482579,0.6046511627906976,False,0.0
2957540,27984087,"#n = int(input())
n, m = map(int, input().split())
#s = input() 
#c = list(map(int, input().split()))
x = str(max(n, m))
if x == '1':
    print('5/6')
elif x == '2':
    print('1/3')
elif x == '3':
    print('1/2')
elif x == '4':
    print('2/3')
elif x == '5':
    print('5/6')
else:
    print('1/1')",153,4460,124,6/23/17 14:57,17,2520,2,8,"[(False, '2/3', '1/2', 218095), (False, '5/6', '1/1', 218096), (False, '1/3', '5/6', 218097), (False, '1/2', '2/3', 218098), (False, '2/3', '1/2', 218099), (False, '5/6', '1/3', 218100), (False, '1/1', '1/6', 218101), (False, '1/3', '5/6', 218102), (False, '1/3', '5/6', 218103), (False, '1/2', '2/3', 218104), (False, '2/3', '1/2', 218105), (False, '5/6', '1/3', 218106), (False, '1/1', '1/6', 218107), (False, '1/2', '2/3', 218108), (False, '1/2', '2/3', 218109), (False, '1/2', '2/3', 218110), (False, '2/3', '1/2', 218111), (False, '5/6', '1/3', 218112), (False, '1/1', '1/6', 218113), (False, '2/3', '1/2', 218114), (False, '2/3', '1/2', 218115), (False, '2/3', '1/2', 218116), (False, '5/6', '1/3', 218117), (False, '1/1', '1/6', 218118), (False, '5/6', '1/3', 218119), (False, '5/6', '1/3', 218120), (False, '5/6', '1/3', 218121), (False, '5/6', '1/3', 218122), (False, '5/6', '1/3', 218123), (False, '1/1', '1/6', 218124), (False, '1/1', '1/6', 218125), (False, '1/1', '1/6', 218126), (False, '1/1', '1/6', 218127), (False, '1/1', '1/6', 218128), (False, '1/1', '1/6', 218129), (False, '1/1', '1/6', 218130)]",False,Wrong Answer,0.7785009120482579,0.6046511627906976,False,1.0
2978872,28568121,"#n = int(input())
n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
i = 1
while i <= m:
    m -= i
    i += 1
    if i > n:
        i = 1
print(m)",153,5412,124,7/15/17 11:26,11,2535,1,8,"[(True, '0', '0', 218695), (True, '2', '2', 218696), (True, '1', '1', 218697), (True, '35', '35', 218698), (True, '0', '0', 218699), (True, '14', '14', 218700), (True, '11', '11', 218701), (True, '5', '5', 218702), (True, '0', '0', 218703), (True, '26', '26', 218704), (True, '14', '14', 218705), (True, '5', '5', 218706), (True, '20', '20', 218707), (True, '12', '12', 218708), (True, '11', '11', 218709), (True, '0', '0', 218710), (True, '2', '2', 218711), (True, '4', '4', 218712), (True, '9', '9', 218713), (True, '12', '12', 218714), (True, '0', '0', 218715), (True, '40', '40', 218716), (True, '0', '0', 218717), (True, '0', '0', 218718), (True, '5', '5', 218719)]",True,Accecpted,0.7039053420781118,0.8823529411764706,False,0.0
2978871,28568029,"#n = int(input())
n, m = map(int, input().split())
#s = input()
c = list(map(int, input().split()))
i = 1
while i <= n and i <= m:
    m -= i
    i += 1
print(m)",153,4520,122,7/15/17 11:21,9,2535,5,8,"[(False, '', '0', 218695), (False, '', '2', 218696), (False, '', '1', 218697), (False, '', '35', 218698), (False, '', '0', 218699), (False, '', '14', 218700), (False, '', '11', 218701), (False, '', '5', 218702), (False, '', '0', 218703), (False, '', '26', 218704), (False, '', '14', 218705), (False, '', '5', 218706), (False, '', '20', 218707), (False, '', '12', 218708), (False, '', '11', 218709), (False, '', '0', 218710), (False, '', '2', 218711), (False, '', '4', 218712), (False, '', '9', 218713), (False, '', '12', 218714), (False, '', '0', 218715), (False, '', '40', 218716), (False, '', '0', 218717), (False, '', '0', 218718), (False, '', '5', 218719)]",False,Runtime Error,0.7039053420781118,0.8823529411764706,False,1.0
3132296,26221293,"n = int(input()) 
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
a = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']
b = [1, 0, 0, 0, 1, 0, 1, 0, 2, 1, 1, 2, 0, 1, 0, 0]
s = hex(n)
l = 0
for i in range(2, len(s)):
    l += b[a.index(s[i])]
print(l)",153,5436,61,4/8/17 17:33,11,2682,1,8,"[(True, '2', '2', 226760), (True, '0', '0', 226761), (True, '2', '2', 226762), (True, '10', '10', 226763), (True, '3', '3', 226764), (True, '1', '1', 226765), (True, '4', '4', 226766), (True, '14', '14', 226767), (True, '2', '2', 226768), (True, '3', '3', 226769), (True, '5', '5', 226770), (True, '5', '5', 226771), (True, '3', '3', 226772), (True, '5', '5', 226773), (True, '8', '8', 226774), (True, '5', '5', 226775), (True, '3', '3', 226776), (True, '4', '4', 226777), (True, '2', '2', 226778), (True, '5', '5', 226779), (True, '4', '4', 226780), (True, '4', '4', 226781), (True, '4', '4', 226782), (True, '5', '5', 226783), (True, '6', '6', 226784), (True, '3', '3', 226785), (True, '3', '3', 226786), (True, '4', '4', 226787), (True, '4', '4', 226788), (True, '4', '4', 226789)]",True,Accecpted,0.787762631864219,0.9146341463414634,False,0.0
3132295,26221232,"#n = int(input()) 
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
a = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']
b = [1, 0, 0, 0, 1, 0, 1, 0, 2, 1, 1, 2, 0, 1, 0, 0]
s = hex(s)
l = 0
for i in range(2, len(s)):
    l += b[a.index(s[i])]
print(l)",153,4500,30,4/8/17 17:29,11,2682,5,8,"[(False, '', '2', 226760), (False, '', '0', 226761), (False, '', '2', 226762), (False, '', '10', 226763), (False, '', '3', 226764), (False, '', '1', 226765), (False, '', '4', 226766), (False, '', '14', 226767), (False, '', '2', 226768), (False, '', '3', 226769), (False, '', '5', 226770), (False, '', '5', 226771), (False, '', '3', 226772), (False, '', '5', 226773), (False, '', '8', 226774), (False, '', '5', 226775), (False, '', '3', 226776), (False, '', '4', 226777), (False, '', '2', 226778), (False, '', '5', 226779), (False, '', '4', 226780), (False, '', '4', 226781), (False, '', '4', 226782), (False, '', '5', 226783), (False, '', '6', 226784), (False, '', '3', 226785), (False, '', '3', 226786), (False, '', '4', 226787), (False, '', '4', 226788), (False, '', '4', 226789)]",False,Runtime Error,0.787762631864219,0.9146341463414634,False,1.0
3216335,27832882,"#n = int(input())
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
n = len(s)
l = 0
for i in range(n):
    if s[i] != s[n - 1 - i]:
        l += 1
if l == 2 or l == 0 and n % 2 == 1:
    print('YES')
else:
    print('NO')",153,12,62,6/16/17 23:19,13,2766,1,8,"[(True, 'YES', 'YES', 234169), (True, 'NO', 'NO', 234170), (True, 'YES', 'YES', 234171), (True, 'YES', 'YES', 234172), (True, 'NO', 'NO', 234173), (True, 'YES', 'YES', 234174), (True, 'NO', 'NO', 234175), (True, 'YES', 'YES', 234176), (True, 'YES', 'YES', 234177), (True, 'NO', 'NO', 234178), (True, 'NO', 'NO', 234179), (True, 'YES', 'YES', 234180), (True, 'NO', 'NO', 234181), (True, 'YES', 'YES', 234182), (True, 'YES', 'YES', 234183), (True, 'NO', 'NO', 234184), (True, 'NO', 'NO', 234185), (True, 'YES', 'YES', 234186), (True, 'NO', 'NO', 234187), (True, 'YES', 'YES', 234188), (True, 'YES', 'YES', 234189), (True, 'NO', 'NO', 234190), (True, 'YES', 'YES', 234191), (True, 'NO', 'NO', 234192), (True, 'YES', 'YES', 234193), (True, 'NO', 'NO', 234194), (True, 'YES', 'YES', 234195), (True, 'YES', 'YES', 234196), (True, 'NO', 'NO', 234197), (True, 'NO', 'NO', 234198), (True, 'YES', 'YES', 234199), (True, 'NO', 'NO', 234200), (True, 'YES', 'YES', 234201), (True, 'YES', 'YES', 234202), (True, 'NO', 'NO', 234203), (True, 'NO', 'NO', 234204), (True, 'YES', 'YES', 234205), (True, 'NO', 'NO', 234206), (True, 'YES', 'YES', 234207), (True, 'YES', 'YES', 234208), (True, 'NO', 'NO', 234209), (True, 'NO', 'NO', 234210), (True, 'YES', 'YES', 234211), (True, 'YES', 'YES', 234212), (True, 'NO', 'NO', 234213), (True, 'NO', 'NO', 234214), (True, 'NO', 'NO', 234215), (True, 'NO', 'NO', 234216), (True, 'NO', 'NO', 234217), (True, 'NO', 'NO', 234218), (True, 'NO', 'NO', 234219), (True, 'NO', 'NO', 234220), (True, 'YES', 'YES', 234221), (True, 'NO', 'NO', 234222), (True, 'NO', 'NO', 234223), (True, 'NO', 'NO', 234224), (True, 'NO', 'NO', 234225), (True, 'YES', 'YES', 234226), (True, 'NO', 'NO', 234227), (True, 'NO', 'NO', 234228), (True, 'NO', 'NO', 234229), (True, 'NO', 'NO', 234230), (True, 'NO', 'NO', 234231), (True, 'NO', 'NO', 234232), (True, 'NO', 'NO', 234233), (True, 'NO', 'NO', 234234), (True, 'YES', 'YES', 234235), (True, 'NO', 'NO', 234236), (True, 'NO', 'NO', 234237), (True, 'NO', 'NO', 234238), (True, 'NO', 'NO', 234239), (True, 'NO', 'NO', 234240), (True, 'NO', 'NO', 234241), (True, 'YES', 'YES', 234242), (True, 'YES', 'YES', 234243), (True, 'NO', 'NO', 234244), (True, 'NO', 'NO', 234245), (True, 'NO', 'NO', 234246), (True, 'NO', 'NO', 234247), (True, 'NO', 'NO', 234248), (True, 'YES', 'YES', 234249), (True, 'NO', 'NO', 234250), (True, 'NO', 'NO', 234251), (True, 'NO', 'NO', 234252), (True, 'NO', 'NO', 234253), (True, 'NO', 'NO', 234254), (True, 'YES', 'YES', 234255), (True, 'NO', 'NO', 234256), (True, 'NO', 'NO', 234257), (True, 'NO', 'NO', 234258), (True, 'NO', 'NO', 234259), (True, 'NO', 'NO', 234260), (True, 'NO', 'NO', 234261), (True, 'NO', 'NO', 234262), (True, 'NO', 'NO', 234263), (True, 'NO', 'NO', 234264), (True, 'YES', 'YES', 234265), (True, 'NO', 'NO', 234266), (True, 'NO', 'NO', 234267)]",True,Accecpted,0.7103132504633896,0.8526522593320236,False,0.0
3216334,27832860,"#n = int(input())
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
n = len(s)
l = 0
for i in range(n):
    if s[i] != s[n - 1 - i]:
        l += 1
if l != 2:
    print('NO')
else:
    print('YES')",153,0,62,6/16/17 23:18,13,2766,2,8,"[(True, 'YES', 'YES', 234169), (True, 'NO', 'NO', 234170), (True, 'YES', 'YES', 234171), (True, 'YES', 'YES', 234172), (True, 'NO', 'NO', 234173), (True, 'YES', 'YES', 234174), (True, 'NO', 'NO', 234175), (False, 'NO', 'YES', 234176), (True, 'YES', 'YES', 234177), (True, 'NO', 'NO', 234178), (True, 'NO', 'NO', 234179), (True, 'YES', 'YES', 234180), (True, 'NO', 'NO', 234181), (False, 'NO', 'YES', 234182), (True, 'YES', 'YES', 234183), (True, 'NO', 'NO', 234184), (True, 'NO', 'NO', 234185), (True, 'YES', 'YES', 234186), (True, 'NO', 'NO', 234187), (False, 'NO', 'YES', 234188), (True, 'YES', 'YES', 234189), (True, 'NO', 'NO', 234190), (False, 'NO', 'YES', 234191), (True, 'NO', 'NO', 234192), (True, 'YES', 'YES', 234193), (True, 'NO', 'NO', 234194), (False, 'NO', 'YES', 234195), (True, 'YES', 'YES', 234196), (True, 'NO', 'NO', 234197), (True, 'NO', 'NO', 234198), (True, 'YES', 'YES', 234199), (True, 'NO', 'NO', 234200), (False, 'NO', 'YES', 234201), (True, 'YES', 'YES', 234202), (True, 'NO', 'NO', 234203), (True, 'NO', 'NO', 234204), (True, 'YES', 'YES', 234205), (True, 'NO', 'NO', 234206), (False, 'NO', 'YES', 234207), (True, 'YES', 'YES', 234208), (True, 'NO', 'NO', 234209), (True, 'NO', 'NO', 234210), (True, 'YES', 'YES', 234211), (False, 'NO', 'YES', 234212), (True, 'NO', 'NO', 234213), (True, 'NO', 'NO', 234214), (True, 'NO', 'NO', 234215), (True, 'NO', 'NO', 234216), (True, 'NO', 'NO', 234217), (True, 'NO', 'NO', 234218), (True, 'NO', 'NO', 234219), (True, 'NO', 'NO', 234220), (False, 'NO', 'YES', 234221), (True, 'NO', 'NO', 234222), (True, 'NO', 'NO', 234223), (True, 'NO', 'NO', 234224), (True, 'NO', 'NO', 234225), (True, 'YES', 'YES', 234226), (True, 'NO', 'NO', 234227), (True, 'NO', 'NO', 234228), (True, 'NO', 'NO', 234229), (True, 'NO', 'NO', 234230), (True, 'NO', 'NO', 234231), (True, 'NO', 'NO', 234232), (True, 'NO', 'NO', 234233), (True, 'NO', 'NO', 234234), (False, 'NO', 'YES', 234235), (True, 'NO', 'NO', 234236), (True, 'NO', 'NO', 234237), (True, 'NO', 'NO', 234238), (True, 'NO', 'NO', 234239), (True, 'NO', 'NO', 234240), (True, 'NO', 'NO', 234241), (False, 'NO', 'YES', 234242), (False, 'NO', 'YES', 234243), (True, 'NO', 'NO', 234244), (True, 'NO', 'NO', 234245), (True, 'NO', 'NO', 234246), (True, 'NO', 'NO', 234247), (True, 'NO', 'NO', 234248), (False, 'NO', 'YES', 234249), (True, 'NO', 'NO', 234250), (True, 'NO', 'NO', 234251), (True, 'NO', 'NO', 234252), (True, 'NO', 'NO', 234253), (True, 'NO', 'NO', 234254), (False, 'NO', 'YES', 234255), (True, 'NO', 'NO', 234256), (True, 'NO', 'NO', 234257), (True, 'NO', 'NO', 234258), (True, 'NO', 'NO', 234259), (True, 'NO', 'NO', 234260), (True, 'NO', 'NO', 234261), (True, 'NO', 'NO', 234262), (True, 'NO', 'NO', 234263), (True, 'NO', 'NO', 234264), (False, 'NO', 'YES', 234265), (True, 'NO', 'NO', 234266), (True, 'NO', 'NO', 234267)]",False,Wrong Answer,0.7103132504633896,0.8526522593320236,False,0.1515151515151515
3260425,28545162,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
a = 'aabb'
s = ''
for i in range(n):
    s += a[i % 4]
print(s)",153,5416,124,7/14/17 13:13,9,2818,1,8,"[(True, 'aa', 'aa', 238078), (True, 'aab', 'aab', 238079), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 238080), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238081), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238082), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238083), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238084), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238085), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 238086), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238087), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238088), (True, 'a', 'a', 238089), (True, 'aabbaa', 'aabbaa', 238118), (True, 'aabb', 'aabb', 238119)]",True,Accecpted,0.9127592114472296,0.994186046511628,False,0.0
3260424,28545071,"n = int(input())
#n, m = map(int, input().split())
#s = input()
#c = list(map(int, input().split()))
a = 'aabc'
s = ''
for i in range(n):
    s += a[i % 4]
print(s)",153,4508,61,7/14/17 13:08,9,2818,2,8,"[(True, 'aa', 'aa', 238078), (True, 'aab', 'aab', 238079), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaa', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 238080), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238081), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238082), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238083), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabca', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238084), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabca', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238085), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaa', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 238086), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabca', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238087), (False, 'aabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabcaabca', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238088), (True, 'a', 'a', 238089), (False, 'aabcaa', 'aabbaa', 238118), (False, 'aabc', 'aabb', 238119)]",False,Wrong Answer,0.9127592114472296,0.994186046511628,False,0.7857142857142857
3403205,29138575,"#n = int(input())
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
n = int(input())
a = ['v', '<', '^', '>']
k = n % 4
if k % 2 == 0:
    print('undefined')
elif (a.index(s[2]) - a.index(s[0]) ) % 4 == k:
    print('cw')
else:
    print('ccw')",153,4520,62,8/2/17 22:19,13,2965,1,8,"[(True, 'cw', 'cw', 248929), (True, 'ccw', 'ccw', 248930), (True, 'undefined', 'undefined', 248931), (True, 'ccw', 'ccw', 248932), (True, 'cw', 'cw', 248933), (True, 'cw', 'cw', 248934), (True, 'cw', 'cw', 248935), (True, 'cw', 'cw', 248936), (True, 'ccw', 'ccw', 248937), (True, 'undefined', 'undefined', 248938), (True, 'undefined', 'undefined', 248939), (True, 'undefined', 'undefined', 248940), (True, 'undefined', 'undefined', 248941), (True, 'undefined', 'undefined', 248942), (True, 'undefined', 'undefined', 248943), (True, 'undefined', 'undefined', 248944), (True, 'ccw', 'ccw', 248945), (True, 'ccw', 'ccw', 248946), (True, 'ccw', 'ccw', 248947), (True, 'ccw', 'ccw', 248948), (True, 'cw', 'cw', 248949), (True, 'undefined', 'undefined', 248950), (True, 'undefined', 'undefined', 248951), (True, 'cw', 'cw', 248952), (True, 'cw', 'cw', 248953), (True, 'ccw', 'ccw', 248954), (True, 'ccw', 'ccw', 248955), (True, 'ccw', 'ccw', 248956), (True, 'undefined', 'undefined', 248957), (True, 'ccw', 'ccw', 248958), (True, 'undefined', 'undefined', 248959), (True, 'undefined', 'undefined', 248960), (True, 'undefined', 'undefined', 248961), (True, 'undefined', 'undefined', 248962), (True, 'undefined', 'undefined', 248963), (True, 'cw', 'cw', 248964), (True, 'undefined', 'undefined', 248965), (True, 'undefined', 'undefined', 248966), (True, 'cw', 'cw', 248967), (True, 'cw', 'cw', 248968), (True, 'cw', 'cw', 248969), (True, 'undefined', 'undefined', 248970), (True, 'cw', 'cw', 248971), (True, 'undefined', 'undefined', 248972), (True, 'undefined', 'undefined', 248973), (True, 'ccw', 'ccw', 248974), (True, 'undefined', 'undefined', 248975)]",True,Accecpted,0.7024179012996598,0.950877192982456,False,0.0
3403202,29138465,"#n = int(input())
#n, m = map(int, input().split())
s = input()
#c = list(map(int, input().split()))
n = int(input())
a = ['v', '<', '^', '>']
k = n % 4
if k == 2:
    print('undefined')
elif 4 - a.index(s[2]) + a.index(s[0]) > 0:
    print('cw')
else:
    print('ccw')",153,4516,46,8/2/17 22:12,13,2965,2,8,"[(True, 'cw', 'cw', 248929), (False, 'cw', 'ccw', 248930), (True, 'undefined', 'undefined', 248931), (False, 'cw', 'ccw', 248932), (True, 'cw', 'cw', 248933), (True, 'cw', 'cw', 248934), (True, 'cw', 'cw', 248935), (True, 'cw', 'cw', 248936), (False, 'cw', 'ccw', 248937), (True, 'undefined', 'undefined', 248938), (False, 'cw', 'undefined', 248939), (True, 'undefined', 'undefined', 248940), (False, 'cw', 'undefined', 248941), (False, 'cw', 'undefined', 248942), (False, 'cw', 'undefined', 248943), (True, 'undefined', 'undefined', 248944), (False, 'cw', 'ccw', 248945), (False, 'cw', 'ccw', 248946), (False, 'cw', 'ccw', 248947), (False, 'cw', 'ccw', 248948), (True, 'cw', 'cw', 248949), (False, 'cw', 'undefined', 248950), (True, 'undefined', 'undefined', 248951), (True, 'cw', 'cw', 248952), (True, 'cw', 'cw', 248953), (False, 'cw', 'ccw', 248954), (False, 'cw', 'ccw', 248955), (False, 'cw', 'ccw', 248956), (False, 'cw', 'undefined', 248957), (False, 'cw', 'ccw', 248958), (False, 'cw', 'undefined', 248959), (False, 'cw', 'undefined', 248960), (False, 'cw', 'undefined', 248961), (False, 'cw', 'undefined', 248962), (False, 'cw', 'undefined', 248963), (True, 'cw', 'cw', 248964), (False, 'cw', 'undefined', 248965), (False, 'cw', 'undefined', 248966), (True, 'cw', 'cw', 248967), (True, 'cw', 'cw', 248968), (True, 'cw', 'cw', 248969), (True, 'undefined', 'undefined', 248970), (True, 'cw', 'cw', 248971), (False, 'cw', 'undefined', 248972), (False, 'cw', 'undefined', 248973), (False, 'cw', 'ccw', 248974), (False, 'cw', 'undefined', 248975)]",False,Wrong Answer,0.7024179012996598,0.950877192982456,False,0.5957446808510638
164874,29369426,"l1 = list(map(int, input().split()))
l2 = list(map(int, input().split()))

def magicspheres(list1, list2):

	excess_demand = [b-a for a,b in zip(list1, list2)]
	def valid_supply():
		for i in range(3):
			if excess_demand[i] <= -2:
				return i
		return -1

	for i in range(3):
		if excess_demand[i] > 0:

			j = valid_supply()
			while(j != -1 and excess_demand[i] > 0):
				list1[i] +=1
				list1[j] -=2
				excess_demand = [b-a for a,b in zip(list1, list2)]
				j = valid_supply()

	for i in range(3):
		if excess_demand[i] > 0:
			return 'No'
	return 'Yes'

print(magicspheres(l1,l2))",168,4524,1029,8/12/17 8:49,28,133,1,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (True, 'Yes', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (True, 'Yes', 'Yes', 59002), (True, 'No', 'No', 59003), (True, 'Yes', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (True, 'Yes', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (True, 'Yes', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (True, 'Yes', 'Yes', 59023), (True, 'Yes', 'Yes', 59024), (True, 'No', 'No', 59025), (True, 'Yes', 'Yes', 59026), (True, 'No', 'No', 59027), (True, 'Yes', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (True, 'Yes', 'Yes', 59036), (True, 'Yes', 'Yes', 59037), (True, 'Yes', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (True, 'Yes', 'Yes', 59045), (True, 'Yes', 'Yes', 59046), (True, 'Yes', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (True, 'Yes', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",True,Accecpted,0.6009253975613689,0.7032967032967034,False,0.0
164860,29369025,"l1 = list(map(int, input().split()))
l2 = list(map(int, input().split()))

def magicspheres(list1, list2):

	excess_demand = [b-a for a,b in zip(list1, list2)]

	for i in range(3):
		if excess_demand[i] > 0:
			for j in range(3):
				if excess_demand[j] <= -2:
					list1[i] +=1
					list1[j] -=2
					excess_demand = [b-a for a,b in zip(list1, list2)]

	for i in range(3):
		if excess_demand[i] > 0:
			return 'No'
	return 'Yes'

print(magicspheres(l1,l2))",168,4512,61,8/12/17 8:26,21,133,2,8,"[(True, 'Yes', 'Yes', 58989), (True, 'No', 'No', 58990), (True, 'Yes', 'Yes', 58991), (True, 'Yes', 'Yes', 58992), (True, 'No', 'No', 58993), (True, 'Yes', 'Yes', 58994), (True, 'Yes', 'Yes', 58995), (True, 'No', 'No', 58996), (True, 'Yes', 'Yes', 58997), (True, 'Yes', 'Yes', 58998), (False, 'No', 'Yes', 58999), (True, 'No', 'No', 59000), (True, 'No', 'No', 59001), (False, 'No', 'Yes', 59002), (True, 'No', 'No', 59003), (False, 'No', 'Yes', 59004), (True, 'No', 'No', 59005), (True, 'No', 'No', 59006), (False, 'No', 'Yes', 59007), (True, 'No', 'No', 59008), (True, 'No', 'No', 59009), (True, 'Yes', 'Yes', 59010), (True, 'Yes', 'Yes', 59011), (True, 'Yes', 'Yes', 59012), (True, 'Yes', 'Yes', 59013), (True, 'No', 'No', 59014), (True, 'No', 'No', 59015), (True, 'Yes', 'Yes', 59016), (True, 'No', 'No', 59017), (True, 'Yes', 'Yes', 59018), (False, 'No', 'Yes', 59019), (True, 'Yes', 'Yes', 59020), (True, 'No', 'No', 59021), (True, 'No', 'No', 59022), (False, 'No', 'Yes', 59023), (False, 'No', 'Yes', 59024), (True, 'No', 'No', 59025), (False, 'No', 'Yes', 59026), (True, 'No', 'No', 59027), (False, 'No', 'Yes', 59028), (True, 'No', 'No', 59029), (True, 'No', 'No', 59030), (True, 'No', 'No', 59031), (True, 'No', 'No', 59032), (True, 'No', 'No', 59033), (True, 'No', 'No', 59034), (True, 'No', 'No', 59035), (False, 'No', 'Yes', 59036), (False, 'No', 'Yes', 59037), (False, 'No', 'Yes', 59038), (True, 'No', 'No', 59039), (True, 'No', 'No', 59040), (True, 'No', 'No', 59041), (True, 'No', 'No', 59042), (True, 'No', 'No', 59043), (True, 'No', 'No', 59044), (False, 'No', 'Yes', 59045), (False, 'No', 'Yes', 59046), (False, 'No', 'Yes', 59047), (True, 'Yes', 'Yes', 59048), (True, 'Yes', 'Yes', 59049), (True, 'Yes', 'Yes', 59050), (True, 'No', 'No', 59051), (True, 'Yes', 'Yes', 59052), (True, 'Yes', 'Yes', 59053), (True, 'Yes', 'Yes', 59054), (True, 'Yes', 'Yes', 59055), (False, 'No', 'Yes', 59056), (True, 'Yes', 'Yes', 59057), (True, 'Yes', 'Yes', 59058), (True, 'Yes', 'Yes', 59059), (True, 'Yes', 'Yes', 59060), (True, 'Yes', 'Yes', 59061), (True, 'Yes', 'Yes', 59062), (True, 'Yes', 'Yes', 59063), (True, 'Yes', 'Yes', 59064), (True, 'Yes', 'Yes', 59065), (True, 'Yes', 'Yes', 59066), (True, 'Yes', 'Yes', 59067)]",False,Wrong Answer,0.6009253975613689,0.7032967032967034,False,0.2025316455696202
831458,25117701,"#!/usr/bin/python3.5

a = [int(x) for x in input().split("" "")]
a.sort()

dist = a[2] - a[0]

print(dist)",168,4524,62,3/1/17 11:01,8,764,1,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (True, '99', '99', 109990), (True, '99', '99', 109991), (True, '99', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (True, '85', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (True, '88', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (True, '67', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (True, '67', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (True, '8', '8', 110026), (True, '10', '10', 110027), (True, '49', '49', 110028), (True, '10', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (True, '99', '99', 110034), (True, '5', '5', 110035)]",True,Accecpted,8.510469113101058e-232,0.1520467836257309,False,0.0
836262,28952293,"a=input().split()
x= a.__len__()
j=0
while j<x-1:
    i=0
    while i<x-1:
        if a[i]<a[i+1]:
            a[i], a[i+1] = a[i+1], a[i]
        i+=1
    j+=1
print((abs(int(a[1])-int(a[0])) + abs(int(a[1])-int(a[2]))))",168,4500,46,7/28/17 15:02,11,764,2,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (False, '195', '99', 109990), (False, '108', '99', 109991), (False, '154', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (False, '153', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (False, '104', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (False, '107', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (False, '93', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (False, '12', '8', 110026), (False, '15', '10', 110027), (True, '49', '49', 110028), (False, '15', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (False, '197', '99', 110034), (True, '5', '5', 110035)]",False,Wrong Answer,8.510469113101058e-232,0.1520467836257309,False,0.2291666666666666
1161356,29326000,"#a, b = map(int, input().split())
a = input()
num = a.count(""4"") + a.count(""7"")
num = str(num)
#print(num)
if len(num) == num.count(""4"") + num.count(""7""): print(""YES"")
else : print(""NO"")",168,4516,124,8/10/17 15:11,7,1062,1,8,"[(True, 'NO', 'NO', 131260), (True, 'YES', 'YES', 131261), (True, 'NO', 'NO', 131262), (True, 'NO', 'NO', 131263), (True, 'NO', 'NO', 131264), (True, 'NO', 'NO', 131265), (True, 'YES', 'YES', 131266), (True, 'YES', 'YES', 131267), (True, 'YES', 'YES', 131268), (True, 'NO', 'NO', 131269), (True, 'YES', 'YES', 131270), (True, 'NO', 'NO', 131271), (True, 'YES', 'YES', 131272), (True, 'NO', 'NO', 131273), (True, 'NO', 'NO', 131274), (True, 'NO', 'NO', 131275), (True, 'NO', 'NO', 131276), (True, 'NO', 'NO', 131277), (True, 'NO', 'NO', 131278), (True, 'NO', 'NO', 131279), (True, 'NO', 'NO', 131280), (True, 'NO', 'NO', 131281), (True, 'YES', 'YES', 131282), (True, 'YES', 'YES', 131283), (True, 'YES', 'YES', 131284), (True, 'NO', 'NO', 131285), (True, 'YES', 'YES', 131286), (True, 'YES', 'YES', 131287), (True, 'YES', 'YES', 131288), (True, 'NO', 'NO', 131289), (True, 'NO', 'NO', 131290), (True, 'YES', 'YES', 131291), (True, 'YES', 'YES', 131292), (True, 'NO', 'NO', 131293)]",True,Accecpted,0.8293723547637456,0.9408450704225352,False,0.0
1161355,29325985,"#a, b = map(int, input().split())
a = input()
num = a.count(""4"") + a.count(""7"")
num = str(num)
if num == num.count(""4"") + num.count(""7""): print(""YES"")
else : print(""NO"")",168,4508,122,8/10/17 15:11,6,1062,2,8,"[(True, 'NO', 'NO', 131260), (False, 'NO', 'YES', 131261), (True, 'NO', 'NO', 131262), (True, 'NO', 'NO', 131263), (True, 'NO', 'NO', 131264), (True, 'NO', 'NO', 131265), (False, 'NO', 'YES', 131266), (False, 'NO', 'YES', 131267), (False, 'NO', 'YES', 131268), (True, 'NO', 'NO', 131269), (False, 'NO', 'YES', 131270), (True, 'NO', 'NO', 131271), (False, 'NO', 'YES', 131272), (True, 'NO', 'NO', 131273), (True, 'NO', 'NO', 131274), (True, 'NO', 'NO', 131275), (True, 'NO', 'NO', 131276), (True, 'NO', 'NO', 131277), (True, 'NO', 'NO', 131278), (True, 'NO', 'NO', 131279), (True, 'NO', 'NO', 131280), (True, 'NO', 'NO', 131281), (False, 'NO', 'YES', 131282), (False, 'NO', 'YES', 131283), (False, 'NO', 'YES', 131284), (True, 'NO', 'NO', 131285), (False, 'NO', 'YES', 131286), (False, 'NO', 'YES', 131287), (False, 'NO', 'YES', 131288), (True, 'NO', 'NO', 131289), (True, 'NO', 'NO', 131290), (False, 'NO', 'YES', 131291), (False, 'NO', 'YES', 131292), (True, 'NO', 'NO', 131293)]",False,Wrong Answer,0.8293723547637456,0.9408450704225352,False,0.4117647058823529
1314628,29324999,"n = input()
if len(n) == 1:
    if n.isupper(): print(n.lower())
    else: print(n.upper())
    exit(0)
if n.isupper(): print(n.lower())
elif n[0].islower() and n[1:].isupper(): print (n[0].upper()+n[1:].lower())
else: print(n)",168,4516,62,8/10/17 14:30,8,1187,1,8,"[(True, 'Caps', 'Caps', 141548), (True, 'Lock', 'Lock', 141549), (True, 'cAPSlOCK', 'cAPSlOCK', 141550), (True, 'CAPs', 'CAPs', 141551), (True, 'LoCK', 'LoCK', 141552), (True, 'oops', 'oops', 141553), (True, 'oops', 'oops', 141554), (True, 'A', 'A', 141555), (True, 'a', 'a', 141556), (True, 'Aa', 'Aa', 141557), (True, 'Zz', 'Zz', 141558), (True, 'Az', 'Az', 141559), (True, 'Za', 'Za', 141560), (True, 'aaa', 'aaa', 141561), (True, 'AAa', 'AAa', 141562), (True, 'AaR', 'AaR', 141563), (True, 'Tdr', 'Tdr', 141564), (True, 'Atf', 'Atf', 141565), (True, 'fYd', 'fYd', 141566), (True, 'dsA', 'dsA', 141567), (True, 'fru', 'fru', 141568), (True, 'Hybkf', 'Hybkf', 141569), (True, 'XweAR', 'XweAR', 141570), (True, 'mogqx', 'mogqx', 141571), (True, 'eOhEi', 'eOhEi', 141572), (True, 'nkdku', 'nkdku', 141573), (True, 'zcnko', 'zcnko', 141574), (True, 'lcccd', 'lcccd', 141575), (True, 'vwmvg', 'vwmvg', 141576), (True, 'lvchf', 'lvchf', 141577), (True, 'iunvzcchewenchqqxqypujcrdzluxcljhxphbxeuugnxooopbmobribhhmirilyjgyygfmtmfsvurgyhuwdrlqvibrlpevamjqyo', 'iunvzcchewenchqqxqypujcrdzluxcljhxphbxeuugnxooopbmobribhhmirilyjgyygfmtmfsvurgyhuwdrlqvibrlpevamjqyo', 141578), (True, 'obhszcamdxejwozlkxqkivxuuqjkjlmmfnbpxaefxgvnskqljgxhuxhgcotesivksfmvvxfvmtekacriwalaggmcgfexqknymrtg', 'obhszcamdxejwozlkxqkivxuuqjkjlmmfnbpxaefxgvnskqljgxhuxhgcotesivksfmvvxfvmtekacriwalaggmcgfexqknymrtg', 141579), (True, 'ikjyzikroiyuucthsvskztetnnocmaublfjcevancadasmzrcnlbzpqrxesheemomepchrosrtnbidxymepjsixszqebtekkuhfs', 'ikjyzikroiyuucthsvskztetnnocmaublfjcevancadasmzrcnlbzpqrxesheemomepchrosrtnbidxymepjsixszqebtekkuhfs', 141580), (True, 'Ctkdznwvyrtfpqldauunspktdjtuppfprxrsintvfvnnqnkxwuzudhzbusoktabuedqkuivrttvureeobjtsdkjkvegfxvhxeype', 'Ctkdznwvyrtfpqldauunspktdjtuppfprxrsintvfvnnqnkxwuzudhzbusoktabuedqkuivrttvureeobjtsdkjkvegfxvhxeype', 141581), (True, 'Uckjzrgzjcppleeyjtunkoqswgbmtbqevpyfpipekrvyqntdpanoixkmpinnfuszwcurgbdpytekbekcpmvzpmwaoshjymgkombq', 'Uckjzrgzjcppleeyjtunkoqswgbmtbqevpyfpipekrvyqntdpanoixkmpinnfuszwcurgbdpytekbekcpmvzpmwaoshjymgkombq', 141582), (True, 'KETAXTSWAAOBKUOKUQREHIOMVMMRSAEWKGXZKRASwTVNSSFSNIWYNPSTMRADOADEEBURRHPOOBIEUIBGYDJCEKPNLEUCANZYJKMR', 'KETAXTSWAAOBKUOKUQREHIOMVMMRSAEWKGXZKRASwTVNSSFSNIWYNPSTMRADOADEEBURRHPOOBIEUIBGYDJCEKPNLEUCANZYJKMR', 141583), (True, 'ZEKGDMWJPVUWFlNXRLUmWKLMMYSLRQQIBRWDPKWITUIMZYYKOEYGREKHHZRZZUFPVTNIHKGTCCTLOKSZITXXZDMPITHNZUIGDZLE', 'ZEKGDMWJPVUWFlNXRLUmWKLMMYSLRQQIBRWDPKWITUIMZYYKOEYGREKHHZRZZUFPVTNIHKGTCCTLOKSZITXXZDMPITHNZUIGDZLE', 141584), (True, 'TcMbVPCFvnNkCEUUCIFLgBJeCOKuJhIGwXFrhAZjuAhBraMSchBfWwIuHAEbgJOFzGtxDLDXzDSaPCFujGGxgxdlHUIQYRrMFCgJ', 'TcMbVPCFvnNkCEUUCIFLgBJeCOKuJhIGwXFrhAZjuAhBraMSchBfWwIuHAEbgJOFzGtxDLDXzDSaPCFujGGxgxdlHUIQYRrMFCgJ', 141585), (True, 'xFGqoLILNvxARKuIntPfeukFtMbvzDezKpPRAKkIoIvwqNXnehRVwkkXYvuRCeoieBaBfTjwsYhDeCLvBwktntyluoxCYVioXGdm', 'xFGqoLILNvxARKuIntPfeukFtMbvzDezKpPRAKkIoIvwqNXnehRVwkkXYvuRCeoieBaBfTjwsYhDeCLvBwktntyluoxCYVioXGdm', 141586), (True, 'udvqolbxdwbkijwvhlyaelhynmnfgszbhgshlcwdkaibceqomzujndixuzivlsjyjqxzxodzbukxxhwwultvekdfntwpzlhhrIjm', 'udvqolbxdwbkijwvhlyaelhynmnfgszbhgshlcwdkaibceqomzujndixuzivlsjyjqxzxodzbukxxhwwultvekdfntwpzlhhrIjm', 141587), (True, 'jgpwhetqqoncighgzbbaLwwwxkxivuwtokehrgprfgewzcwxkavwoflcgsgbhoeamzbefzoonwsyzisetoydrpufktzgbaycgaeg', 'jgpwhetqqoncighgzbbaLwwwxkxivuwtokehrgprfgewzcwxkavwoflcgsgbhoeamzbefzoonwsyzisetoydrpufktzgbaycgaeg', 141588), (True, 'vyujsazdstbnkxeunedfbolicojzjpufgfemhtmdrswvmuhoivjvonacefqenbqudelmdegxqtbwezsbydmanzutvdgkgrjxzlnc', 'vyujsazdstbnkxeunedfbolicojzjpufgfemhtmdrswvmuhoivjvonacefqenbqudelmdegxqtbwezsbydmanzutvdgkgrjxzlnc', 141589), (True, 'pivqnuqkaofcduvbttztjbuavrqwiqrwkfncmvatoxruelyoecnkpqraiahumiaiqeyjapbqyrsxcdgjbihivtqezvasfmzntdfv', 'pivqnuqkaofcduvbttztjbuavrqwiqrwkfncmvatoxruelyoecnkpqraiahumiaiqeyjapbqyrsxcdgjbihivtqezvasfmzntdfv', 141590), (True, 'upvtbsxswbohxshdrbjxcungzquhuomgxwlryvshshsfvqbrxvcikbglietlpqkiwbhiqpmdwuqosbtdvyxekkaqiwrbsibpoect', 'upvtbsxswbohxshdrbjxcungzquhuomgxwlryvshshsfvqbrxvcikbglietlpqkiwbhiqpmdwuqosbtdvyxekkaqiwrbsibpoect', 141591), (True, 'Ctkdznwvyrtfpqldauunspktdjtuppfprxrsintvfvnnqnkxwuzudhzbusoktabuedqkuivrttvureeobjtsdkjkvegfxvhxeype', 'Ctkdznwvyrtfpqldauunspktdjtuppfprxrsintvfvnnqnkxwuzudhzbusoktabuedqkuivrttvureeobjtsdkjkvegfxvhxeype', 141592), (True, 'JEGDOFJOFGJHFROGHOFGMHOFGHORGFHMOu', 'JEGDOFJOFGJHFROGHOFGMHOFGHORGFHMOu', 141593), (True, 'aBACABa', 'aBACABa', 141594), (True, 'AAAAAAAAAAAAAAAAAAAAAAAAaa', 'AAAAAAAAAAAAAAAAAAAAAAAAaa', 141595), (True, 'aaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'aaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 141596), (True, 'Dddddddddddddd', 'Dddddddddddddd', 141597), (True, 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 141598), (True, 'Z', 'Z', 141599), (True, 'az', 'az', 141600), (True, 'z', 'z', 141601), (True, 'Aaaaa', 'Aaaaa', 141602), (True, 'f', 'f', 141603)]",True,Accecpted,0.0,0.2534246575342466,False,0.0
1315405,29632051,"n=input()[:11]
a=n[0]
b=a.upper()
c=n[1:]
d=c.lower()

print(b+d)",168,0,62,8/21/17 2:44,7,1187,2,8,"[(True, 'Caps', 'Caps', 141548), (True, 'Lock', 'Lock', 141549), (False, 'Capslock', 'cAPSlOCK', 141550), (False, 'Caps', 'CAPs', 141551), (False, 'Lock', 'LoCK', 141552), (False, 'Oops', 'oops', 141553), (False, 'Oops', 'oops', 141554), (True, 'A', 'A', 141555), (False, 'A', 'a', 141556), (True, 'Aa', 'Aa', 141557), (True, 'Zz', 'Zz', 141558), (True, 'Az', 'Az', 141559), (True, 'Za', 'Za', 141560), (False, 'Aaa', 'aaa', 141561), (False, 'Aaa', 'AAa', 141562), (False, 'Aar', 'AaR', 141563), (True, 'Tdr', 'Tdr', 141564), (True, 'Atf', 'Atf', 141565), (False, 'Fyd', 'fYd', 141566), (False, 'Dsa', 'dsA', 141567), (False, 'Fru', 'fru', 141568), (True, 'Hybkf', 'Hybkf', 141569), (False, 'Xwear', 'XweAR', 141570), (False, 'Mogqx', 'mogqx', 141571), (False, 'Eohei', 'eOhEi', 141572), (False, 'Nkdku', 'nkdku', 141573), (False, 'Zcnko', 'zcnko', 141574), (False, 'Lcccd', 'lcccd', 141575), (False, 'Vwmvg', 'vwmvg', 141576), (False, 'Lvchf', 'lvchf', 141577), (False, 'Iunvzcchewe', 'iunvzcchewenchqqxqypujcrdzluxcljhxphbxeuugnxooopbmobribhhmirilyjgyygfmtmfsvurgyhuwdrlqvibrlpevamjqyo', 141578), (False, 'Obhszcamdxe', 'obhszcamdxejwozlkxqkivxuuqjkjlmmfnbpxaefxgvnskqljgxhuxhgcotesivksfmvvxfvmtekacriwalaggmcgfexqknymrtg', 141579), (False, 'Ikjyzikroiy', 'ikjyzikroiyuucthsvskztetnnocmaublfjcevancadasmzrcnlbzpqrxesheemomepchrosrtnbidxymepjsixszqebtekkuhfs', 141580), (False, 'Ctkdznwvyrt', 'Ctkdznwvyrtfpqldauunspktdjtuppfprxrsintvfvnnqnkxwuzudhzbusoktabuedqkuivrttvureeobjtsdkjkvegfxvhxeype', 141581), (False, 'Uckjzrgzjcp', 'Uckjzrgzjcppleeyjtunkoqswgbmtbqevpyfpipekrvyqntdpanoixkmpinnfuszwcurgbdpytekbekcpmvzpmwaoshjymgkombq', 141582), (False, 'Ketaxtswaao', 'KETAXTSWAAOBKUOKUQREHIOMVMMRSAEWKGXZKRASwTVNSSFSNIWYNPSTMRADOADEEBURRHPOOBIEUIBGYDJCEKPNLEUCANZYJKMR', 141583), (False, 'Zekgdmwjpvu', 'ZEKGDMWJPVUWFlNXRLUmWKLMMYSLRQQIBRWDPKWITUIMZYYKOEYGREKHHZRZZUFPVTNIHKGTCCTLOKSZITXXZDMPITHNZUIGDZLE', 141584), (False, 'Tcmbvpcfvnn', 'TcMbVPCFvnNkCEUUCIFLgBJeCOKuJhIGwXFrhAZjuAhBraMSchBfWwIuHAEbgJOFzGtxDLDXzDSaPCFujGGxgxdlHUIQYRrMFCgJ', 141585), (False, 'Xfgqolilnvx', 'xFGqoLILNvxARKuIntPfeukFtMbvzDezKpPRAKkIoIvwqNXnehRVwkkXYvuRCeoieBaBfTjwsYhDeCLvBwktntyluoxCYVioXGdm', 141586), (False, 'Udvqolbxdwb', 'udvqolbxdwbkijwvhlyaelhynmnfgszbhgshlcwdkaibceqomzujndixuzivlsjyjqxzxodzbukxxhwwultvekdfntwpzlhhrIjm', 141587), (False, 'Jgpwhetqqon', 'jgpwhetqqoncighgzbbaLwwwxkxivuwtokehrgprfgewzcwxkavwoflcgsgbhoeamzbefzoonwsyzisetoydrpufktzgbaycgaeg', 141588), (False, 'Vyujsazdstb', 'vyujsazdstbnkxeunedfbolicojzjpufgfemhtmdrswvmuhoivjvonacefqenbqudelmdegxqtbwezsbydmanzutvdgkgrjxzlnc', 141589), (False, 'Pivqnuqkaof', 'pivqnuqkaofcduvbttztjbuavrqwiqrwkfncmvatoxruelyoecnkpqraiahumiaiqeyjapbqyrsxcdgjbihivtqezvasfmzntdfv', 141590), (False, 'Upvtbsxswbo', 'upvtbsxswbohxshdrbjxcungzquhuomgxwlryvshshsfvqbrxvcikbglietlpqkiwbhiqpmdwuqosbtdvyxekkaqiwrbsibpoect', 141591), (False, 'Ctkdznwvyrt', 'Ctkdznwvyrtfpqldauunspktdjtuppfprxrsintvfvnnqnkxwuzudhzbusoktabuedqkuivrttvureeobjtsdkjkvegfxvhxeype', 141592), (False, 'Jegdofjofgj', 'JEGDOFJOFGJHFROGHOFGMHOFGHORGFHMOu', 141593), (False, 'Abacaba', 'aBACABa', 141594), (False, 'Aaaaaaaaaaa', 'AAAAAAAAAAAAAAAAAAAAAAAAaa', 141595), (False, 'Aaaaaaaaaaa', 'aaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 141596), (False, 'Ddddddddddd', 'Dddddddddddddd', 141597), (False, 'Aaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 141598), (True, 'Z', 'Z', 141599), (False, 'Az', 'az', 141600), (False, 'Z', 'z', 141601), (True, 'Aaaaa', 'Aaaaa', 141602), (False, 'F', 'f', 141603)]",False,Wrong Answer,0.0,0.2534246575342466,False,0.7857142857142857
1799754,22207625,"from math import ceil
i=int(input())
if i==3:
    k=5
else:
    k=ceil(((2*i)-1)**0.5)
    if k%2==0:
        k+=1
for j in range(k,101):
    if (j**2+1)/2>=i:
        print(j)
        break",168,36,154,11/14/16 15:59,12,1591,1,8,"[(True, '3', '3', 19819), (True, '5', '5', 19820), (True, '5', '5', 19821), (True, '5', '5', 19822), (True, '1', '1', 19823), (True, '7', '7', 19824), (True, '5', '5', 19825), (True, '3', '3', 19826), (True, '3', '3', 19827), (True, '5', '5', 19828), (True, '5', '5', 19829), (True, '5', '5', 19830), (True, '5', '5', 19831), (True, '5', '5', 19832), (True, '7', '7', 19833), (True, '7', '7', 19834), (True, '7', '7', 19835), (True, '7', '7', 19836), (True, '7', '7', 19837), (True, '7', '7', 19838), (True, '7', '7', 19839), (True, '7', '7', 19840), (True, '7', '7', 19841), (True, '7', '7', 19842), (True, '7', '7', 19843), (True, '9', '9', 19844), (True, '9', '9', 19845), (True, '9', '9', 19846), (True, '9', '9', 19847), (True, '9', '9', 19848), (True, '9', '9', 19849), (True, '9', '9', 19850), (True, '9', '9', 19851), (True, '9', '9', 19852), (True, '9', '9', 19853), (True, '9', '9', 19854), (True, '9', '9', 19855), (True, '9', '9', 19856), (True, '9', '9', 19857), (True, '9', '9', 19858), (True, '9', '9', 19859), (True, '11', '11', 19860), (True, '11', '11', 19861), (True, '11', '11', 19862), (True, '11', '11', 19863), (True, '11', '11', 19864), (True, '11', '11', 19865), (True, '11', '11', 19866), (True, '11', '11', 19867), (True, '11', '11', 19868), (True, '11', '11', 19869), (True, '11', '11', 19870), (True, '11', '11', 19871), (True, '11', '11', 19872), (True, '11', '11', 19873), (True, '11', '11', 19874), (True, '11', '11', 19875), (True, '11', '11', 19876), (True, '11', '11', 19877), (True, '11', '11', 19878), (True, '11', '11', 19879), (True, '13', '13', 19880), (True, '13', '13', 19881), (True, '13', '13', 19882), (True, '13', '13', 19883), (True, '13', '13', 19884), (True, '13', '13', 19885), (True, '13', '13', 19886), (True, '13', '13', 19887), (True, '13', '13', 19888), (True, '13', '13', 19889), (True, '13', '13', 19890), (True, '13', '13', 19891), (True, '13', '13', 19892), (True, '13', '13', 19893), (True, '13', '13', 19894), (True, '13', '13', 19895), (True, '13', '13', 19896), (True, '13', '13', 19897), (True, '13', '13', 19898), (True, '13', '13', 19899), (True, '13', '13', 19900), (True, '13', '13', 19901), (True, '13', '13', 19902), (True, '13', '13', 19903), (True, '15', '15', 19904), (True, '15', '15', 19905), (True, '15', '15', 19906), (True, '15', '15', 19907), (True, '15', '15', 19908), (True, '15', '15', 19909), (True, '15', '15', 19910), (True, '15', '15', 19911), (True, '15', '15', 19912), (True, '15', '15', 19913), (True, '15', '15', 19914), (True, '15', '15', 19915), (True, '15', '15', 19916), (True, '15', '15', 19917), (True, '15', '15', 19918)]",True,Accecpted,0.3300319769913536,0.8161993769470405,False,0.0
1799744,22207324,"from math import ceil
i=int(input())
k=ceil(((2*i)-1)**0.5)
for j in range(k):
    if (j**2+1)/2>=i:
        print(j)
        break",168,0,124,11/14/16 15:39,7,1591,2,8,"[(False, '', '3', 19819), (False, '', '5', 19820), (False, '', '5', 19821), (False, '', '5', 19822), (False, '', '1', 19823), (False, '', '7', 19824), (False, '', '5', 19825), (False, '', '3', 19826), (False, '', '3', 19827), (False, '', '5', 19828), (False, '', '5', 19829), (False, '', '5', 19830), (False, '', '5', 19831), (False, '', '5', 19832), (False, '', '7', 19833), (False, '', '7', 19834), (False, '', '7', 19835), (False, '', '7', 19836), (False, '', '7', 19837), (False, '', '7', 19838), (False, '', '7', 19839), (False, '', '7', 19840), (False, '', '7', 19841), (False, '', '7', 19842), (False, '', '7', 19843), (False, '', '9', 19844), (False, '', '9', 19845), (False, '', '9', 19846), (False, '', '9', 19847), (False, '', '9', 19848), (False, '', '9', 19849), (False, '', '9', 19850), (False, '', '9', 19851), (False, '', '9', 19852), (False, '', '9', 19853), (False, '', '9', 19854), (False, '', '9', 19855), (False, '', '9', 19856), (False, '', '9', 19857), (False, '', '9', 19858), (False, '', '9', 19859), (False, '', '11', 19860), (False, '', '11', 19861), (False, '', '11', 19862), (False, '', '11', 19863), (False, '', '11', 19864), (False, '', '11', 19865), (False, '', '11', 19866), (False, '', '11', 19867), (False, '', '11', 19868), (False, '', '11', 19869), (False, '', '11', 19870), (False, '', '11', 19871), (False, '', '11', 19872), (False, '', '11', 19873), (False, '', '11', 19874), (False, '', '11', 19875), (False, '', '11', 19876), (False, '', '11', 19877), (False, '', '11', 19878), (False, '', '11', 19879), (False, '', '13', 19880), (False, '', '13', 19881), (False, '', '13', 19882), (False, '', '13', 19883), (False, '', '13', 19884), (False, '', '13', 19885), (False, '', '13', 19886), (False, '', '13', 19887), (False, '', '13', 19888), (False, '', '13', 19889), (False, '', '13', 19890), (False, '', '13', 19891), (False, '', '13', 19892), (False, '', '13', 19893), (False, '', '13', 19894), (False, '', '13', 19895), (False, '', '13', 19896), (False, '', '13', 19897), (False, '', '13', 19898), (False, '', '13', 19899), (False, '', '13', 19900), (False, '', '13', 19901), (False, '', '13', 19902), (False, '', '13', 19903), (False, '', '15', 19904), (False, '', '15', 19905), (False, '', '15', 19906), (False, '', '15', 19907), (False, '', '15', 19908), (False, '', '15', 19909), (False, '', '15', 19910), (False, '', '15', 19911), (False, '', '15', 19912), (False, '', '15', 19913), (False, '', '15', 19914), (False, '', '15', 19915), (False, '', '15', 19916), (False, '', '15', 19917), (False, '', '15', 19918)]",False,Wrong Answer,0.3300319769913536,0.8161993769470405,False,1.0
2051370,20924762,"y,k,n=[int(i) for i in input().split()]

a=y%k
m=[]
for i in range(n):
    h=i*k-a
    num=h+y
    if num<=n:
        if h>0:
            m.append(h)
    else:break
if len(m)>0:
    print(*m)
else:print(-1)",168,3800,872,9/26/16 15:18,14,1819,1,8,"[(True, '-1', '-1', 179398), (True, '2 8 14 20 26', '2 8 14 20 26', 179399), (True, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 179400), (True, '-1', '-1', 179402), (True, '16 53', '16 53', 179403), (True, '-1', '-1', 179404), (True, '-1', '-1', 179405), (True, '-1', '-1', 179406), (True, '-1', '-1', 179407), (True, '-1', '-1', 179408), (True, '54 113 172 231 290', '54 113 172 231 290', 179409), (True, '8 77 146 215 284 353 422 491 560 629 698', '8 77 146 215 284 353 422 491 560 629 698', 179410), (True, '11 39 67 95 123 151 179 207 235 263 291 319 347 375 403 431 459 487 515', '11 39 67 95 123 151 179 207 235 263 291 319 347 375 403 431 459 487 515', 179411), (True, '-1', '-1', 179412), (True, '-1', '-1', 179413), (True, '-1', '-1', 179414), (True, '-1', '-1', 179415), (True, '500000000', '500000000', 179427), (True, '999999999', '999999999', 179428), (True, '-1', '-1', 179429), (True, '-1', '-1', 179430), (True, '100000006 200000013 300000020 400000027 500000034 600000041 700000048 800000055 900000062', '100000006 200000013 300000020 400000027 500000034 600000041 700000048 800000055 900000062', 179431), (True, '999999998', '999999998', 179432), (True, '900000000', '900000000', 179433), (True, '1', '1', 179434), (True, '-1', '-1', 179435), (True, '-1', '-1', 179436), (True, '500000000', '500000000', 179437), (True, '-1', '-1', 179438), (True, '2 4 6', '2 4 6', 179439), (True, '-1', '-1', 179440), (True, '-1', '-1', 179441), (True, '-1', '-1', 179442), (True, '-1', '-1', 179443), (True, '499999998', '499999998', 179444), (True, '999999996', '999999996', 179445)]",True,Accecpted,2.324913236244016e-78,0.15,False,0.0
2051556,21517749,"x = input()
x = x.split()
y = []
z = """"
for i in range(int(x[0]),int(x[2])):
    if i%int(x[1]) == 0:
        if i-(int(x[0])) not in y:
            y.append(i-int(x[0]))
if len(y) == 0:
    print(-1)
else:
    for i in range(0,len(y)):
        z+=str(y[i])+"" ""
    print(z)",168,4488,92,10/17/16 14:42,14,1819,2,8,"[(True, '-1', '-1', 179398), (True, '2 8 14 20 26', '2 8 14 20 26', 179399), (False, '0 1 2 3 4 5 6 7 8 9', '1 2 3 4 5 6 7 8 9 10', 179400), (True, '-1', '-1', 179402), (True, '16 53', '16 53', 179403), (True, '-1', '-1', 179404), (True, '-1', '-1', 179405), (True, '-1', '-1', 179406), (True, '-1', '-1', 179407), (True, '-1', '-1', 179408), (True, '54 113 172 231 290', '54 113 172 231 290', 179409), (True, '8 77 146 215 284 353 422 491 560 629 698', '8 77 146 215 284 353 422 491 560 629 698', 179410), (False, '11 39 67 95 123 151 179 207 235 263 291 319 347 375 403 431 459 487', '11 39 67 95 123 151 179 207 235 263 291 319 347 375 403 431 459 487 515', 179411), (True, '-1', '-1', 179412), (True, '-1', '-1', 179413), (True, '-1', '-1', 179414), (True, '-1', '-1', 179415)]",False,Wrong Answer,2.324913236244016e-78,0.15,False,0.1176470588235294
2584504,29626760,"n= int(input())
if n<4:
    print(""NO"")
elif n%2!=0:
    print(""NO"")
else:
    print(""YES"")",168,12,154,8/20/17 20:29,7,2223,1,8,"[(True, 'YES', 'YES', 203575), (True, 'NO', 'NO', 203576), (True, 'YES', 'YES', 203577), (True, 'NO', 'NO', 203578), (True, 'NO', 'NO', 203579), (True, 'NO', 'NO', 203580), (True, 'NO', 'NO', 203581), (True, 'YES', 'YES', 203582), (True, 'YES', 'YES', 203583), (True, 'NO', 'NO', 203584), (True, 'NO', 'NO', 203585), (True, 'NO', 'NO', 203586), (True, 'YES', 'YES', 203587), (True, 'YES', 'YES', 203588), (True, 'YES', 'YES', 203589), (True, 'NO', 'NO', 203590), (True, 'YES', 'YES', 203591), (True, 'NO', 'NO', 203592), (True, 'YES', 'YES', 203593), (True, 'YES', 'YES', 203594)]",True,Accecpted,3.890007056604112e-78,0.7564102564102564,False,0.0
2584492,29626006,"n= int(input())
if n%2==0:
    print(""YES"")
else:
    print(""NO"")",168,0,92,8/20/17 19:55,5,2223,2,8,"[(True, 'YES', 'YES', 203575), (True, 'NO', 'NO', 203576), (True, 'YES', 'YES', 203577), (True, 'NO', 'NO', 203578), (False, 'YES', 'NO', 203579), (True, 'NO', 'NO', 203580), (True, 'NO', 'NO', 203581), (True, 'YES', 'YES', 203582), (True, 'YES', 'YES', 203583), (True, 'NO', 'NO', 203584), (True, 'NO', 'NO', 203585), (True, 'NO', 'NO', 203586), (True, 'YES', 'YES', 203587), (True, 'YES', 'YES', 203588), (True, 'YES', 'YES', 203589), (True, 'NO', 'NO', 203590), (True, 'YES', 'YES', 203591), (True, 'NO', 'NO', 203592), (True, 'YES', 'YES', 203593), (True, 'YES', 'YES', 203594)]",False,Wrong Answer,3.890007056604112e-78,0.7564102564102564,False,0.05
2976726,19227890,"inputs = tuple(map(lambda x: int(x), input().split()))
n = inputs[0]
m = inputs[1]

if n == 0:
    print(m)
else:
    summery = (1 + n) * n / 2
    last = m % summery

    i = 1
    while last >= 0:
        last -= i
        i += 1

    last = int(last + i -1)

    print(last)",168,4,124,7/19/16 11:53,18,2535,1,8,"[(True, '0', '0', 218695), (True, '2', '2', 218696), (True, '1', '1', 218697), (True, '35', '35', 218698), (True, '0', '0', 218699), (True, '14', '14', 218700), (True, '11', '11', 218701), (True, '5', '5', 218702), (True, '0', '0', 218703), (True, '26', '26', 218704), (True, '14', '14', 218705), (True, '5', '5', 218706), (True, '20', '20', 218707), (True, '12', '12', 218708), (True, '11', '11', 218709), (True, '0', '0', 218710), (True, '2', '2', 218711), (True, '4', '4', 218712), (True, '9', '9', 218713), (True, '12', '12', 218714), (True, '0', '0', 218715), (True, '40', '40', 218716), (True, '0', '0', 218717), (True, '0', '0', 218718), (True, '5', '5', 218719)]",True,Accecpted,0.0975539548453067,0.1077283372365339,False,0.0
2978588,26827524,"def convert_str_list_to_int(str_list):
    for i in range(len(str_list)):
        str_list[i] = int(str_list[i])
    return str_list


def main():
    input_str = input()
    inputs = convert_str_list_to_int(input_str.split(' '))
    n = inputs[0]
    m = inputs[1]

    walrus = 0
    sum = 0
    while True:
        if walrus > n:
            print('asdsdf')
            walrus = 0
            continue
        sum = sum + walrus
        walrus = walrus + 1

        m = m - walrus

        if m < 0:
            break
    print(m + n)


if __name__ == '__main__':
    main()",168,0,92,5/4/17 6:22,31,2535,2,8,"[(True, '0', '0', 218695), (False, '4', '2', 218696), (True, '1', '1', 218697), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n44', '35', 218698), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n28', '0', 218699), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n35', '14', 218700), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n7', '11', 218701), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n5', '5', 218702), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n-1', '0', 218703), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n10', '26', 218704), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n42', '14', 218705), (False, '9', '5', 218706), (False, 'asdsdf\nasdsdf\n15', '20', 218707), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n8', '12', 218708), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n17', '11', 218709), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n47', '0', 218710), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n3', '2', 218711), (False, 'asdsdf\n23', '4', 218712), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n14', '9', 218713), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n21', '12', 218714), (False, '-1', '0', 218715), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n27', '40', 218716), (False, 'asdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\nasdsdf\n-1', '0', 218717), (False, '48', '0', 218718), (False, '45', '5', 218719)]",False,Wrong Answer,0.0975539548453067,0.1077283372365339,False,0.92
119908,24096035,"a, b, c = map(int, input().split())
sum = []
sum.append(a+b+c)
sum.append(a*2 + b*2)
sum.append(a*2 + c*2)
sum.append(b*2 + c*2)
print(min(sum))",191,4536,77,1/24/17 20:05,13,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.1801210737536246,0.5743944636678201,False,0.0
119907,24095909,"a, b, c = map(int, input().split())
sum1 = a * 2 + b * 2
sum2 = a + b + c
if sum1 < sum2:
	print(sum1)
else:
	print(sum2)",191,4492,46,1/24/17 19:59,13,102,2,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (False, '167', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (False, '127520897', '55041796', 55891), (False, '293554', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (False, '13552', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (False, '9', '8', 55902), (False, '1002', '4', 55903), (False, '100000002', '4', 55904)]",False,Wrong Answer,0.1801210737536246,0.5743944636678201,False,0.3333333333333333
119977,24187250,"# 599A
# θ(1) time
# θ(1) space

__author__ = 'artyom'


# SOLUTION

def main():
    d1, d2, d3 = read(3)
    return min(2 * (d1 + d2), 2 * (d1 + d3), 2 * (d2 + d3), d1 + d2 + d3)


# HELPERS


def read(mode=1, size=None):
    # 0: String
    # 1: Integer
    # 2: List of strings
    # 3: List of integers
    # 4: Matrix of integers
    if mode == 0: return input().strip()
    if mode == 1: return int(input().strip())
    if mode == 2: return input().strip().split()
    if mode == 3: return list(map(int, input().strip().split()))
    a = []
    for _ in range(size):
        a.append(read(3))
    return a


def write(s=""\n""):
    if s is None: s = ''
    if isinstance(s, tuple) or isinstance(s, list): s = ' '.join(map(str, s))
    s = str(s)
    print(s, end=""\n"")


res = main()
write(res)",227,4488,93,1/27/17 15:52,83,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.9089981644434352,0.9826789838337182,False,0.0
119976,24187181,"# 599A
# θ(1) time
# θ(1) space

__author__ = 'artyom'


# SOLUTION

def main():
    d1, d2, d3 = read(3)
    return min(2 * (d1 + d2), d1 + d2 + d3)


# HELPERS


def read(mode=1, size=None):
    # 0: String
    # 1: Integer
    # 2: List of strings
    # 3: List of integers
    # 4: Matrix of integers
    if mode == 0: return input().strip()
    if mode == 1: return int(input().strip())
    if mode == 2: return input().strip().split()
    if mode == 3: return list(map(int, input().strip().split()))
    a = []
    for _ in range(size):
        a.append(read(3))
    return a


def write(s=""\n""):
    if s is None: s = ''
    if isinstance(s, tuple) or isinstance(s, list): s = ' '.join(map(str, s))
    s = str(s)
    print(s, end=""\n"")


res = main()
write(res)",227,4500,46,1/27/17 15:48,83,102,2,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (False, '167', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (False, '127520897', '55041796', 55891), (False, '293554', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (False, '13552', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (False, '9', '8', 55902), (False, '1002', '4', 55903), (False, '100000002', '4', 55904)]",False,Wrong Answer,0.9089981644434352,0.9826789838337182,False,0.3333333333333333
1431415,23828935,"def dragon_injurd(k,l,m,n,d):
    dragon=[0]*d
    r=0
    injurd=[k,l,m,n]
    # return dragon
    for i in range(4):
        r=0
        while r<=d-1:
            if (r+1)%injurd[i]==0:
                dragon[r]=1
            r+=1
    # return injurd
    return sum(dragon)
    # return dragon
def main():
    k=int(input())
    l=int(input())
    m=int(input())
    n=int(input())
    d=int(input())
    print(dragon_injurd(k,l,m,n,d))



if __name__=='__main__':
    main()",246,4908,374,1/15/17 2:53,26,1274,1,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (True, '35246', '35246', 147728), (True, '75083', '75083', 147729), (True, '24656', '24656', 147730), (True, '36320', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (True, '21956', '21956', 147738), (True, '32736', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (True, '36019', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (True, '9224', '9224', 147750), (True, '43539', '43539', 147751), (True, '2438', '2438', 147752), (True, '415', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",True,Accecpted,0.3583966396181315,0.7016976556184317,False,0.0
1431496,23911375,"def dragon_injurd(k,l,m,n,d):
    dragon=[0]*(d+1)
    r=0
    injurd=sorted([k,l,m,n])



    for i in range(4):
        if dragon[injurd[i]]!=11:
            dragon[injurd[i]]=11
            for j in range(injurd[i],d+1,injurd[i]):
                dragon[j]=11
    return dragon.count(11)






    # for i in range(4):
    #     r=0
    #     while r<=d-1:
    #         if (r+1)%injurd[i]==0:
    #             dragon[r]=1
    #         r+=1
    # # return injurd
    # return sum(dragon)
    # # return dragon
def main():
    k=int(input())
    l=int(input())
    m=int(input())
    n=int(input())
    d=int(input())
    print(dragon_injurd(k,l,m,n,d))



if __name__=='__main__':
    main()",246,4880,122,1/18/17 1:31,40,1274,5,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (False, '', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (True, '35246', '35246', 147728), (True, '75083', '75083', 147729), (True, '24656', '24656', 147730), (True, '36320', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (True, '21956', '21956', 147738), (True, '32736', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (True, '36019', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (True, '9224', '9224', 147750), (True, '43539', '43539', 147751), (True, '2438', '2438', 147752), (True, '415', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (False, '', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (False, '', '0', 147759)]",False,Runtime Error,0.3583966396181315,0.7016976556184317,False,0.075
2886673,23765554,"n,m=list(map(int,input().split()))

c=n+1

while c<=m:


    for i in range(c-1,1,-1):
        if c%i==0:

            break
    else:

        if c<m:
            print('NO')
        elif c==m:
            print('YES')
        exit()


    c+=1
else:
    print('NO')",246,4528,124,1/12/17 21:04,23,2470,1,8,"[(True, 'YES', 'YES', 215971), (True, 'YES', 'YES', 215972), (True, 'NO', 'NO', 215973), (True, 'YES', 'YES', 215974), (True, 'NO', 'NO', 215975), (True, 'NO', 'NO', 215976), (True, 'YES', 'YES', 215977), (True, 'YES', 'YES', 215978), (True, 'YES', 'YES', 215979), (True, 'YES', 'YES', 215980), (True, 'YES', 'YES', 215981), (True, 'YES', 'YES', 215982), (True, 'YES', 'YES', 215983), (True, 'YES', 'YES', 215984), (True, 'YES', 'YES', 215985), (True, 'YES', 'YES', 215986), (True, 'YES', 'YES', 215987), (True, 'YES', 'YES', 215988), (True, 'YES', 'YES', 215989), (True, 'NO', 'NO', 215990), (True, 'NO', 'NO', 215991), (True, 'NO', 'NO', 215992), (True, 'NO', 'NO', 215993), (True, 'NO', 'NO', 215994), (True, 'NO', 'NO', 215995), (True, 'NO', 'NO', 215996), (True, 'NO', 'NO', 215997), (True, 'NO', 'NO', 215998), (True, 'NO', 'NO', 215999), (True, 'NO', 'NO', 216000), (True, 'NO', 'NO', 216001), (True, 'NO', 'NO', 216002), (True, 'NO', 'NO', 216003), (True, 'NO', 'NO', 216004), (True, 'YES', 'YES', 216005), (True, 'NO', 'NO', 216006), (True, 'NO', 'NO', 216007), (True, 'NO', 'NO', 216008), (True, 'NO', 'NO', 216009), (True, 'NO', 'NO', 216010), (True, 'NO', 'NO', 216011), (True, 'NO', 'NO', 216012), (True, 'NO', 'NO', 216013), (True, 'NO', 'NO', 216014), (True, 'NO', 'NO', 216015)]",True,Accecpted,0.0,0.0536912751677852,False,0.0
2886672,23765324,s=input(),246,4476,122,1/12/17 21:02,1,2470,2,8,"[(False, '', 'YES', 215971), (False, '', 'YES', 215972), (False, '', 'NO', 215973), (False, '', 'YES', 215974), (False, '', 'NO', 215975), (False, '', 'NO', 215976), (False, '', 'YES', 215977), (False, '', 'YES', 215978), (False, '', 'YES', 215979), (False, '', 'YES', 215980), (False, '', 'YES', 215981), (False, '', 'YES', 215982), (False, '', 'YES', 215983), (False, '', 'YES', 215984), (False, '', 'YES', 215985), (False, '', 'YES', 215986), (False, '', 'YES', 215987), (False, '', 'YES', 215988), (False, '', 'YES', 215989), (False, '', 'NO', 215990), (False, '', 'NO', 215991), (False, '', 'NO', 215992), (False, '', 'NO', 215993), (False, '', 'NO', 215994), (False, '', 'NO', 215995), (False, '', 'NO', 215996), (False, '', 'NO', 215997), (False, '', 'NO', 215998), (False, '', 'NO', 215999), (False, '', 'NO', 216000), (False, '', 'NO', 216001), (False, '', 'NO', 216002), (False, '', 'NO', 216003), (False, '', 'NO', 216004), (False, '', 'YES', 216005), (False, '', 'NO', 216006), (False, '', 'NO', 216007), (False, '', 'NO', 216008), (False, '', 'NO', 216009), (False, '', 'NO', 216010), (False, '', 'NO', 216011), (False, '', 'NO', 216012), (False, '', 'NO', 216013), (False, '', 'NO', 216014), (False, '', 'NO', 216015)]",False,Wrong Answer,0.0,0.0536912751677852,False,1.0
311167,27204040,"n = int(input())
print(3 * n ** 2 + 3 * n + 1)",332,0,62,5/18/17 23:07,3,261,1,8,"[(True, '19', '19', 70174), (True, '1', '1', 70175), (True, '7', '7', 70176), (True, '37', '37', 70177), (True, '1684942719577', '1684942719577', 70178), (True, '1681339478558627377', '1681339478558627377', 70179), (True, '2680401947103702001', '2680401947103702001', 70180), (True, '2430000002700000001', '2430000002700000001', 70181), (True, '2999999997000000001', '2999999997000000001', 70182), (True, '3000000003000000001', '3000000003000000001', 70183)]",True,Accecpted,5.8271249338257835e-232,0.3950617283950617,False,0.0
311166,27203969,print(-5 + 6 * 2 ** int(input())),332,0,46,5/18/17 22:58,1,261,2,8,"[(True, '19', '19', 70174), (True, '1', '1', 70175), (True, '7', '7', 70176), (False, '43', '37', 70177), (False, '', '1684942719577', 70178), (False, '', '1681339478558627377', 70179), (False, '', '2680401947103702001', 70180), (False, '', '2430000002700000001', 70181), (False, '', '2999999997000000001', 70182), (False, '', '3000000003000000001', 70183)]",False,Wrong Answer,5.8271249338257835e-232,0.3950617283950617,False,0.7
311181,27205056,"n = int(input())
m = ((n-4)*(n-3)*(n-2)*(n-1)*n)**2 // 120
print(m)",332,0,62,5/19/17 0:59,3,266,1,8,"[(True, '120', '120', 70241), (True, '4320', '4320', 70242), (True, '52920', '52920', 70243), (True, '1082161080', '1082161080', 70244), (True, '4594961280', '4594961280', 70245), (True, '23491596420472320', '23491596420472320', 70246), (True, '101159538130177920', '101159538130177920', 70247), (True, '402852449038723320', '402852449038723320', 70248), (True, '613867215317368320', '613867215317368320', 70249), (True, '680185280130048000', '680185280130048000', 70250)]",True,Accecpted,3.502929267667612e-78,0.5370370370370371,False,0.0
311180,27204997,"n = int(input())
print(120 * (n-4)**2)",332,0,46,5/19/17 0:51,2,266,2,8,"[(True, '120', '120', 70241), (False, '480', '4320', 70242), (False, '1080', '52920', 70243), (False, '14520', '1082161080', 70244), (False, '20280', '4594961280', 70245), (False, '554880', '23491596420472320', 70246), (False, '748920', '101159538130177920', 70247), (False, '993720', '402852449038723320', 70248), (False, '1083000', '613867215317368320', 70249), (False, '1105920', '680185280130048000', 70250)]",False,Wrong Answer,3.502929267667612e-78,0.5370370370370371,False,0.9
311175,27204482,"n = input()
t = n[0] + n[2] + n[4] + n[3] + n[1]
t = int(t)
k = t
for i in range(2):
    t = (t**2) % 10**5
m = (k * t) % 10**5
print('0' * (5 - len(str(m))) + str(m))",332,4,62,5/18/17 23:46,8,275,1,8,"[(True, '71232', '71232', 70536), (True, '84443', '84443', 70537), (True, '10151', '10151', 70538), (True, '36551', '36551', 70539), (True, '00000', '00000', 70540), (True, '99999', '99999', 70541), (True, '27651', '27651', 70542), (True, '00000', '00000', 70543), (True, '61851', '61851', 70544), (True, '82432', '82432', 70545)]",True,Accecpted,0.6831470806791146,0.8387096774193549,False,0.0
311174,27204459,"n = input()
t = n[0] + n[2] + n[4] + n[3] + n[1]
t = int(t)
k = t
for i in range(2):
    t = (t**2) % 10**5
print((k * t) % 10**5)",332,0,61,5/18/17 23:43,7,275,2,8,"[(True, '71232', '71232', 70536), (True, '84443', '84443', 70537), (True, '10151', '10151', 70538), (True, '36551', '36551', 70539), (False, '0', '00000', 70540), (True, '99999', '99999', 70541), (True, '27651', '27651', 70542), (False, '0', '00000', 70543), (True, '61851', '61851', 70544), (True, '82432', '82432', 70545)]",False,Wrong Answer,0.6831470806791146,0.8387096774193549,False,0.2
2813700,26480282,"n = int(input())
if n == 0:
    print(1)
else:
    ans = 1
    for i in range(n - 1):
        ans *= 3
    print(ans % 1000003)",332,5412,62,4/18/17 19:39,8,2410,1,8,"[(True, '9', '9', 30576), (True, '1', '1', 30577), (True, '3', '3', 30578), (True, '27', '27', 30579), (True, '243', '243', 30580), (True, '59049', '59049', 30581), (True, '594320', '594320', 30582), (True, '782957', '782957', 30583), (True, '729', '729', 30584), (True, '1', '1', 30585), (True, '691074', '691074', 30586), (True, '874011', '874011', 30587), (True, '842553', '842553', 30588), (True, '858672', '858672', 30589), (True, '557186', '557186', 30590), (True, '999535', '999535', 30591), (True, '946384', '946384', 30592), (True, '678945', '678945', 30593), (True, '247876', '247876', 30594), (True, '562128', '562128', 30595), (True, '327984', '327984', 30596), (True, '889192', '889192', 30597), (True, '794863', '794863', 30598), (True, '695035', '695035', 30599), (True, '376094', '376094', 30600)]",True,Accecpted,0.2993733556438484,0.6442307692307693,False,0.0
2813699,26480202,"n = int(input())
if n == 0:
    print(1)
else:
    print(3 ** (n - 1))",332,4504,62,4/18/17 19:35,5,2410,2,8,"[(True, '9', '9', 30576), (True, '1', '1', 30577), (True, '3', '3', 30578), (True, '27', '27', 30579), (True, '243', '243', 30580), (True, '59049', '59049', 30581), (False, '1594323', '594320', 30582), (False, '4782969', '782957', 30583), (True, '729', '729', 30584), (True, '1', '1', 30585), (False, '440690273160268878963485086584048121988474010917382722554973456075609532448901633180259437950202687321303259232290860785316984860700206303955114241752651224675873408399440267959338258076321613758130133372529539347042982605207698146020522057684695558163502059375160114801849018132346298605821789418305378740276756187926194096742805466102629298972852134694966312536457747390615453312898505588339646862703020142029890479621367604783461882915721944003538122044057700922967618406667', '691074', 30586), (False, '9807156282925035073434705418204381311300805964485196231813696374576359555808969313768530643144392880070452630038038494975665530220502604235956429374567766437515436452419771989263894558615387465761575589848164562404700881886219446288688268546883129169182752556611799932465303395369560888627346404074310606239283521', '874011', 30587), (False, '1541354884451767706866845713432101638419559829558509690353076170064832927241866513339213642929256301543452915544095716715113920615019610649916413133603404486758402173839487725685775634182228574121081231904675407508859073326721533802334207554167708928528258230324043201', '842553', 30588), (False, '156196529290611277745394348188145275647168578339258473612796920971749547591936862600959858043966861741296861285379230776729212689510840433807959699948980359131748460603999304563027814486995066616385751820283425587345305435045504487546593993282680960035985437292222777454997506073107601450847205355858704793768749093725882990025956359577277455476665071225580771400727038254338595040678780243609', '858672', 30589), (False, '1191091860922183638807137665266044794263234569771461701628272704220950746194328801609974872872218242163204496853544870285550950811066470927318645535272795778810121100165765947829721935177756783608987713004574447372381324419404340910135929417154413100995121207631731411135744786885446584179012401462053655621094253598393128869927776421441905194955552036403937952131811480055573729183327177583003653580198083', '557186', 30590), (False, '5070054779947717629308371384521789480239396134271756906351118151050703599166632466437044672432923755120388312614740520104204175287618362020963', '999535', 30591), (False, '33779053927646170061880368189887696656755180746472580531959972336498765649033243933663429904448635113800234726353382562831603', '946384', 30592), (False, '50491763596674092337467677340566650129048676654466630012200112207292705040565317564592356407944027575953875919590283145820178610147252333972348995842332158182641991276961955621050871810501352728088139118075093376915145665423214987813735236319871258644129074151971484424292688542404833506475384693646302066316167249365467379609030421524970798415005970665779606168268673660987173163167518859566969745801548895609523540278976493791753683', '678945', 30593), (False, '806664430432993429729871891140098359129771284314286620739746901279437815107893532062056929701905274433393329263590609413172791257650229411846750153020179082027283403346908798654430523564190163715974971481720255708858566504770340137633896733338750150519005228017122019504777445227813723715218721', '247876', 30594), (False, '2604917899836815618071210073936839965053694004090186741461032404131219281926997089121015046971541295610928234618702631314499929423802371918045877785641604368257734846062530127903601872233754085752856128341004316403397956505237293570467277635316701451876330081090596596153873848918471679599500121997511344843333132619685772838532047033693446661367792303615412301312271706881539745723936537374028990379893207521', '562128', 30595), (False, '278128389443693511257285776231761', '327984', 30596), (False, '35261255791043483447370488766124787933765872469366837631960857335455696800129767328313246728176845325836227517206726448239915790639260145689059681540134530612777229483363213499253721707581101489805452468088261473678435253446189430515524520945296813326178851489556121634748210770161', '889192', 30597), (False, '19561543743095875627012880576976551130087951414276345833508643437204209152948580167314659805227958648105535250212992176002111903210588861233958760447895291623544511572454335281103827450700749409077390892224681414805127045204492342530926346171575083440953962887074052809715356874223177833042278204475565539573919944354954311921679194723080312432662038093255990587938065833121070849602036945490157747166641770094451563031892269644306676035410987', '794863', 30598), (False, '39744041730830280015689061858119047067371171344760671192750041380009134706535322686950565109806091902868013527748171376744451992736511442650505682037562009228232075457809718032919106959712841816067816968896938801698801890507772742735838732143685354867049528948930974121226515399482353884020551117642717431102766389961462222983196107', '695035', 30599), (False, '225051707283248404043264398919956893908530667320312401148007480414880605588527456387252533530387658761101443', '376094', 30600)]",False,Wrong Answer,0.2993733556438484,0.6442307692307693,False,0.68
1575042,26096650,"import math
n,x,y = map(int,input().split(' '))
print (max(0,math.ceil((y*n)/100-x)))",349,5440,124,4/3/17 13:21,3,1390,1,8,"[(True, '1', '1', 153714), (True, '0', '0', 153715), (True, '1108', '1108', 153716), (True, '0', '0', 153717), (True, '0', '0', 153718), (True, '0', '0', 153719), (True, '9', '9', 153720), (True, '17', '17', 153721), (True, '2', '2', 153722), (True, '0', '0', 153723), (True, '0', '0', 153724), (True, '20', '20', 153725), (True, '248635', '248635', 153726), (True, '336578', '336578', 153727), (True, '541409', '541409', 153728), (True, '75290', '75290', 153729), (True, '700603', '700603', 153730), (True, '393339', '393339', 153731), (True, '432827', '432827', 153732), (True, '582642', '582642', 153733), (True, '731618', '731618', 153734), (True, '224269', '224269', 153735), (True, '771004', '771004', 153736), (True, '219441', '219441', 153737), (True, '40008', '40008', 153738), (True, '121706', '121706', 153739), (True, '228447', '228447', 153740), (True, '0', '0', 153741), (True, '0', '0', 153742), (True, '0', '0', 153743), (True, '0', '0', 153744), (True, '0', '0', 153745), (True, '0', '0', 153746), (True, '0', '0', 153747), (True, '99', '99', 153748), (True, '99', '99', 153749), (True, '999999', '999999', 153750), (True, '0', '0', 153751), (True, '990000', '990000', 153752), (True, '2', '2', 153753), (True, '717013', '717013', 153754), (True, '0', '0', 153755), (True, '1631', '1631', 153756)]",True,Accecpted,0.8408964152537145,0.9580838323353292,False,0.0
1575041,26096622,"import math
n,x,y = map(int,input().split(' '))
print (math.ceil((y*n)/100-x))",349,5420,124,4/3/17 13:20,3,1390,2,8,"[(True, '1', '1', 153714), (True, '0', '0', 153715), (True, '1108', '1108', 153716), (False, '-51', '0', 153717), (False, '-6', '0', 153718), (False, '-27', '0', 153719), (True, '9', '9', 153720), (True, '17', '17', 153721), (True, '2', '2', 153722), (False, '-2', '0', 153723), (False, '-2', '0', 153724), (True, '20', '20', 153725), (True, '248635', '248635', 153726), (True, '336578', '336578', 153727), (True, '541409', '541409', 153728), (True, '75290', '75290', 153729), (True, '700603', '700603', 153730), (True, '393339', '393339', 153731), (True, '432827', '432827', 153732), (True, '582642', '582642', 153733), (True, '731618', '731618', 153734), (True, '224269', '224269', 153735), (True, '771004', '771004', 153736), (True, '219441', '219441', 153737), (True, '40008', '40008', 153738), (True, '121706', '121706', 153739), (True, '228447', '228447', 153740), (False, '-5151', '0', 153741), (False, '-2274', '0', 153742), (False, '-4601', '0', 153743), (False, '-3524', '0', 153744), (False, '-5979', '0', 153745), (False, '-867', '0', 153746), (True, '0', '0', 153747), (True, '99', '99', 153748), (True, '99', '99', 153749), (True, '999999', '999999', 153750), (False, '-9900', '0', 153751), (True, '990000', '990000', 153752), (True, '2', '2', 153753), (True, '717013', '717013', 153754), (True, '0', '0', 153755), (True, '1631', '1631', 153756)]",False,Wrong Answer,0.8408964152537145,0.9580838323353292,False,0.2790697674418604
447765,27095983,"x=int(input())
y=1
if x>=13:
	y=8092
	x-=13
print(y<<x)",372,0,62,5/13/17 22:04,6,401,1,8,"[(True, '8', '8', 80227), (True, '1024', '1024', 80228), (True, '33940307968', '33940307968', 80229), (True, '1', '1', 80230), (True, '2', '2', 80231), (True, '4', '4', 80232), (True, '16', '16', 80233), (True, '32', '32', 80234), (True, '64', '64', 80235), (True, '128', '128', 80236), (True, '256', '256', 80237), (True, '512', '512', 80238), (True, '2048', '2048', 80239), (True, '4096', '4096', 80240), (True, '8092', '8092', 80241), (True, '16184', '16184', 80242), (True, '32368', '32368', 80243), (True, '64736', '64736', 80244), (True, '129472', '129472', 80245), (True, '258944', '258944', 80246), (True, '517888', '517888', 80247), (True, '1035776', '1035776', 80248), (True, '2071552', '2071552', 80249), (True, '4143104', '4143104', 80250), (True, '8286208', '8286208', 80251), (True, '16572416', '16572416', 80252), (True, '33144832', '33144832', 80253), (True, '66289664', '66289664', 80254), (True, '132579328', '132579328', 80255), (True, '265158656', '265158656', 80256), (True, '530317312', '530317312', 80257), (True, '1060634624', '1060634624', 80258), (True, '2121269248', '2121269248', 80259), (True, '4242538496', '4242538496', 80260), (True, '8485076992', '8485076992', 80261), (True, '16970153984', '16970153984', 80262)]",True,Accecpted,0.0,0.3170731707317073,False,0.0
445347,24785600,print(1<<int(input())),372,4508,46,2/18/17 20:27,1,401,2,8,"[(True, '8', '8', 80227), (True, '1024', '1024', 80228), (False, '34359738368', '33940307968', 80229), (True, '1', '1', 80230), (True, '2', '2', 80231), (True, '4', '4', 80232), (True, '16', '16', 80233), (True, '32', '32', 80234), (True, '64', '64', 80235), (True, '128', '128', 80236), (True, '256', '256', 80237), (True, '512', '512', 80238), (True, '2048', '2048', 80239), (True, '4096', '4096', 80240), (False, '8192', '8092', 80241), (False, '16384', '16184', 80242), (False, '32768', '32368', 80243), (False, '65536', '64736', 80244), (False, '131072', '129472', 80245), (False, '262144', '258944', 80246), (False, '524288', '517888', 80247), (False, '1048576', '1035776', 80248), (False, '2097152', '2071552', 80249), (False, '4194304', '4143104', 80250), (False, '8388608', '8286208', 80251), (False, '16777216', '16572416', 80252), (False, '33554432', '33144832', 80253), (False, '67108864', '66289664', 80254), (False, '134217728', '132579328', 80255), (False, '268435456', '265158656', 80256), (False, '536870912', '530317312', 80257), (False, '1073741824', '1060634624', 80258), (False, '2147483648', '2121269248', 80259), (False, '4294967296', '4242538496', 80260), (False, '8589934592', '8485076992', 80261), (False, '17179869184', '16970153984', 80262)]",False,Wrong Answer,0.0,0.3170731707317073,False,0.6388888888888888
1439817,24582551,"k=int(input())
a=sorted(list(map(int,input().split())),key=int)
s,i=0,0
while s<k and i>-12:
        i-=1
        s+=a[i]
if s>=k:print(-i)
else:print(""-1"")",372,4524,124,2/11/17 8:13,8,1280,1,8,"[(True, '2', '2', 148162), (True, '0', '0', 148163), (True, '3', '3', 148164), (True, '1', '1', 148165), (True, '1', '1', 148166), (True, '6', '6', 148167), (True, '-1', '-1', 148168), (True, '0', '0', 148169), (True, '1', '1', 148170), (True, '2', '2', 148171), (True, '3', '3', 148172), (True, '4', '4', 148173), (True, '5', '5', 148174), (True, '6', '6', 148175), (True, '7', '7', 148176), (True, '8', '8', 148177), (True, '9', '9', 148178), (True, '9', '9', 148179), (True, '9', '9', 148180), (True, '11', '11', 148181), (True, '5', '5', 148182), (True, '6', '6', 148183), (True, '7', '7', 148184), (True, '6', '6', 148185), (True, '7', '7', 148186), (True, '9', '9', 148187), (True, '11', '11', 148188), (True, '11', '11', 148189), (True, '-1', '-1', 148190), (True, '-1', '-1', 148191), (True, '-1', '-1', 148192), (True, '0', '0', 148193), (True, '-1', '-1', 148194), (True, '0', '0', 148195), (True, '1', '1', 148196), (True, '12', '12', 148197), (True, '12', '12', 148198), (True, '6', '6', 148199), (True, '-1', '-1', 148200)]",True,Accecpted,0.7348889200874658,0.9938650306748468,False,0.0
1439816,24582510,"k=int(input())
a=sorted(list(map(int,input().split())),key=int)
s,i=0,0
while s<k and i>-13:
        i-=1
        s+=a[i]
if s>=k:print(-i)
else:print(""-1"")",372,4512,92,2/11/17 8:11,8,1280,5,8,"[(True, '2', '2', 148162), (True, '0', '0', 148163), (True, '3', '3', 148164), (True, '1', '1', 148165), (True, '1', '1', 148166), (True, '6', '6', 148167), (False, '', '-1', 148168), (True, '0', '0', 148169), (True, '1', '1', 148170), (True, '2', '2', 148171), (True, '3', '3', 148172), (True, '4', '4', 148173), (True, '5', '5', 148174), (True, '6', '6', 148175), (True, '7', '7', 148176), (True, '8', '8', 148177), (True, '9', '9', 148178), (True, '9', '9', 148179), (True, '9', '9', 148180), (True, '11', '11', 148181), (True, '5', '5', 148182), (True, '6', '6', 148183), (True, '7', '7', 148184), (True, '6', '6', 148185), (True, '7', '7', 148186), (True, '9', '9', 148187), (True, '11', '11', 148188), (True, '11', '11', 148189), (False, '', '-1', 148190), (False, '', '-1', 148191), (False, '', '-1', 148192), (True, '0', '0', 148193), (False, '', '-1', 148194), (True, '0', '0', 148195), (True, '1', '1', 148196), (True, '12', '12', 148197), (True, '12', '12', 148198), (True, '6', '6', 148199), (False, '', '-1', 148200)]",False,Runtime Error,0.7348889200874658,0.9938650306748468,False,0.1538461538461538
118431,22470705,"n=input()
x=n.split()[0]
y=n.split()[1]
z=n.split()[2]
t=[int(x)+int(y)+int(z),2*int(x)+2*int(y),2*int(y)+2*int(z),2*int(x)+2*int(z)]
print(min(t))",453,12,77,11/24/16 18:48,11,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,9.974862690442709e-232,0.6303501945525292,False,0.0
118429,22470502,"x=int(input())
y=int(input())
z=int(input())
t=[x+y+z,2*x+2*y,2*y+2*z,2*x+2*z]
print(min(t))",453,0,31,11/24/16 18:40,9,102,5,8,"[(False, '', '60', 55884), (False, '', '4', 55885), (False, '', '134', 55886), (False, '', '2331', 55887), (False, '', '8', 55888), (False, '', '92', 55889), (False, '', '203802', 55890), (False, '', '55041796', 55891), (False, '', '12', 55892), (False, '', '543828', 55893), (False, '', '305580', 55894), (False, '', '7326', 55895), (False, '', '601800', 55896), (False, '', '955428', 55897), (False, '', '54676', 55898), (False, '', '2836', 55899), (False, '', '243848', 55900), (False, '', '300000000', 55901), (False, '', '8', 55902), (False, '', '4', 55903), (False, '', '4', 55904)]",False,Runtime Error,9.974862690442709e-232,0.6303501945525292,False,1.0
1227179,23026009,"a=input()
b=input()
c=input()
d=a+b+c
if d==d[::-1]:
    print('YES')
else:
    print('NO')",453,12,154,12/16/16 12:35,8,1114,1,8,"[(True, 'YES', 'YES', 136668), (True, 'NO', 'NO', 136669), (True, 'YES', 'YES', 136670), (True, 'YES', 'YES', 136671), (True, 'YES', 'YES', 136672), (True, 'YES', 'YES', 136673), (True, 'YES', 'YES', 136674), (True, 'NO', 'NO', 136675), (True, 'YES', 'YES', 136676), (True, 'YES', 'YES', 136677), (True, 'NO', 'NO', 136678), (True, 'YES', 'YES', 136679), (True, 'YES', 'YES', 136680), (True, 'YES', 'YES', 136681), (True, 'NO', 'NO', 136682), (True, 'NO', 'NO', 136683), (True, 'YES', 'YES', 136684), (True, 'NO', 'NO', 136685), (True, 'NO', 'NO', 136686), (True, 'YES', 'YES', 136687), (True, 'NO', 'NO', 136688), (True, 'NO', 'NO', 136689), (True, 'NO', 'NO', 136690), (True, 'YES', 'YES', 136691), (True, 'NO', 'NO', 136692), (True, 'NO', 'NO', 136693), (True, 'NO', 'NO', 136694), (True, 'YES', 'YES', 136695), (True, 'NO', 'NO', 136696), (True, 'YES', 'YES', 136697), (True, 'NO', 'NO', 136698), (True, 'NO', 'NO', 136699), (True, 'NO', 'NO', 136700), (True, 'NO', 'NO', 136701), (True, 'YES', 'YES', 136702), (True, 'NO', 'NO', 136703), (True, 'NO', 'NO', 136704), (True, 'NO', 'NO', 136705), (True, 'NO', 'NO', 136706), (True, 'NO', 'NO', 136707)]",True,Accecpted,0.4792365811426396,0.784,False,0.0
1227178,23025958,"a=input()
b=input()
c=input()
d=a+b+c
if 'X' in d:
    if d==d[::-1]:
        print('YES')
    else:
        print('NO')
else:
    print('NO')",453,0,124,12/16/16 12:31,11,1114,2,8,"[(True, 'YES', 'YES', 136668), (True, 'NO', 'NO', 136669), (False, 'NO', 'YES', 136670), (True, 'YES', 'YES', 136671), (True, 'YES', 'YES', 136672), (True, 'YES', 'YES', 136673), (True, 'YES', 'YES', 136674), (True, 'NO', 'NO', 136675), (True, 'YES', 'YES', 136676), (True, 'YES', 'YES', 136677), (True, 'NO', 'NO', 136678), (True, 'YES', 'YES', 136679), (True, 'YES', 'YES', 136680), (True, 'YES', 'YES', 136681), (True, 'NO', 'NO', 136682), (True, 'NO', 'NO', 136683), (True, 'YES', 'YES', 136684), (True, 'NO', 'NO', 136685), (True, 'NO', 'NO', 136686), (True, 'YES', 'YES', 136687), (True, 'NO', 'NO', 136688), (True, 'NO', 'NO', 136689), (True, 'NO', 'NO', 136690), (True, 'YES', 'YES', 136691), (True, 'NO', 'NO', 136692), (True, 'NO', 'NO', 136693), (True, 'NO', 'NO', 136694), (True, 'YES', 'YES', 136695), (True, 'NO', 'NO', 136696), (True, 'YES', 'YES', 136697), (True, 'NO', 'NO', 136698), (True, 'NO', 'NO', 136699), (True, 'NO', 'NO', 136700), (True, 'NO', 'NO', 136701), (True, 'YES', 'YES', 136702), (True, 'NO', 'NO', 136703), (True, 'NO', 'NO', 136704), (True, 'NO', 'NO', 136705), (True, 'NO', 'NO', 136706), (True, 'NO', 'NO', 136707)]",False,Wrong Answer,0.4792365811426396,0.784,False,0.025
1336,25017781,"r,b=map(int,input().split())
can=0
cant=0

if(r>b):
    while(b>0):
        b-=1
        r-=1
        can+=1
    while(r>1):
        r-=2
        cant+=1
elif(r<b):
    while(r>0):
        r-=1
        b-=1
        can+=1
    while(b>1):
        b-=2
        cant+=1
else:
    while(r>0):
        r-=1
        can+=1

print(can,cant)",522,4524,62,2/25/17 19:30,51,2,1,8,"[(True, '1 1', '1 1', 47757), (True, '2 0', '2 0', 47758), (True, '3 2', '3 2', 47759), (True, '100 0', '100 0', 47760), (True, '4 3', '4 3', 47761), (True, '6 2', '6 2', 47762), (True, '6 2', '6 2', 47763), (True, '10 15', '10 15', 47764), (True, '11 22', '11 22', 47765), (True, '30 2', '30 2', 47766), (True, '33 0', '33 0', 47767), (True, '45 27', '45 27', 47768), (True, '23 38', '23 38', 47769), (True, '12 16', '12 16', 47770), (True, '1 0', '1 0', 47771), (True, '1 49', '1 49', 47772), (True, '1 49', '1 49', 47773), (True, '59 4', '59 4', 47774), (True, '45 27', '45 27', 47775), (True, '99 0', '99 0', 47776), (True, '98 1', '98 1', 47777), (True, '12 23', '12 23', 47778), (True, '4 41', '4 41', 47779), (True, '21 23', '21 23', 47780), (True, '11 44', '11 44', 47781), (True, '10 45', '10 45', 47782), (True, '15 15', '15 15', 47783), (True, '11 10', '11 10', 47784), (True, '34 31', '34 31', 47785), (True, '89 0', '89 0', 47786)]",True,Accecpted,0.8843865924896842,0.9973890339425588,False,0.0
1335,25017577,"r,b=map(int,input().split())
can=0
cant=0

if(r>b):
    while(b>0):
        b-=1
        r-=1
        can+=1
    while(r>1):
        r-=2
        cant+=1
elif(r<b):
    while(r>0):
        r-=1
        b-=1
        can+=1
    while(b>1):
        b-=1
        cant+=1
else:
    while(r>0):
        r-=1
        can+=1

print(can,cant)",522,4528,62,2/25/17 19:20,51,2,2,8,"[(True, '1 1', '1 1', 47757), (True, '2 0', '2 0', 47758), (True, '3 2', '3 2', 47759), (True, '100 0', '100 0', 47760), (False, '4 5', '4 3', 47761), (False, '6 3', '6 2', 47762), (False, '6 4', '6 2', 47763), (False, '10 29', '10 15', 47764), (False, '11 44', '11 22', 47765), (True, '30 2', '30 2', 47766), (True, '33 0', '33 0', 47767), (True, '45 27', '45 27', 47768), (True, '23 38', '23 38', 47769), (True, '12 16', '12 16', 47770), (True, '1 0', '1 0', 47771), (False, '1 98', '1 49', 47772), (True, '1 49', '1 49', 47773), (True, '59 4', '59 4', 47774), (False, '45 53', '45 27', 47775), (True, '99 0', '99 0', 47776), (True, '98 1', '98 1', 47777), (True, '12 23', '12 23', 47778), (True, '4 41', '4 41', 47779), (True, '21 23', '21 23', 47780), (True, '11 44', '11 44', 47781), (True, '10 45', '10 45', 47782), (False, '15 29', '15 15', 47783), (False, '11 20', '11 10', 47784), (False, '34 61', '34 31', 47785), (True, '89 0', '89 0', 47786)]",False,Wrong Answer,0.8843865924896842,0.9973890339425588,False,0.3333333333333333
120845,25091331,"'''input
100 33 34
'''
d1, d2, d3 = map(int, input().split())
print(min(2*d1+2*d2, d1+d2+d3, 2*d1+2*d3,2*d2+2*d3))",531,4524,62,2/28/17 5:17,5,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.5334317510807476,0.8625592417061612,False,0.0
120844,25091309,"'''input
1 1 5
'''
d1, d2, d3 = map(int, input().split())
print(min(2*d1+2*d2, d1+d2+d3))",531,4480,46,2/28/17 5:14,5,102,2,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (False, '167', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (False, '127520897', '55041796', 55891), (False, '293554', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (False, '13552', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (False, '9', '8', 55902), (False, '1002', '4', 55903), (False, '100000002', '4', 55904)]",False,Wrong Answer,0.5334317510807476,0.8625592417061612,False,0.3333333333333333
195774,25305224,"'''input
6 of month
'''
s = input().split()
n, t = int(s[0]), s[2]
d = list(range(1,30)) * 12
d += [30]*11 + [31]*7
if t == ""week"" and (n == 5 or n == 6):
	print(53)
elif t == ""week"":
	print(52)
else:
	print(d.count(n))",531,4520,62,3/7/17 3:07,13,159,1,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (True, '52', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (True, '12', '12', 61032)]",True,Accecpted,0.8329309946736377,0.9891540130151844,False,0.0
195773,25305218,"'''input
30 of month
'''
s = input().split()
n, t = int(s[0]), s[2]
d = list(range(1,30)) * 12
d += [30]*11 + [31]*7
if t == ""week"" and n == 5 or n == 6:
	print(53)
elif t == ""week"":
	print(52)
else:
	print(d.count(n))",531,4476,61,3/7/17 3:07,13,159,2,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (True, '52', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (False, '53', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (True, '12', '12', 61032)]",False,Wrong Answer,0.8329309946736377,0.9891540130151844,False,0.0263157894736842
213669,26603590,"'''input
2 4 5
'''
l, r, k = map(int, input().split())
t = 0
for x in range(100000):
	if k**x >= l and k**x <= r:
		print(k**x, end="" "")
		t = 1
	elif k**x > r:
		break
if t == 0:
	print(-1)",531,5420,62,4/23/17 15:15,13,178,1,8,"[(True, '1 2 4 8', '1 2 4 8', 62672), (True, '-1', '-1', 62673), (True, '28554 815330916', '28554 815330916', 62674), (True, '313325401', '313325401', 62675), (True, '97969 30664297 9597924961', '97969 30664297 9597924961', 62676), (True, '116964 40001688 13680577296', '116964 40001688 13680577296', 62677), (True, '10000 100000 1000000 10000000 100000000 1000000000 10000000000', '10000 100000 1000000 10000000 100000000 1000000000 10000000000', 62678), (True, '79507 3418801 147008443 6321363049', '79507 3418801 147008443 6321363049', 62679), (True, '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', 62680), (True, '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', 62681), (True, '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', 62683), (True, '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', 62684), (True, '5 25', '5 25', 62685), (True, '1 90', '1 90', 62686), (True, '4624 314432 21381376 1453933568 98867482624', '4624 314432 21381376 1453933568 98867482624', 62687), (True, '2809 148877 7890481 418195493 22164361129', '2809 148877 7890481 418195493 22164361129', 62688), (True, '198765', '198765', 62689), (True, '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', 62690), (True, '-1', '-1', 62691), (True, '1', '1', 62692), (True, '-1', '-1', 62693), (True, '-1', '-1', 62694), (True, '-1', '-1', 62695), (True, '-1', '-1', 62696), (True, '-1', '-1', 62697), (True, '-1', '-1', 62698), (True, '10', '10', 62699), (True, '-1', '-1', 62700), (True, '1 1000000000 1000000000000000000', '1 1000000000 1000000000000000000', 62701), (True, '1000000000000000000', '1000000000000000000', 62702), (True, '1000000000 1000000000000000000', '1000000000 1000000000000000000', 62703), (True, '1', '1', 62704), (True, '1 1000000000', '1 1000000000', 62705), (True, '1 999999990 999999980000000100', '1 999999990 999999980000000100', 62706), (True, '1 999999984 999999968000000256', '1 999999984 999999968000000256', 62707), (True, '1 324325 105186705625 34114678301828125', '1 324325 105186705625 34114678301828125', 62708), (True, '1 999999523 999999046000227529', '1 999999523 999999046000227529', 62709), (True, '1 3 9 27 81 243', '1 3 9 27 81 243', 62710), (True, '326816522793383797', '326816522793383797', 62711), (True, '1 690852001 477276487285704001', '1 690852001 477276487285704001', 62712), (True, '1 918745157 844092663510954649', '1 918745157 844092663510954649', 62713), (True, '1 131299843 17239648771824649', '1 131299843 17239648771824649', 62714), (True, '-1', '-1', 62715)]",True,Accecpted,0.552364053200381,0.8410757946210269,False,0.0
213668,26603543,"'''input
1 999999999999999999 1000000000
'''
l, r, k = map(int, input().split())
for x in range(100000):
	if k**x >= l and k**x <= r:
		print(k**x, end="" "")
	elif k**x > r:
		break
else:
	print(-1)",531,5408,30,4/23/17 15:13,11,178,2,8,"[(True, '1 2 4 8', '1 2 4 8', 62672), (False, '', '-1', 62673), (True, '28554 815330916', '28554 815330916', 62674), (True, '313325401', '313325401', 62675), (True, '97969 30664297 9597924961', '97969 30664297 9597924961', 62676), (True, '116964 40001688 13680577296', '116964 40001688 13680577296', 62677), (True, '10000 100000 1000000 10000000 100000000 1000000000 10000000000', '10000 100000 1000000 10000000 100000000 1000000000 10000000000', 62678), (True, '79507 3418801 147008443 6321363049', '79507 3418801 147008443 6321363049', 62679), (True, '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', 62680), (True, '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', 62681), (True, '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', 62683), (True, '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', 62684), (True, '5 25', '5 25', 62685), (True, '1 90', '1 90', 62686), (True, '4624 314432 21381376 1453933568 98867482624', '4624 314432 21381376 1453933568 98867482624', 62687), (True, '2809 148877 7890481 418195493 22164361129', '2809 148877 7890481 418195493 22164361129', 62688), (True, '198765', '198765', 62689), (True, '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', 62690), (False, '', '-1', 62691), (True, '1', '1', 62692), (False, '', '-1', 62693), (False, '', '-1', 62694), (False, '', '-1', 62695), (False, '', '-1', 62696), (False, '', '-1', 62697), (False, '', '-1', 62698), (True, '10', '10', 62699), (False, '', '-1', 62700), (True, '1 1000000000 1000000000000000000', '1 1000000000 1000000000000000000', 62701), (True, '1000000000000000000', '1000000000000000000', 62702), (True, '1000000000 1000000000000000000', '1000000000 1000000000000000000', 62703), (True, '1', '1', 62704), (True, '1 1000000000', '1 1000000000', 62705), (True, '1 999999990 999999980000000100', '1 999999990 999999980000000100', 62706), (True, '1 999999984 999999968000000256', '1 999999984 999999968000000256', 62707), (True, '1 324325 105186705625 34114678301828125', '1 324325 105186705625 34114678301828125', 62708), (True, '1 999999523 999999046000227529', '1 999999523 999999046000227529', 62709), (True, '1 3 9 27 81 243', '1 3 9 27 81 243', 62710), (True, '326816522793383797', '326816522793383797', 62711), (True, '1 690852001 477276487285704001', '1 690852001 477276487285704001', 62712), (True, '1 918745157 844092663510954649', '1 918745157 844092663510954649', 62713), (True, '1 131299843 17239648771824649', '1 131299843 17239648771824649', 62714), (False, '', '-1', 62715)]",False,Wrong Answer,0.552364053200381,0.8410757946210269,False,0.2325581395348837
230355,25014628,"'''input
12
'''
n = int(input())
if n % 5 == 0:
	print(n//5)
else:
	print(n//5+1)",531,4528,62,2/25/17 17:07,8,194,1,8,"[(True, '1', '1', 63841), (True, '3', '3', 63842), (True, '200000', '200000', 63843), (True, '9', '9', 63844), (True, '200000', '200000', 63845), (True, '1', '1', 63846), (True, '1', '1', 63847), (True, '1', '1', 63848), (True, '1', '1', 63849), (True, '106841', '106841', 63850), (True, '93914', '93914', 63851), (True, '100576', '100576', 63852), (True, '188443', '188443', 63853), (True, '20', '20', 63854), (True, '11', '11', 63855), (True, '18', '18', 63856), (True, '115', '115', 63857), (True, '144', '144', 63858), (True, '146', '146', 63859), (True, '1781', '1781', 63860), (True, '729', '729', 63861), (True, '886', '886', 63862), (True, '9315', '9315', 63863), (True, '17276', '17276', 63864), (True, '18838', '18838', 63865), (True, '199998', '199998', 63866), (True, '199999', '199999', 63867), (True, '199999', '199999', 63868), (True, '199999', '199999', 63869), (True, '199999', '199999', 63870), (True, '199999', '199999', 63871), (True, '200000', '200000', 63872), (True, '200000', '200000', 63873), (True, '200000', '200000', 63874)]",True,Accecpted,1.2886556614526506e-78,0.5714285714285714,False,0.0
230354,25014605,"'''input
12
'''
print(int(input())//5 + 1)",531,4488,30,2/25/17 17:06,4,194,2,8,"[(False, '2', '1', 63841), (True, '3', '3', 63842), (True, '200000', '200000', 63843), (True, '9', '9', 63844), (False, '200001', '200000', 63845), (True, '1', '1', 63846), (True, '1', '1', 63847), (True, '1', '1', 63848), (True, '1', '1', 63849), (True, '106841', '106841', 63850), (True, '93914', '93914', 63851), (True, '100576', '100576', 63852), (True, '188443', '188443', 63853), (True, '20', '20', 63854), (True, '11', '11', 63855), (True, '18', '18', 63856), (True, '115', '115', 63857), (True, '144', '144', 63858), (True, '146', '146', 63859), (True, '1781', '1781', 63860), (False, '730', '729', 63861), (True, '886', '886', 63862), (True, '9315', '9315', 63863), (False, '17277', '17276', 63864), (False, '18839', '18838', 63865), (False, '199999', '199998', 63866), (True, '199999', '199999', 63867), (True, '199999', '199999', 63868), (True, '199999', '199999', 63869), (True, '199999', '199999', 63870), (False, '200000', '199999', 63871), (True, '200000', '200000', 63872), (True, '200000', '200000', 63873), (True, '200000', '200000', 63874)]",False,Wrong Answer,1.2886556614526506e-78,0.5714285714285714,False,0.2058823529411764
247386,26335630,"'''input
1 1000000
'''
a, b = map(int, input().split())
s = 0
n = str(list(range(a, b+1)))
d = [6, 2, 5, 5, 4, 5, 6, 3, 7, 6]
for x in range(10):
	s += d[x] * n.count(str(x))
print(s)",531,41324,265,4/13/17 14:28,10,209,1,8,"[(True, '12', '12', 64962), (True, '39', '39', 64963), (True, '928', '928', 64964), (True, '188446', '188446', 64965), (True, '5645356', '5645356', 64966), (True, '28733372', '28733372', 64967), (True, '38', '38', 64968), (True, '3860750', '3860750', 64969), (True, '28733370', '28733370', 64970), (True, '28733334', '28733334', 64971), (True, '122', '122', 64972)]",True,Accecpted,0.2432028936345348,0.2019704433497537,False,0.0
247385,26335544,"'''input
10 15
'''
a, b = map(int, input().split())
s = 0
d = {""0"": 6, ""1"": 2, ""2"": 5, ""3"": 5, ""4"": 4, ""5"": 5, ""6"": 6, ""7"": 3, ""8"": 7, ""9"": 6}
for x in range(a, b+1):
	for l in str(x):
		s += d[l]
print(s)",531,5416,1000,4/13/17 14:23,10,209,3,8,"[(True, '12', '12', 64962), (True, '39', '39', 64963), (True, '928', '928', 64964), (True, '188446', '188446', 64965), (True, '5645356', '5645356', 64966), (True, '28733372', '28733372', 64967), (True, '38', '38', 64968), (True, '3860750', '3860750', 64969), (True, '28733370', '28733370', 64970), (True, '28733334', '28733334', 64971), (True, '122', '122', 64972)]",True,Time Limit,0.2432028936345348,0.2019704433497537,False,0.0
310010,26299497,"'''input
1
'''
n = int(input())
print(2*(2**n-1))",531,4500,61,4/11/17 16:15,5,263,1,8,"[(True, '6', '6', 70196), (True, '2', '2', 70197), (True, '14', '14', 70198), (True, '62', '62', 70199), (True, '8190', '8190', 70200), (True, '34359738366', '34359738366', 70201), (True, '17592186044414', '17592186044414', 70202), (True, '1125899906842622', '1125899906842622', 70203), (True, '36028797018963966', '36028797018963966', 70204), (True, '72057594037927934', '72057594037927934', 70205)]",True,Accecpted,0.4347208719449914,0.9622641509433962,False,0.0
310009,26299485,"'''input
2
'''
n = int(input())
print(n*(2**n-1))",531,4468,46,4/11/17 16:15,5,263,2,8,"[(True, '6', '6', 70196), (False, '1', '2', 70197), (False, '21', '14', 70198), (False, '155', '62', 70199), (False, '49140', '8190', 70200), (False, '584115552222', '34359738366', 70201), (False, '378231999954901', '17592186044414', 70202), (False, '27584547717644239', '1125899906842622', 70203), (False, '972777519512027082', '36028797018963966', 70204), (False, '1981583836043018185', '72057594037927934', 70205)]",False,Wrong Answer,0.4347208719449914,0.9622641509433962,False,0.9
332413,26356725,"'''input
6 11 6
'''
from math import gcd
a, b, c = map(int, input().split())
for x in range(c//a+1):
	if (c - x*a) % b == 0:
		print(""Yes"")
		break
else:
	print(""No"")",531,5452,77,4/14/17 15:43,11,290,1,8,"[(True, 'No', 'No', 71050), (True, 'Yes', 'Yes', 71051), (True, 'Yes', 'Yes', 71052), (True, 'Yes', 'Yes', 71053), (True, 'Yes', 'Yes', 71054), (True, 'No', 'No', 71055), (True, 'Yes', 'Yes', 71056), (True, 'No', 'No', 71057), (True, 'No', 'No', 71058), (True, 'Yes', 'Yes', 71059), (True, 'Yes', 'Yes', 71060), (True, 'Yes', 'Yes', 71061), (True, 'Yes', 'Yes', 71062), (True, 'No', 'No', 71063), (True, 'No', 'No', 71064), (True, 'Yes', 'Yes', 71065), (True, 'Yes', 'Yes', 71066), (True, 'Yes', 'Yes', 71067), (True, 'Yes', 'Yes', 71068), (True, 'Yes', 'Yes', 71069), (True, 'Yes', 'Yes', 71070), (True, 'No', 'No', 71071), (True, 'No', 'No', 71072), (True, 'No', 'No', 71073), (True, 'Yes', 'Yes', 71074), (True, 'Yes', 'Yes', 71075), (True, 'Yes', 'Yes', 71076), (True, 'Yes', 'Yes', 71077), (True, 'Yes', 'Yes', 71078), (True, 'No', 'No', 71079), (True, 'Yes', 'Yes', 71080), (True, 'No', 'No', 71081), (True, 'Yes', 'Yes', 71082), (True, 'Yes', 'Yes', 71083), (True, 'No', 'No', 71084), (True, 'Yes', 'Yes', 71085), (True, 'No', 'No', 71086), (True, 'Yes', 'Yes', 71087), (True, 'Yes', 'Yes', 71088), (True, 'No', 'No', 71089), (True, 'Yes', 'Yes', 71090), (True, 'No', 'No', 71091), (True, 'Yes', 'Yes', 71092), (True, 'Yes', 'Yes', 71093), (True, 'No', 'No', 71094), (True, 'No', 'No', 71095), (True, 'Yes', 'Yes', 71096), (True, 'Yes', 'Yes', 71097), (True, 'No', 'No', 71098), (True, 'No', 'No', 71099), (True, 'Yes', 'Yes', 71100), (True, 'Yes', 'Yes', 71101), (True, 'No', 'No', 71102), (True, 'No', 'No', 71103), (True, 'No', 'No', 71104), (True, 'No', 'No', 71105), (True, 'No', 'No', 71106), (True, 'No', 'No', 71107), (True, 'No', 'No', 71108), (True, 'Yes', 'Yes', 71109), (True, 'Yes', 'Yes', 71110), (True, 'Yes', 'Yes', 71111), (True, 'Yes', 'Yes', 71112), (True, 'Yes', 'Yes', 71113), (True, 'Yes', 'Yes', 71114), (True, 'No', 'No', 71115), (True, 'Yes', 'Yes', 71116), (True, 'Yes', 'Yes', 71117), (True, 'No', 'No', 71118), (True, 'No', 'No', 71119), (True, 'No', 'No', 71120), (True, 'Yes', 'Yes', 71121), (True, 'Yes', 'Yes', 71122), (True, 'Yes', 'Yes', 71123), (True, 'Yes', 'Yes', 71124), (True, 'No', 'No', 71125), (True, 'No', 'No', 71126), (True, 'Yes', 'Yes', 71127), (True, 'No', 'No', 71128), (True, 'No', 'No', 71129), (True, 'Yes', 'Yes', 71130), (True, 'Yes', 'Yes', 71131), (True, 'Yes', 'Yes', 71132), (True, 'No', 'No', 71133), (True, 'Yes', 'Yes', 71134), (True, 'Yes', 'Yes', 71135), (True, 'Yes', 'Yes', 71136), (True, 'Yes', 'Yes', 71137), (True, 'No', 'No', 71138), (True, 'Yes', 'Yes', 71139), (True, 'Yes', 'Yes', 71140), (True, 'No', 'No', 71141), (True, 'No', 'No', 71142), (True, 'Yes', 'Yes', 71143), (True, 'Yes', 'Yes', 71144), (True, 'Yes', 'Yes', 71145), (True, 'Yes', 'Yes', 71146), (True, 'No', 'No', 71147), (True, 'No', 'No', 71148), (True, 'Yes', 'Yes', 71149), (True, 'Yes', 'Yes', 71150), (True, 'No', 'No', 71151), (True, 'No', 'No', 71152), (True, 'Yes', 'Yes', 71153), (True, 'Yes', 'Yes', 71154), (True, 'Yes', 'Yes', 71155), (True, 'No', 'No', 71156), (True, 'No', 'No', 71157), (True, 'Yes', 'Yes', 71158), (True, 'Yes', 'Yes', 71159), (True, 'Yes', 'Yes', 71160), (True, 'No', 'No', 71161), (True, 'No', 'No', 71162), (True, 'Yes', 'Yes', 71163), (True, 'Yes', 'Yes', 71164), (True, 'Yes', 'Yes', 71165), (True, 'Yes', 'Yes', 71166), (True, 'Yes', 'Yes', 71167), (True, 'Yes', 'Yes', 71168), (True, 'Yes', 'Yes', 71169), (True, 'No', 'No', 71170), (True, 'Yes', 'Yes', 71171), (True, 'No', 'No', 71172), (True, 'Yes', 'Yes', 71173), (True, 'No', 'No', 71174), (True, 'No', 'No', 71175), (True, 'No', 'No', 71176), (True, 'Yes', 'Yes', 71177), (True, 'Yes', 'Yes', 71178), (True, 'Yes', 'Yes', 71179), (True, 'Yes', 'Yes', 71180), (True, 'Yes', 'Yes', 71181), (True, 'Yes', 'Yes', 71182), (True, 'No', 'No', 71183)]",True,Accecpted,0.4718730424510008,0.6821192052980133,False,0.0
332412,26356293,"'''input
6 11 6
'''
from math import gcd
a, b, c = map(int, input().split())
print(""Yes"" if c % gcd(a, b) == 0 else ""No"")",531,5452,77,4/14/17 15:21,6,290,2,8,"[(True, 'No', 'No', 71050), (True, 'Yes', 'Yes', 71051), (True, 'Yes', 'Yes', 71052), (True, 'Yes', 'Yes', 71053), (True, 'Yes', 'Yes', 71054), (True, 'No', 'No', 71055), (True, 'Yes', 'Yes', 71056), (True, 'No', 'No', 71057), (True, 'No', 'No', 71058), (True, 'Yes', 'Yes', 71059), (True, 'Yes', 'Yes', 71060), (True, 'Yes', 'Yes', 71061), (True, 'Yes', 'Yes', 71062), (True, 'No', 'No', 71063), (True, 'No', 'No', 71064), (True, 'Yes', 'Yes', 71065), (True, 'Yes', 'Yes', 71066), (True, 'Yes', 'Yes', 71067), (True, 'Yes', 'Yes', 71068), (True, 'Yes', 'Yes', 71069), (True, 'Yes', 'Yes', 71070), (True, 'No', 'No', 71071), (False, 'Yes', 'No', 71072), (False, 'Yes', 'No', 71073), (True, 'Yes', 'Yes', 71074), (True, 'Yes', 'Yes', 71075), (True, 'Yes', 'Yes', 71076), (True, 'Yes', 'Yes', 71077), (True, 'Yes', 'Yes', 71078), (True, 'No', 'No', 71079), (True, 'Yes', 'Yes', 71080), (False, 'Yes', 'No', 71081), (True, 'Yes', 'Yes', 71082), (True, 'Yes', 'Yes', 71083), (False, 'Yes', 'No', 71084), (True, 'Yes', 'Yes', 71085), (False, 'Yes', 'No', 71086), (True, 'Yes', 'Yes', 71087), (True, 'Yes', 'Yes', 71088), (False, 'Yes', 'No', 71089), (True, 'Yes', 'Yes', 71090), (True, 'No', 'No', 71091), (True, 'Yes', 'Yes', 71092), (True, 'Yes', 'Yes', 71093), (True, 'No', 'No', 71094), (True, 'No', 'No', 71095), (True, 'Yes', 'Yes', 71096), (True, 'Yes', 'Yes', 71097), (True, 'No', 'No', 71098), (True, 'No', 'No', 71099), (True, 'Yes', 'Yes', 71100), (True, 'Yes', 'Yes', 71101), (True, 'No', 'No', 71102), (False, 'Yes', 'No', 71103), (False, 'Yes', 'No', 71104), (True, 'No', 'No', 71105), (True, 'No', 'No', 71106), (False, 'Yes', 'No', 71107), (True, 'No', 'No', 71108), (True, 'Yes', 'Yes', 71109), (True, 'Yes', 'Yes', 71110), (True, 'Yes', 'Yes', 71111), (True, 'Yes', 'Yes', 71112), (True, 'Yes', 'Yes', 71113), (True, 'Yes', 'Yes', 71114), (False, 'Yes', 'No', 71115), (True, 'Yes', 'Yes', 71116), (True, 'Yes', 'Yes', 71117), (False, 'Yes', 'No', 71118), (True, 'No', 'No', 71119), (True, 'No', 'No', 71120), (True, 'Yes', 'Yes', 71121), (True, 'Yes', 'Yes', 71122), (True, 'Yes', 'Yes', 71123), (True, 'Yes', 'Yes', 71124), (True, 'No', 'No', 71125), (False, 'Yes', 'No', 71126), (True, 'Yes', 'Yes', 71127), (False, 'Yes', 'No', 71128), (True, 'No', 'No', 71129), (True, 'Yes', 'Yes', 71130), (True, 'Yes', 'Yes', 71131), (True, 'Yes', 'Yes', 71132), (False, 'Yes', 'No', 71133), (True, 'Yes', 'Yes', 71134), (True, 'Yes', 'Yes', 71135), (True, 'Yes', 'Yes', 71136), (True, 'Yes', 'Yes', 71137), (True, 'No', 'No', 71138), (True, 'Yes', 'Yes', 71139), (True, 'Yes', 'Yes', 71140), (True, 'No', 'No', 71141), (True, 'No', 'No', 71142), (True, 'Yes', 'Yes', 71143), (True, 'Yes', 'Yes', 71144), (True, 'Yes', 'Yes', 71145), (True, 'Yes', 'Yes', 71146), (True, 'No', 'No', 71147), (True, 'No', 'No', 71148), (True, 'Yes', 'Yes', 71149), (True, 'Yes', 'Yes', 71150), (False, 'Yes', 'No', 71151), (False, 'Yes', 'No', 71152), (True, 'Yes', 'Yes', 71153), (True, 'Yes', 'Yes', 71154), (True, 'Yes', 'Yes', 71155), (False, 'Yes', 'No', 71156), (True, 'No', 'No', 71157), (True, 'Yes', 'Yes', 71158), (True, 'Yes', 'Yes', 71159), (True, 'Yes', 'Yes', 71160), (False, 'Yes', 'No', 71161), (False, 'Yes', 'No', 71162), (True, 'Yes', 'Yes', 71163), (True, 'Yes', 'Yes', 71164), (True, 'Yes', 'Yes', 71165), (True, 'Yes', 'Yes', 71166), (True, 'Yes', 'Yes', 71167), (True, 'Yes', 'Yes', 71168), (True, 'Yes', 'Yes', 71169), (False, 'Yes', 'No', 71170), (True, 'Yes', 'Yes', 71171), (True, 'No', 'No', 71172), (True, 'Yes', 'Yes', 71173), (False, 'Yes', 'No', 71174), (False, 'Yes', 'No', 71175), (False, 'Yes', 'No', 71176), (True, 'Yes', 'Yes', 71177), (True, 'Yes', 'Yes', 71178), (True, 'Yes', 'Yes', 71179), (True, 'Yes', 'Yes', 71180), (True, 'Yes', 'Yes', 71181), (True, 'Yes', 'Yes', 71182), (False, 'Yes', 'No', 71183)]",False,Wrong Answer,0.4718730424510008,0.6821192052980133,False,0.1791044776119403
417990,27364656,"'''input
4 4
'''
a1, a2 = map(int, input().split())
if a1 == a2 == 1:
	print(0)
	quit()
if a1 > a2:
	a1, a2 = a2, a1
t = 0
while a1 > 0:
	a1 += 1
	a2 -= 2
	t += 1
	if a1 > a2:
		a1, a2 = a2, a1
print(t)",531,8,62,5/27/17 1:49,17,377,1,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (True, '0', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",True,Accecpted,0.8286218872385858,0.9017632241813602,False,0.0
417989,27364644,"'''input
4 4
'''
a1, a2 = map(int, input().split())
if a1 > a2:
	a1, a2 = a2, a1
t = 0
while a1 > 0:
	a1 += 1
	a2 -= 2
	t += 1
	if a1 > a2:
		a1, a2 = a2, a1
print(t)",531,0,46,5/27/17 1:48,14,377,2,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (False, '1', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",False,Wrong Answer,0.8286218872385858,0.9017632241813602,False,0.0256410256410256
459913,25305319,"'''input
3 2 -100
'''
n, a, b = map(int, input().split())
print((a + b % n) if a + b % n <= n else (a + b % n) % n)",531,4524,77,3/7/17 3:23,5,419,1,8,"[(True, '3', '3', 81313), (True, '4', '4', 81314), (True, '3', '3', 81315), (True, '1', '1', 81316), (True, '1', '1', 81317), (True, '1', '1', 81318), (True, '100', '100', 81319), (True, '54', '54', 81320), (True, '37', '37', 81321), (True, '41', '41', 81322), (True, '42', '42', 81323), (True, '97', '97', 81324), (True, '35', '35', 81325), (True, '48', '48', 81326), (True, '76', '76', 81327), (True, '55', '55', 81328), (True, '65', '65', 81329), (True, '1', '1', 81330), (True, '1', '1', 81331), (True, '1', '1', 81332), (True, '1', '1', 81333), (True, '3', '3', 81334), (True, '3', '3', 81335), (True, '2', '2', 81336), (True, '2', '2', 81337), (True, '2', '2', 81338), (True, '4', '4', 81339), (True, '2', '2', 81340), (True, '1', '1', 81341), (True, '3', '3', 81342), (True, '2', '2', 81343), (True, '2', '2', 81344), (True, '1', '1', 81345), (True, '1', '1', 81346), (True, '1', '1', 81347), (True, '1', '1', 81348), (True, '2', '2', 81349), (True, '2', '2', 81350), (True, '1', '1', 81351), (True, '1', '1', 81352), (True, '4', '4', 81353), (True, '3', '3', 81354), (True, '2', '2', 81355), (True, '1', '1', 81356), (True, '2', '2', 81357), (True, '1', '1', 81358), (True, '4', '4', 81359), (True, '1', '1', 81360), (True, '1', '1', 81361), (True, '62', '62', 81362)]",True,Accecpted,0.225439513581929,0.7628865979381443,False,0.0
459912,25305311,"'''input
3 2 7
'''
n, a, b = map(int, input().split())
print(a + b % n)",531,4512,61,3/7/17 3:22,5,419,2,8,"[(True, '3', '3', 81313), (True, '4', '4', 81314), (True, '3', '3', 81315), (True, '1', '1', 81316), (True, '1', '1', 81317), (True, '1', '1', 81318), (True, '100', '100', 81319), (True, '54', '54', 81320), (True, '37', '37', 81321), (True, '41', '41', 81322), (True, '42', '42', 81323), (True, '97', '97', 81324), (True, '35', '35', 81325), (True, '48', '48', 81326), (True, '76', '76', 81327), (True, '55', '55', 81328), (True, '65', '65', 81329), (True, '1', '1', 81330), (False, '4', '1', 81331), (True, '1', '1', 81332), (True, '1', '1', 81333), (True, '3', '3', 81334), (True, '3', '3', 81335), (True, '2', '2', 81336), (True, '2', '2', 81337), (True, '2', '2', 81338), (True, '4', '4', 81339), (False, '5', '2', 81340), (False, '6', '1', 81341), (False, '9', '3', 81342), (True, '2', '2', 81343), (True, '2', '2', 81344), (False, '7', '1', 81345), (True, '1', '1', 81346), (False, '3', '1', 81347), (False, '4', '1', 81348), (False, '8', '2', 81349), (False, '19', '2', 81350), (False, '7', '1', 81351), (False, '6', '1', 81352), (True, '4', '4', 81353), (True, '3', '3', 81354), (False, '7', '2', 81355), (False, '4', '1', 81356), (False, '7', '2', 81357), (False, '4', '1', 81358), (False, '9', '4', 81359), (False, '6', '1', 81360), (False, '5', '1', 81361), (False, '150', '62', 81362)]",False,Wrong Answer,0.225439513581929,0.7628865979381443,False,0.38
519028,25418189,"'''input
1
'''
from math import floor
n = int(input())
if n == 1:
	print(0, 1)
elif n % 7 == 0:
	print(2*n//7, 2*n//7)
elif n % 7 == 1:
	print(n//7*2, n//7*2 + 1)
elif n % 7 == 6:
	print(n//7*2 + 1, n//7*2 + 2)
elif n % 7 <= 5 and n % 7 > 1:
	print(n//7*2, n//7*2 + 2)",531,4516,77,3/11/17 23:35,15,481,1,8,"[(True, '4 4', '4 4', 84433), (True, '0 2', '0 2', 84434), (True, '0 1', '0 1', 84435), (True, '0 2', '0 2', 84436), (True, '0 2', '0 2', 84437), (True, '0 2', '0 2', 84438), (True, '1 2', '1 2', 84439), (True, '2 2', '2 2', 84440), (True, '2 3', '2 3', 84441), (True, '2 4', '2 4', 84442), (True, '2 4', '2 4', 84443), (True, '2 4', '2 4', 84444), (True, '2 4', '2 4', 84445), (True, '3 4', '3 4', 84446), (True, '285714 285715', '285714 285715', 84447), (True, '4 6', '4 6', 84448), (True, '4 6', '4 6', 84449), (True, '4 6', '4 6', 84450), (True, '4 6', '4 6', 84451), (True, '5 6', '5 6', 84452), (True, '6 6', '6 6', 84453), (True, '6 7', '6 7', 84454), (True, '6 8', '6 8', 84455), (True, '6 8', '6 8', 84456), (True, '6 8', '6 8', 84457), (True, '6 8', '6 8', 84458), (True, '7 8', '7 8', 84459), (True, '8 8', '8 8', 84460), (True, '8 9', '8 9', 84461), (True, '8 10', '8 10', 84462), (True, '28 30', '28 30', 84463), (True, '28 29', '28 29', 84464), (True, '28 28', '28 28', 84465), (True, '27 28', '27 28', 84466), (True, '26 28', '26 28', 84467), (True, '26 28', '26 28', 84468), (True, '26 28', '26 28', 84469), (True, '26 28', '26 28', 84470), (True, '26 27', '26 27', 84471), (True, '26 26', '26 26', 84472), (True, '25 26', '25 26', 84473), (True, '24 26', '24 26', 84474), (True, '24 26', '24 26', 84475), (True, '24 26', '24 26', 84476), (True, '24 26', '24 26', 84477), (True, '24 25', '24 25', 84478), (True, '24 24', '24 24', 84479), (True, '23 24', '23 24', 84480), (True, '22 24', '22 24', 84481), (True, '22 24', '22 24', 84482), (True, '22 24', '22 24', 84483), (True, '285 286', '285 286', 84484), (True, '284 286', '284 286', 84485), (True, '284 286', '284 286', 84486), (True, '284 286', '284 286', 84487), (True, '284 286', '284 286', 84488), (True, '284 285', '284 285', 84489), (True, '284 284', '284 284', 84490), (True, '283 284', '283 284', 84491), (True, '282 284', '282 284', 84492), (True, '282 284', '282 284', 84493), (True, '282 284', '282 284', 84494), (True, '282 284', '282 284', 84495), (True, '282 283', '282 283', 84496), (True, '282 282', '282 282', 84497), (True, '281 282', '281 282', 84498), (True, '280 282', '280 282', 84499), (True, '280 282', '280 282', 84500), (True, '280 282', '280 282', 84501), (True, '280 282', '280 282', 84502), (True, '280 281', '280 281', 84503), (True, '280 280', '280 280', 84504), (True, '2856 2858', '2856 2858', 84505), (True, '2856 2858', '2856 2858', 84506), (True, '2856 2858', '2856 2858', 84507), (True, '2856 2857', '2856 2857', 84508), (True, '2856 2856', '2856 2856', 84509), (True, '2855 2856', '2855 2856', 84510), (True, '2854 2856', '2854 2856', 84511), (True, '2854 2856', '2854 2856', 84512), (True, '2854 2856', '2854 2856', 84513), (True, '2854 2856', '2854 2856', 84514), (True, '2854 2855', '2854 2855', 84515), (True, '2854 2854', '2854 2854', 84516), (True, '2853 2854', '2853 2854', 84517), (True, '2852 2854', '2852 2854', 84518), (True, '2852 2854', '2852 2854', 84519), (True, '2852 2854', '2852 2854', 84520), (True, '2852 2854', '2852 2854', 84521), (True, '2852 2853', '2852 2853', 84522), (True, '2852 2852', '2852 2852', 84523), (True, '2851 2852', '2851 2852', 84524), (True, '2850 2852', '2850 2852', 84525), (True, '28570 28572', '28570 28572', 84526), (True, '28570 28572', '28570 28572', 84527), (True, '28570 28572', '28570 28572', 84528), (True, '28570 28572', '28570 28572', 84529), (True, '28570 28571', '28570 28571', 84530), (True, '28570 28570', '28570 28570', 84531), (True, '28569 28570', '28569 28570', 84532), (True, '28568 28570', '28568 28570', 84533), (True, '28568 28570', '28568 28570', 84534), (True, '28568 28570', '28568 28570', 84535), (True, '28568 28570', '28568 28570', 84536), (True, '28568 28569', '28568 28569', 84537), (True, '28568 28568', '28568 28568', 84538), (True, '28567 28568', '28567 28568', 84539), (True, '28566 28568', '28566 28568', 84540), (True, '28566 28568', '28566 28568', 84541), (True, '28566 28568', '28566 28568', 84542), (True, '28566 28568', '28566 28568', 84543), (True, '28566 28567', '28566 28567', 84544), (True, '28566 28566', '28566 28566', 84545), (True, '28565 28566', '28565 28566', 84546), (True, '285714 285714', '285714 285714', 84547), (True, '285713 285714', '285713 285714', 84548), (True, '285712 285714', '285712 285714', 84549), (True, '285712 285714', '285712 285714', 84550), (True, '285712 285714', '285712 285714', 84551), (True, '285712 285714', '285712 285714', 84552), (True, '285712 285713', '285712 285713', 84553), (True, '285712 285712', '285712 285712', 84554), (True, '285711 285712', '285711 285712', 84555), (True, '285710 285712', '285710 285712', 84556), (True, '285710 285712', '285710 285712', 84557), (True, '285710 285712', '285710 285712', 84558), (True, '285710 285712', '285710 285712', 84559), (True, '285710 285711', '285710 285711', 84560), (True, '285710 285710', '285710 285710', 84561), (True, '285709 285710', '285709 285710', 84562), (True, '285708 285710', '285708 285710', 84563), (True, '285708 285710', '285708 285710', 84564), (True, '285708 285710', '285708 285710', 84565), (True, '285708 285710', '285708 285710', 84566), (True, '66892 66893', '66892 66893', 84567), (True, '66892 66892', '66892 66892', 84568), (True, '66891 66892', '66891 66892', 84569), (True, '66890 66892', '66890 66892', 84570), (True, '66890 66892', '66890 66892', 84571), (True, '66890 66892', '66890 66892', 84572), (True, '66890 66892', '66890 66892', 84573), (True, '66890 66891', '66890 66891', 84574), (True, '66890 66890', '66890 66890', 84575), (True, '66889 66890', '66889 66890', 84576), (True, '66888 66890', '66888 66890', 84577), (True, '66888 66890', '66888 66890', 84578), (True, '66888 66890', '66888 66890', 84579), (True, '66888 66890', '66888 66890', 84580), (True, '66888 66889', '66888 66889', 84581), (True, '66888 66888', '66888 66888', 84582), (True, '66887 66888', '66887 66888', 84583), (True, '66886 66888', '66886 66888', 84584), (True, '66886 66888', '66886 66888', 84585), (True, '66886 66888', '66886 66888', 84586), (True, '66886 66888', '66886 66888', 84587), (True, '248151 248152', '248151 248152', 84588), (True, '248150 248152', '248150 248152', 84589), (True, '248150 248152', '248150 248152', 84590), (True, '248150 248152', '248150 248152', 84591), (True, '248150 248152', '248150 248152', 84592), (True, '248150 248151', '248150 248151', 84593), (True, '248150 248150', '248150 248150', 84594), (True, '248149 248150', '248149 248150', 84595), (True, '248148 248150', '248148 248150', 84596), (True, '248148 248150', '248148 248150', 84597), (True, '248148 248150', '248148 248150', 84598), (True, '248148 248150', '248148 248150', 84599), (True, '248148 248149', '248148 248149', 84600), (True, '248148 248148', '248148 248148', 84601), (True, '248147 248148', '248147 248148', 84602), (True, '248146 248148', '248146 248148', 84603), (True, '248146 248148', '248146 248148', 84604), (True, '248146 248148', '248146 248148', 84605), (True, '248146 248148', '248146 248148', 84606), (True, '248146 248147', '248146 248147', 84607), (True, '248146 248146', '248146 248146', 84608), (True, '35260 35262', '35260 35262', 84609), (True, '35260 35262', '35260 35262', 84610), (True, '35260 35261', '35260 35261', 84611), (True, '35260 35260', '35260 35260', 84612), (True, '35259 35260', '35259 35260', 84613), (True, '35258 35260', '35258 35260', 84614), (True, '35258 35260', '35258 35260', 84615), (True, '35258 35260', '35258 35260', 84616), (True, '35258 35260', '35258 35260', 84617), (True, '35258 35259', '35258 35259', 84618), (True, '35258 35258', '35258 35258', 84619), (True, '35257 35258', '35257 35258', 84620), (True, '35256 35258', '35256 35258', 84621), (True, '35256 35258', '35256 35258', 84622), (True, '35256 35258', '35256 35258', 84623), (True, '35256 35258', '35256 35258', 84624), (True, '35256 35257', '35256 35257', 84625), (True, '35256 35256', '35256 35256', 84626), (True, '35255 35256', '35255 35256', 84627), (True, '35254 35256', '35254 35256', 84628), (True, '35254 35256', '35254 35256', 84629), (True, '4 5', '4 5', 84630)]",True,Accecpted,0.5210555757090326,0.8073022312373225,False,0.0
519027,25418131,"'''input
1
'''
from math import floor
n = int(input())
if n == 1:
	print(0, 1)
elif n % 7 == 0:
	print(2*n//7, 2*n//7)
elif n % 7 <= 5:
	print(n//7*2, n//7*2 + 2)
else:
	print(n//7*2 + 1, n//7*2 + 2)",531,4516,46,3/11/17 23:33,13,481,2,8,"[(True, '4 4', '4 4', 84433), (True, '0 2', '0 2', 84434), (True, '0 1', '0 1', 84435), (True, '0 2', '0 2', 84436), (True, '0 2', '0 2', 84437), (True, '0 2', '0 2', 84438), (True, '1 2', '1 2', 84439), (True, '2 2', '2 2', 84440), (False, '2 4', '2 3', 84441), (True, '2 4', '2 4', 84442), (True, '2 4', '2 4', 84443), (True, '2 4', '2 4', 84444), (True, '2 4', '2 4', 84445), (True, '3 4', '3 4', 84446), (False, '285714 285716', '285714 285715', 84447), (True, '4 6', '4 6', 84448), (True, '4 6', '4 6', 84449), (True, '4 6', '4 6', 84450), (True, '4 6', '4 6', 84451), (True, '5 6', '5 6', 84452), (True, '6 6', '6 6', 84453), (False, '6 8', '6 7', 84454), (True, '6 8', '6 8', 84455), (True, '6 8', '6 8', 84456), (True, '6 8', '6 8', 84457), (True, '6 8', '6 8', 84458), (True, '7 8', '7 8', 84459), (True, '8 8', '8 8', 84460), (False, '8 10', '8 9', 84461), (True, '8 10', '8 10', 84462), (True, '28 30', '28 30', 84463), (False, '28 30', '28 29', 84464), (True, '28 28', '28 28', 84465), (True, '27 28', '27 28', 84466), (True, '26 28', '26 28', 84467), (True, '26 28', '26 28', 84468), (True, '26 28', '26 28', 84469), (True, '26 28', '26 28', 84470), (False, '26 28', '26 27', 84471), (True, '26 26', '26 26', 84472), (True, '25 26', '25 26', 84473), (True, '24 26', '24 26', 84474), (True, '24 26', '24 26', 84475), (True, '24 26', '24 26', 84476), (True, '24 26', '24 26', 84477), (False, '24 26', '24 25', 84478), (True, '24 24', '24 24', 84479), (True, '23 24', '23 24', 84480), (True, '22 24', '22 24', 84481), (True, '22 24', '22 24', 84482), (True, '22 24', '22 24', 84483), (True, '285 286', '285 286', 84484), (True, '284 286', '284 286', 84485), (True, '284 286', '284 286', 84486), (True, '284 286', '284 286', 84487), (True, '284 286', '284 286', 84488), (False, '284 286', '284 285', 84489), (True, '284 284', '284 284', 84490), (True, '283 284', '283 284', 84491), (True, '282 284', '282 284', 84492), (True, '282 284', '282 284', 84493), (True, '282 284', '282 284', 84494), (True, '282 284', '282 284', 84495), (False, '282 284', '282 283', 84496), (True, '282 282', '282 282', 84497), (True, '281 282', '281 282', 84498), (True, '280 282', '280 282', 84499), (True, '280 282', '280 282', 84500), (True, '280 282', '280 282', 84501), (True, '280 282', '280 282', 84502), (False, '280 282', '280 281', 84503), (True, '280 280', '280 280', 84504), (True, '2856 2858', '2856 2858', 84505), (True, '2856 2858', '2856 2858', 84506), (True, '2856 2858', '2856 2858', 84507), (False, '2856 2858', '2856 2857', 84508), (True, '2856 2856', '2856 2856', 84509), (True, '2855 2856', '2855 2856', 84510), (True, '2854 2856', '2854 2856', 84511), (True, '2854 2856', '2854 2856', 84512), (True, '2854 2856', '2854 2856', 84513), (True, '2854 2856', '2854 2856', 84514), (False, '2854 2856', '2854 2855', 84515), (True, '2854 2854', '2854 2854', 84516), (True, '2853 2854', '2853 2854', 84517), (True, '2852 2854', '2852 2854', 84518), (True, '2852 2854', '2852 2854', 84519), (True, '2852 2854', '2852 2854', 84520), (True, '2852 2854', '2852 2854', 84521), (False, '2852 2854', '2852 2853', 84522), (True, '2852 2852', '2852 2852', 84523), (True, '2851 2852', '2851 2852', 84524), (True, '2850 2852', '2850 2852', 84525), (True, '28570 28572', '28570 28572', 84526), (True, '28570 28572', '28570 28572', 84527), (True, '28570 28572', '28570 28572', 84528), (True, '28570 28572', '28570 28572', 84529), (False, '28570 28572', '28570 28571', 84530), (True, '28570 28570', '28570 28570', 84531), (True, '28569 28570', '28569 28570', 84532), (True, '28568 28570', '28568 28570', 84533), (True, '28568 28570', '28568 28570', 84534), (True, '28568 28570', '28568 28570', 84535), (True, '28568 28570', '28568 28570', 84536), (False, '28568 28570', '28568 28569', 84537), (True, '28568 28568', '28568 28568', 84538), (True, '28567 28568', '28567 28568', 84539), (True, '28566 28568', '28566 28568', 84540), (True, '28566 28568', '28566 28568', 84541), (True, '28566 28568', '28566 28568', 84542), (True, '28566 28568', '28566 28568', 84543), (False, '28566 28568', '28566 28567', 84544), (True, '28566 28566', '28566 28566', 84545), (True, '28565 28566', '28565 28566', 84546), (True, '285714 285714', '285714 285714', 84547), (True, '285713 285714', '285713 285714', 84548), (True, '285712 285714', '285712 285714', 84549), (True, '285712 285714', '285712 285714', 84550), (True, '285712 285714', '285712 285714', 84551), (True, '285712 285714', '285712 285714', 84552), (False, '285712 285714', '285712 285713', 84553), (True, '285712 285712', '285712 285712', 84554), (True, '285711 285712', '285711 285712', 84555), (True, '285710 285712', '285710 285712', 84556), (True, '285710 285712', '285710 285712', 84557), (True, '285710 285712', '285710 285712', 84558), (True, '285710 285712', '285710 285712', 84559), (False, '285710 285712', '285710 285711', 84560), (True, '285710 285710', '285710 285710', 84561), (True, '285709 285710', '285709 285710', 84562), (True, '285708 285710', '285708 285710', 84563), (True, '285708 285710', '285708 285710', 84564), (True, '285708 285710', '285708 285710', 84565), (True, '285708 285710', '285708 285710', 84566), (False, '66892 66894', '66892 66893', 84567), (True, '66892 66892', '66892 66892', 84568), (True, '66891 66892', '66891 66892', 84569), (True, '66890 66892', '66890 66892', 84570), (True, '66890 66892', '66890 66892', 84571), (True, '66890 66892', '66890 66892', 84572), (True, '66890 66892', '66890 66892', 84573), (False, '66890 66892', '66890 66891', 84574), (True, '66890 66890', '66890 66890', 84575), (True, '66889 66890', '66889 66890', 84576), (True, '66888 66890', '66888 66890', 84577), (True, '66888 66890', '66888 66890', 84578), (True, '66888 66890', '66888 66890', 84579), (True, '66888 66890', '66888 66890', 84580), (False, '66888 66890', '66888 66889', 84581), (True, '66888 66888', '66888 66888', 84582), (True, '66887 66888', '66887 66888', 84583), (True, '66886 66888', '66886 66888', 84584), (True, '66886 66888', '66886 66888', 84585), (True, '66886 66888', '66886 66888', 84586), (True, '66886 66888', '66886 66888', 84587), (True, '248151 248152', '248151 248152', 84588), (True, '248150 248152', '248150 248152', 84589), (True, '248150 248152', '248150 248152', 84590), (True, '248150 248152', '248150 248152', 84591), (True, '248150 248152', '248150 248152', 84592), (False, '248150 248152', '248150 248151', 84593), (True, '248150 248150', '248150 248150', 84594), (True, '248149 248150', '248149 248150', 84595), (True, '248148 248150', '248148 248150', 84596), (True, '248148 248150', '248148 248150', 84597), (True, '248148 248150', '248148 248150', 84598), (True, '248148 248150', '248148 248150', 84599), (False, '248148 248150', '248148 248149', 84600), (True, '248148 248148', '248148 248148', 84601), (True, '248147 248148', '248147 248148', 84602), (True, '248146 248148', '248146 248148', 84603), (True, '248146 248148', '248146 248148', 84604), (True, '248146 248148', '248146 248148', 84605), (True, '248146 248148', '248146 248148', 84606), (False, '248146 248148', '248146 248147', 84607), (True, '248146 248146', '248146 248146', 84608), (True, '35260 35262', '35260 35262', 84609), (True, '35260 35262', '35260 35262', 84610), (False, '35260 35262', '35260 35261', 84611), (True, '35260 35260', '35260 35260', 84612), (True, '35259 35260', '35259 35260', 84613), (True, '35258 35260', '35258 35260', 84614), (True, '35258 35260', '35258 35260', 84615), (True, '35258 35260', '35258 35260', 84616), (True, '35258 35260', '35258 35260', 84617), (False, '35258 35260', '35258 35259', 84618), (True, '35258 35258', '35258 35258', 84619), (True, '35257 35258', '35257 35258', 84620), (True, '35256 35258', '35256 35258', 84621), (True, '35256 35258', '35256 35258', 84622), (True, '35256 35258', '35256 35258', 84623), (True, '35256 35258', '35256 35258', 84624), (False, '35256 35258', '35256 35257', 84625), (True, '35256 35256', '35256 35256', 84626), (True, '35255 35256', '35255 35256', 84627), (True, '35254 35256', '35254 35256', 84628), (True, '35254 35256', '35254 35256', 84629), (False, '4 6', '4 5', 84630)]",False,Wrong Answer,0.5210555757090326,0.8073022312373225,False,0.1414141414141414
551886,25370850,"'''input
0 60 50
'''
a, b, c = map(int, input().split())
if a == b:
	print(""YES"")
elif c == 0:
	print(""NO"")
elif (b-a) % c == 0 and b > a and c > 0:
	print(""YES"")
elif (b-a) % c == 0 and a > b and c < 0:
	print(""YES"")
else:
	print(""NO"")",531,4528,62,3/10/17 3:35,14,511,1,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (True, 'YES', 'YES', 87937), (True, 'NO', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (True, 'YES', 'YES', 87956), (True, 'YES', 'YES', 87957), (True, 'YES', 'YES', 87958), (True, 'YES', 'YES', 87959), (True, 'YES', 'YES', 87960), (True, 'NO', 'NO', 87961), (True, 'NO', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (True, 'NO', 'NO', 87966), (True, 'NO', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (True, 'NO', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (True, 'NO', 'NO', 87976), (True, 'NO', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (True, 'YES', 'YES', 87986), (True, 'YES', 'YES', 87987), (True, 'YES', 'YES', 87988), (True, 'YES', 'YES', 87989), (True, 'YES', 'YES', 87990), (True, 'NO', 'NO', 87991), (True, 'NO', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (True, 'NO', 'NO', 87996), (True, 'NO', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (True, 'NO', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (True, 'YES', 'YES', 88016), (True, 'YES', 'YES', 88017), (True, 'YES', 'YES', 88018), (True, 'YES', 'YES', 88019), (True, 'YES', 'YES', 88020), (True, 'NO', 'NO', 88021), (True, 'NO', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (True, 'NO', 'NO', 88026), (True, 'NO', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (True, 'YES', 'YES', 88046), (True, 'YES', 'YES', 88047), (True, 'YES', 'YES', 88048), (True, 'YES', 'YES', 88049), (True, 'YES', 'YES', 88050), (True, 'NO', 'NO', 88051), (True, 'NO', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (True, 'YES', 'YES', 88076), (True, 'YES', 'YES', 88077), (True, 'YES', 'YES', 88078), (True, 'YES', 'YES', 88079), (True, 'YES', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (True, 'YES', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (True, 'NO', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (True, 'YES', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",True,Accecpted,0.8334011299489102,0.9547325102880658,False,0.0
551885,25370845,"'''input
1 7 3
'''
a, b, c = map(int, input().split())
if a == b:
	print(""YES"")
elif c == 0:
	print(""NO"")
elif (b-a) % c == 0 and b > a and c > 0:
	print(""YES"")
elif (b-a) % c == 0 and c < 0:
	print(""YES"")
else:
	print(""NO"")",531,4496,62,3/10/17 3:33,14,511,2,8,"[(True, 'YES', 'YES', 87931), (True, 'YES', 'YES', 87932), (True, 'NO', 'NO', 87933), (True, 'NO', 'NO', 87934), (True, 'YES', 'YES', 87935), (True, 'NO', 'NO', 87936), (True, 'YES', 'YES', 87937), (False, 'YES', 'NO', 87938), (True, 'NO', 'NO', 87939), (True, 'YES', 'YES', 87940), (True, 'NO', 'NO', 87941), (True, 'NO', 'NO', 87942), (True, 'YES', 'YES', 87943), (True, 'YES', 'YES', 87944), (True, 'YES', 'YES', 87945), (True, 'YES', 'YES', 87946), (True, 'YES', 'YES', 87947), (True, 'YES', 'YES', 87948), (True, 'YES', 'YES', 87949), (True, 'YES', 'YES', 87950), (True, 'NO', 'NO', 87951), (True, 'NO', 'NO', 87952), (True, 'NO', 'NO', 87953), (True, 'NO', 'NO', 87954), (True, 'NO', 'NO', 87955), (True, 'YES', 'YES', 87956), (True, 'YES', 'YES', 87957), (True, 'YES', 'YES', 87958), (True, 'YES', 'YES', 87959), (True, 'YES', 'YES', 87960), (True, 'NO', 'NO', 87961), (False, 'YES', 'NO', 87962), (True, 'NO', 'NO', 87963), (True, 'YES', 'YES', 87964), (True, 'NO', 'NO', 87965), (False, 'YES', 'NO', 87966), (False, 'YES', 'NO', 87967), (True, 'NO', 'NO', 87968), (True, 'YES', 'YES', 87969), (True, 'YES', 'YES', 87970), (True, 'NO', 'NO', 87971), (False, 'YES', 'NO', 87972), (True, 'NO', 'NO', 87973), (True, 'YES', 'YES', 87974), (True, 'NO', 'NO', 87975), (False, 'YES', 'NO', 87976), (False, 'YES', 'NO', 87977), (True, 'NO', 'NO', 87978), (True, 'YES', 'YES', 87979), (True, 'YES', 'YES', 87980), (True, 'NO', 'NO', 87981), (True, 'YES', 'YES', 87982), (True, 'NO', 'NO', 87983), (True, 'NO', 'NO', 87984), (True, 'NO', 'NO', 87985), (True, 'YES', 'YES', 87986), (True, 'YES', 'YES', 87987), (True, 'YES', 'YES', 87988), (True, 'YES', 'YES', 87989), (True, 'YES', 'YES', 87990), (True, 'NO', 'NO', 87991), (False, 'YES', 'NO', 87992), (True, 'NO', 'NO', 87993), (True, 'YES', 'YES', 87994), (True, 'NO', 'NO', 87995), (False, 'YES', 'NO', 87996), (False, 'YES', 'NO', 87997), (True, 'NO', 'NO', 87998), (True, 'YES', 'YES', 87999), (True, 'YES', 'YES', 88000), (True, 'NO', 'NO', 88001), (False, 'YES', 'NO', 88002), (True, 'NO', 'NO', 88003), (True, 'YES', 'YES', 88004), (True, 'NO', 'NO', 88005), (True, 'YES', 'YES', 88006), (True, 'YES', 'YES', 88007), (True, 'NO', 'NO', 88008), (True, 'NO', 'NO', 88009), (True, 'NO', 'NO', 88010), (True, 'NO', 'NO', 88011), (True, 'YES', 'YES', 88012), (True, 'NO', 'NO', 88013), (True, 'NO', 'NO', 88014), (True, 'NO', 'NO', 88015), (True, 'YES', 'YES', 88016), (True, 'YES', 'YES', 88017), (True, 'YES', 'YES', 88018), (True, 'YES', 'YES', 88019), (True, 'YES', 'YES', 88020), (True, 'NO', 'NO', 88021), (False, 'YES', 'NO', 88022), (True, 'NO', 'NO', 88023), (True, 'YES', 'YES', 88024), (True, 'NO', 'NO', 88025), (False, 'YES', 'NO', 88026), (False, 'YES', 'NO', 88027), (True, 'NO', 'NO', 88028), (True, 'YES', 'YES', 88029), (True, 'YES', 'YES', 88030), (True, 'NO', 'NO', 88031), (True, 'YES', 'YES', 88032), (True, 'NO', 'NO', 88033), (True, 'NO', 'NO', 88034), (True, 'NO', 'NO', 88035), (True, 'YES', 'YES', 88036), (True, 'YES', 'YES', 88037), (True, 'NO', 'NO', 88038), (True, 'NO', 'NO', 88039), (True, 'NO', 'NO', 88040), (True, 'NO', 'NO', 88041), (True, 'YES', 'YES', 88042), (True, 'NO', 'NO', 88043), (True, 'NO', 'NO', 88044), (True, 'NO', 'NO', 88045), (True, 'YES', 'YES', 88046), (True, 'YES', 'YES', 88047), (True, 'YES', 'YES', 88048), (True, 'YES', 'YES', 88049), (True, 'YES', 'YES', 88050), (True, 'NO', 'NO', 88051), (False, 'YES', 'NO', 88052), (True, 'NO', 'NO', 88053), (True, 'YES', 'YES', 88054), (True, 'NO', 'NO', 88055), (True, 'YES', 'YES', 88056), (True, 'YES', 'YES', 88057), (True, 'NO', 'NO', 88058), (True, 'NO', 'NO', 88059), (True, 'NO', 'NO', 88060), (True, 'NO', 'NO', 88061), (True, 'YES', 'YES', 88062), (True, 'NO', 'NO', 88063), (True, 'NO', 'NO', 88064), (True, 'NO', 'NO', 88065), (True, 'YES', 'YES', 88066), (True, 'YES', 'YES', 88067), (True, 'NO', 'NO', 88068), (True, 'NO', 'NO', 88069), (True, 'NO', 'NO', 88070), (True, 'NO', 'NO', 88071), (True, 'YES', 'YES', 88072), (True, 'NO', 'NO', 88073), (True, 'NO', 'NO', 88074), (True, 'NO', 'NO', 88075), (True, 'YES', 'YES', 88076), (True, 'YES', 'YES', 88077), (True, 'YES', 'YES', 88078), (True, 'YES', 'YES', 88079), (True, 'YES', 'YES', 88080), (True, 'YES', 'YES', 88081), (True, 'YES', 'YES', 88082), (True, 'YES', 'YES', 88083), (True, 'NO', 'NO', 88084), (True, 'YES', 'YES', 88085), (True, 'NO', 'NO', 88086), (True, 'NO', 'NO', 88087), (True, 'NO', 'NO', 88088), (True, 'YES', 'YES', 88089), (True, 'YES', 'YES', 88090), (True, 'NO', 'NO', 88091), (True, 'NO', 'NO', 88092), (True, 'NO', 'NO', 88093), (True, 'YES', 'YES', 88094), (True, 'YES', 'YES', 88095), (True, 'YES', 'YES', 88096), (True, 'YES', 'YES', 88097), (True, 'YES', 'YES', 88098), (True, 'NO', 'NO', 88099), (True, 'YES', 'YES', 88100), (False, 'YES', 'NO', 88101), (True, 'YES', 'YES', 88102), (True, 'NO', 'NO', 88103), (True, 'YES', 'YES', 88104), (True, 'YES', 'YES', 88105), (True, 'NO', 'NO', 88106), (True, 'YES', 'YES', 88107), (True, 'YES', 'YES', 88108)]",False,Wrong Answer,0.8334011299489102,0.9547325102880658,False,0.0898876404494382
592233,26256282,"'''input
1358023
'''
n = int(input())
for x in range(n//1234567+1):
	for y in range(n//123456+1):
		if (n - 1234567*x - 123456*y) >= 0 and (n - 1234567*x - 123456*y) % 1234 == 0:
			print(""YES"")
			quit()
print(""NO"")",531,5432,62,4/10/17 18:03,10,543,1,8,"[(True, 'YES', 'YES', 91037), (True, 'NO', 'NO', 91038), (True, 'YES', 'YES', 91039), (True, 'YES', 'YES', 91040), (True, 'YES', 'YES', 91041), (True, 'YES', 'YES', 91042), (True, 'YES', 'YES', 91043), (True, 'NO', 'NO', 91044), (True, 'NO', 'NO', 91045), (True, 'NO', 'NO', 91046), (True, 'NO', 'NO', 91047), (True, 'NO', 'NO', 91048), (True, 'YES', 'YES', 91049), (True, 'YES', 'YES', 91050), (True, 'YES', 'YES', 91051), (True, 'NO', 'NO', 91052), (True, 'NO', 'NO', 91053), (True, 'NO', 'NO', 91054), (True, 'YES', 'YES', 91055), (True, 'YES', 'YES', 91056), (True, 'YES', 'YES', 91057), (True, 'YES', 'YES', 91058), (True, 'YES', 'YES', 91059), (True, 'NO', 'NO', 91060), (True, 'YES', 'YES', 91061), (True, 'YES', 'YES', 91062), (True, 'YES', 'YES', 91063), (True, 'YES', 'YES', 91064), (True, 'YES', 'YES', 91065), (True, 'YES', 'YES', 91066), (True, 'YES', 'YES', 91067), (True, 'YES', 'YES', 91068), (True, 'YES', 'YES', 91069), (True, 'YES', 'YES', 91070), (True, 'YES', 'YES', 91071), (True, 'NO', 'NO', 91072), (True, 'YES', 'YES', 91073), (True, 'NO', 'NO', 91074), (True, 'YES', 'YES', 91075), (True, 'YES', 'YES', 91076), (True, 'NO', 'NO', 91077), (True, 'YES', 'YES', 91078), (True, 'YES', 'YES', 91079), (True, 'YES', 'YES', 91080), (True, 'YES', 'YES', 91081), (True, 'YES', 'YES', 91082), (True, 'YES', 'YES', 91083), (True, 'YES', 'YES', 91084), (True, 'YES', 'YES', 91085), (True, 'YES', 'YES', 91086), (True, 'NO', 'NO', 91087), (True, 'YES', 'YES', 91088), (True, 'NO', 'NO', 91089), (True, 'YES', 'YES', 91090), (True, 'NO', 'NO', 91091), (True, 'NO', 'NO', 91092), (True, 'YES', 'YES', 91093), (True, 'YES', 'YES', 91094), (True, 'YES', 'YES', 91095), (True, 'NO', 'NO', 91096), (True, 'YES', 'YES', 91097), (True, 'YES', 'YES', 91098), (True, 'YES', 'YES', 91099)]",True,Accecpted,0.7099125225932005,0.9011494252873564,False,0.0
592232,26255877,"'''input
17851817
'''
n = int(input())
for x in range(1500):
	for y in range(1500):
		if (n - 1234567*x - 123456*y) > 0 and (n - 1234567*x - 123456*y) % 1234 == 0:
			print(""YES"")
			quit()
print(""NO"")",531,5432,873,4/10/17 17:37,10,543,2,8,"[(True, 'YES', 'YES', 91037), (True, 'NO', 'NO', 91038), (True, 'YES', 'YES', 91039), (True, 'YES', 'YES', 91040), (True, 'YES', 'YES', 91041), (True, 'YES', 'YES', 91042), (True, 'YES', 'YES', 91043), (True, 'NO', 'NO', 91044), (True, 'NO', 'NO', 91045), (True, 'NO', 'NO', 91046), (True, 'NO', 'NO', 91047), (True, 'NO', 'NO', 91048), (True, 'YES', 'YES', 91049), (True, 'YES', 'YES', 91050), (True, 'YES', 'YES', 91051), (True, 'NO', 'NO', 91052), (True, 'NO', 'NO', 91053), (True, 'NO', 'NO', 91054), (True, 'YES', 'YES', 91055), (True, 'YES', 'YES', 91056), (True, 'YES', 'YES', 91057), (True, 'YES', 'YES', 91058), (True, 'YES', 'YES', 91059), (True, 'NO', 'NO', 91060), (True, 'YES', 'YES', 91061), (True, 'YES', 'YES', 91062), (True, 'YES', 'YES', 91063), (False, 'NO', 'YES', 91064), (True, 'YES', 'YES', 91065), (False, 'NO', 'YES', 91066), (True, 'YES', 'YES', 91067), (False, 'NO', 'YES', 91068), (False, 'NO', 'YES', 91069), (False, 'NO', 'YES', 91070), (True, 'YES', 'YES', 91071), (True, 'NO', 'NO', 91072), (False, 'NO', 'YES', 91073), (True, 'NO', 'NO', 91074), (True, 'YES', 'YES', 91075), (True, 'YES', 'YES', 91076), (True, 'NO', 'NO', 91077), (True, 'YES', 'YES', 91078), (True, 'YES', 'YES', 91079), (True, 'YES', 'YES', 91080), (False, 'NO', 'YES', 91081), (False, 'NO', 'YES', 91082), (True, 'YES', 'YES', 91083), (True, 'YES', 'YES', 91084), (True, 'YES', 'YES', 91085), (True, 'YES', 'YES', 91086), (True, 'NO', 'NO', 91087), (True, 'YES', 'YES', 91088), (True, 'NO', 'NO', 91089), (True, 'YES', 'YES', 91090), (True, 'NO', 'NO', 91091), (True, 'NO', 'NO', 91092), (False, 'NO', 'YES', 91093), (True, 'YES', 'YES', 91094), (True, 'YES', 'YES', 91095), (True, 'NO', 'NO', 91096), (True, 'YES', 'YES', 91097), (True, 'YES', 'YES', 91098), (True, 'YES', 'YES', 91099)]",False,Wrong Answer,0.7099125225932005,0.9011494252873564,False,0.1428571428571428
667325,25023888,"'''input
3 10 4
'''
t, s, x = map(int, input().split())
if ((x-t) % s == 0 or (x-t-1) % s == 0) and x-t != 1 and x-t >= 0:
	print(""YES"")
else:
	print(""NO"")",531,4528,62,2/26/17 0:19,8,624,1,8,"[(True, 'NO', 'NO', 96609), (True, 'YES', 'YES', 96610), (True, 'YES', 'YES', 96611), (True, 'YES', 'YES', 96612), (True, 'NO', 'NO', 96613), (True, 'YES', 'YES', 96614), (True, 'YES', 'YES', 96615), (True, 'NO', 'NO', 96616), (True, 'YES', 'YES', 96617), (True, 'YES', 'YES', 96618), (True, 'NO', 'NO', 96619), (True, 'NO', 'NO', 96620), (True, 'NO', 'NO', 96621), (True, 'NO', 'NO', 96622), (True, 'NO', 'NO', 96623), (True, 'NO', 'NO', 96624), (True, 'NO', 'NO', 96625), (True, 'NO', 'NO', 96626), (True, 'NO', 'NO', 96627), (True, 'NO', 'NO', 96628), (True, 'NO', 'NO', 96629), (True, 'NO', 'NO', 96630), (True, 'NO', 'NO', 96631), (True, 'NO', 'NO', 96632), (True, 'NO', 'NO', 96633), (True, 'NO', 'NO', 96634), (True, 'YES', 'YES', 96635), (True, 'YES', 'YES', 96636), (True, 'YES', 'YES', 96637), (True, 'YES', 'YES', 96638), (True, 'YES', 'YES', 96639), (True, 'YES', 'YES', 96640), (True, 'YES', 'YES', 96641), (True, 'YES', 'YES', 96642), (True, 'YES', 'YES', 96643), (True, 'YES', 'YES', 96644), (True, 'YES', 'YES', 96645), (True, 'YES', 'YES', 96646), (True, 'YES', 'YES', 96647), (True, 'YES', 'YES', 96648), (True, 'YES', 'YES', 96649), (True, 'YES', 'YES', 96650), (True, 'YES', 'YES', 96651), (True, 'YES', 'YES', 96652), (True, 'YES', 'YES', 96653), (True, 'NO', 'NO', 96654), (True, 'YES', 'YES', 96655), (True, 'YES', 'YES', 96656), (True, 'YES', 'YES', 96657), (True, 'NO', 'NO', 96658), (True, 'YES', 'YES', 96659), (True, 'NO', 'NO', 96660), (True, 'YES', 'YES', 96661), (True, 'NO', 'NO', 96662), (True, 'YES', 'YES', 96663), (True, 'NO', 'NO', 96664), (True, 'YES', 'YES', 96665), (True, 'YES', 'YES', 96666), (True, 'NO', 'NO', 96667), (True, 'YES', 'YES', 96668), (True, 'YES', 'YES', 96669), (True, 'NO', 'NO', 96670), (True, 'NO', 'NO', 96671), (True, 'NO', 'NO', 96672), (True, 'NO', 'NO', 96673), (True, 'YES', 'YES', 96674), (True, 'YES', 'YES', 96675), (True, 'NO', 'NO', 96676), (True, 'YES', 'YES', 96677), (True, 'NO', 'NO', 96678), (True, 'NO', 'NO', 96679), (True, 'YES', 'YES', 96680), (True, 'NO', 'NO', 96681), (True, 'YES', 'YES', 96682), (True, 'YES', 'YES', 96683), (True, 'NO', 'NO', 96684), (True, 'NO', 'NO', 96685), (True, 'YES', 'YES', 96686), (True, 'YES', 'YES', 96687), (True, 'NO', 'NO', 96688), (True, 'YES', 'YES', 96689), (True, 'YES', 'YES', 96690), (True, 'YES', 'YES', 96691), (True, 'YES', 'YES', 96692), (True, 'NO', 'NO', 96693), (True, 'YES', 'YES', 96694), (True, 'NO', 'NO', 96695), (True, 'NO', 'NO', 96696), (True, 'NO', 'NO', 96697), (True, 'YES', 'YES', 96698), (True, 'NO', 'NO', 96699), (True, 'NO', 'NO', 96700), (True, 'NO', 'NO', 96701), (True, 'YES', 'YES', 96702), (True, 'YES', 'YES', 96703)]",True,Accecpted,0.7960515801184587,0.9581993569131833,False,0.0
667324,25023858,"'''input
3 10 4
'''
t, s, x = map(int, input().split())
if ((x-t) % s == 0 or (x-t-1) % s == 0) and x-t != 1:
	print(""YES"")
else:
	print(""NO"")",531,4500,62,2/26/17 0:17,8,624,2,8,"[(True, 'NO', 'NO', 96609), (True, 'YES', 'YES', 96610), (True, 'YES', 'YES', 96611), (True, 'YES', 'YES', 96612), (True, 'NO', 'NO', 96613), (True, 'YES', 'YES', 96614), (True, 'YES', 'YES', 96615), (False, 'YES', 'NO', 96616), (True, 'YES', 'YES', 96617), (True, 'YES', 'YES', 96618), (True, 'NO', 'NO', 96619), (True, 'NO', 'NO', 96620), (True, 'NO', 'NO', 96621), (True, 'NO', 'NO', 96622), (True, 'NO', 'NO', 96623), (True, 'NO', 'NO', 96624), (True, 'NO', 'NO', 96625), (True, 'NO', 'NO', 96626), (True, 'NO', 'NO', 96627), (True, 'NO', 'NO', 96628), (True, 'NO', 'NO', 96629), (True, 'NO', 'NO', 96630), (True, 'NO', 'NO', 96631), (True, 'NO', 'NO', 96632), (True, 'NO', 'NO', 96633), (True, 'NO', 'NO', 96634), (True, 'YES', 'YES', 96635), (True, 'YES', 'YES', 96636), (True, 'YES', 'YES', 96637), (True, 'YES', 'YES', 96638), (True, 'YES', 'YES', 96639), (True, 'YES', 'YES', 96640), (True, 'YES', 'YES', 96641), (True, 'YES', 'YES', 96642), (True, 'YES', 'YES', 96643), (True, 'YES', 'YES', 96644), (True, 'YES', 'YES', 96645), (True, 'YES', 'YES', 96646), (True, 'YES', 'YES', 96647), (True, 'YES', 'YES', 96648), (True, 'YES', 'YES', 96649), (True, 'YES', 'YES', 96650), (True, 'YES', 'YES', 96651), (True, 'YES', 'YES', 96652), (True, 'YES', 'YES', 96653), (True, 'NO', 'NO', 96654), (True, 'YES', 'YES', 96655), (True, 'YES', 'YES', 96656), (True, 'YES', 'YES', 96657), (True, 'NO', 'NO', 96658), (True, 'YES', 'YES', 96659), (True, 'NO', 'NO', 96660), (True, 'YES', 'YES', 96661), (True, 'NO', 'NO', 96662), (True, 'YES', 'YES', 96663), (False, 'YES', 'NO', 96664), (True, 'YES', 'YES', 96665), (True, 'YES', 'YES', 96666), (True, 'NO', 'NO', 96667), (True, 'YES', 'YES', 96668), (True, 'YES', 'YES', 96669), (True, 'NO', 'NO', 96670), (True, 'NO', 'NO', 96671), (True, 'NO', 'NO', 96672), (True, 'NO', 'NO', 96673), (True, 'YES', 'YES', 96674), (True, 'YES', 'YES', 96675), (True, 'NO', 'NO', 96676), (True, 'YES', 'YES', 96677), (False, 'YES', 'NO', 96678), (True, 'NO', 'NO', 96679), (True, 'YES', 'YES', 96680), (False, 'YES', 'NO', 96681), (True, 'YES', 'YES', 96682), (True, 'YES', 'YES', 96683), (True, 'NO', 'NO', 96684), (True, 'NO', 'NO', 96685), (True, 'YES', 'YES', 96686), (True, 'YES', 'YES', 96687), (True, 'NO', 'NO', 96688), (True, 'YES', 'YES', 96689), (True, 'YES', 'YES', 96690), (True, 'YES', 'YES', 96691), (True, 'YES', 'YES', 96692), (True, 'NO', 'NO', 96693), (True, 'YES', 'YES', 96694), (True, 'NO', 'NO', 96695), (True, 'NO', 'NO', 96696), (True, 'NO', 'NO', 96697), (True, 'YES', 'YES', 96698), (True, 'NO', 'NO', 96699), (True, 'NO', 'NO', 96700), (False, 'YES', 'NO', 96701), (True, 'YES', 'YES', 96702), (True, 'YES', 'YES', 96703)]",False,Wrong Answer,0.7960515801184587,0.9581993569131833,False,0.0526315789473684
732863,26346852,"'''input
3
'''
n = int(input())
if n <= 2:
	print(-1)
else:
	if n % 2 == 0:
		print(n**2//4-1, n**2//4+1)
	else:
		print((n**2-1)//2, (n**2+1)//2)",531,5424,62,4/13/17 23:13,11,680,1,8,"[(True, '4 5', '4 5', 101822), (True, '8 10', '8 10', 101823), (True, '-1', '-1', 101824), (True, '144 145', '144 145', 101825), (True, '2244 2245', '2244 2245', 101826), (True, '24 26', '24 26', 101827), (True, '48 50', '48 50', 101828), (True, '120 122', '120 122', 101829), (True, '264 265', '264 265', 101830), (True, '15128 15130', '15128 15130', 101831), (True, '203400 203402', '203400 203402', 101832), (True, '998000 998002', '998000 998002', 101834), (True, '1234567654320 1234567654322', '1234567654320 1234567654322', 101835), (True, '1234572098768 1234572098770', '1234572098768 1234572098770', 101836), (True, '308641358024 308641358026', '308641358024 308641358026', 101837), (True, '24999990000000 24999990000002', '24999990000000 24999990000002', 101838), (True, '-1', '-1', 101857), (True, '4 5', '4 5', 101858), (True, '12 13', '12 13', 101859), (True, '24 25', '24 25', 101860), (True, '40 41', '40 41', 101861), (True, '60 61', '60 61', 101862), (True, '84 85', '84 85', 101863), (True, '112 113', '112 113', 101864), (True, '180 181', '180 181', 101865), (True, '6160 6161', '6160 6161', 101866), (True, '6384 6385', '6384 6385', 101867), (True, '6612 6613', '6612 6613', 101868), (True, '6844 6845', '6844 6845', 101869), (True, '7080 7081', '7080 7081', 101870), (True, '6172827160 6172827161', '6172827160 6172827161', 101871), (True, '6173049384 6173049385', '6173049384 6173049385', 101872), (True, '6173271612 6173271613', '6173271612 6173271613', 101873), (True, '6173493844 6173493845', '6173493844 6173493845', 101874), (True, '6173716080 6173716081', '6173716080 6173716081', 101875), (True, '49999930000024 49999930000025', '49999930000024 49999930000025', 101876), (True, '49999790000220 49999790000221', '49999790000220 49999790000221', 101877), (True, '24999950000024 24999950000026', '24999950000024 24999950000026', 101878), (True, '49999910000040 49999910000041', '49999910000040 49999910000041', 101879), (True, '49999730000364 49999730000365', '49999730000364 49999730000365', 101881), (True, '24999970000008 24999970000010', '24999970000008 24999970000010', 101882), (True, '49999950000012 49999950000013', '49999950000012 49999950000013', 101883), (True, '49999970000004 49999970000005', '49999970000004 49999970000005', 101885), (True, '24999890000120 24999890000122', '24999890000120 24999890000122', 101886), (True, '4999999300000024 4999999300000025', '4999999300000024 4999999300000025', 101887), (True, '4999997900000220 4999997900000221', '4999997900000220 4999997900000221', 101888), (True, '2499999500000024 2499999500000026', '2499999500000024 2499999500000026', 101889), (True, '4999999100000040 4999999100000041', '4999999100000040 4999999100000041', 101890), (True, '4999997300000364 4999997300000365', '4999997300000364 4999997300000365', 101892), (True, '2499999700000008 2499999700000010', '2499999700000008 2499999700000010', 101893), (True, '4999999500000012 4999999500000013', '4999999500000012 4999999500000013', 101894), (True, '4999999700000004 4999999700000005', '4999999700000004 4999999700000005', 101896), (True, '2499998900000120 2499998900000122', '2499998900000120 2499998900000122', 101897), (True, '487730530870294164 487730530870294165', '487730530870294164 487730530870294165', 101898), (True, '-1', '-1', 101899), (True, '499999999000000000 499999999000000001', '499999999000000000 499999999000000001', 101903), (True, '499999937000001984 499999937000001985', '499999937000001984 499999937000001985', 101905), (True, '249999999000000000 249999999000000002', '249999999000000000 249999999000000002', 101906), (True, '93958713454973484 93958713454973485', '93958713454973484 93958713454973485', 101907), (True, '117571834810662804 117571834810662805', '117571834810662804 117571834810662805', 101908), (True, '499999929000002520 499999929000002521', '499999929000002520 499999929000002521', 101909), (True, '482605625241216204 482605625241216205', '482605625241216204 482605625241216205', 101910)]",True,Accecpted,0.2394583158021924,0.3959183673469387,False,0.0
732862,26346753,"'''input
3
'''
n = int(input())
if n <= 2:
	print(-1)
else:
	if n % 3 == 0:
		print(4*n//3, 5*n//3)
	elif n % 4 == 0:
		print(3*n//4, 5*n//4)
	elif n % 5 == 0:
		print(3*n//5, 4*n//5)
	else:
		t = 1
		while n % 2 == 0:
			t *= 2
			n //= 2
		x = n // 2 - 1
		while 2*x + 1 != n**2:
			x += 1
		print(t*x, t*(x+1))",531,5420,1000,4/13/17 23:04,22,680,3,8,"[(True, '4 5', '4 5', 101822), (True, '8 10', '8 10', 101823), (True, '-1', '-1', 101824), (True, '144 145', '144 145', 101825), (True, '2244 2245', '2244 2245', 101826), (False, '6 8', '24 26', 101827), (True, '48 50', '48 50', 101828), (True, '120 122', '120 122', 101829), (True, '264 265', '264 265', 101830), (False, '328 410', '15128 15130', 101831), (True, '203400 203402', '203400 203402', 101832), (False, '2664 3330', '998000 998002', 101834)]",False,Time Limit,0.2394583158021924,0.3959183673469387,False,0.25
751549,25535004,"'''input
a4
'''
p = input()
if p in [""a8"", ""h8"", ""a1"", ""h1""]:
	print(3)
elif any(x in p for x in [""a"", ""h"", ""1"", ""8""]):
	print(5)
else:
	print(8)",531,4524,46,3/16/17 2:12,10,694,1,8,"[(True, '8', '8', 103282), (True, '3', '3', 103283), (True, '3', '3', 103284), (True, '5', '5', 103285), (True, '8', '8', 103286), (True, '5', '5', 103287), (True, '8', '8', 103288), (True, '8', '8', 103289), (True, '5', '5', 103290), (True, '5', '5', 103291), (True, '5', '5', 103292), (True, '5', '5', 103293), (True, '3', '3', 103294), (True, '5', '5', 103295), (True, '3', '3', 103296), (True, '8', '8', 103297), (True, '5', '5', 103298), (True, '5', '5', 103299), (True, '5', '5', 103300), (True, '5', '5', 103301), (True, '5', '5', 103302), (True, '5', '5', 103303), (True, '5', '5', 103304), (True, '5', '5', 103305)]",True,Accecpted,0.5204569898227974,0.8710801393728222,False,0.0
751548,25534994,"'''input
e4
'''
p = input()
if p in [""a8"", ""h8"", ""a1"", ""h1""]:
	print(3)
elif ""1"" in p or ""8"" in p:
	print(5)
else:
	print(8)",531,4516,46,3/16/17 2:11,10,694,2,8,"[(True, '8', '8', 103282), (True, '3', '3', 103283), (True, '3', '3', 103284), (False, '8', '5', 103285), (True, '8', '8', 103286), (True, '5', '5', 103287), (True, '8', '8', 103288), (True, '8', '8', 103289), (False, '8', '5', 103290), (True, '5', '5', 103291), (False, '8', '5', 103292), (False, '8', '5', 103293), (True, '3', '3', 103294), (True, '5', '5', 103295), (True, '3', '3', 103296), (True, '8', '8', 103297), (True, '5', '5', 103298), (False, '8', '5', 103299), (True, '5', '5', 103300), (True, '5', '5', 103301), (True, '5', '5', 103302), (False, '8', '5', 103303), (True, '5', '5', 103304), (False, '8', '5', 103305)]",False,Wrong Answer,0.5204569898227974,0.8710801393728222,False,0.2916666666666667
777883,25545157,"'''input
24648817341102 41165114064236 88046848035 13602161452932 10000831349205
'''
l1, r1, l2, r2, k = map(int, input().split())
l = max(l1, l2)
r = min(r1, r2)
if l > r:
	print(0)
else:
	print(r-l+1 if k < l or k > r else r-l)",531,4528,62,3/16/17 13:34,10,714,1,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (True, '1', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (True, '0', '0', 105701), (True, '999999997', '999999997', 105702), (True, '0', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (True, '81604391064', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (True, '0', '0', 105709), (True, '48172141432145241', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (True, '256787461333454149', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (True, '0', '0', 105715), (True, '0', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (True, '0', '0', 105719), (True, '5', '5', 105720), (True, '0', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (True, '1', '1', 105726), (True, '1', '1', 105727), (True, '0', '0', 105728), (True, '0', '0', 105729), (True, '0', '0', 105730), (True, '0', '0', 105731), (True, '0', '0', 105732), (True, '0', '0', 105733), (True, '0', '0', 105734), (True, '0', '0', 105735), (True, '0', '0', 105736), (True, '0', '0', 105737), (True, '0', '0', 105738), (True, '0', '0', 105739), (True, '0', '0', 105740), (True, '0', '0', 105741), (True, '0', '0', 105742), (True, '0', '0', 105743), (True, '0', '0', 105744), (True, '0', '0', 105745), (True, '0', '0', 105746), (True, '0', '0', 105747), (True, '0', '0', 105748), (True, '0', '0', 105749), (True, '0', '0', 105750), (True, '0', '0', 105751), (True, '0', '0', 105752), (True, '0', '0', 105753), (True, '0', '0', 105754), (True, '0', '0', 105755), (True, '0', '0', 105756), (True, '0', '0', 105757), (True, '0', '0', 105758), (True, '0', '0', 105759), (True, '0', '0', 105760), (True, '1', '1', 105761), (True, '0', '0', 105762), (True, '1', '1', 105763), (True, '0', '0', 105764), (True, '0', '0', 105765), (True, '0', '0', 105766), (True, '0', '0', 105767), (True, '0', '0', 105768), (True, '0', '0', 105769), (True, '0', '0', 105770), (True, '0', '0', 105771), (True, '0', '0', 105772), (True, '0', '0', 105773), (True, '0', '0', 105774), (True, '0', '0', 105775), (True, '0', '0', 105776), (True, '6', '6', 105777), (True, '0', '0', 105778), (True, '0', '0', 105779), (True, '0', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (True, '0', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (True, '4', '4', 105789)]",True,Accecpted,0.6482387405882666,0.7447916666666666,False,0.0
777882,25545136,"'''input
6 6 5 8 9
'''
l1, r1, l2, r2, k = map(int, input().split())
l = max(l1, l2)
r = min(r1, r2)
print(r-l+1 if k < l or k > r else r-l)",531,4524,62,3/16/17 13:33,7,714,2,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (True, '1', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (True, '0', '0', 105701), (True, '999999997', '999999997', 105702), (False, '-11046655888169', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (True, '81604391064', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (False, '-473238220625527125', '0', 105709), (True, '48172141432145241', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (True, '256787461333454149', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (False, '-2', '0', 105715), (False, '-1', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (False, '-6', '0', 105719), (True, '5', '5', 105720), (False, '-4', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (True, '1', '1', 105726), (True, '1', '1', 105727), (False, '-97', '0', 105728), (False, '-1', '0', 105729), (False, '-1', '0', 105730), (False, '-3', '0', 105731), (False, '-2', '0', 105732), (False, '-2', '0', 105733), (False, '-2', '0', 105734), (False, '-1', '0', 105735), (False, '-29', '0', 105736), (False, '-2', '0', 105737), (False, '-2', '0', 105738), (False, '-2', '0', 105739), (False, '-29', '0', 105740), (False, '-2', '0', 105741), (False, '-4', '0', 105742), (False, '-97', '0', 105743), (False, '-4', '0', 105744), (False, '-4', '0', 105745), (False, '-2', '0', 105746), (False, '-1', '0', 105747), (False, '-1', '0', 105748), (False, '-3', '0', 105749), (False, '-14', '0', 105750), (False, '-9', '0', 105751), (False, '-2', '0', 105752), (False, '-2', '0', 105753), (False, '-299', '0', 105754), (False, '-2', '0', 105755), (False, '-10', '0', 105756), (False, '-99', '0', 105757), (False, '-3', '0', 105758), (False, '-1', '0', 105759), (False, '-99', '0', 105760), (True, '1', '1', 105761), (False, '-89', '0', 105762), (True, '1', '1', 105763), (False, '-9', '0', 105764), (False, '-2', '0', 105765), (False, '-3', '0', 105766), (False, '-4', '0', 105767), (False, '-89', '0', 105768), (False, '-97', '0', 105769), (False, '-9', '0', 105770), (False, '-4', '0', 105771), (False, '-1', '0', 105772), (False, '-1', '0', 105773), (False, '-8', '0', 105774), (False, '-2', '0', 105775), (False, '-4', '0', 105776), (True, '6', '6', 105777), (False, '-3', '0', 105778), (False, '-1', '0', 105779), (False, '-399', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (False, '-1', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (True, '4', '4', 105789)]",False,Wrong Answer,0.6482387405882666,0.7447916666666666,False,0.59375
850283,28732433,"i = input()
n, s = int(i[:-1]), i[-1]
t = 16*((n-1) // 4)
n %= 4
if n == 0: n += 4
if n == 1 or n == 3:
  print(t + ""fedabc"".index(s) + 1)
else:
  print(t + ""fedabc"".index(s) + 8)",531,4524,93,7/20/17 22:19,17,779,1,8,"[(True, '1', '1', 111317), (True, '10', '10', 111318), (True, '11', '11', 111319), (True, '18', '18', 111320), (True, '13', '13', 111321), (True, '5', '5', 111322), (True, '3999999999999999994', '3999999999999999994', 111323), (True, '3999999999999999988', '3999999999999999988', 111324), (True, '6', '6', 111325), (True, '3', '3', 111326), (True, '2', '2', 111327), (True, '4', '4', 111328), (True, '11', '11', 111329), (True, '12', '12', 111330), (True, '9', '9', 111331), (True, '8', '8', 111332), (True, '4', '4', 111333), (True, '5', '5', 111334), (True, '6', '6', 111335), (True, '3', '3', 111336), (True, '2', '2', 111337), (True, '1', '1', 111338), (True, '12', '12', 111339), (True, '13', '13', 111340), (True, '10', '10', 111341), (True, '9', '9', 111342), (True, '8', '8', 111343), (True, '3999999988', '3999999988', 111344), (True, '3999999989', '3999999989', 111345), (True, '3999999990', '3999999990', 111346), (True, '3999999987', '3999999987', 111347), (True, '3999999986', '3999999986', 111348), (True, '3999999985', '3999999985', 111349), (True, '3999999995', '3999999995', 111350), (True, '3999999996', '3999999996', 111351), (True, '3999999997', '3999999997', 111352), (True, '3999999994', '3999999994', 111353), (True, '3999999993', '3999999993', 111354), (True, '3999999992', '3999999992', 111355), (True, '3999999988', '3999999988', 111356), (True, '3999999989', '3999999989', 111357), (True, '3999999990', '3999999990', 111358), (True, '3999999987', '3999999987', 111359), (True, '3999999986', '3999999986', 111360), (True, '3999999985', '3999999985', 111361), (True, '3999999995', '3999999995', 111362), (True, '3999999996', '3999999996', 111363), (True, '3999999997', '3999999997', 111364), (True, '3999999994', '3999999994', 111365), (True, '3999999993', '3999999993', 111366), (True, '3999999992', '3999999992', 111367), (True, '399996', '399996', 111368), (True, '399992', '399992', 111369), (True, '400003', '400003', 111370), (True, '400002', '400002', 111371), (True, '400001', '400001', 111372), (True, '400011', '400011', 111373), (True, '400012', '400012', 111374), (True, '400010', '400010', 111375), (True, '4925092', '4925092', 111376), (True, '331128', '331128', 111377), (True, '353245', '353245', 111378), (True, '3564946', '3564946', 111379), (True, '3999999999999999989', '3999999999999999989', 111380), (True, '3999999999999999990', '3999999999999999990', 111381), (True, '3999999999999999987', '3999999999999999987', 111382), (True, '3999999999999999986', '3999999999999999986', 111383), (True, '3999999999999999985', '3999999999999999985', 111384), (True, '3999999999999999995', '3999999999999999995', 111385), (True, '3999999999999999996', '3999999999999999996', 111386), (True, '3999999999999999997', '3999999999999999997', 111387), (True, '3999999999999999994', '3999999999999999994', 111388), (True, '3999999999999999993', '3999999999999999993', 111389), (True, '3999999999999999992', '3999999999999999992', 111390), (True, '3999999999999999988', '3999999999999999988', 111391), (True, '3999999999999999989', '3999999999999999989', 111392), (True, '3999999999999999990', '3999999999999999990', 111393), (True, '3999999999999999987', '3999999999999999987', 111394), (True, '3999999999999999995', '3999999999999999995', 111395), (True, '3999999999999999993', '3999999999999999993', 111396), (True, '3999999999999999992', '3999999999999999992', 111397), (True, '3999999999999999997', '3999999999999999997', 111398), (True, '388', '388', 111399), (True, '24', '24', 111400), (True, '17', '17', 111401), (True, '18', '18', 111402), (True, '3999999999999999965', '3999999999999999965', 111403), (True, '20', '20', 111404), (True, '24', '24', 111405), (True, '3999999999999999963', '3999999999999999963', 111406), (True, '3999999999999999964', '3999999999999999964', 111407), (True, '3999999999999999965', '3999999999999999965', 111408), (True, '3999999999999999962', '3999999999999999962', 111409), (True, '3999999999999999961', '3999999999999999961', 111410), (True, '3999999999999999960', '3999999999999999960', 111411), (True, '3999999999999999972', '3999999999999999972', 111412), (True, '3999999999999999973', '3999999999999999973', 111413), (True, '3999999999999999974', '3999999999999999974', 111414), (True, '3999999999999999971', '3999999999999999971', 111415), (True, '3999999999999999970', '3999999999999999970', 111416), (True, '3999999999999999969', '3999999999999999969', 111417), (True, '3999999999999999979', '3999999999999999979', 111418), (True, '3999999999999999980', '3999999999999999980', 111419), (True, '3999999999999999981', '3999999999999999981', 111420), (True, '3999999999999999978', '3999999999999999978', 111421), (True, '3999999999999999977', '3999999999999999977', 111422), (True, '3999999999999999976', '3999999999999999976', 111423), (True, '3999999999999999972', '3999999999999999972', 111424), (True, '3999999999999999973', '3999999999999999973', 111425), (True, '3999999999999999974', '3999999999999999974', 111426), (True, '3999999999999999971', '3999999999999999971', 111427), (True, '3999999999999999970', '3999999999999999970', 111428), (True, '3999999999999999969', '3999999999999999969', 111429), (True, '43', '43', 111430), (True, '33', '33', 111431), (True, '2726290581', '2726290581', 111432), (True, '81', '81', 111433), (True, '484', '484', 111434), (True, '3999999555555111108', '3999999555555111108', 111435)]",True,Accecpted,0.912256181961446,0.9870801033591732,False,0.0
850282,28732420,"i = input()
n, s = int(i[0]), i[1]
t = 16*((n-1) // 4)
n %= 4
if n == 0: n += 4
if n == 1 or n == 3:
  print(t + ""fedabc"".index(s) + 1)
else:
  print(t + ""fedabc"".index(s) + 8)",531,4508,62,7/20/17 22:18,17,779,5,8,"[(True, '1', '1', 111317), (True, '10', '10', 111318), (True, '11', '11', 111319), (True, '18', '18', 111320), (True, '13', '13', 111321), (True, '5', '5', 111322), (False, '', '3999999999999999994', 111323), (False, '', '3999999999999999988', 111324), (True, '6', '6', 111325), (True, '3', '3', 111326), (True, '2', '2', 111327), (True, '4', '4', 111328), (True, '11', '11', 111329), (True, '12', '12', 111330), (True, '9', '9', 111331), (True, '8', '8', 111332), (True, '4', '4', 111333), (True, '5', '5', 111334), (True, '6', '6', 111335), (True, '3', '3', 111336), (True, '2', '2', 111337), (True, '1', '1', 111338), (True, '12', '12', 111339), (True, '13', '13', 111340), (True, '10', '10', 111341), (True, '9', '9', 111342), (True, '8', '8', 111343), (False, '', '3999999988', 111344), (False, '', '3999999989', 111345), (False, '', '3999999990', 111346), (False, '', '3999999987', 111347), (False, '', '3999999986', 111348), (False, '', '3999999985', 111349), (False, '', '3999999995', 111350), (False, '', '3999999996', 111351), (False, '', '3999999997', 111352), (False, '', '3999999994', 111353), (False, '', '3999999993', 111354), (False, '', '3999999992', 111355), (False, '', '3999999988', 111356), (False, '', '3999999989', 111357), (False, '', '3999999990', 111358), (False, '', '3999999987', 111359), (False, '', '3999999986', 111360), (False, '', '3999999985', 111361), (False, '', '3999999995', 111362), (False, '', '3999999996', 111363), (False, '', '3999999997', 111364), (False, '', '3999999994', 111365), (False, '', '3999999993', 111366), (False, '', '3999999992', 111367), (False, '', '399996', 111368), (False, '', '399992', 111369), (False, '', '400003', 111370), (False, '', '400002', 111371), (False, '', '400001', 111372), (False, '', '400011', 111373), (False, '', '400012', 111374), (False, '', '400010', 111375), (False, '', '4925092', 111376), (False, '', '331128', 111377), (False, '', '353245', 111378), (False, '', '3564946', 111379), (False, '', '3999999999999999989', 111380), (False, '', '3999999999999999990', 111381), (False, '', '3999999999999999987', 111382), (False, '', '3999999999999999986', 111383), (False, '', '3999999999999999985', 111384), (False, '', '3999999999999999995', 111385), (False, '', '3999999999999999996', 111386), (False, '', '3999999999999999997', 111387), (False, '', '3999999999999999994', 111388), (False, '', '3999999999999999993', 111389), (False, '', '3999999999999999992', 111390), (False, '', '3999999999999999988', 111391), (False, '', '3999999999999999989', 111392), (False, '', '3999999999999999990', 111393), (False, '', '3999999999999999987', 111394), (False, '', '3999999999999999995', 111395), (False, '', '3999999999999999993', 111396), (False, '', '3999999999999999992', 111397), (False, '', '3999999999999999997', 111398), (False, '', '388', 111399), (True, '24', '24', 111400), (True, '17', '17', 111401), (True, '18', '18', 111402), (False, '', '3999999999999999965', 111403), (True, '20', '20', 111404), (True, '24', '24', 111405), (False, '', '3999999999999999963', 111406), (False, '', '3999999999999999964', 111407), (False, '', '3999999999999999965', 111408), (False, '', '3999999999999999962', 111409), (False, '', '3999999999999999961', 111410), (False, '', '3999999999999999960', 111411), (False, '', '3999999999999999972', 111412), (False, '', '3999999999999999973', 111413), (False, '', '3999999999999999974', 111414), (False, '', '3999999999999999971', 111415), (False, '', '3999999999999999970', 111416), (False, '', '3999999999999999969', 111417), (False, '', '3999999999999999979', 111418), (False, '', '3999999999999999980', 111419), (False, '', '3999999999999999981', 111420), (False, '', '3999999999999999978', 111421), (False, '', '3999999999999999977', 111422), (False, '', '3999999999999999976', 111423), (False, '', '3999999999999999972', 111424), (False, '', '3999999999999999973', 111425), (False, '', '3999999999999999974', 111426), (False, '', '3999999999999999971', 111427), (False, '', '3999999999999999970', 111428), (False, '', '3999999999999999969', 111429), (False, '', '43', 111430), (False, '', '33', 111431), (False, '', '2726290581', 111432), (False, '', '81', 111433), (False, '', '484', 111434), (False, '', '3999999555555111108', 111435)]",False,Runtime Error,0.912256181961446,0.9870801033591732,False,0.7478991596638656
897593,26569947,"'''input
4
'''
def is_prime(n):
	if n < 2: return False
	elif n == 2: return True
	elif n % 2 == 0: return False
	elif all(n % i != 0 for i in range(3, int(n**0.5)+1, 2)): return True
	return False

n = int(input())
print(1 if is_prime(n) else 2 if n % 2 == 0 or is_prime(n-2) else 3)",531,5428,62,4/22/17 1:11,12,831,1,8,"[(True, '2', '2', 115114), (True, '3', '3', 115115), (True, '1', '1', 115116), (True, '1', '1', 115117), (True, '2', '2', 115118), (True, '2', '2', 115119), (True, '2', '2', 115120), (True, '1', '1', 115121), (True, '1', '1', 115122), (True, '1', '1', 115123), (True, '1', '1', 115124), (True, '1', '1', 115125), (True, '3', '3', 115126), (True, '2', '2', 115127), (True, '1', '1', 115128), (True, '1', '1', 115129), (True, '3', '3', 115130), (True, '3', '3', 115131), (True, '3', '3', 115132), (True, '3', '3', 115133), (True, '2', '2', 115134), (True, '2', '2', 115135), (True, '3', '3', 115136), (True, '2', '2', 115137), (True, '3', '3', 115138), (True, '2', '2', 115139), (True, '2', '2', 115140), (True, '2', '2', 115141), (True, '2', '2', 115142), (True, '3', '3', 115143), (True, '2', '2', 115144), (True, '2', '2', 115145), (True, '2', '2', 115146), (True, '2', '2', 115147), (True, '1', '1', 115148), (True, '2', '2', 115149), (True, '2', '2', 115150), (True, '2', '2', 115151), (True, '1', '1', 115152), (True, '2', '2', 115153), (True, '2', '2', 115154), (True, '2', '2', 115155), (True, '2', '2', 115156), (True, '1', '1', 115157), (True, '2', '2', 115158), (True, '2', '2', 115159), (True, '2', '2', 115160), (True, '1', '1', 115161), (True, '2', '2', 115162), (True, '2', '2', 115163), (True, '1', '1', 115164), (True, '2', '2', 115165), (True, '2', '2', 115166), (True, '1', '1', 115167), (True, '2', '2', 115168), (True, '3', '3', 115169), (True, '2', '2', 115170), (True, '2', '2', 115171), (True, '2', '2', 115172), (True, '1', '1', 115173), (True, '3', '3', 115174), (True, '3', '3', 115175), (True, '3', '3', 115176), (True, '2', '2', 115177), (True, '2', '2', 115178), (True, '3', '3', 115179), (True, '2', '2', 115180), (True, '2', '2', 115181), (True, '3', '3', 115182), (True, '2', '2', 115183), (True, '3', '3', 115184), (True, '2', '2', 115185), (True, '2', '2', 115186), (True, '2', '2', 115187), (True, '1', '1', 115188), (True, '3', '3', 115189), (True, '3', '3', 115190), (True, '3', '3', 115191), (True, '1', '1', 115192), (True, '1', '1', 115193), (True, '2', '2', 115194), (True, '3', '3', 115195), (True, '3', '3', 115196), (True, '3', '3', 115197), (True, '3', '3', 115198)]",True,Accecpted,0.7858562424774737,0.8369747899159664,False,0.0
897592,26569825,"'''input
4
'''
def is_prime(n):
	if n < 2: return False
	elif n == 2: return True
	elif n % 2 == 0: return False
	elif all(n % i != 0 for i in range(3, int(n**0.5)+1, 2)): return True
	return False

n = int(input())
if is_prime(n):
	print(1)
elif n % 2 == 0:
	print(2)
else:
	print(3)",531,5424,46,4/22/17 0:59,17,831,2,8,"[(True, '2', '2', 115114), (True, '3', '3', 115115), (True, '1', '1', 115116), (True, '1', '1', 115117), (True, '2', '2', 115118), (True, '2', '2', 115119), (True, '2', '2', 115120), (True, '1', '1', 115121), (True, '1', '1', 115122), (True, '1', '1', 115123), (True, '1', '1', 115124), (True, '1', '1', 115125), (True, '3', '3', 115126), (False, '3', '2', 115127), (True, '1', '1', 115128), (True, '1', '1', 115129), (True, '3', '3', 115130), (True, '3', '3', 115131), (True, '3', '3', 115132), (True, '3', '3', 115133), (True, '2', '2', 115134), (True, '2', '2', 115135), (True, '3', '3', 115136), (True, '2', '2', 115137), (True, '3', '3', 115138), (False, '3', '2', 115139), (False, '3', '2', 115140), (False, '3', '2', 115141), (False, '3', '2', 115142), (True, '3', '3', 115143), (True, '2', '2', 115144), (False, '3', '2', 115145), (False, '3', '2', 115146), (False, '3', '2', 115147), (True, '1', '1', 115148), (False, '3', '2', 115149), (False, '3', '2', 115150), (False, '3', '2', 115151), (True, '1', '1', 115152), (False, '3', '2', 115153), (True, '2', '2', 115154), (True, '2', '2', 115155), (True, '2', '2', 115156), (True, '1', '1', 115157), (True, '2', '2', 115158), (True, '2', '2', 115159), (True, '2', '2', 115160), (True, '1', '1', 115161), (True, '2', '2', 115162), (True, '2', '2', 115163), (True, '1', '1', 115164), (True, '2', '2', 115165), (True, '2', '2', 115166), (True, '1', '1', 115167), (False, '3', '2', 115168), (True, '3', '3', 115169), (False, '3', '2', 115170), (False, '3', '2', 115171), (False, '3', '2', 115172), (True, '1', '1', 115173), (True, '3', '3', 115174), (True, '3', '3', 115175), (True, '3', '3', 115176), (True, '2', '2', 115177), (True, '2', '2', 115178), (True, '3', '3', 115179), (True, '2', '2', 115180), (True, '2', '2', 115181), (True, '3', '3', 115182), (False, '3', '2', 115183), (True, '3', '3', 115184), (True, '2', '2', 115185), (True, '2', '2', 115186), (True, '2', '2', 115187), (True, '1', '1', 115188), (True, '3', '3', 115189), (True, '3', '3', 115190), (True, '3', '3', 115191), (True, '1', '1', 115192), (True, '1', '1', 115193), (True, '2', '2', 115194), (True, '3', '3', 115195), (True, '3', '3', 115196), (True, '3', '3', 115197), (True, '3', '3', 115198)]",False,Wrong Answer,0.7858562424774737,0.8369747899159664,False,0.2
929776,26228003,"'''input
539624191 782710197 514300407 2691939
'''
n, a, b, c = map(int, input().split())
n = n % 4
if n == 0:
	print(0)
elif n == 1:
	print(min([c, a+b, 3*a]))
elif n == 2:
	print(min([b, 2*a, 2*c]))
elif n == 3:
	print(min([a, b+c, 3*c]))",531,5436,62,4/9/17 2:33,13,858,1,8,"[(True, '3', '3', 116330), (True, '1', '1', 116331), (True, '0', '0', 116332), (True, '1000000000', '1000000000', 116333), (True, '0', '0', 116334), (True, '1', '1', 116335), (True, '5', '5', 116336), (True, '2', '2', 116337), (True, '1', '1', 116338), (True, '1000000000', '1000000000', 116339), (True, '999999990', '999999990', 116340), (True, '335918278', '335918278', 116341), (True, '1000000000', '1000000000', 116342), (True, '0', '0', 116343), (True, '524125987', '524125987', 116344), (True, '673102149', '673102149', 116345), (True, '585325539', '585325539', 116346), (True, '11774896', '11774896', 116347), (True, '0', '0', 116348), (True, '131116353', '131116353', 116349), (True, '8075817', '8075817', 116350), (True, '640274071', '640274071', 116351), (True, '405799987', '405799987', 116352), (True, '678092074', '678092074', 116353), (True, '0', '0', 116354), (True, '3', '3', 116355), (True, '2', '2', 116356), (True, '2', '2', 116357), (True, '3', '3', 116358), (True, '438793836', '438793836', 116359), (True, '307539138', '307539138', 116360), (True, '146086131', '146086131', 116361), (True, '347508634', '347508634', 116362), (True, '0', '0', 116363), (True, '764655030', '764655030', 116364), (True, '0', '0', 116365), (True, '335521569', '335521569', 116366), (True, '546879484', '546879484', 116367), (True, '691688417', '691688417', 116368), (True, '30527185', '30527185', 116369), (True, '0', '0', 116370), (True, '654916173', '654916173', 116371), (True, '216296044', '216296044', 116372), (True, '992170945', '992170945', 116373), (True, '48014511', '48014511', 116374), (True, '0', '0', 116375), (True, '0', '0', 116376), (True, '9', '9', 116377), (True, '7', '7', 116378), (True, '3', '3', 116379), (True, '3', '3', 116380), (True, '3', '3', 116381), (True, '3', '3', 116382), (True, '3', '3', 116383), (True, '5', '5', 116384), (True, '6', '6', 116385), (True, '100000', '100000', 116386), (True, '3', '3', 116387), (True, '9', '9', 116388), (True, '2', '2', 116389), (True, '2', '2', 116390), (True, '2', '2', 116391), (True, '2', '2', 116392), (True, '3', '3', 116393), (True, '101', '101', 116394), (True, '1000000000', '1000000000', 116395), (True, '11', '11', 116396), (True, '101', '101', 116397), (True, '2', '2', 116398), (True, '3', '3', 116399), (True, '2', '2', 116400), (True, '3', '3', 116401), (True, '3', '3', 116402), (True, '31', '31', 116403), (True, '3', '3', 116404), (True, '3', '3', 116405), (True, '1001', '1001', 116406), (True, '9', '9', 116407), (True, '3', '3', 116408), (True, '100001', '100001', 116409), (True, '2', '2', 116410), (True, '6', '6', 116411), (True, '3', '3', 116412), (True, '3', '3', 116413), (True, '2', '2', 116414), (True, '34', '34', 116415), (True, '9', '9', 116416), (True, '0', '0', 116417), (True, '0', '0', 116418)]",True,Accecpted,0.8412362805382417,0.8333333333333334,False,0.0
929775,26227959,"'''input
999999999 1000000000 1000000000 1000000000
'''
n, a, b, c = map(int, input().split())
n = n % 4
if n == 0:
	print(0)
elif n == 1:
	print(min([c, a+b, 3*a]))
elif n == 2:
	print(min([b, 2*a, 2*c]))
elif n == 3:
	print(min([a, b+c]))",531,5416,61,4/9/17 2:31,13,858,2,8,"[(True, '3', '3', 116330), (True, '1', '1', 116331), (True, '0', '0', 116332), (True, '1000000000', '1000000000', 116333), (True, '0', '0', 116334), (True, '1', '1', 116335), (True, '5', '5', 116336), (True, '2', '2', 116337), (True, '1', '1', 116338), (True, '1000000000', '1000000000', 116339), (True, '999999990', '999999990', 116340), (True, '335918278', '335918278', 116341), (True, '1000000000', '1000000000', 116342), (True, '0', '0', 116343), (True, '524125987', '524125987', 116344), (True, '673102149', '673102149', 116345), (True, '585325539', '585325539', 116346), (True, '11774896', '11774896', 116347), (True, '0', '0', 116348), (True, '131116353', '131116353', 116349), (False, '516992346', '8075817', 116350), (True, '640274071', '640274071', 116351), (True, '405799987', '405799987', 116352), (True, '678092074', '678092074', 116353), (True, '0', '0', 116354), (True, '3', '3', 116355), (True, '2', '2', 116356), (True, '2', '2', 116357), (False, '4', '3', 116358), (True, '438793836', '438793836', 116359), (False, '454914823', '307539138', 116360), (True, '146086131', '146086131', 116361), (True, '347508634', '347508634', 116362), (True, '0', '0', 116363), (True, '764655030', '764655030', 116364), (True, '0', '0', 116365), (True, '335521569', '335521569', 116366), (True, '546879484', '546879484', 116367), (True, '691688417', '691688417', 116368), (True, '30527185', '30527185', 116369), (True, '0', '0', 116370), (True, '654916173', '654916173', 116371), (True, '216296044', '216296044', 116372), (True, '992170945', '992170945', 116373), (True, '48014511', '48014511', 116374), (True, '0', '0', 116375), (True, '0', '0', 116376), (False, '10000', '9', 116377), (True, '7', '7', 116378), (False, '10000', '3', 116379), (False, '1000', '3', 116380), (False, '10', '3', 116381), (False, '100', '3', 116382), (False, '10001', '3', 116383), (True, '5', '5', 116384), (False, '1000', '6', 116385), (True, '100000', '100000', 116386), (False, '4', '3', 116387), (False, '1000', '9', 116388), (True, '2', '2', 116389), (True, '2', '2', 116390), (True, '2', '2', 116391), (True, '2', '2', 116392), (False, '100000', '3', 116393), (True, '101', '101', 116394), (True, '1000000000', '1000000000', 116395), (True, '11', '11', 116396), (True, '101', '101', 116397), (True, '2', '2', 116398), (False, '4', '3', 116399), (True, '2', '2', 116400), (False, '1000001', '3', 116401), (False, '1000', '3', 116402), (True, '31', '31', 116403), (True, '3', '3', 116404), (False, '7', '3', 116405), (True, '1001', '1001', 116406), (False, '1000', '9', 116407), (False, '4', '3', 116408), (True, '100001', '100001', 116409), (True, '2', '2', 116410), (True, '6', '6', 116411), (False, '2000', '3', 116412), (False, '10000000', '3', 116413), (True, '2', '2', 116414), (True, '34', '34', 116415), (True, '9', '9', 116416), (True, '0', '0', 116417), (True, '0', '0', 116418)]",False,Wrong Answer,0.8412362805382417,0.8333333333333334,False,0.2359550561797752
938642,25290704,"'''input
0
'''
n = int(input())
print([8, 4, 2, 6][(n % 4 - 1)] if n != 0 else 1)",531,4508,62,3/6/17 14:48,5,868,1,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (True, '1', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",True,Accecpted,2.71731792635015e-78,0.6712328767123288,False,0.0
938641,25290683,"'''input
2
'''
print([8, 4, 2, 6][(int(input()) % 4 - 1)])",531,4584,61,3/6/17 14:47,4,868,2,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (False, '6', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",False,Wrong Answer,2.71731792635015e-78,0.6712328767123288,False,0.0333333333333333
981999,26167324,"'''input
4 3 9
'''
n, m, k = map(int, input().split())
if k % (2*m) == 0:
	l = k // (2*m)
else:
	l = k // (2*m) + 1
print(l, end = "" "")
if (k+1)//2 % m == 0:
	print(m, end = "" "")
else:
	print((k+1)//2 % m, end = "" "")
print(""L"" if k % 2 == 1 else ""R"")",531,5432,77,4/6/17 13:55,14,905,1,8,"[(True, '2 2 L', '2 2 L', 119561), (True, '4 3 R', '4 3 R', 119562), (True, '1 2 R', '1 2 R', 119563), (True, '2 2 R', '2 2 R', 119564), (True, '10 3 L', '10 3 L', 119565), (True, '8043 2940 R', '8043 2940 R', 119566), (True, '1 1 L', '1 1 L', 119567), (True, '1 1 R', '1 1 R', 119568), (True, '1 1 L', '1 1 L', 119569), (True, '1 10000 R', '1 10000 R', 119570), (True, '1 1 L', '1 1 L', 119571), (True, '5000 1 R', '5000 1 R', 119572), (True, '10000 1 R', '10000 1 R', 119573), (True, '1 1 L', '1 1 L', 119574), (True, '1 1 R', '1 1 R', 119575), (True, '1 2 L', '1 2 L', 119576), (True, '1 2 R', '1 2 R', 119577), (True, '2 1 L', '2 1 L', 119578), (True, '2 1 R', '2 1 R', 119579), (True, '2 2 L', '2 2 L', 119580), (True, '2 2 R', '2 2 R', 119581), (True, '3 1 L', '3 1 L', 119582), (True, '3 1 R', '3 1 R', 119583), (True, '3 2 L', '3 2 L', 119584), (True, '3 2 R', '3 2 R', 119585), (True, '268 314 R', '268 314 R', 119586), (True, '147 378 R', '147 378 R', 119587), (True, '68 91 L', '68 91 L', 119588), (True, '9324 4745 R', '9324 4745 R', 119589), (True, '9857 6990 R', '9857 6990 R', 119590), (True, '5621 818 R', '5621 818 R', 119591), (True, '1 1 L', '1 1 L', 119592), (True, '1 1 R', '1 1 R', 119593), (True, '5001 1 L', '5001 1 L', 119594), (True, '10000 10000 L', '10000 10000 L', 119595), (True, '10000 10000 R', '10000 10000 R', 119596), (True, '1 1 L', '1 1 L', 119597), (True, '1 1 R', '1 1 R', 119598), (True, '1 2 L', '1 2 L', 119599), (True, '1 2 R', '1 2 R', 119600), (True, '1 1 L', '1 1 L', 119601), (True, '1 1 R', '1 1 R', 119602), (True, '2 1 L', '2 1 L', 119603), (True, '2 1 R', '2 1 R', 119604), (True, '2 1 L', '2 1 L', 119605), (True, '1 1 L', '1 1 L', 119606)]",True,Accecpted,0.8689991253858506,0.8735632183908046,False,0.0
981998,26167304,"'''input
2 4 4
'''
n, m, k = map(int, input().split())
if k % (2*m) == 0:
	l = k // (2*m)
else:
	l = k // (2*m) + 1
print(l, end = "" "")
if (k+1)//2 % m == 0:
	print(m, end = "" "")
else:
	print((k+1)//2, end = "" "")
print(""L"" if k % 2 == 1 else ""R"")",531,4460,30,4/6/17 13:55,14,905,2,8,"[(False, '2 5 L', '2 2 L', 119561), (True, '4 3 R', '4 3 R', 119562), (True, '1 2 R', '1 2 R', 119563), (False, '2 12 R', '2 2 R', 119564), (True, '10 3 L', '10 3 L', 119565), (False, '8043 80422940 R', '8043 2940 R', 119566), (True, '1 1 L', '1 1 L', 119567), (True, '1 1 R', '1 1 R', 119568), (True, '1 1 L', '1 1 L', 119569), (True, '1 10000 R', '1 10000 R', 119570), (True, '1 1 L', '1 1 L', 119571), (True, '5000 1 R', '5000 1 R', 119572), (True, '10000 1 R', '10000 1 R', 119573), (True, '1 1 L', '1 1 L', 119574), (True, '1 1 R', '1 1 R', 119575), (True, '1 2 L', '1 2 L', 119576), (True, '1 2 R', '1 2 R', 119577), (False, '2 3 L', '2 1 L', 119578), (False, '2 3 R', '2 1 R', 119579), (True, '2 2 L', '2 2 L', 119580), (True, '2 2 R', '2 2 R', 119581), (False, '3 5 L', '3 1 L', 119582), (False, '3 5 R', '3 1 R', 119583), (True, '3 2 L', '3 2 L', 119584), (True, '3 2 R', '3 2 R', 119585), (False, '268 534314 R', '268 314 R', 119586), (False, '147 292378 R', '147 378 R', 119587), (False, '68 134091 L', '68 91 L', 119588), (False, '9324 93225422 R', '9324 4745 R', 119589), (False, '9857 98557134 R', '9857 6990 R', 119590), (False, '5621 56195198 R', '5621 818 R', 119591), (True, '1 1 L', '1 1 L', 119592), (True, '1 1 R', '1 1 R', 119593), (False, '5001 50000001 L', '5001 1 L', 119594), (True, '10000 10000 L', '10000 10000 L', 119595), (True, '10000 10000 R', '10000 10000 R', 119596), (True, '1 1 L', '1 1 L', 119597), (True, '1 1 R', '1 1 R', 119598), (True, '1 2 L', '1 2 L', 119599), (True, '1 2 R', '1 2 R', 119600), (True, '1 1 L', '1 1 L', 119601), (True, '1 1 R', '1 1 R', 119602), (True, '2 1 L', '2 1 L', 119603), (True, '2 1 R', '2 1 R', 119604), (False, '2 4 L', '2 1 L', 119605), (True, '1 1 L', '1 1 L', 119606)]",False,Wrong Answer,0.8689991253858506,0.8735632183908046,False,0.3260869565217391
1031728,25721704,"'''input
!RGYB
'''
s = input()
r, y, g, b = [s.index(i) % 4 for i in ""RYGB""]
d, a, t = {r: ""R"", y: ""Y"", g: ""G"", b: ""B""}, {""R"": 0, ""Y"": 0, ""G"": 0, ""B"": 0}, []
for x in range(len(s)):
	if s[x] == ""!"":
		a[d[x % 4]] += 1
for y in ""RBYG"":
	print(a[y], end = "" "")",531,4540,77,3/22/17 23:41,11,957,1,8,"[(True, '0 0 0 0', '0 0 0 0', 124954), (True, '0 1 0 0', '0 1 0 0', 124955), (True, '1 1 1 1', '1 1 1 1', 124956), (True, '2 1 1 0', '2 1 1 0', 124957), (True, '0 0 0 0', '0 0 0 0', 124958), (True, '20 18 19 18', '20 18 19 18', 124959), (True, '3 5 2 1', '3 5 2 1', 124960), (True, '0 0 0 0', '0 0 0 0', 124961), (True, '0 0 0 1', '0 0 0 1', 124962), (True, '0 0 0 0', '0 0 0 0', 124963), (True, '0 0 0 0', '0 0 0 0', 124964), (True, '0 0 0 0', '0 0 0 0', 124965), (True, '0 0 0 0', '0 0 0 0', 124966), (True, '1 1 1 1', '1 1 1 1', 124967), (True, '2 1 1 1', '2 1 1 1', 124968), (True, '1 2 1 2', '1 2 1 2', 124969), (True, '2 2 1 2', '2 2 1 2', 124970), (True, '2 2 2 2', '2 2 2 2', 124971), (True, '24 24 24 24', '24 24 24 24', 124972), (True, '24 24 24 0', '24 24 24 0', 124973), (True, '24 24 0 24', '24 24 0 24', 124974), (True, '24 0 24 24', '24 0 24 24', 124975), (True, '0 24 24 24', '0 24 24 24', 124976), (True, '0 1 0 2', '0 1 0 2', 124977), (True, '1 0 3 1', '1 0 3 1', 124978), (True, '4 3 2 1', '4 3 2 1', 124979), (True, '3 6 6 4', '3 6 6 4', 124980), (True, '1 5 9 7', '1 5 9 7', 124981), (True, '5 7 5 7', '5 7 5 7', 124982), (True, '5 13 12 13', '5 13 12 13', 124983), (True, '14 2 13 11', '14 2 13 11', 124984), (True, '0 1 2 3', '0 1 2 3', 124985), (True, '20 20 21 21', '20 20 21 21', 124986), (True, '15 10 5 0', '15 10 5 0', 124987), (True, '23 24 23 24', '23 24 23 24', 124988), (True, '0 24 0 24', '0 24 0 24', 124989), (True, '13 12 17 20', '13 12 17 20', 124990), (True, '7 8 22 15', '7 8 22 15', 124991), (True, '11 14 0 24', '11 14 0 24', 124992), (True, '10 8 9 8', '10 8 9 8', 124993), (True, '15 10 4 0', '15 10 4 0', 124994), (True, '22 24 23 23', '22 24 23 23', 124995), (True, '19 17 18 17', '19 17 18 17', 124996), (True, '14 9 3 0', '14 9 3 0', 124997), (True, '21 23 22 22', '21 23 22 22', 124998), (True, '18 16 17 16', '18 16 17 16', 124999), (True, '10 10 15 18', '10 10 15 18', 125000), (True, '5 5 20 12', '5 5 20 12', 125001), (True, '8 11 0 21', '8 11 0 21', 125002), (True, '7 5 6 5', '7 5 6 5', 125003), (True, '3 3 3 3', '3 3 3 3', 125004), (True, '7 7 7 7', '7 7 7 7', 125005), (True, '0 0 0 0', '0 0 0 0', 125006), (True, '3 2 2 2', '3 2 2 2', 125007), (True, '0 0 1 0', '0 0 1 0', 125008), (True, '9 9 9 9', '9 9 9 9', 125009), (True, '2 2 1 2', '2 2 1 2', 125010), (True, '24 24 24 24', '24 24 24 24', 125011), (True, '3 3 3 3', '3 3 3 3', 125012), (True, '4 4 4 4', '4 4 4 4', 125013), (True, '2 1 2 2', '2 1 2 2', 125014), (True, '7 6 7 6', '7 6 7 6', 125015), (True, '3 3 3 3', '3 3 3 3', 125016), (True, '8 7 8 7', '8 7 8 7', 125017), (True, '10 10 10 10', '10 10 10 10', 125018)]",True,Accecpted,0.5077634940026433,0.7269076305220884,False,0.0
1031727,25721680,"'''input
!GB!RG!Y!
'''
s = input()
r, y, g, b = [s.index(i) % 4 for i in ""RYGB""]
d, t = {r: ""R"", y: ""Y"", g: ""G"", b: ""B""}, []
for x in range(len(s)):
	if s[x] == ""!"":
		t.append(d[x % 4])
	else:
		t.append(s[x])
print(t)",531,4452,31,3/22/17 23:39,12,957,2,8,"[(False, ""['R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R']"", '0 0 0 0', 124954), (False, ""['B', 'R', 'G', 'Y', 'B']"", '0 1 0 0', 124955), (False, ""['Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B']"", '1 1 1 1', 124956), (False, ""['R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R']"", '2 1 1 0', 124957), (False, ""['R', 'Y', 'B', 'G']"", '0 0 0 0', 124958), (False, ""['G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B']"", '20 18 19 18', 124959), (False, ""['B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B']"", '3 5 2 1', 124960), (False, ""['R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y']"", '0 0 0 0', 124961), (False, ""['G', 'Y', 'R', 'B', 'G']"", '0 0 0 1', 124962), (False, ""['R', 'B', 'Y', 'G', 'R']"", '0 0 0 0', 124963), (False, ""['B', 'R', 'Y', 'G', 'B']"", '0 0 0 0', 124964), (False, ""['Y', 'R', 'G', 'B', 'Y']"", '0 0 0 0', 124965), (False, ""['G', 'B', 'Y', 'R', 'G']"", '0 0 0 0', 124966), (False, ""['G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R']"", '1 1 1 1', 124967), (False, ""['R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R']"", '2 1 1 1', 124968), (False, ""['B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G']"", '1 2 1 2', 124969), (False, ""['R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B']"", '2 2 1 2', 124970), (False, ""['B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y']"", '2 2 2 2', 124971), (False, ""['G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R']"", '24 24 24 24', 124972), (False, ""['R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B']"", '24 24 24 0', 124973), (False, ""['B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R']"", '24 24 0 24', 124974), (False, ""['Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G']"", '24 0 24 24', 124975), (False, ""['Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G']"", '0 24 24 24', 124976), (False, ""['R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G']"", '0 1 0 2', 124977), (False, ""['B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R']"", '1 0 3 1', 124978), (False, ""['Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G']"", '4 3 2 1', 124979), (False, ""['R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y']"", '3 6 6 4', 124980), (False, ""['R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y']"", '1 5 9 7', 124981), (False, ""['B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y']"", '5 7 5 7', 124982), (False, ""['Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R']"", '5 13 12 13', 124983), (False, ""['Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R']"", '14 2 13 11', 124984), (False, ""['R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B']"", '0 1 2 3', 124985), (False, ""['B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G']"", '20 20 21 21', 124986), (False, ""['G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R']"", '15 10 5 0', 124987), (False, ""['R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y']"", '23 24 23 24', 124988), (False, ""['G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R']"", '0 24 0 24', 124989), (False, ""['R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y']"", '13 12 17 20', 124990), (False, ""['B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G']"", '7 8 22 15', 124991), (False, ""['R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y']"", '11 14 0 24', 124992), (False, ""['G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y']"", '10 8 9 8', 124993), (False, ""['B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G']"", '15 10 4 0', 124994), (False, ""['B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y']"", '22 24 23 23', 124995), (False, ""['Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B']"", '19 17 18 17', 124996), (False, ""['R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G']"", '14 9 3 0', 124997), (False, ""['Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B']"", '21 23 22 22', 124998), (False, ""['Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G']"", '18 16 17 16', 124999), (False, ""['Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G']"", '10 10 15 18', 125000), (False, ""['R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y']"", '5 5 20 12', 125001), (False, ""['Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y']"", '8 11 0 21', 125002), (False, ""['R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B']"", '7 5 6 5', 125003), (False, ""['G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B']"", '3 3 3 3', 125004), (False, ""['G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R', 'G', 'Y', 'B', 'R']"", '7 7 7 7', 125005), (False, ""['R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y']"", '0 0 0 0', 125006), (False, ""['R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y']"", '3 2 2 2', 125007), (False, ""['R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y']"", '0 0 1 0', 125008), (False, ""['R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G']"", '9 9 9 9', 125009), (False, ""['G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B']"", '2 2 1 2', 125010), (False, ""['R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B', 'R', 'Y', 'G', 'B']"", '24 24 24 24', 125011), (False, ""['R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y']"", '3 3 3 3', 125012), (False, ""['R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G']"", '4 4 4 4', 125013), (False, ""['G', 'R', 'Y', 'B', 'G', 'R', 'Y', 'B', 'G', 'R', 'Y']"", '2 1 2 2', 125014), (False, ""['Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R']"", '7 6 7 6', 125015), (False, ""['R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G', 'R', 'B', 'Y', 'G']"", '3 3 3 3', 125016), (False, ""['Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R', 'G', 'B', 'Y', 'R']"", '8 7 8 7', 125017), (False, ""['R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y', 'R', 'B', 'G', 'Y']"", '10 10 10 10', 125018)]",False,Wrong Answer,0.5077634940026433,0.7269076305220884,False,1.0
1046538,25419971,"'''input
0 1
'''
a, b = map(int, input().split())
if a == 0 and b == 0:
	print(""NO"")
elif abs(a - b) <= 1:
	print(""YES"")
else:
	print(""NO"")",531,4516,46,3/12/17 1:14,10,972,1,8,"[(True, 'YES', 'YES', 125942), (True, 'NO', 'NO', 125943), (True, 'YES', 'YES', 125944), (True, 'YES', 'YES', 125945), (True, 'NO', 'NO', 125946), (True, 'YES', 'YES', 125947), (True, 'NO', 'NO', 125948), (True, 'YES', 'YES', 125949), (True, 'NO', 'NO', 125950), (True, 'YES', 'YES', 125951), (True, 'YES', 'YES', 125952), (True, 'NO', 'NO', 125953), (True, 'NO', 'NO', 125954), (True, 'YES', 'YES', 125955), (True, 'YES', 'YES', 125956), (True, 'NO', 'NO', 125957), (True, 'NO', 'NO', 125958), (True, 'NO', 'NO', 125959), (True, 'YES', 'YES', 125960), (True, 'NO', 'NO', 125961), (True, 'YES', 'YES', 125962)]",True,Accecpted,0.2685969508383159,0.582995951417004,False,0.0
1046537,25419958,"a, b = map(int, input().split())
print(""YES"" if abs(a - b) <= 1 and (a != 0 and b != 0) else ""NO"")",531,4484,46,3/12/17 1:13,2,972,2,8,"[(True, 'YES', 'YES', 125942), (True, 'NO', 'NO', 125943), (True, 'YES', 'YES', 125944), (True, 'YES', 'YES', 125945), (True, 'NO', 'NO', 125946), (False, 'NO', 'YES', 125947), (True, 'NO', 'NO', 125948), (True, 'YES', 'YES', 125949), (True, 'NO', 'NO', 125950), (True, 'YES', 'YES', 125951), (True, 'YES', 'YES', 125952), (True, 'NO', 'NO', 125953), (True, 'NO', 'NO', 125954), (True, 'YES', 'YES', 125955), (False, 'NO', 'YES', 125956), (True, 'NO', 'NO', 125957), (True, 'NO', 'NO', 125958), (True, 'NO', 'NO', 125959), (True, 'YES', 'YES', 125960), (True, 'NO', 'NO', 125961), (True, 'YES', 'YES', 125962)]",False,Wrong Answer,0.2685969508383159,0.582995951417004,False,0.0952380952380952
1139051,26776583,"'''input
00:17
'''
h, m = input().split("":"")
if h[::-1] > m and h[::-1] < ""60"":
	print(h, h[::-1], sep="":"")
elif h < ""23"":
	h = str(int(h) + 1).zfill(2)
	while h[::-1] >= ""60"":
		h = str(int(h) + 1).zfill(2)
	print(h, h[::-1], sep="":"")
else:
	print(""00:00"")",531,5424,124,5/1/17 3:28,13,1047,1,8,"[(True, '13:31', '13:31', 130121), (True, '00:00', '00:00', 130122), (True, '20:02', '20:02', 130123), (True, '11:11', '11:11', 130124), (True, '04:40', '04:40', 130125), (True, '02:20', '02:20', 130126), (True, '12:21', '12:21', 130127), (True, '10:01', '10:01', 130128), (True, '01:10', '01:10', 130129), (True, '05:50', '05:50', 130130), (True, '02:20', '02:20', 130131), (True, '10:01', '10:01', 130132), (True, '01:10', '01:10', 130133), (True, '23:32', '23:32', 130134), (True, '20:02', '20:02', 130135), (True, '12:21', '12:21', 130136), (True, '20:02', '20:02', 130137), (True, '04:40', '04:40', 130138), (True, '10:01', '10:01', 130139), (True, '20:02', '20:02', 130140), (True, '10:01', '10:01', 130141), (True, '05:50', '05:50', 130142), (True, '14:41', '14:41', 130143), (True, '23:32', '23:32', 130144), (True, '10:01', '10:01', 130145), (True, '04:40', '04:40', 130146), (True, '10:01', '10:01', 130147), (True, '14:41', '14:41', 130148), (True, '00:00', '00:00', 130149), (True, '20:02', '20:02', 130150), (True, '20:02', '20:02', 130151), (True, '10:01', '10:01', 130152), (True, '20:02', '20:02', 130153), (True, '01:10', '01:10', 130154), (True, '00:00', '00:00', 130155), (True, '00:00', '00:00', 130156)]",True,Accecpted,0.8241809019903908,0.75,False,0.0
1139050,26776577,"'''input
07:07
'''
h, m = input().split("":"")
if h[::-1] > m and h[::-1] < ""60"":
	print(h, h[::-1], sep="":"")
elif h < ""23"":
	h = str(int(h) + 1)
	while h[::-1] >= ""60"":
		h = str(int(h) + 1)
	print(h, h[::-1], sep="":"")
else:
	print(""00:00"")",531,5424,122,5/1/17 3:27,13,1047,2,8,"[(True, '13:31', '13:31', 130121), (True, '00:00', '00:00', 130122), (True, '20:02', '20:02', 130123), (True, '11:11', '11:11', 130124), (True, '04:40', '04:40', 130125), (True, '02:20', '02:20', 130126), (True, '12:21', '12:21', 130127), (True, '10:01', '10:01', 130128), (False, '1:1', '01:10', 130129), (False, '5:5', '05:50', 130130), (True, '02:20', '02:20', 130131), (True, '10:01', '10:01', 130132), (False, '1:1', '01:10', 130133), (True, '23:32', '23:32', 130134), (True, '20:02', '20:02', 130135), (True, '12:21', '12:21', 130136), (True, '20:02', '20:02', 130137), (False, '4:4', '04:40', 130138), (True, '10:01', '10:01', 130139), (True, '20:02', '20:02', 130140), (True, '10:01', '10:01', 130141), (False, '5:5', '05:50', 130142), (True, '14:41', '14:41', 130143), (True, '23:32', '23:32', 130144), (True, '10:01', '10:01', 130145), (False, '4:4', '04:40', 130146), (True, '10:01', '10:01', 130147), (True, '14:41', '14:41', 130148), (True, '00:00', '00:00', 130149), (True, '20:02', '20:02', 130150), (True, '20:02', '20:02', 130151), (True, '10:01', '10:01', 130152), (True, '20:02', '20:02', 130153), (False, '1:1', '01:10', 130154), (True, '00:00', '00:00', 130155), (True, '00:00', '00:00', 130156)]",False,Wrong Answer,0.8241809019903908,0.75,False,0.1944444444444444
1147058,26493154,"'''input
4
'''
n = int(input())
if n == 0:
	print(-1)
else:
	for x in range(n//4+1):
		for y in range(n//7+1):
			if 4*x + 7*y == n:
				print(""4"" * x + ""7"" * y)
				quit()
	print(-1)",531,5616,468,4/19/17 13:37,13,1053,1,8,"[(True, '47', '47', 130501), (True, '-1', '-1', 130502), (True, '4477777777', '4477777777', 130503), (True, '-1', '-1', 130504), (True, '4', '4', 130505), (True, '7', '7', 130506), (True, '444', '444', 130507), (True, '44477777', '44477777', 130509), (True, '4444777777777777', '4444777777777777', 130510), (True, '7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', '7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', 130511), (True, '44447777777777777777777777777777777777777777777777777777777777777777777', '44447777777777777777777777777777777777777777777777777777777777777777777', 130512), (True, '444447777777777777', '444447777777777777', 130513), (True, '4477777777777', '4477777777777', 130514), (True, '444477777777777777', '444477777777777777', 130515), (True, '444777777777777777777777777777777777777777777777777777777777777777777', '444777777777777777777777777777777777777777777777777777777777777777777', 130516), (True, '47777777777', '47777777777', 130517), (True, '4444477777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', '4444477777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', 130518), (True, '4444777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', '4444777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', 130519), (True, '477777777777777777777777777', '477777777777777777777777777', 130524), (True, '-1', '-1', 130540), (True, '-1', '-1', 130541), (True, '-1', '-1', 130542), (True, '44', '44', 130543), (True, '-1', '-1', 130544), (True, '-1', '-1', 130545)]",True,Accecpted,0.5557103518817196,0.8731563421828908,False,0.0
1147057,26493148,"'''input
10
'''
n = int(input())
for x in range(1, n//4+1):
	for y in range(1, n//7+1):
		if 4*x + 7*y == n:
			print(""4"" * x + ""7"" * y)
			quit()
print(-1)",531,5392,122,4/19/17 13:36,10,1053,2,8,"[(True, '47', '47', 130501), (True, '-1', '-1', 130502), (True, '4477777777', '4477777777', 130503), (True, '-1', '-1', 130504), (False, '-1', '4', 130505), (False, '-1', '7', 130506), (False, '-1', '444', 130507), (True, '44477777', '44477777', 130509), (True, '4444777777777777', '4444777777777777', 130510), (False, '4444444777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', '7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', 130511), (True, '44447777777777777777777777777777777777777777777777777777777777777777777', '44447777777777777777777777777777777777777777777777777777777777777777777', 130512), (True, '444447777777777777', '444447777777777777', 130513), (True, '4477777777777', '4477777777777', 130514), (True, '444477777777777777', '444477777777777777', 130515), (True, '444777777777777777777777777777777777777777777777777777777777777777777', '444777777777777777777777777777777777777777777777777777777777777777777', 130516), (True, '47777777777', '47777777777', 130517), (True, '4444477777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', '4444477777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', 130518), (True, '4444777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', '4444777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777', 130519), (True, '477777777777777777777777777', '477777777777777777777777777', 130524), (True, '-1', '-1', 130540), (True, '-1', '-1', 130541), (True, '-1', '-1', 130542), (False, '-1', '44', 130543), (True, '-1', '-1', 130544), (True, '-1', '-1', 130545)]",False,Wrong Answer,0.5557103518817196,0.8731563421828908,False,0.2
1188059,26079694,"'''input
3
8
'''
k, l = int(input()), int(input())
for x in range(1, 100):
	if k**x == l:
		print(""YES"")
		print(x-1)
		break
else:
	print(""NO"")",531,5436,124,4/2/17 17:11,12,1082,1,8,"[(True, 'YES\n1', 'YES\n1', 133227), (True, 'NO', 'NO', 133228), (True, 'YES\n0', 'YES\n0', 133229), (True, 'NO', 'NO', 133230), (True, 'NO', 'NO', 133231), (True, 'NO', 'NO', 133232), (True, 'NO', 'NO', 133233), (True, 'YES\n1', 'YES\n1', 133234), (True, 'YES\n5', 'YES\n5', 133235), (True, 'NO', 'NO', 133236), (True, 'NO', 'NO', 133237), (True, 'YES\n2', 'YES\n2', 133238), (True, 'NO', 'NO', 133239), (True, 'YES\n5', 'YES\n5', 133240), (True, 'YES\n2', 'YES\n2', 133241), (True, 'NO', 'NO', 133242), (True, 'NO', 'NO', 133243), (True, 'NO', 'NO', 133244), (True, 'NO', 'NO', 133245), (True, 'YES\n2', 'YES\n2', 133246), (True, 'NO', 'NO', 133247), (True, 'NO', 'NO', 133248), (True, 'NO', 'NO', 133249), (True, 'YES\n1', 'YES\n1', 133250), (True, 'YES\n3', 'YES\n3', 133251), (True, 'NO', 'NO', 133252), (True, 'NO', 'NO', 133253), (True, 'NO', 'NO', 133254), (True, 'NO', 'NO', 133255), (True, 'NO', 'NO', 133256), (True, 'NO', 'NO', 133257), (True, 'YES\n1', 'YES\n1', 133258), (True, 'NO', 'NO', 133259), (True, 'YES\n2', 'YES\n2', 133260), (True, 'NO', 'NO', 133261), (True, 'NO', 'NO', 133262), (True, 'YES\n1', 'YES\n1', 133263), (True, 'YES\n5', 'YES\n5', 133264), (True, 'YES\n3', 'YES\n3', 133265), (True, 'NO', 'NO', 133266), (True, 'NO', 'NO', 133267), (True, 'NO', 'NO', 133268), (True, 'NO', 'NO', 133269), (True, 'NO', 'NO', 133270), (True, 'NO', 'NO', 133271), (True, 'NO', 'NO', 133272), (True, 'YES\n1', 'YES\n1', 133273), (True, 'NO', 'NO', 133274), (True, 'YES\n1', 'YES\n1', 133275), (True, 'YES\n0', 'YES\n0', 133276), (True, 'NO', 'NO', 133277), (True, 'NO', 'NO', 133278), (True, 'NO', 'NO', 133279), (True, 'NO', 'NO', 133280), (True, 'YES\n29', 'YES\n29', 133281), (True, 'NO', 'NO', 133282), (True, 'YES\n3', 'YES\n3', 133283), (True, 'NO', 'NO', 133284), (True, 'YES\n8', 'YES\n8', 133285), (True, 'NO', 'NO', 133286), (True, 'NO', 'NO', 133287), (True, 'NO', 'NO', 133288), (True, 'NO', 'NO', 133289), (True, 'NO', 'NO', 133290)]",True,Accecpted,0.177976440457712,0.64576802507837,False,0.0
1188058,26079674,"'''input
581
196122941
'''
from math import log
k, l = int(input()), int(input())
if log(l, k) == float(log(l, k)):
	print(""YES"")
	print(int(log(l, k) - 1))
else:
	print(""NO"")",531,5404,92,4/2/17 17:10,11,1082,2,8,"[(True, 'YES\n1', 'YES\n1', 133227), (False, 'YES\n0', 'NO', 133228), (True, 'YES\n0', 'YES\n0', 133229), (False, 'YES\n2', 'NO', 133230), (False, 'YES\n1', 'NO', 133231), (False, 'YES\n1', 'NO', 133232), (False, 'YES\n2', 'NO', 133233), (True, 'YES\n1', 'YES\n1', 133234), (True, 'YES\n5', 'YES\n5', 133235), (False, 'YES\n0', 'NO', 133236), (False, 'YES\n0', 'NO', 133237), (True, 'YES\n2', 'YES\n2', 133238), (False, 'YES\n1', 'NO', 133239), (True, 'YES\n5', 'YES\n5', 133240), (True, 'YES\n2', 'YES\n2', 133241), (False, 'YES\n0', 'NO', 133242), (False, 'YES\n0', 'NO', 133243), (False, 'YES\n0', 'NO', 133244), (False, 'YES\n0', 'NO', 133245), (True, 'YES\n2', 'YES\n2', 133246), (False, 'YES\n3', 'NO', 133247), (False, 'YES\n0', 'NO', 133248), (False, 'YES\n0', 'NO', 133249), (True, 'YES\n1', 'YES\n1', 133250), (True, 'YES\n3', 'YES\n3', 133251), (False, 'YES\n0', 'NO', 133252), (False, 'YES\n0', 'NO', 133253), (False, 'YES\n0', 'NO', 133254), (False, 'YES\n0', 'NO', 133255), (False, 'YES\n0', 'NO', 133256), (False, 'YES\n0', 'NO', 133257), (True, 'YES\n1', 'YES\n1', 133258), (False, 'YES\n0', 'NO', 133259), (True, 'YES\n2', 'YES\n2', 133260), (False, 'YES\n0', 'NO', 133261), (False, 'YES\n0', 'NO', 133262), (True, 'YES\n1', 'YES\n1', 133263), (True, 'YES\n5', 'YES\n5', 133264), (True, 'YES\n3', 'YES\n3', 133265), (False, 'YES\n0', 'NO', 133266), (False, 'YES\n0', 'NO', 133267), (False, 'YES\n0', 'NO', 133268), (False, 'YES\n0', 'NO', 133269), (False, 'YES\n0', 'NO', 133270), (False, 'YES\n0', 'NO', 133271), (False, 'YES\n0', 'NO', 133272), (True, 'YES\n1', 'YES\n1', 133273), (False, 'YES\n0', 'NO', 133274), (True, 'YES\n1', 'YES\n1', 133275), (True, 'YES\n0', 'YES\n0', 133276), (False, 'YES\n0', 'NO', 133277), (False, 'YES\n0', 'NO', 133278), (False, 'YES\n29', 'NO', 133279), (False, 'YES\n29', 'NO', 133280), (True, 'YES\n29', 'YES\n29', 133281), (False, 'YES\n0', 'NO', 133282), (True, 'YES\n3', 'YES\n3', 133283), (False, 'YES\n8', 'NO', 133284), (False, 'YES\n7', 'YES\n8', 133285), (False, 'YES\n12', 'NO', 133286), (False, 'YES\n29', 'NO', 133287), (False, 'YES\n0', 'NO', 133288), (False, 'YES\n0', 'NO', 133289), (False, 'YES\n1', 'NO', 133290)]",False,Wrong Answer,0.177976440457712,0.64576802507837,False,0.6875
1260757,25277789,"'''input
9 4 3
'''
n, a, b = map(int, input().split())
print(min(n-a,b+1))",531,4520,124,3/6/17 6:01,5,1142,1,8,"[(True, '2', '2', 138318), (True, '3', '3', 138319), (True, '1', '1', 138320), (True, '1', '1', 138321), (True, '4', '4', 138322), (True, '7', '7', 138323), (True, '5', '5', 138324), (True, '6', '6', 138325), (True, '10', '10', 138326), (True, '7', '7', 138327), (True, '9', '9', 138328), (True, '15', '15', 138329), (True, '8', '8', 138330), (True, '2', '2', 138331), (True, '24', '24', 138332), (True, '5', '5', 138333), (True, '6', '6', 138334), (True, '16', '16', 138335), (True, '5', '5', 138336), (True, '12', '12', 138337), (True, '17', '17', 138338), (True, '38', '38', 138339), (True, '18', '18', 138340), (True, '38', '38', 138341), (True, '13', '13', 138342), (True, '8', '8', 138343), (True, '13', '13', 138344), (True, '1', '1', 138345), (True, '40', '40', 138346), (True, '53', '53', 138347), (True, '34', '34', 138348), (True, '23', '23', 138349), (True, '39', '39', 138350), (True, '38', '38', 138351), (True, '13', '13', 138352), (True, '36', '36', 138353), (True, '7', '7', 138354), (True, '21', '21', 138355), (True, '21', '21', 138356), (True, '2', '2', 138357), (True, '43', '43', 138358), (True, '9', '9', 138359), (True, '14', '14', 138360), (True, '23', '23', 138361), (True, '89', '89', 138362), (True, '32', '32', 138363), (True, '73', '73', 138364), (True, '89', '89', 138365), (True, '19', '19', 138366), (True, '1', '1', 138367)]",True,Accecpted,0.9036020036098448,0.9726027397260274,False,0.0
1260756,25277698,"'''input
9 4 3
'''
n, a, b = map(int, input().split())
print(min(a,b)+1)",531,4468,122,3/6/17 5:53,5,1142,2,8,"[(True, '2', '2', 138318), (True, '3', '3', 138319), (True, '1', '1', 138320), (False, '6', '1', 138321), (True, '4', '4', 138322), (False, '5', '7', 138323), (False, '8', '5', 138324), (True, '6', '6', 138325), (False, '7', '10', 138326), (False, '14', '7', 138327), (False, '5', '9', 138328), (False, '9', '15', 138329), (False, '19', '8', 138330), (True, '2', '2', 138331), (False, '6', '24', 138332), (False, '16', '5', 138333), (True, '6', '6', 138334), (True, '16', '16', 138335), (False, '34', '5', 138336), (True, '12', '12', 138337), (True, '17', '17', 138338), (False, '8', '38', 138339), (False, '17', '18', 138340), (False, '12', '38', 138341), (False, '39', '13', 138342), (True, '8', '8', 138343), (True, '13', '13', 138344), (False, '29', '1', 138345), (False, '13', '40', 138346), (False, '10', '53', 138347), (False, '30', '34', 138348), (True, '23', '23', 138349), (False, '28', '39', 138350), (False, '34', '38', 138351), (True, '13', '13', 138352), (True, '36', '36', 138353), (False, '45', '7', 138354), (True, '21', '21', 138355), (True, '21', '21', 138356), (False, '15', '2', 138357), (False, '1', '43', 138358), (True, '9', '9', 138359), (False, '60', '14', 138360), (False, '3', '23', 138361), (False, '6', '89', 138362), (False, '49', '32', 138363), (False, '23', '73', 138364), (False, '12', '89', 138365), (False, '82', '19', 138366), (True, '1', '1', 138367)]",False,Wrong Answer,0.9036020036098448,0.9726027397260274,False,0.62
1368342,26257879,"'''input
433
109 58 77 10 39 125 15 
'''
n = int(input())
a = list(map(int, input().split()))
n %= sum(a)
if n == 0:
	n += sum(a) 
s = 0
for x in range(7):
	s += a[x]
	if s >= n:
		print(x+1)
		break",531,5424,154,4/10/17 19:28,15,1226,1,8,"[(True, '6', '6', 144050), (True, '1', '1', 144051), (True, '1', '1', 144052), (True, '3', '3', 144053), (True, '1', '1', 144054), (True, '6', '6', 144055), (True, '6', '6', 144056), (True, '1', '1', 144057), (True, '1', '1', 144058), (True, '1', '1', 144059), (True, '3', '3', 144060), (True, '3', '3', 144061), (True, '7', '7', 144062), (True, '7', '7', 144063), (True, '1', '1', 144064), (True, '1', '1', 144065), (True, '6', '6', 144066), (True, '1', '1', 144067), (True, '1', '1', 144068), (True, '7', '7', 144069), (True, '1', '1', 144070), (True, '2', '2', 144071), (True, '7', '7', 144072), (True, '2', '2', 144073), (True, '6', '6', 144074), (True, '7', '7', 144075), (True, '6', '6', 144076), (True, '2', '2', 144077), (True, '7', '7', 144078), (True, '7', '7', 144079), (True, '6', '6', 144080), (True, '7', '7', 144081), (True, '7', '7', 144082), (True, '7', '7', 144083), (True, '6', '6', 144084), (True, '4', '4', 144085), (True, '6', '6', 144086), (True, '7', '7', 144087), (True, '7', '7', 144088), (True, '4', '4', 144089), (True, '7', '7', 144090), (True, '7', '7', 144091), (True, '4', '4', 144092), (True, '4', '4', 144093), (True, '7', '7', 144094), (True, '7', '7', 144095), (True, '7', '7', 144096), (True, '3', '3', 144097), (True, '6', '6', 144098)]",True,Accecpted,0.890792332658829,0.8839506172839506,False,0.0
1368341,26257833,"'''input
433
109 58 77 10 39 125 15
'''
n = int(input())
a = list(map(int, input().split()))
n %= sum(a)
if n == 0:
	print(7)
else:
	s = 0
	for x in range(7):
		s += a[x]
		if s >= n:
			print(x+1)
			break",531,4464,92,4/10/17 19:25,16,1226,2,8,"[(True, '6', '6', 144050), (False, '7', '1', 144051), (True, '1', '1', 144052), (True, '3', '3', 144053), (True, '1', '1', 144054), (True, '6', '6', 144055), (True, '6', '6', 144056), (True, '1', '1', 144057), (True, '1', '1', 144058), (True, '1', '1', 144059), (True, '3', '3', 144060), (True, '3', '3', 144061), (True, '7', '7', 144062), (True, '7', '7', 144063), (True, '1', '1', 144064), (True, '1', '1', 144065), (True, '6', '6', 144066), (True, '1', '1', 144067), (False, '7', '1', 144068), (True, '7', '7', 144069), (True, '1', '1', 144070), (True, '2', '2', 144071), (True, '7', '7', 144072), (False, '7', '2', 144073), (False, '7', '6', 144074), (True, '7', '7', 144075), (True, '6', '6', 144076), (False, '7', '2', 144077), (True, '7', '7', 144078), (True, '7', '7', 144079), (True, '6', '6', 144080), (True, '7', '7', 144081), (True, '7', '7', 144082), (True, '7', '7', 144083), (False, '7', '6', 144084), (False, '7', '4', 144085), (False, '7', '6', 144086), (True, '7', '7', 144087), (True, '7', '7', 144088), (False, '7', '4', 144089), (True, '7', '7', 144090), (True, '7', '7', 144091), (False, '7', '4', 144092), (False, '7', '4', 144093), (True, '7', '7', 144094), (True, '7', '7', 144095), (True, '7', '7', 144096), (False, '7', '3', 144097), (False, '7', '6', 144098)]",False,Wrong Answer,0.890792332658829,0.8839506172839506,False,0.2653061224489796
1432744,25161085,"'''input
2
3
4
5
24
'''
k, l, m, n, d = [int(input()) for _ in range(5)]
unharmed = 0
if min([k,l,m,m]) == 1:
	print(d)
else:
	for x in range(1,d+1):
		if all(x % i != 0 for i in [k,l,m,n]):
			unharmed += 1
	print(d-unharmed)",531,4524,310,3/3/17 4:18,16,1274,1,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (True, '35246', '35246', 147728), (True, '75083', '75083', 147729), (True, '24656', '24656', 147730), (True, '36320', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (True, '21956', '21956', 147738), (True, '32736', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (True, '36019', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (True, '9224', '9224', 147750), (True, '43539', '43539', 147751), (True, '2438', '2438', 147752), (True, '415', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",True,Accecpted,0.8084501886763632,0.9511111111111112,False,0.0
1432743,25161082,"'''input
10
9
8
7
6
'''
k, l, m, n, d = [int(input()) for _ in range(5)]
unharmed = 0
if min([k,l,m,m]) == 1:
	print(d)
else:
	for x in range(1,d+1):
		if all(x % i != 0 for i in [l,m,n]):
			unharmed += 1
	print(d-unharmed)",531,4468,92,3/3/17 4:18,16,1274,2,8,"[(True, '12', '12', 147720), (False, '14', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (False, '24401', '35246', 147728), (True, '75083', '75083', 147729), (False, '19725', '24656', 147730), (True, '36320', '36320', 147731), (False, '24209', '28244', 147732), (False, '13312', '16540', 147733), (False, '30252', '36302', 147734), (False, '14503', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (False, '19067', '21956', 147738), (False, '28059', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (False, '12006', '36019', 147742), (True, '63537', '63537', 147743), (False, '49010', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (False, '6457', '9224', 147750), (True, '43539', '43539', 147751), (False, '1741', '2438', 147752), (False, '237', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",False,Wrong Answer,0.8084501886763632,0.9511111111111112,False,0.35
1440330,25197947,"'''input
0
0 0 0 0 0 0 0 1 1 2 3 0
'''
k = int(input())
a = list(map(int, input().split()))
if sum(a) < k:
	print(-1)
elif k == 0:
	print(0)
else:
	s, t = 0, 0
	a = sorted(a)[::-1]
	while s < k:
		s += a[0]
		t += 1
		del a[0]
	print(t)",531,4532,154,3/4/17 2:00,18,1280,1,8,"[(True, '2', '2', 148162), (True, '0', '0', 148163), (True, '3', '3', 148164), (True, '1', '1', 148165), (True, '1', '1', 148166), (True, '6', '6', 148167), (True, '-1', '-1', 148168), (True, '0', '0', 148169), (True, '1', '1', 148170), (True, '2', '2', 148171), (True, '3', '3', 148172), (True, '4', '4', 148173), (True, '5', '5', 148174), (True, '6', '6', 148175), (True, '7', '7', 148176), (True, '8', '8', 148177), (True, '9', '9', 148178), (True, '9', '9', 148179), (True, '9', '9', 148180), (True, '11', '11', 148181), (True, '5', '5', 148182), (True, '6', '6', 148183), (True, '7', '7', 148184), (True, '6', '6', 148185), (True, '7', '7', 148186), (True, '9', '9', 148187), (True, '11', '11', 148188), (True, '11', '11', 148189), (True, '-1', '-1', 148190), (True, '-1', '-1', 148191), (True, '-1', '-1', 148192), (True, '0', '0', 148193), (True, '-1', '-1', 148194), (True, '0', '0', 148195), (True, '1', '1', 148196), (True, '12', '12', 148197), (True, '12', '12', 148198), (True, '6', '6', 148199), (True, '-1', '-1', 148200)]",True,Accecpted,0.7742322303768185,0.8771186440677966,False,0.0
1440329,25197943,"'''input
5
1 1 1 1 2 2 3 2 2 1 1 1
'''
k = int(input())
a = list(map(int, input().split()))
if sum(a) < k:
	print(-1)
elif k == 0:
	print(0)
else:
	s, t = 0, 0
	a = sorted(a)[::-1]
	while s < k:
		s += a[0]
		t += 1
		del a[0]

print(t)",531,4456,92,3/4/17 1:59,19,1280,5,8,"[(True, '2', '2', 148162), (True, '0', '0', 148163), (True, '3', '3', 148164), (True, '1', '1', 148165), (True, '1', '1', 148166), (True, '6', '6', 148167), (True, '-1', '-1', 148168), (True, '0', '0', 148169), (True, '1', '1', 148170), (True, '2', '2', 148171), (True, '3', '3', 148172), (True, '4', '4', 148173), (True, '5', '5', 148174), (True, '6', '6', 148175), (True, '7', '7', 148176), (True, '8', '8', 148177), (True, '9', '9', 148178), (True, '9', '9', 148179), (True, '9', '9', 148180), (True, '11', '11', 148181), (True, '5', '5', 148182), (True, '6', '6', 148183), (True, '7', '7', 148184), (True, '6', '6', 148185), (True, '7', '7', 148186), (True, '9', '9', 148187), (True, '11', '11', 148188), (True, '11', '11', 148189), (True, '-1', '-1', 148190), (True, '-1', '-1', 148191), (True, '-1', '-1', 148192), (True, '0', '0', 148193), (True, '-1', '-1', 148194), (True, '0', '0', 148195), (True, '1', '1', 148196), (True, '12', '12', 148197), (True, '12', '12', 148198), (True, '6', '6', 148199), (True, '-1', '-1', 148200)]",True,Runtime Error,0.7742322303768185,0.8771186440677966,False,0.0
1719703,28573244,"n, m = map(int, input().split())
if n != 0 and m != 0:
  print(max(m, n), n - 1 + m)
elif m == 0:
  print(n, n)
else:
  print(""Impossible"")",531,5420,124,7/15/17 15:33,7,1530,1,8,"[(True, '2 2', '2 2', 160161), (True, 'Impossible', 'Impossible', 160162), (True, '2 3', '2 3', 160163), (True, '7 8', '7 8', 160164), (True, '10 13', '10 13', 160165), (True, '6 6', '6 6', 160166), (True, '7 7', '7 7', 160167), (True, '0 0', '0 0', 160168), (True, '71 94', '71 94', 160169), (True, '70 85', '70 85', 160170), (True, 'Impossible', 'Impossible', 160171), (True, '1 1', '1 1', 160172), (True, '1 1', '1 1', 160173), (True, '82 144', '82 144', 160174), (True, '26 33', '26 33', 160175), (True, '27 47', '27 47', 160176), (True, 'Impossible', 'Impossible', 160177), (True, '84 129', '84 129', 160178), (True, '96 154', '96 154', 160179), (True, '63028 63028', '63028 63028', 160180), (True, '9458 9458', '9458 9458', 160181), (True, '80236 80236', '80236 80236', 160182), (True, '26666 26666', '26666 26666', 160183), (True, '59617 59617', '59617 59617', 160184), (True, 'Impossible', 'Impossible', 160185), (True, '63028 91244', '63028 91244', 160186), (True, '39163 48620', '39163 48620', 160187), (True, '80236 95103', '80236 95103', 160188), (True, '52747 79412', '52747 79412', 160189), (True, '59617 88068', '59617 88068', 160190), (True, '6048 10205', '6048 10205', 160191), (True, '76826 81035', '76826 81035', 160192), (True, '23256 38411', '23256 38411', 160193), (True, '56207 109241', '56207 109241', 160194), (True, '28740 31376', '28740 31376', 160195), (True, '73415 77859', '73415 77859', 160196), (True, '82019 86516', '82019 86516', 160197), (True, '80204 108652', '80204 108652', 160198), (True, '99227 152549', '99227 152549', 160199), (True, '45657 74684', '45657 74684', 160200), (True, '78608 83340', '78608 83340', 160201), (True, '25038 29823', '25038 29823', 160202), (True, '95816 176307', '95816 176307', 160203), (True, '94024 136269', '94024 136269', 160204), (True, 'Impossible', 'Impossible', 160205), (True, '100000 100000', '100000 100000', 160206), (True, '100000 100000', '100000 100000', 160207), (True, '100000 100000', '100000 100000', 160208), (True, '63028 126055', '63028 126055', 160209), (True, '9458 18915', '9458 18915', 160210), (True, '80236 160471', '80236 160471', 160211), (True, '26666 53331', '26666 53331', 160212), (True, '59617 119233', '59617 119233', 160213), (True, '100000 199999', '100000 199999', 160214)]",True,Accecpted,0.8658691074049545,0.9716312056737588,False,0.0
1719702,28573219,"n, m = map(int, input().split())
if n != 0 and m != 0:
  print(m, n - 1 + m)
elif m == 0:
  print(n, n)
else:
  print(""Impossible"")",531,4504,122,7/15/17 15:32,7,1530,2,8,"[(True, '2 2', '2 2', 160161), (True, 'Impossible', 'Impossible', 160162), (True, '2 3', '2 3', 160163), (True, '7 8', '7 8', 160164), (True, '10 13', '10 13', 160165), (True, '6 6', '6 6', 160166), (False, '1 7', '7 7', 160167), (True, '0 0', '0 0', 160168), (False, '24 94', '71 94', 160169), (True, '70 85', '70 85', 160170), (True, 'Impossible', 'Impossible', 160171), (True, '1 1', '1 1', 160172), (True, '1 1', '1 1', 160173), (True, '82 144', '82 144', 160174), (True, '26 33', '26 33', 160175), (True, '27 47', '27 47', 160176), (True, 'Impossible', 'Impossible', 160177), (True, '84 129', '84 129', 160178), (True, '96 154', '96 154', 160179), (True, '63028 63028', '63028 63028', 160180), (True, '9458 9458', '9458 9458', 160181), (True, '80236 80236', '80236 80236', 160182), (True, '26666 26666', '26666 26666', 160183), (True, '59617 59617', '59617 59617', 160184), (True, 'Impossible', 'Impossible', 160185), (False, '28217 91244', '63028 91244', 160186), (True, '39163 48620', '39163 48620', 160187), (False, '14868 95103', '80236 95103', 160188), (True, '52747 79412', '52747 79412', 160189), (False, '28452 88068', '59617 88068', 160190), (False, '4158 10205', '6048 10205', 160191), (False, '4210 81035', '76826 81035', 160192), (False, '15156 38411', '23256 38411', 160193), (False, '53035 109241', '56207 109241', 160194), (True, '28740 31376', '28740 31376', 160195), (False, '4445 77859', '73415 77859', 160196), (False, '4498 86516', '82019 86516', 160197), (True, '80204 108652', '80204 108652', 160198), (False, '53323 152549', '99227 152549', 160199), (False, '29028 74684', '45657 74684', 160200), (False, '4733 83340', '78608 83340', 160201), (False, '4786 29823', '25038 29823', 160202), (False, '80492 176307', '95816 176307', 160203), (True, '94024 136269', '94024 136269', 160204), (True, 'Impossible', 'Impossible', 160205), (True, '100000 100000', '100000 100000', 160206), (True, '100000 100000', '100000 100000', 160207), (False, '1 100000', '100000 100000', 160208), (True, '63028 126055', '63028 126055', 160209), (True, '9458 18915', '9458 18915', 160210), (True, '80236 160471', '80236 160471', 160211), (True, '26666 53331', '26666 53331', 160212), (True, '59617 119233', '59617 119233', 160213), (True, '100000 199999', '100000 199999', 160214)]",False,Wrong Answer,0.8658691074049545,0.9716312056737588,False,0.3148148148148148
1866721,25352052,"'''input
1 11
'''
n, m = map(int, input().split())
t = 0
for a in range(10000):
	if a + n**2 - 2*n*a**2 + a**4 == m and n - a**2 >= 0:
		t += 1
print(t)",531,4524,154,3/9/17 4:44,9,1681,1,8,"[(True, '1', '1', 168975), (True, '1', '1', 168976), (True, '0', '0', 168977), (True, '1', '1', 168978), (True, '1', '1', 168979), (True, '1', '1', 168980), (True, '0', '0', 168981), (True, '0', '0', 168982), (True, '0', '0', 168983), (True, '0', '0', 168984), (True, '1', '1', 168985), (True, '2', '2', 168986), (True, '1', '1', 168987), (True, '1', '1', 168988), (True, '1', '1', 168989), (True, '1', '1', 168990), (True, '1', '1', 168991), (True, '1', '1', 168992), (True, '1', '1', 168993), (True, '1', '1', 168994), (True, '1', '1', 168995), (True, '1', '1', 168996), (True, '1', '1', 168997), (True, '1', '1', 168998), (True, '1', '1', 168999), (True, '1', '1', 169000), (True, '1', '1', 169001), (True, '1', '1', 169002), (True, '1', '1', 169003), (True, '1', '1', 169004), (True, '1', '1', 169005), (True, '1', '1', 169006), (True, '0', '0', 169007), (True, '0', '0', 169008), (True, '0', '0', 169009), (True, '0', '0', 169010), (True, '0', '0', 169011), (True, '0', '0', 169012), (True, '0', '0', 169013), (True, '0', '0', 169014), (True, '0', '0', 169015), (True, '0', '0', 169016), (True, '0', '0', 169017), (True, '0', '0', 169018), (True, '1', '1', 169019), (True, '0', '0', 169020), (True, '1', '1', 169021), (True, '0', '0', 169022), (True, '0', '0', 169023), (True, '0', '0', 169024), (True, '0', '0', 169025), (True, '0', '0', 169026), (True, '0', '0', 169027), (True, '0', '0', 169028)]",True,Accecpted,0.5870812965550503,0.9166666666666666,False,0.0
1866720,25352039,"'''input
14 28
'''
n, m = map(int, input().split())
t = 0
for a in range(100000):
	if a + n**2 - 2*n*a**2 + a**4 == m:
		t += 1
print(t)",531,4524,374,3/9/17 4:43,9,1681,2,8,"[(True, '1', '1', 168975), (True, '1', '1', 168976), (True, '0', '0', 168977), (True, '1', '1', 168978), (True, '1', '1', 168979), (True, '1', '1', 168980), (True, '0', '0', 168981), (True, '0', '0', 168982), (True, '0', '0', 168983), (True, '0', '0', 168984), (True, '1', '1', 168985), (True, '2', '2', 168986), (True, '1', '1', 168987), (True, '1', '1', 168988), (True, '1', '1', 168989), (True, '1', '1', 168990), (True, '1', '1', 168991), (True, '1', '1', 168992), (True, '1', '1', 168993), (True, '1', '1', 168994), (True, '1', '1', 168995), (True, '1', '1', 168996), (True, '1', '1', 168997), (True, '1', '1', 168998), (True, '1', '1', 168999), (True, '1', '1', 169000), (True, '1', '1', 169001), (True, '1', '1', 169002), (True, '1', '1', 169003), (True, '1', '1', 169004), (True, '1', '1', 169005), (True, '1', '1', 169006), (True, '0', '0', 169007), (True, '0', '0', 169008), (True, '0', '0', 169009), (True, '0', '0', 169010), (True, '0', '0', 169011), (True, '0', '0', 169012), (True, '0', '0', 169013), (True, '0', '0', 169014), (False, '1', '0', 169015), (True, '0', '0', 169016), (False, '1', '0', 169017), (True, '0', '0', 169018), (True, '1', '1', 169019), (True, '0', '0', 169020), (True, '1', '1', 169021), (False, '1', '0', 169022), (True, '0', '0', 169023), (False, '1', '0', 169024), (False, '1', '0', 169025), (True, '0', '0', 169026), (False, '1', '0', 169027), (True, '0', '0', 169028)]",False,Wrong Answer,0.5870812965550503,0.9166666666666666,False,0.1111111111111111
1879431,28952388,"'''input
2 3 4
'''
a, b, c = sorted(map(int, input().split()))
print((b+a-1)*(c+a-1) - a*(a-1))",531,4516,124,7/28/17 15:07,5,1691,1,8,"[(True, '18', '18', 169765), (True, '7', '7', 169766), (True, '224', '224', 169767), (True, '1578', '1578', 169768), (True, '115032', '115032', 169769), (True, '2983022', '2983022', 169770), (True, '10', '10', 169771), (True, '10', '10', 169772), (True, '10', '10', 169773), (True, '14', '14', 169774), (True, '14', '14', 169775), (True, '14', '14', 169776), (True, '19', '19', 169777), (True, '36', '36', 169778), (True, '2569', '2569', 169779), (True, '2959', '2959', 169780), (True, '2956', '2956', 169781), (True, '943654', '943654', 169782), (True, '906607', '906607', 169783), (True, '707048', '707048', 169784), (True, '2997001', '2997001', 169785), (True, '413875', '413875', 169786), (True, '218584', '218584', 169787), (True, '369265', '369265', 169788), (True, '401998', '401998', 169789), (True, '2991006', '2991006', 169790), (True, '3001', '3001', 169791), (True, '3001', '3001', 169792), (True, '3001', '3001', 169793), (True, '1001999', '1001999', 169794), (True, '692925', '692925', 169795), (True, '4412', '4412', 169796), (True, '13515', '13515', 169797), (True, '4252', '4252', 169798), (True, '10346', '10346', 169799), (True, '18144', '18144', 169800), (True, '43634', '43634', 169801), (True, '39922', '39922', 169802), (True, '17387', '17387', 169803), (True, '47494', '47494', 169804)]",True,Accecpted,0.8091067115702212,0.978494623655914,False,0.0
1879430,28952364,"'''input
2 3 4
'''
a, b, c = sorted(map(int, input().split()))
print((b+1)*(c+1) - a*(a-1))",531,4508,92,7/28/17 15:05,5,1691,2,8,"[(True, '18', '18', 169765), (True, '7', '7', 169766), (False, '84', '224', 169767), (False, '1098', '1578', 169768), (False, '50054', '115032', 169769), (False, '7980', '2983022', 169770), (True, '10', '10', 169771), (True, '10', '10', 169772), (True, '10', '10', 169773), (True, '14', '14', 169774), (True, '14', '14', 169775), (True, '14', '14', 169776), (False, '10', '19', 169777), (False, '24', '36', 169778), (True, '2569', '2569', 169779), (True, '2959', '2959', 169780), (True, '2956', '2956', 169781), (True, '943654', '943654', 169782), (True, '906607', '906607', 169783), (True, '707048', '707048', 169784), (False, '3001', '2997001', 169785), (False, '96343', '413875', 169786), (False, '206428', '218584', 169787), (False, '240120', '369265', 169788), (False, '273598', '401998', 169789), (False, '5994', '2991006', 169790), (True, '3001', '3001', 169791), (True, '3001', '3001', 169792), (True, '3001', '3001', 169793), (True, '1001999', '1001999', 169794), (False, '248154', '692925', 169795), (False, '1344', '4412', 169796), (False, '6795', '13515', 169797), (False, '1774', '4252', 169798), (False, '8018', '10346', 169799), (False, '8100', '18144', 169800), (False, '33594', '43634', 169801), (False, '24874', '39922', 169802), (False, '14262', '17387', 169803), (False, '46495', '47494', 169804)]",False,Wrong Answer,0.8091067115702212,0.978494623655914,False,0.55
1944851,26066183,"'''input
1 1 1
'''
s1, s2, s3 = map(int, input().split())
a, b, c = (s1*s3)//s2, (s1*s2)//s3, (s2*s3)//s1
print(int(4*(a**0.5+b**0.5+c**0.5)))",531,5428,124,4/2/17 2:12,6,1738,1,8,"[(True, '12', '12', 173163), (True, '28', '28', 173164), (True, '68', '68', 173165), (True, '56', '56', 173166), (True, '184', '184', 173167), (True, '308', '308', 173168), (True, '380', '380', 173169), (True, '184', '184', 173170), (True, '444', '444', 173171), (True, '120', '120', 173172), (True, '40008', '40008', 173173), (True, '332', '332', 173174), (True, '528', '528', 173175), (True, '740', '740', 173176), (True, '60', '60', 173177), (True, '856', '856', 173178), (True, '336', '336', 173179), (True, '1308', '1308', 173180), (True, '1736', '1736', 173181), (True, '8964', '8964', 173182), (True, '16436', '16436', 173183), (True, '1200', '1200', 173184), (True, '14500', '14500', 173185), (True, '1188', '1188', 173186), (True, '40008', '40008', 173187), (True, '36', '36', 173188), (True, '1184', '1184', 173189)]",True,Accecpted,0.0536879782328932,0.2107969151670951,False,0.0
1944850,26066168,"'''input
4 6 6
'''
def gcd(x, y):
	while y != 0:
		x, y = y, x % y
	return x
a, b, c = map(int, input().split())
l = a * b // gcd(a, b)
l = l * c // gcd(l, c)
x = (l // a + l // b + l // c)
if len(set([a, b, c])) < 3:
	print(4*x)
else:
	print(8*x)",531,4508,92,4/2/17 2:09,15,1738,2,8,"[(True, '12', '12', 173163), (True, '28', '28', 173164), (False, '136', '68', 173165), (False, '112', '56', 173166), (False, '368', '184', 173167), (False, '616', '308', 173168), (False, '760', '380', 173169), (False, '368', '184', 173170), (False, '888', '444', 173171), (False, '240', '120', 173172), (True, '40008', '40008', 173173), (False, '664', '332', 173174), (True, '528', '528', 173175), (False, '1480', '740', 173176), (False, '120', '60', 173177), (False, '1712', '856', 173178), (True, '336', '336', 173179), (False, '2616', '1308', 173180), (True, '1736', '1736', 173181), (True, '8964', '8964', 173182), (False, '32872', '16436', 173183), (False, '12', '1200', 173184), (True, '14500', '14500', 173185), (False, '12', '1188', 173186), (True, '40008', '40008', 173187), (False, '12', '36', 173188), (True, '1184', '1184', 173189)]",False,Wrong Answer,0.0536879782328932,0.2107969151670951,False,0.6296296296296297
2026198,27052082,"'''input
508
'''
from math import gcd
n, m = int(input()), 0
if n <= 3:
	print([1, 2, 6][n-1])
elif n % 2 == 1:
	print(n*(n-1)*(n-2))
elif n % 3 == 0:
	print((n-1)*(n-2)*(n-3))
else:
	print(n*(n-1)*(n-3))",531,8,154,5/12/17 13:49,13,1803,1,8,"[(True, '504', '504', 178068), (True, '210', '210', 178069), (True, '1', '1', 178070), (True, '60', '60', 178071), (True, '60', '60', 178072), (True, '32736', '32736', 178073), (True, '7980', '7980', 178074), (True, '2', '2', 178075), (True, '63960', '63960', 178076), (True, '21924', '21924', 178077), (True, '1560780', '1560780', 178078), (True, '3241644', '3241644', 178079), (True, '392222436', '392222436', 178080), (True, '788888100', '788888100', 178081), (True, '131096004', '131096004', 178082), (True, '567662724', '567662724', 178083), (True, '1560780', '1560780', 178084), (True, '220348260', '220348260', 178085), (True, '14526540', '14526540', 178086), (True, '788888100', '788888100', 178087), (True, '9527916', '9527916', 178088), (True, '140556', '140556', 178089), (True, '39303660', '39303660', 178090), (True, '7980', '7980', 178091), (True, '220348260', '220348260', 178092), (True, '3241644', '3241644', 178093), (True, '392222436', '392222436', 178094), (True, '1560780', '1560780', 178095), (True, '140556', '140556', 178096), (True, '14526540', '14526540', 178097), (True, '567662724', '567662724', 178098), (True, '783776526', '783776526', 178099), (True, '130065780', '130065780', 178100), (True, '341042100', '341042100', 178101), (True, '254839470', '254839470', 178102), (True, '6460', '6460', 178103), (True, '218891412', '218891412', 178104), (True, '501826260', '501826260', 178105), (True, '389016270', '389016270', 178106), (True, '69256788', '69256788', 178107), (True, '341042100', '341042100', 178108), (True, '14289372', '14289372', 178109), (True, '563559150', '563559150', 178110), (True, '130065780', '130065780', 178111), (True, '501826260', '501826260', 178112), (True, '254839470', '254839470', 178113), (True, '783776526', '783776526', 178114), (True, '14526540', '14526540', 178115), (True, '563559150', '563559150', 178116), (True, '7980', '7980', 178117), (True, '220348260', '220348260', 178118), (True, '254839470', '254839470', 178119), (True, '783776526', '783776526', 178120), (True, '1507420', '1507420', 178121), (True, '341042100', '341042100', 178122), (True, '389016270', '389016270', 178123), (True, '6460', '6460', 178124), (True, '130065780', '130065780', 178125), (True, '3154620', '3154620', 178126), (True, '563559150', '563559150', 178127), (True, '444394078546562430', '444394078546562430', 178128), (True, '433115377058855412', '433115377058855412', 178129), (True, '89460162932862372', '89460162932862372', 178130), (True, '51742503205363470', '51742503205363470', 178131), (True, '163597318076822526', '163597318076822526', 178132), (True, '157823524476316788', '157823524476316788', 178133), (True, '365063922340784100', '365063922340784100', 178134), (True, '141201007712496270', '141201007712496270', 178135), (True, '335728459024850814', '335728459024850814', 178136), (True, '326379736779169710', '326379736779169710', 178137), (True, '642275489615199390', '642275489615199390', 178138), (True, '299184742915995150', '299184742915995150', 178139), (True, '532248411551110590', '532248411551110590', 178140), (True, '585540171302562606', '585540171302562606', 178141), (True, '935975171582120670', '935975171582120670', 178142), (True, '545182335484592526', '545182335484592526', 178143), (True, '880611813728059710', '880611813728059710', 178144), (True, '954792870629291694', '954792870629291694', 178145), (True, '265393998349453470', '265393998349453470', 178146), (True, '26092892528622606', '26092892528622606', 178147), (True, '999996000003000000', '999996000003000000', 178148), (True, '280', '280', 178149), (True, '6', '6', 178150), (True, '12', '12', 178151), (True, '21924', '21924', 178152), (True, '4080', '4080', 178153), (True, '990', '990', 178154)]",True,Accecpted,0.2578909806675141,0.4129429892141756,False,0.0
2026197,27051977,"'''input
8
'''
from math import gcd
def pf(n):
	s = set()
	while n % 2 == 0:
		n //= 2
		s.add(2)
	for x in range(3, int(n**0.5)+1, 2):
		while n % x == 0:
			n //= x
			s.add(x)
	if n > 1:
		s.add(n)
	return list(s)
n, m = int(input()), 0
if n <= 3:
	print([1, 2, 6][n-1])
elif n % 2 == 1:
	print(n*(n-1)*(n-2))
else:
	m = 0
	for x in range(min(n-2, 50)):
		l = n*(n-1)//gcd(n, n-1)
		l = l*(n-2)//gcd(l, n-2)
		m = max(m, l)
		n -= 1
	print(m)",531,0,124,5/12/17 13:42,29,1803,2,8,"[(True, '504', '504', 178068), (True, '210', '210', 178069), (True, '1', '1', 178070), (True, '60', '60', 178071), (True, '60', '60', 178072), (True, '32736', '32736', 178073), (True, '7980', '7980', 178074), (True, '2', '2', 178075), (True, '63960', '63960', 178076), (True, '21924', '21924', 178077), (True, '1560780', '1560780', 178078), (True, '3241644', '3241644', 178079), (True, '392222436', '392222436', 178080), (True, '788888100', '788888100', 178081), (True, '131096004', '131096004', 178082), (True, '567662724', '567662724', 178083), (True, '1560780', '1560780', 178084), (True, '220348260', '220348260', 178085), (True, '14526540', '14526540', 178086), (True, '788888100', '788888100', 178087), (True, '9527916', '9527916', 178088), (True, '140556', '140556', 178089), (True, '39303660', '39303660', 178090), (True, '7980', '7980', 178091), (True, '220348260', '220348260', 178092), (True, '3241644', '3241644', 178093), (True, '392222436', '392222436', 178094), (True, '1560780', '1560780', 178095), (True, '140556', '140556', 178096), (True, '14526540', '14526540', 178097), (True, '567662724', '567662724', 178098), (True, '783776526', '783776526', 178099), (False, '129553710', '130065780', 178100), (False, '340067694', '341042100', 178101), (True, '254839470', '254839470', 178102), (False, '5814', '6460', 178103), (False, '218166606', '218891412', 178104), (False, '500565390', '501826260', 178105), (True, '389016270', '389016270', 178106), (False, '68920590', '69256788', 178107), (False, '340067694', '341042100', 178108), (False, '14172246', '14289372', 178109), (True, '563559150', '563559150', 178110), (False, '129553710', '130065780', 178111), (False, '500565390', '501826260', 178112), (True, '254839470', '254839470', 178113), (True, '783776526', '783776526', 178114), (True, '14526540', '14526540', 178115), (True, '563559150', '563559150', 178116), (True, '7980', '7980', 178117), (True, '220348260', '220348260', 178118), (True, '254839470', '254839470', 178119), (True, '783776526', '783776526', 178120), (False, '1481430', '1507420', 178121), (False, '340067694', '341042100', 178122), (True, '389016270', '389016270', 178123), (False, '5814', '6460', 178124), (False, '129553710', '130065780', 178125), (False, '3111990', '3154620', 178126), (True, '563559150', '563559150', 178127), (True, '444394078546562430', '444394078546562430', 178128), (False, '433114232165682606', '433115377058855412', 178129), (False, '89459762882049246', '89460162932862372', 178130), (True, '51742503205363470', '51742503205363470', 178131), (True, '163597318076822526', '163597318076822526', 178132), (False, '157822940390380590', '157823524476316788', 178133), (False, '365062900754321694', '365063922340784100', 178134), (True, '141201007712496270', '141201007712496270', 178135), (True, '335728459024850814', '335728459024850814', 178136), (True, '326379736779169710', '326379736779169710', 178137), (True, '642275489615199390', '642275489615199390', 178138), (True, '299184742915995150', '299184742915995150', 178139), (True, '532248411551110590', '532248411551110590', 178140), (True, '585540171302562606', '585540171302562606', 178141), (True, '935975171582120670', '935975171582120670', 178142), (True, '545182335484592526', '545182335484592526', 178143), (True, '880611813728059710', '880611813728059710', 178144), (True, '954792870629291694', '954792870629291694', 178145), (True, '265393998349453470', '265393998349453470', 178146), (True, '26092892528622606', '26092892528622606', 178147), (False, '999994000010999994', '999996000003000000', 178148), (False, '210', '280', 178149), (True, '6', '6', 178150), (True, '12', '12', 178151), (True, '21924', '21924', 178152), (True, '4080', '4080', 178153), (True, '990', '990', 178154)]",False,Wrong Answer,0.2578909806675141,0.4129429892141756,False,0.2413793103448276
2115529,27547806,"'''input
3
'''
n = int(input())
if n < 3:
	print(-1)
else:
	print(((10**(n-1))//210+1)*210)",531,368,1558,6/3/17 18:30,8,1876,1,8,"[(True, '-1', '-1', 182121), (True, '10080', '10080', 182122), (True, '100170', '100170', 182123), (True, '1050', '1050', 182124), (True, '100000000000110', '100000000000110', 182125), (True, '1000000000000050', '1000000000000050', 182126), (True, '10000000000000080', '10000000000000080', 182127), (True, '1000020', '1000020', 182128), (True, '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000170', '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000170', 182129), (True, '10000200', '10000200', 182130), (True, '210', '210', 182131), (True, '-1', '-1', 182132), (True, '100000110', '100000110', 182133), (True, '1000000050', '1000000050', 182134), (True, '10000000080', '10000000080', 182135), (True, '100000000170', '100000000170', 182136), (True, '1000000000020', '1000000000020', 182137), (True, '10000000000200', '10000000000200', 182138), (True, '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020', '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020', 182160), (True, '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200', '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200', 182161), (True, '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110', '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110', 182162), (True, '100000000000000170', '100000000000000170', 182163), (True, '1000000000000000020', '1000000000000000020', 182164), (True, '10000000000000000200', '10000000000000000200', 182165), (True, '100000000000000000110', '100000000000000000110', 182166), (True, '1000000000000000000050', '1000000000000000000050', 182167), (True, '10000000000000000000080', '10000000000000000000080', 182168), (True, '100000000000000000000170', '100000000000000000000170', 182169), (True, '1000000000000000000000020', '1000000000000000000000020', 182170), (True, '1000000000000000000000000000020', '1000000000000000000000000000020', 182171), (True, '100000000000000000000000000000110', '100000000000000000000000000000110', 182172), (True, '10000000000000000000000000000000000000000000000000000000000000080', '10000000000000000000000000000000000000000000000000000000000000080', 182173)]",True,Accecpted,0.5923033072023249,0.9836065573770492,False,0.0
2115528,27547794,"'''input
5
'''
n = int(input())
if n <= 3:
	print(-1)
else:
	print(((10**(n-1))//210+1)*210)",531,0,124,6/3/17 18:29,8,1876,2,8,"[(True, '-1', '-1', 182121), (True, '10080', '10080', 182122), (True, '100170', '100170', 182123), (True, '1050', '1050', 182124), (True, '100000000000110', '100000000000110', 182125), (True, '1000000000000050', '1000000000000050', 182126), (True, '10000000000000080', '10000000000000080', 182127), (True, '1000020', '1000020', 182128), (True, '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000170', '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000170', 182129), (True, '10000200', '10000200', 182130), (False, '-1', '210', 182131), (True, '-1', '-1', 182132), (True, '100000110', '100000110', 182133), (True, '1000000050', '1000000050', 182134), (True, '10000000080', '10000000080', 182135), (True, '100000000170', '100000000170', 182136), (True, '1000000000020', '1000000000020', 182137), (True, '10000000000200', '10000000000200', 182138), (True, '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020', '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020', 182160), (True, '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200', '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200', 182161), (True, '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110', '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110', 182162), (True, '100000000000000170', '100000000000000170', 182163), (True, '1000000000000000020', '1000000000000000020', 182164), (True, '10000000000000000200', '10000000000000000200', 182165), (True, '100000000000000000110', '100000000000000000110', 182166), (True, '1000000000000000000050', '1000000000000000000050', 182167), (True, '10000000000000000000080', '10000000000000000000080', 182168), (True, '100000000000000000000170', '100000000000000000000170', 182169), (True, '1000000000000000000000020', '1000000000000000000000020', 182170), (True, '1000000000000000000000000000020', '1000000000000000000000000000020', 182171), (True, '100000000000000000000000000000110', '100000000000000000000000000000110', 182172), (True, '10000000000000000000000000000000000000000000000000000000000000080', '10000000000000000000000000000000000000000000000000000000000000080', 182173)]",False,Wrong Answer,0.5923033072023249,0.9836065573770492,False,0.03125
2721177,28429669,"n = int(input())
while n % 2 == 0:
  print(n, end="" "")
  n //= 2
for x in range(3, int(n**0.5)+1, 2):
  while n % x == 0:
    print(n, end="" "")
    n //= x
if n != 1:
  print(n, 1)
else:
  print(1)",531,5452,124,7/11/17 18:20,12,2336,1,8,"[(True, '10 5 1', '10 5 1', 208985), (True, '4 2 1', '4 2 1', 208986), (True, '3 1', '3 1', 208987), (True, '2 1', '2 1', 208988), (True, '5 1', '5 1', 208989), (True, '6 3 1', '6 3 1', 208990), (True, '7 1', '7 1', 208991), (True, '1', '1', 208992), (True, '8 4 2 1', '8 4 2 1', 208993), (True, '12 6 3 1', '12 6 3 1', 208994), (True, '100 50 25 5 1', '100 50 25 5 1', 208995), (True, '1000 500 250 125 25 5 1', '1000 500 250 125 25 5 1', 208996), (True, '10000 5000 2500 1250 625 125 25 5 1', '10000 5000 2500 1250 625 125 25 5 1', 208997), (True, '100000 50000 25000 12500 6250 3125 625 125 25 5 1', '100000 50000 25000 12500 6250 3125 625 125 25 5 1', 208998), (True, '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', 208999), (True, '509149 1', '509149 1', 209000), (True, '572877 190959 63653 1201 1', '572877 190959 63653 1201 1', 209001), (True, '152956 76478 38239 1', '152956 76478 38239 1', 209002), (True, '733035 244345 48869 1', '733035 244345 48869 1', 209003), (True, '313114 156557 3331 1', '313114 156557 3331 1', 209004), (True, '893193 297731 42533 1', '893193 297731 42533 1', 209005), (True, '473273 2243 1', '473273 2243 1', 209006), (True, '537000 268500 134250 67125 22375 4475 895 179 1', '537000 268500 134250 67125 22375 4475 895 179 1', 209007), (True, '117079 6887 97 1', '117079 6887 97 1', 209008), (True, '784653 261551 9019 311 1', '784653 261551 9019 311 1', 209009), (True, '627251 1', '627251 1', 209010), (True, '9 3 1', '9 3 1', 209011), (True, '999999 333333 111111 37037 5291 481 37 1', '999999 333333 111111 37037 5291 481 37 1', 209012), (True, '120 60 30 15 5 1', '120 60 30 15 5 1', 209013), (True, '720 360 180 90 45 15 5 1', '720 360 180 90 45 15 5 1', 209014), (True, '648 324 162 81 27 9 3 1', '648 324 162 81 27 9 3 1', 209015), (True, '2430 1215 405 135 45 15 5 1', '2430 1215 405 135 45 15 5 1', 209016), (True, '119070 59535 19845 6615 2205 735 245 49 7 1', '119070 59535 19845 6615 2205 735 245 49 7 1', 209017), (True, '15 5 1', '15 5 1', 209018), (True, '21 7 1', '21 7 1', 209019), (True, '25 5 1', '25 5 1', 209020), (True, '100 50 25 5 1', '100 50 25 5 1', 209021), (True, '524287 1', '524287 1', 209022), (True, '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', 209023), (True, '600 300 150 75 25 5 1', '600 300 150 75 25 5 1', 209024), (True, '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', 209025), (True, '36 18 9 3 1', '36 18 9 3 1', 209026), (True, '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', 209027), (True, '20 10 5 1', '20 10 5 1', 209028), (True, '999983 1', '999983 1', 209029), (True, '9 3 1', '9 3 1', 209030), (True, '999983 1', '999983 1', 209031), (True, '20 10 5 1', '20 10 5 1', 209032), (True, '121 11 1', '121 11 1', 209033), (True, '1331 121 11 1', '1331 121 11 1', 209034)]",True,Accecpted,0.950010681010268,0.9521410579345088,False,0.0
2721175,28429651,"n = int(input())
while n % 2 == 0:
  print(n, end="" "")
  n //= 2
for x in range(3, int(n**0.5)+1, 2):
  while n % x == 0:
    print(n, end="" "")
    n //= x
if n != 1:
  print(n, 1)",531,4496,124,7/11/17 18:19,10,2336,2,8,"[(True, '10 5 1', '10 5 1', 208985), (False, '4 2', '4 2 1', 208986), (True, '3 1', '3 1', 208987), (False, '2', '2 1', 208988), (True, '5 1', '5 1', 208989), (True, '6 3 1', '6 3 1', 208990), (True, '7 1', '7 1', 208991), (False, '', '1', 208992), (False, '8 4 2', '8 4 2 1', 208993), (True, '12 6 3 1', '12 6 3 1', 208994), (False, '100 50 25 5', '100 50 25 5 1', 208995), (False, '1000 500 250 125 25 5', '1000 500 250 125 25 5 1', 208996), (False, '10000 5000 2500 1250 625 125 25 5', '10000 5000 2500 1250 625 125 25 5 1', 208997), (False, '100000 50000 25000 12500 6250 3125 625 125 25 5', '100000 50000 25000 12500 6250 3125 625 125 25 5 1', 208998), (False, '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5', '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', 208999), (True, '509149 1', '509149 1', 209000), (True, '572877 190959 63653 1201 1', '572877 190959 63653 1201 1', 209001), (True, '152956 76478 38239 1', '152956 76478 38239 1', 209002), (True, '733035 244345 48869 1', '733035 244345 48869 1', 209003), (True, '313114 156557 3331 1', '313114 156557 3331 1', 209004), (True, '893193 297731 42533 1', '893193 297731 42533 1', 209005), (True, '473273 2243 1', '473273 2243 1', 209006), (False, '537000 268500 134250 67125 22375 4475 895 179', '537000 268500 134250 67125 22375 4475 895 179 1', 209007), (False, '117079 6887 97', '117079 6887 97 1', 209008), (False, '784653 261551 9019 311', '784653 261551 9019 311 1', 209009), (True, '627251 1', '627251 1', 209010), (False, '9 3', '9 3 1', 209011), (False, '999999 333333 111111 37037 5291 481 37', '999999 333333 111111 37037 5291 481 37 1', 209012), (True, '120 60 30 15 5 1', '120 60 30 15 5 1', 209013), (False, '720 360 180 90 45 15 5', '720 360 180 90 45 15 5 1', 209014), (False, '648 324 162 81 27 9 3', '648 324 162 81 27 9 3 1', 209015), (False, '2430 1215 405 135 45 15 5', '2430 1215 405 135 45 15 5 1', 209016), (False, '119070 59535 19845 6615 2205 735 245 49 7', '119070 59535 19845 6615 2205 735 245 49 7 1', 209017), (True, '15 5 1', '15 5 1', 209018), (True, '21 7 1', '21 7 1', 209019), (False, '25 5', '25 5 1', 209020), (False, '100 50 25 5', '100 50 25 5 1', 209021), (True, '524287 1', '524287 1', 209022), (False, '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5', '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', 209023), (False, '600 300 150 75 25 5', '600 300 150 75 25 5 1', 209024), (False, '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5', '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', 209025), (False, '36 18 9 3', '36 18 9 3 1', 209026), (False, '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5', '1000000 500000 250000 125000 62500 31250 15625 3125 625 125 25 5 1', 209027), (True, '20 10 5 1', '20 10 5 1', 209028), (True, '999983 1', '999983 1', 209029), (False, '9 3', '9 3 1', 209030), (True, '999983 1', '999983 1', 209031), (True, '20 10 5 1', '20 10 5 1', 209032), (False, '121 11', '121 11 1', 209033), (False, '1331 121 11', '1331 121 11 1', 209034)]",False,Wrong Answer,0.950010681010268,0.9521410579345088,False,0.56
2734681,26084006,"'''input
11 5 6 11
'''
from itertools import combinations as combo
l = list(combo(list(map(int, input().split())), 3))
t, s = 0, 0
for x in l:
	if x[0] + x[1] > x[2] and x[0] + x[2] > x[1] and x[1] + x[2] > x[0]:
		t = 1
		break
	elif x[0] + x[1] >= x[2] and x[0] + x[2] >= x[1] and x[1] + x[2] >= x[0]:
		s = 1
if t == 1:
	print(""TRIANGLE"")
elif s == 1:
	print(""SEGMENT"")
else:
	print(""IMPOSSIBLE"")",531,5440,124,4/2/17 21:30,18,2346,1,8,"[(True, 'TRIANGLE', 'TRIANGLE', 209679), (True, 'SEGMENT', 'SEGMENT', 209680), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209681), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209682), (True, 'TRIANGLE', 'TRIANGLE', 209683), (True, 'TRIANGLE', 'TRIANGLE', 209684), (True, 'TRIANGLE', 'TRIANGLE', 209685), (True, 'TRIANGLE', 'TRIANGLE', 209686), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209687), (True, 'TRIANGLE', 'TRIANGLE', 209688), (True, 'SEGMENT', 'SEGMENT', 209689), (True, 'TRIANGLE', 'TRIANGLE', 209690), (True, 'SEGMENT', 'SEGMENT', 209691), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209692), (True, 'TRIANGLE', 'TRIANGLE', 209693), (True, 'TRIANGLE', 'TRIANGLE', 209694), (True, 'SEGMENT', 'SEGMENT', 209695), (True, 'SEGMENT', 'SEGMENT', 209696), (True, 'TRIANGLE', 'TRIANGLE', 209697), (True, 'SEGMENT', 'SEGMENT', 209698), (True, 'SEGMENT', 'SEGMENT', 209699), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209700), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209701), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209702), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209703), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209704), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209705), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209706), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209707), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209708), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209709), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209710), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209711), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209712), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209713), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209714), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209715), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209716), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209717), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209718), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209719), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209720), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209721), (True, 'SEGMENT', 'SEGMENT', 209722), (True, 'SEGMENT', 'SEGMENT', 209723), (True, 'SEGMENT', 'SEGMENT', 209724), (True, 'SEGMENT', 'SEGMENT', 209725), (True, 'SEGMENT', 'SEGMENT', 209726), (True, 'SEGMENT', 'SEGMENT', 209727), (True, 'SEGMENT', 'SEGMENT', 209728), (True, 'SEGMENT', 'SEGMENT', 209729), (True, 'SEGMENT', 'SEGMENT', 209730), (True, 'SEGMENT', 'SEGMENT', 209731), (True, 'SEGMENT', 'SEGMENT', 209732), (True, 'SEGMENT', 'SEGMENT', 209733), (True, 'SEGMENT', 'SEGMENT', 209734), (True, 'SEGMENT', 'SEGMENT', 209735), (True, 'SEGMENT', 'SEGMENT', 209736), (True, 'SEGMENT', 'SEGMENT', 209737), (True, 'SEGMENT', 'SEGMENT', 209738), (True, 'SEGMENT', 'SEGMENT', 209739), (True, 'SEGMENT', 'SEGMENT', 209740), (True, 'SEGMENT', 'SEGMENT', 209741), (True, 'TRIANGLE', 'TRIANGLE', 209742), (True, 'TRIANGLE', 'TRIANGLE', 209743), (True, 'TRIANGLE', 'TRIANGLE', 209744), (True, 'TRIANGLE', 'TRIANGLE', 209745), (True, 'TRIANGLE', 'TRIANGLE', 209746), (True, 'TRIANGLE', 'TRIANGLE', 209747), (True, 'TRIANGLE', 'TRIANGLE', 209748), (True, 'TRIANGLE', 'TRIANGLE', 209749), (True, 'TRIANGLE', 'TRIANGLE', 209750), (True, 'TRIANGLE', 'TRIANGLE', 209751), (True, 'TRIANGLE', 'TRIANGLE', 209752), (True, 'TRIANGLE', 'TRIANGLE', 209753), (True, 'TRIANGLE', 'TRIANGLE', 209754), (True, 'TRIANGLE', 'TRIANGLE', 209755), (True, 'TRIANGLE', 'TRIANGLE', 209756), (True, 'TRIANGLE', 'TRIANGLE', 209757), (True, 'TRIANGLE', 'TRIANGLE', 209758), (True, 'TRIANGLE', 'TRIANGLE', 209759), (True, 'TRIANGLE', 'TRIANGLE', 209760), (True, 'TRIANGLE', 'TRIANGLE', 209761)]",True,Accecpted,0.9094613723411084,0.9701492537313432,False,0.0
2734680,26083999,"'''input
4 2 1 3
'''
from itertools import combinations as combo
l = list(combo(list(map(int, input().split())), 3))
t, s = 0, 0
for x in l:
	if x[0] + x[1] > x[2] and x[0] + x[2] > x[1] and x[1] + x[2] > x[0]:
		t = 1
		break
	elif x[0] + x[1] >= x[2] and x[0] + x[2] >= x[1] and x[1] + x[2] >= x[0]:
		s = 1
		break
if t == 1:
	print(""TRIANGLE"")
elif s == 1:
	print(""SEGMENT"")
else:
	print(""IMPOSSIBLE"")",531,5440,124,4/2/17 21:30,19,2346,2,8,"[(True, 'TRIANGLE', 'TRIANGLE', 209679), (True, 'SEGMENT', 'SEGMENT', 209680), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209681), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209682), (True, 'TRIANGLE', 'TRIANGLE', 209683), (False, 'SEGMENT', 'TRIANGLE', 209684), (True, 'TRIANGLE', 'TRIANGLE', 209685), (False, 'SEGMENT', 'TRIANGLE', 209686), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209687), (True, 'TRIANGLE', 'TRIANGLE', 209688), (True, 'SEGMENT', 'SEGMENT', 209689), (True, 'TRIANGLE', 'TRIANGLE', 209690), (True, 'SEGMENT', 'SEGMENT', 209691), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209692), (True, 'TRIANGLE', 'TRIANGLE', 209693), (True, 'TRIANGLE', 'TRIANGLE', 209694), (True, 'SEGMENT', 'SEGMENT', 209695), (True, 'SEGMENT', 'SEGMENT', 209696), (True, 'TRIANGLE', 'TRIANGLE', 209697), (True, 'SEGMENT', 'SEGMENT', 209698), (True, 'SEGMENT', 'SEGMENT', 209699), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209700), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209701), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209702), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209703), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209704), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209705), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209706), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209707), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209708), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209709), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209710), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209711), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209712), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209713), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209714), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209715), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209716), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209717), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209718), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209719), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209720), (True, 'IMPOSSIBLE', 'IMPOSSIBLE', 209721), (True, 'SEGMENT', 'SEGMENT', 209722), (True, 'SEGMENT', 'SEGMENT', 209723), (True, 'SEGMENT', 'SEGMENT', 209724), (True, 'SEGMENT', 'SEGMENT', 209725), (True, 'SEGMENT', 'SEGMENT', 209726), (True, 'SEGMENT', 'SEGMENT', 209727), (True, 'SEGMENT', 'SEGMENT', 209728), (True, 'SEGMENT', 'SEGMENT', 209729), (True, 'SEGMENT', 'SEGMENT', 209730), (True, 'SEGMENT', 'SEGMENT', 209731), (True, 'SEGMENT', 'SEGMENT', 209732), (True, 'SEGMENT', 'SEGMENT', 209733), (True, 'SEGMENT', 'SEGMENT', 209734), (True, 'SEGMENT', 'SEGMENT', 209735), (True, 'SEGMENT', 'SEGMENT', 209736), (True, 'SEGMENT', 'SEGMENT', 209737), (True, 'SEGMENT', 'SEGMENT', 209738), (True, 'SEGMENT', 'SEGMENT', 209739), (True, 'SEGMENT', 'SEGMENT', 209740), (True, 'SEGMENT', 'SEGMENT', 209741), (True, 'TRIANGLE', 'TRIANGLE', 209742), (False, 'SEGMENT', 'TRIANGLE', 209743), (True, 'TRIANGLE', 'TRIANGLE', 209744), (False, 'SEGMENT', 'TRIANGLE', 209745), (True, 'TRIANGLE', 'TRIANGLE', 209746), (True, 'TRIANGLE', 'TRIANGLE', 209747), (True, 'TRIANGLE', 'TRIANGLE', 209748), (True, 'TRIANGLE', 'TRIANGLE', 209749), (True, 'TRIANGLE', 'TRIANGLE', 209750), (True, 'TRIANGLE', 'TRIANGLE', 209751), (True, 'TRIANGLE', 'TRIANGLE', 209752), (True, 'TRIANGLE', 'TRIANGLE', 209753), (True, 'TRIANGLE', 'TRIANGLE', 209754), (True, 'TRIANGLE', 'TRIANGLE', 209755), (True, 'TRIANGLE', 'TRIANGLE', 209756), (False, 'SEGMENT', 'TRIANGLE', 209757), (False, 'SEGMENT', 'TRIANGLE', 209758), (True, 'TRIANGLE', 'TRIANGLE', 209759), (True, 'TRIANGLE', 'TRIANGLE', 209760), (True, 'TRIANGLE', 'TRIANGLE', 209761)]",False,Wrong Answer,0.9094613723411084,0.9701492537313432,False,0.072289156626506
2845502,25797451,"'''input
105
106
'''
a, b = input(), input()
s = str(int(a) + int(b)).replace(""0"", """")
if int(a.replace(""0"", """")) + int(b.replace(""0"", """")) == int(s):
	print(""YES"")
else:
	print(""NO"")",531,4536,124,3/25/17 15:24,10,2439,1,8,"[(True, 'YES', 'YES', 214611), (True, 'NO', 'NO', 214612), (True, 'YES', 'YES', 214613), (True, 'NO', 'NO', 214614), (True, 'NO', 'NO', 214615), (True, 'NO', 'NO', 214616), (True, 'NO', 'NO', 214617), (True, 'YES', 'YES', 214618), (True, 'YES', 'YES', 214619), (True, 'YES', 'YES', 214620), (True, 'YES', 'YES', 214621), (True, 'NO', 'NO', 214622), (True, 'YES', 'YES', 214623), (True, 'YES', 'YES', 214624), (True, 'NO', 'NO', 214625), (True, 'YES', 'YES', 214626), (True, 'NO', 'NO', 214627), (True, 'NO', 'NO', 214628), (True, 'YES', 'YES', 214629), (True, 'YES', 'YES', 214630), (True, 'YES', 'YES', 214631), (True, 'YES', 'YES', 214632), (True, 'NO', 'NO', 214633), (True, 'YES', 'YES', 214634), (True, 'NO', 'NO', 214635), (True, 'NO', 'NO', 214636), (True, 'NO', 'NO', 214637), (True, 'NO', 'NO', 214638), (True, 'NO', 'NO', 214639), (True, 'NO', 'NO', 214640), (True, 'NO', 'NO', 214641), (True, 'NO', 'NO', 214642), (True, 'NO', 'NO', 214643), (True, 'YES', 'YES', 214644), (True, 'YES', 'YES', 214645), (True, 'NO', 'NO', 214646), (True, 'YES', 'YES', 214647), (True, 'NO', 'NO', 214648), (True, 'YES', 'YES', 214649), (True, 'YES', 'YES', 214650), (True, 'NO', 'NO', 214651), (True, 'NO', 'NO', 214652), (True, 'NO', 'NO', 214653)]",True,Accecpted,9.025629002083406e-232,0.3525641025641026,False,0.0
2845501,25797445,"'''input
3
-1 -1 2
'''
n = int(input())
a = sorted(map(int, input().split()))
print(sum([abs(x - a[x-1]) for x in range(1,n+1)]))",531,4520,92,3/25/17 15:23,7,2439,5,8,"[(False, '', 'YES', 214611), (False, '', 'NO', 214612), (False, '', 'YES', 214613), (False, '', 'NO', 214614), (False, '', 'NO', 214615), (False, '', 'NO', 214616), (False, '', 'NO', 214617), (False, '', 'YES', 214618), (False, '', 'YES', 214619), (False, '', 'YES', 214620), (False, '', 'YES', 214621), (False, '', 'NO', 214622), (False, '', 'YES', 214623), (False, '', 'YES', 214624), (False, '', 'NO', 214625), (False, '', 'YES', 214626), (False, '', 'NO', 214627), (False, '', 'NO', 214628), (False, '', 'YES', 214629), (False, '0', 'YES', 214630), (False, '', 'YES', 214631), (False, '5', 'YES', 214632), (False, '', 'NO', 214633), (False, '', 'YES', 214634), (False, '', 'NO', 214635), (False, '', 'NO', 214636), (False, '', 'NO', 214637), (False, '', 'NO', 214638), (False, '', 'NO', 214639), (False, '', 'NO', 214640), (False, '', 'NO', 214641), (False, '', 'NO', 214642), (False, '', 'NO', 214643), (False, '', 'YES', 214644), (False, '', 'YES', 214645), (False, '', 'NO', 214646), (False, '', 'YES', 214647), (False, '', 'NO', 214648), (False, '', 'YES', 214649), (False, '', 'YES', 214650), (False, '', 'NO', 214651), (False, '', 'NO', 214652), (False, '', 'NO', 214653)]",False,Runtime Error,9.025629002083406e-232,0.3525641025641026,False,1.0
2901911,24997666,"'''input
92
'''
n = int(input())
l = ['Sheldon', 'Leonard', 'Penny', 'Rajesh', 'Howard']
if n < 5:
	print(l[n-1])
else:	
	x = -1
	while 10*(2**x-1)+6 <= n:
		x += 1
	x-=1
	x1 = int(10*(2**x-1)+6)
	print(l[(n-x1)//(2**(x+1))])",531,4524,62,2/25/17 1:56,14,2481,1,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (True, 'Penny', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (True, 'Penny', 'Penny', 216618), (True, 'Rajesh', 'Rajesh', 216619), (True, 'Howard', 'Howard', 216620), (True, 'Howard', 'Howard', 216621), (True, 'Penny', 'Penny', 216622), (True, 'Rajesh', 'Rajesh', 216623), (True, 'Leonard', 'Leonard', 216624), (True, 'Penny', 'Penny', 216625), (True, 'Howard', 'Howard', 216626), (True, 'Rajesh', 'Rajesh', 216627), (True, 'Rajesh', 'Rajesh', 216628), (True, 'Leonard', 'Leonard', 216629), (True, 'Penny', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (True, 'Howard', 'Howard', 216632), (True, 'Leonard', 'Leonard', 216633), (True, 'Rajesh', 'Rajesh', 216634), (True, 'Sheldon', 'Sheldon', 216635), (True, 'Rajesh', 'Rajesh', 216636), (True, 'Leonard', 'Leonard', 216637), (True, 'Howard', 'Howard', 216638), (True, 'Penny', 'Penny', 216639), (True, 'Penny', 'Penny', 216640), (True, 'Rajesh', 'Rajesh', 216641), (True, 'Sheldon', 'Sheldon', 216642), (True, 'Penny', 'Penny', 216643), (True, 'Penny', 'Penny', 216644), (True, 'Leonard', 'Leonard', 216645), (True, 'Howard', 'Howard', 216646), (True, 'Penny', 'Penny', 216647), (True, 'Penny', 'Penny', 216648), (True, 'Penny', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",True,Accecpted,0.8352181944199186,0.9866666666666668,False,0.0
2901910,24996888,"'''input
6
'''
n = int(input())
l = ['Sheldon', 'Leonard', 'Penny', 'Rajesh', 'Howard']
if n < 5:
	print(l[n-1])
else:	
	x = -1
	while 10*(2**x-1)+6 < n:
		x += 1
	x-=1
	x1 = int(10*(2**x-1)+6)
	print(l[(n-x1)//(2**(x+1))-1])",531,4520,46,2/25/17 0:49,14,2481,2,8,"[(True, 'Sheldon', 'Sheldon', 216610), (False, 'Howard', 'Sheldon', 216611), (False, 'Leonard', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (False, 'Rajesh', 'Howard', 216617), (False, 'Leonard', 'Penny', 216618), (False, 'Penny', 'Rajesh', 216619), (False, 'Rajesh', 'Howard', 216620), (False, 'Rajesh', 'Howard', 216621), (False, 'Leonard', 'Penny', 216622), (False, 'Penny', 'Rajesh', 216623), (False, 'Sheldon', 'Leonard', 216624), (False, 'Leonard', 'Penny', 216625), (False, 'Rajesh', 'Howard', 216626), (False, 'Penny', 'Rajesh', 216627), (False, 'Penny', 'Rajesh', 216628), (False, 'Sheldon', 'Leonard', 216629), (False, 'Leonard', 'Penny', 216630), (False, 'Rajesh', 'Howard', 216631), (False, 'Rajesh', 'Howard', 216632), (False, 'Sheldon', 'Leonard', 216633), (False, 'Penny', 'Rajesh', 216634), (False, 'Howard', 'Sheldon', 216635), (False, 'Penny', 'Rajesh', 216636), (False, 'Sheldon', 'Leonard', 216637), (False, 'Rajesh', 'Howard', 216638), (False, 'Leonard', 'Penny', 216639), (False, 'Leonard', 'Penny', 216640), (False, 'Penny', 'Rajesh', 216641), (False, 'Howard', 'Sheldon', 216642), (False, 'Leonard', 'Penny', 216643), (False, 'Leonard', 'Penny', 216644), (False, 'Sheldon', 'Leonard', 216645), (False, 'Rajesh', 'Howard', 216646), (False, 'Leonard', 'Penny', 216647), (False, 'Leonard', 'Penny', 216648), (False, 'Leonard', 'Penny', 216649), (False, 'Rajesh', 'Howard', 216650)]",False,Wrong Answer,0.8352181944199186,0.9866666666666668,False,0.8780487804878049
2914893,26060704,"'''input
4
'''
n = int(input())
print(min(3*n//2, 2*n-1))",531,5436,124,4/1/17 20:27,5,2490,1,8,"[(True, '3', '3', 216989), (True, '6', '6', 216990), (True, '9', '9', 216991), (True, '12', '12', 216992), (True, '15', '15', 216993), (True, '210', '210', 216994), (True, '750', '750', 216995), (True, '1500', '1500', 216996), (True, '3000', '3000', 216997), (True, '75000', '75000', 216998), (True, '15000', '15000', 216999), (True, '38190', '38190', 217000), (True, '81969', '81969', 217001), (True, '89685', '89685', 217002), (True, '867684', '867684', 217003), (True, '85197084', '85197084', 217004), (True, '12686970', '12686970', 217005), (True, '8531979', '8531979', 217006), (True, '16477398', '16477398', 217007), (True, '149999991', '149999991', 217008), (True, '149999994', '149999994', 217009), (True, '149999997', '149999997', 217010), (True, '150000000', '150000000', 217011)]",True,Accecpted,0.3826029416278447,0.9174311926605504,False,0.0
2914892,26060671,"'''input
2
'''
n = int(input())
print(min(6, 2*n-1))",531,4484,92,4/1/17 20:25,5,2490,2,8,"[(True, '3', '3', 216989), (True, '6', '6', 216990), (False, '6', '9', 216991), (False, '6', '12', 216992), (False, '6', '15', 216993), (False, '6', '210', 216994), (False, '6', '750', 216995), (False, '6', '1500', 216996), (False, '6', '3000', 216997), (False, '6', '75000', 216998), (False, '6', '15000', 216999), (False, '6', '38190', 217000), (False, '6', '81969', 217001), (False, '6', '89685', 217002), (False, '6', '867684', 217003), (False, '6', '85197084', 217004), (False, '6', '12686970', 217005), (False, '6', '8531979', 217006), (False, '6', '16477398', 217007), (False, '6', '149999991', 217008), (False, '6', '149999994', 217009), (False, '6', '149999997', 217010), (False, '6', '150000000', 217011)]",False,Wrong Answer,0.3826029416278447,0.9174311926605504,False,0.9130434782608696
23703,27783510,"# Description of the problem can be found at http://codeforces.com/problemset/problem/584/B

n = int(input())

print((3**(3*n) - 7**n) % (int(1e9) + 7))",541,384,124,6/15/17 3:11,9,18,1,8,"[(True, '20', '20', 48941), (True, '680', '680', 48942), (True, '19340', '19340', 48943), (True, '529040', '529040', 48944), (True, '14332100', '14332100', 48945), (True, '459529590', '459529590', 48946), (True, '848178170', '848178170', 48947), (True, '356372551', '356372551', 48948), (True, '66667472', '66667472', 48949), (True, '387302840', '387302840', 48950), (True, '423769706', '423769706', 48951), (True, '557078005', '557078005', 48952), (True, '83420839', '83420839', 48953), (True, '208683407', '208683407', 48954), (True, '695178405', '695178405', 48955), (True, '974152357', '974152357', 48956), (True, '972015869', '972015869', 48957), (True, '364994225', '364994225', 48958), (True, '363347020', '363347020', 48959), (True, '112069243', '112069243', 48960), (True, '506150275', '506150275', 48961), (True, '394190362', '394190362', 48962), (True, '915063121', '915063121', 48963), (True, '546302050', '546302050', 48964), (True, '982683445', '982683445', 48965), (True, '246305722', '246305722', 48966), (True, '118127713', '118127713', 48967), (True, '413345995', '413345995', 48968), (True, '587210092', '587210092', 48969), (True, '192156836', '192156836', 48970), (True, '149858187', '149858187', 48971), (True, '54080463', '54080463', 48972), (True, '582363404', '582363404', 48973), (True, '796810422', '796810422', 48974), (True, '371243141', '371243141', 48975), (True, '246305722', '246305722', 48976), (True, '682818914', '682818914', 48977), (True, '837337190', '837337190', 48978), (True, '719513799', '719513799', 48979), (True, '364994225', '364994225', 48980), (True, '550315374', '550315374', 48981), (True, '192156836', '192156836', 48982)]",True,Accecpted,0.6519473828152174,0.9368770764119602,False,0.0
23702,27783331,"# Description of the problem can be found at http://codeforces.com/problemset/problem/584/B

n = int(input())

print(3**(3*n) - 7**n)",541,0,62,6/15/17 2:46,9,18,2,8,"[(True, '20', '20', 48941), (True, '680', '680', 48942), (True, '19340', '19340', 48943), (True, '529040', '529040', 48944), (True, '14332100', '14332100', 48945), (False, '10459529660', '459529590', 48946), (False, '205890849619400', '848178170', 48947), (False, '109418988453289286360', '356372551', 48948), (False, '', '66667472', 48949), (True, '387302840', '387302840', 48950), (False, '282423771680', '423769706', 48951), (False, '7625557131380', '557078005', 48952), (False, '2954312701803272188700', '83420839', 48953), (False, '42391158275136411247996821200', '208683407', 48954), (False, '30903154382628702540872058815480', '695178405', 48955), (False, '507528786056415600719754159704992988691448124750433676231593781926080', '974152357', 48956), (False, '8335248417898089038639422182220625700315950296940904429076536703040369430170810692342813995047514694018760', '972015869', 48957), (False, '136891479058588375991326027382088315966463695625337436471476955601859372419507731946031105938878084185051579815197060147482121041306058846506000', '364994225', 48958), (False, '3639315957140965889402357068900897912726394135059848426930288631729421045701625061507240374009471685384890027552146564414419374097704056660930209270978483181139138172542731431597121328892204075817023954144424302846302185707145688597553212716927834502798475867926123352372845992976025922204229656468943828658692403454884237799016969773061232611786762802260261505327401760265769119440151338610048239482349673987024522770109415186836647065054534800286472787727648801058455013778091986272283714976889434202665725874095241022803918413481628297303508851633530271554076424216742935253152893066537500017229581130773844167860301337187365832728903386859979126065593606392376271446200233123449407662421520827736385972862089627862256771276574268571186499927719101940973322906496549731474969634068574046258651773114430439611273800869936867182727944010516404634837622747517966285577165296382137368705179420820110952948892094187273713180231588466434021080293720671423429509402713110129302821307768334736545618563854598977261052864579781482566434754778654076564563447644670630673265031321531236201525339379389211379701995297273904881573399125440830429600812991963031696113919987277695954097818178806435283981921245881489647167863265420379236272792790195240', '363347020', 48959), (False, '4694371310405942062877608847858302633266159344045856961804820412064865638350350204393473772137227223417473590818217797995259364487937693376152320613333619740218443066353046933255761665109914031795651953858115874108515628596530217407205026907223843685203608778217329868005781786150986064891664361128816888109549630067280874061112639119785087848585099183093781549061471723309727759231284613279843997013875416641499333662362666314603969000996474873203809598881641560251862383166365976865787787791628900682464026928890091340996583044875857683583441474920884782790812736920735975884694283588595501980975460662437875889680250334812831123267520772229274427847493028926967517361493858872534984969415580892444783504354564664010967730220797835979202227024799602626076303156754683383648628346949238680397937335075774536157998109863939730616355676036163781255405109509179603334507234973014989264681491307048033483750217748311677200131662632856313140960442364117947833549140160338233023896574335364968488038431749565804034052091638276044918081757770078076852669588911779872209463413651083938209062392672902728832790941054507318944432755924618257166643616216374928981930073200055056855840422828602562794824608713780877438554956443682223442953253529205047237399598001078444987897750070508027661483119029026172271774605301959187690075312582319252719014821036151325377932979996336649571179833824568108627027595465375740049410622682202277334435674455171312493383292836743431860208007846630911366413310865093817910120852708096375467571462219276643025681371105323357862323560694429355384833244511339945998478739375826851936128670556340651799101942531668270793826224125748896698915423893341295329950767851398732679356044622539205562365301668214880186003681644945424020242182729076853951713943630528843587223276440136278946647485081513693037942282934650086712431340154729389800292190343107250384379967722664990739475993498393898478318467491874651227767090919626305110265645994040722500398157842725212577800233842772659586196997417700062979353062877580251491740995817463554159306371975282797935592582624435831358835564899999141560745358423051118812663753446672051766062465823063228116336978007826658504493581594215551149797460758743915184188683545913058009562698451031292471910649977895434771094835073759724714267305284227981296477895693529298398004796386335863451207220388923169438608194076285569272442416010296979060', '112069243', 48960), (False, '255204958494294308775034197457153841864769921655306129391416273788422630532651937123327945028007128826772319470941119150571897760532035567592876480469677884177404749121060280742289765745906844147022411465368327524573202303301301638632770284564301303950204561205574277208017171806816577952556340900523051196387340378697789919022812882497442868785243561217208825470243267878067382793615016046006020609305876436357309560934732778386508596364064901550984457540392621333759798309244762574527658350212249013941251319386858960010438713265445482675459778295478757428511525283133025736444908755631336682547822693243089306494107415886407893691961944356336230456604120867878989598089855450091269692323407669757225902752410421295110971019373068893789157581364639360338957950437981165085304870755400259361900', '506150275', 48961), (False, '5339840906293740122425025941682787988173795641074581379694956095961847845793309334817613799573583034049683978106473105990276081740223381216685487304275609065987720516267864052610221370223474480744503769362411517807705363221956547953524977571251233487557736877305000511959228093853179047601999266386771522550925595632030147102131319036140871309440625584153041177260675176966286351217346333143742785929083676277726651306463209745469536097955085263059440728908150336226193594014958489725832618445861181573326073439448410088440063390942680871527587940703006502628060660520349562725362395404043243184872799640840466889989368256223621418668461096505784874771518161628022420202954917915746634739161061202616061993333619270323839011904188036427759750990498200490845596709363714555696423488834873983121832375065564138273644259938611444938687888005815659116861199660677717705335819953723744515890777044823017938681365751422900342304700881462800080606758276080420043104118127532848898506574437301545574957940953015802262389314447027849044108764167512869436330812153444995626471061463599522535181709374649177933160624345007617868075313505943807873863173740563561972069796063624364930867821796512986258979661695691282588569367772657436069420527830464854162330604030397172523209101529418486460716393669791458051140371334677039489177749553637943904684453580843061712789695841992630041471888950782891801365572166789382100841999759629626945490473877989402529671243240091715475964834865470439489694961299182269187349517688426261412302429852906359017031741068826218436201570007481001758218038803325289130947621199507442941744154148415173179084803126884926311080031090775351912216079777413005360842730576263976861791746749172264427687659978676511729649674442830167210902601471620204952827006342581740306143886151844353716810826507513133918612111305440074737949745958924573049681346590575510836566226602389591655481756576208459907278301942179219692072777259466474344680505804138317908376975471710854439367247407870016448674640369948635541810436760780013425177104379061505164811737938820058925449767330787278528336252784166168931343079350050377700505120900591688417457871705094577348858141004557606508249964113220170815377565233975199137438332072487977190817925787762097834966634314098146400916956060520885874292175600737255559629207616925905466803392585432503279157536961517655862540271552241241064315301532689995972395168196055606834555466031961611888996886869607106305126927829507291730863884850994060811250367031050815247278467588283494666868098532958760214708555686501666125411820345908427393983175446727450880877791379295104764395278038105410805411387350140267106082940287202770573097675866448555601641625706243267498816083493322007472579053786713313084143510721794009068902350882580931666407677967396885789627228434619926540780030621932257411888685317381327098175440320570120000', '394190362', 48962), (False, '', '915063121', 48963), (False, '', '546302050', 48964), (False, '95858550236781775494577105886343663748442943496040992637684050590420496850603287511174986427162669881496864876184470659297815939994272958594693343536220535669797888989134630600416460511976375843158597340650158089960788418595194211615665103111141936431825969195846450944653071997049561655313695584447052344245606646589876772568134039687901965628146496520529402590430434554068122502731125567820437686203077427406124498346799877110140576260470035204695868441529586496673502762307599372499492501608042782645766429232394294020334511196583100771374975886829914434957889409054010886491052284715858722167182147126969462359242168985673418705383745255830066516898136211053288667891830986029948692024803642769958568330051350725890455342639650776275619778372448578720528219953968197488642483109376167834847187341772763712759202448788144171764049881562872934920444718991403887889635487473188712303414263660129881547520635750363568761917364332350881577830975092390508021528808603160136589283731928700487734803816296407163137926968006553842989915743821565537335379088314836261707216264131239873392610141471638068128760804869519941630648965041953755739661221808287153346325082139965656626050434248971767813210495953771936220426345992857356737959141263508200533651325681645898944885113212945671046289924967551339401925137683777361792115266379069795491566338544283420816818913390487668244914196514832415814682362472098881646842622621780311455683440544180718521942231044957333023043909037910034428676582548707872528824353145688230763752983823030914983249601159711950415831093268764891019186563772807103210762385830830657653043647987002885799718720666681555978768724846480280061468029982965013861676706749739795905863629933577638252719617474809375690489564427212686414077225365931745045565329539731210161495145240536276530189781679614612296885532336335782036530713356744852557033363737450413691104470858003869716327679683517067936336116425518368605661897691055433910104751539678988159066939343097141355317584529122948727435773328951911953263745884440038352303195419182876462714057142537397731847212148612273739162302026659102164876126115267255734959759538583074324713598739347798825624593739615880659914731673146161224847812040848973572562951499483758191498454113702412885584005121996756142628561707615633738911146921505101357805110737496182482672864128430766770700280931914023780528659341323041088248596156575627343524825206353270675272600609701311649583070149873319863789206049078161689856661482957210100262442526972304595947855556089920075990131310845671252543883249455583648380505938462868074538854294615820060993819086985355912267187887433955864071894326331925530766634076887310839136366215599946451863798944407183919665925049690955260691487907861278179270359815991940749247307806462476751502137885848193468991277906167097749832428092414788746449194694152637366805218008154888606341136044136863282330676067249570687423007406230492345649160203206085166701558504205457224817660844570088875480998959527626499180', '982683445', 48965), (False, '', '246305722', 48966), (False, '', '118127713', 48967), (False, '', '413345995', 48968), (False, '', '587210092', 48969), (False, '', '192156836', 48970), (False, '90980498500608733441817573734410537836554269640343645264729504497780540681097281264946900085478818696104798418329856599346467101055270258325285028474436486734656987132213205999131482197096038878318874231419886234437474580480004542882271843233179541542886623126117337689933473253928520112869070795230916664241032980225156063617012134434869257298231357363837952636551655937157916255471468298132911641999904716870041590325963643049379265193476135646045921935848932586544574561861347286359145391613107651841063899944135996208402403699360058746948205139887687384715205505623653202523398846529908917876974140783036423304106644230911103418421877051770241756014172324870496956779485675073025230811213918181373497717671659624083325826086313678154396348254583024064438692365841238911216539898905338289487171898790782987948877546523132568012657532607725423091996211606253583153719132822224802087811946405117440496254154821993414869863042459621448260200132704310098731171132216163377656436476771851208801168419267327927885543664783938044119101334276461454133891733629426784363891065645626302336326536356799774173202071305611167145389122994707138796513198566082132884914470906933844162889393206098525395704833415126708352015324163118461805329053956204951387007172173858535797726630212052738058047712278265713357297358109911590440102160753635453800766202652042921903167918564724471863018683682771654995115633531847381282385591232812625959824663365431929085685497015218638115854561085814767732223239305141224126685673356221590728453623115375992325672274025031656297686244663867939719070779252042491244875282053297671242957077897154262568419491246538530812892804650558078589148599497756908712991237219840782909944203722350190183722744166200162994886183552937972965824445444221306425705782042863133455559316266092895887188114288328952956190181526776865772618175140495810427867382993758173489929323988635664108114931071732105750485817755410044336695232470133916814861815874928113212207480995705433982521788479025402831125630688496120901954619135655282113892901875288404303982741097350327716872426648764565827174349875392467542844093932964604550529071237534103463168082790579716185854089607238306799065509107291530790254073306893351324207340478185225793620124990573274654300821045097070219283092453119886428403428234902333091430519196428441913216536915130633628177149387896259127547050365129980526397116321102432482544025476356253693494720495874679632112471082777546524793807745640249242831308578463551007839543007540931474070314317073882366361968567933336154514337912353706542862351259102009366591008471564922106697153798127512496206916411974493525021215347051090108581606803003131067188640865067835836405599664774594167153783577940079702384520679424732424393715176704344759300243179297120120662122894830009755871475428632272359496900419057367975465275919475769113304713502815145576224033494036310657858898512452525816003684122810574712849099201092490997948741618855913821004075524623991674139379028738255810861425318627917969456677914680305922534082944848211208685694470450344984185279114100828026088184931096557758303721902120252107905384379065966199816391434728869961646902213776126490688972588948226848550186117443391615437078679838364986137990459784123290579497881916374204098478890178903212815359824346819820094935413774077140369897700357795192739638375671739716655175071453013765403539163676407282034708174228218176213474144505627838100258381066050238703995939055554060651129236774640282058775983517192820', '149858187', 48971), (False, '', '54080463', 48972), (False, '', '582363404', 48973), (False, '', '796810422', 48974), (False, '', '371243141', 48975), (False, '', '246305722', 48976), (False, '', '682818914', 48977), (False, '', '837337190', 48978), (False, '', '719513799', 48979), (False, '136891479058588375991326027382088315966463695625337436471476955601859372419507731946031105938878084185051579815197060147482121041306058846506000', '364994225', 48980), (False, '5559058589228780', '550315374', 48981), (False, '', '192156836', 48982)]",False,Wrong Answer,0.6519473828152174,0.9368770764119602,False,0.8571428571428571
104866,27973705,"# Description of the problem can be found at http://codeforces.com/problemset/problem/596/A

d_y = {}
d_x = {}

l_c = list()
l_c = list()

n = int(input())

for _ in range(n):
    x, y = map(int, input().split())
    d_x[x] = 1
    d_y[y] = 1
    l_c.append([x, y])

if len(d_x) + len(d_y) < 4:
    print(-1)
    quit()

t_x = 0
t_y = 0
i = 1
for k_x in d_x:
    t_x += (-1 if i == 0 else 1) * k_x
    i = 0
i = 1
for k_y in d_y:
    t_y += (-1 if i == 0 else 1) * k_y
    i = 0

print(abs(t_x) * abs(t_y))",541,5404,109,6/23/17 1:28,63,88,1,8,"[(True, '1', '1', 54808), (True, '-1', '-1', 54809), (True, '-1', '-1', 54810), (True, '-1', '-1', 54811), (True, '570456', '570456', 54812), (True, '91632', '91632', 54813), (True, '669591', '669591', 54814), (True, '-1', '-1', 54815), (True, '120840', '120840', 54816), (True, '312174', '312174', 54817), (True, '1025362', '1025362', 54818), (True, '290852', '290852', 54819), (True, '-1', '-1', 54820), (True, '-1', '-1', 54821), (True, '1358120', '1358120', 54822), (True, '98496', '98496', 54823), (True, '102480', '102480', 54824), (True, '227504', '227504', 54825), (True, '107144', '107144', 54826), (True, '-1', '-1', 54827), (True, '-1', '-1', 54828), (True, '-1', '-1', 54829), (True, '-1', '-1', 54830), (True, '297756', '297756', 54831), (True, '-1', '-1', 54832), (True, '-1', '-1', 54833), (True, '1524480', '1524480', 54834), (True, '9509', '9509', 54835), (True, '116760', '116760', 54836), (True, '53793', '53793', 54837), (True, '-1', '-1', 54838), (True, '-1', '-1', 54839), (True, '391608', '391608', 54840), (True, '27280', '27280', 54841), (True, '-1', '-1', 54842), (True, '1052096', '1052096', 54843), (True, '-1', '-1', 54844), (True, '91287', '91287', 54845), (True, '-1', '-1', 54846), (True, '-1', '-1', 54847), (True, '-1', '-1', 54848), (True, '5922', '5922', 54849), (True, '-1', '-1', 54850), (True, '508300', '508300', 54851), (True, '188760', '188760', 54852), (True, '-1', '-1', 54853), (True, '681712', '681712', 54854), (True, '173118', '173118', 54855), (True, '533448', '533448', 54856), (True, '-1', '-1', 54857), (True, '187620', '187620', 54858), (True, '463166', '463166', 54859), (True, '142898', '142898', 54860), (True, '-1', '-1', 54861), (True, '-1', '-1', 54862), (True, '86768', '86768', 54863), (True, '1708', '1708', 54864), (True, '614400', '614400', 54865), (True, '93888', '93888', 54866), (True, '11097', '11097', 54867), (True, '-1', '-1', 54868), (True, '719446', '719446', 54869), (True, '570372', '570372', 54870), (True, '-1', '-1', 54871), (True, '1', '1', 54872), (True, '9', '9', 54873), (True, '1', '1', 54874), (True, '9', '9', 54875), (True, '1', '1', 54876), (True, '1', '1', 54877), (True, '25', '25', 54878), (True, '1', '1', 54879), (True, '1', '1', 54880), (True, '9', '9', 54881), (True, '2', '2', 54882), (True, '4', '4', 54883), (True, '5', '5', 54884), (True, '4', '4', 54885), (True, '1', '1', 54886), (True, '1', '1', 54887), (True, '1', '1', 54888), (True, '1', '1', 54889), (True, '25', '25', 54890), (True, '40', '40', 54891), (True, '2', '2', 54892), (True, '1', '1', 54893), (True, '2', '2', 54894), (True, '1', '1', 54895), (True, '1', '1', 54896), (True, '4', '4', 54897), (True, '1', '1', 54898), (True, '9', '9', 54899), (True, '-1', '-1', 54900), (True, '24', '24', 54901), (True, '74900', '74900', 54902), (True, '16', '16', 54903), (True, '1', '1', 54904), (True, '100', '100', 54905), (True, '1', '1', 54906), (True, '3', '3', 54907), (True, '2', '2', 54908), (True, '1', '1', 54909), (True, '1', '1', 54910), (True, '1', '1', 54911), (True, '12', '12', 54912), (True, '1', '1', 54913), (True, '25', '25', 54914), (True, '12', '12', 54915), (True, '4', '4', 54916), (True, '1', '1', 54917), (True, '1', '1', 54918), (True, '1', '1', 54919), (True, '18', '18', 54920), (True, '1', '1', 54921), (True, '25', '25', 54922), (True, '6241', '6241', 54923), (True, '1', '1', 54924), (True, '1', '1', 54925), (True, '1', '1', 54926), (True, '12', '12', 54927), (True, '25', '25', 54928)]",True,Accecpted,0.9723100635364544,0.9786856127886324,False,0.0
104865,27973695,"# Description of the problem can be found at http://codeforces.com/problemset/problem/596/A

d_y = {}
d_x = {}

l_c = list()
l_c = list()

n = int(input())

for _ in range(n):
    x, y = map(int, input().split())
    d_x[x] = 1
    d_y[y] = 1
    l_c.append([x, y])

if len(d_x) + len(d_y) < 4:
    print(-1)
    quit()

t_x = 0
t_y = 0
i = 1
for k_x in d_x:
    t_x += (-1 if i == 0 else 1) * k_x
    i = 0
i = 1
for k_y in d_y:
    t_y += (-1 if i == 0 else 1) * k_y
    i = 0

print(t_x * t_y)",541,4508,61,6/23/17 1:28,63,88,2,8,"[(True, '1', '1', 54808), (True, '-1', '-1', 54809), (True, '-1', '-1', 54810), (True, '-1', '-1', 54811), (True, '570456', '570456', 54812), (False, '-91632', '91632', 54813), (False, '-669591', '669591', 54814), (True, '-1', '-1', 54815), (False, '-120840', '120840', 54816), (False, '-312174', '312174', 54817), (True, '1025362', '1025362', 54818), (False, '-290852', '290852', 54819), (True, '-1', '-1', 54820), (True, '-1', '-1', 54821), (True, '1358120', '1358120', 54822), (False, '-98496', '98496', 54823), (True, '102480', '102480', 54824), (False, '-227504', '227504', 54825), (True, '107144', '107144', 54826), (True, '-1', '-1', 54827), (True, '-1', '-1', 54828), (True, '-1', '-1', 54829), (True, '-1', '-1', 54830), (False, '-297756', '297756', 54831), (True, '-1', '-1', 54832), (True, '-1', '-1', 54833), (False, '-1524480', '1524480', 54834), (False, '-9509', '9509', 54835), (False, '-116760', '116760', 54836), (False, '-53793', '53793', 54837), (True, '-1', '-1', 54838), (True, '-1', '-1', 54839), (True, '391608', '391608', 54840), (False, '-27280', '27280', 54841), (True, '-1', '-1', 54842), (True, '1052096', '1052096', 54843), (True, '-1', '-1', 54844), (False, '-91287', '91287', 54845), (True, '-1', '-1', 54846), (True, '-1', '-1', 54847), (True, '-1', '-1', 54848), (True, '5922', '5922', 54849), (True, '-1', '-1', 54850), (True, '508300', '508300', 54851), (False, '-188760', '188760', 54852), (True, '-1', '-1', 54853), (True, '681712', '681712', 54854), (False, '-173118', '173118', 54855), (False, '-533448', '533448', 54856), (True, '-1', '-1', 54857), (False, '-187620', '187620', 54858), (False, '-463166', '463166', 54859), (True, '142898', '142898', 54860), (True, '-1', '-1', 54861), (True, '-1', '-1', 54862), (False, '-86768', '86768', 54863), (True, '1708', '1708', 54864), (False, '-614400', '614400', 54865), (False, '-93888', '93888', 54866), (False, '-11097', '11097', 54867), (True, '-1', '-1', 54868), (False, '-719446', '719446', 54869), (False, '-570372', '570372', 54870), (True, '-1', '-1', 54871), (True, '1', '1', 54872), (False, '-9', '9', 54873), (True, '1', '1', 54874), (False, '-9', '9', 54875), (True, '1', '1', 54876), (True, '1', '1', 54877), (True, '25', '25', 54878), (True, '1', '1', 54879), (True, '1', '1', 54880), (True, '9', '9', 54881), (True, '2', '2', 54882), (True, '4', '4', 54883), (True, '5', '5', 54884), (True, '4', '4', 54885), (True, '1', '1', 54886), (True, '1', '1', 54887), (True, '1', '1', 54888), (False, '-1', '1', 54889), (True, '25', '25', 54890), (True, '40', '40', 54891), (True, '2', '2', 54892), (False, '-1', '1', 54893), (True, '2', '2', 54894), (False, '-1', '1', 54895), (False, '-1', '1', 54896), (True, '4', '4', 54897), (False, '-1', '1', 54898), (True, '9', '9', 54899), (True, '-1', '-1', 54900), (True, '24', '24', 54901), (False, '-74900', '74900', 54902), (True, '16', '16', 54903), (False, '-1', '1', 54904), (True, '100', '100', 54905), (True, '1', '1', 54906), (False, '-3', '3', 54907), (True, '2', '2', 54908), (False, '-1', '1', 54909), (False, '-1', '1', 54910), (False, '-1', '1', 54911), (False, '-12', '12', 54912), (True, '1', '1', 54913), (False, '-25', '25', 54914), (True, '12', '12', 54915), (True, '4', '4', 54916), (True, '1', '1', 54917), (True, '1', '1', 54918), (True, '1', '1', 54919), (True, '18', '18', 54920), (True, '1', '1', 54921), (True, '25', '25', 54922), (True, '6241', '6241', 54923), (True, '1', '1', 54924), (True, '1', '1', 54925), (False, '-1', '1', 54926), (True, '12', '12', 54927), (False, '-25', '25', 54928)]",False,Wrong Answer,0.9723100635364544,0.9786856127886324,False,0.3471074380165289
121330,25632485,"# Description of the problem can be found at http://codeforces.com/problemset/problem/599/A

d1, d2, d3 = map(int, input().split())

print(min(d1 + d3 + d2, 2*d1 + 2*d3, 2*d2 + 2*d3, 2*d1 + 2*d2))",541,4504,46,3/19/17 4:18,9,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.2506071502900273,0.5833333333333334,False,0.0
120961,25325190,"# Description of the problem can be found at http://codeforces.com/problemset/problem/579/A

d1, d2, d3 = map(int, input().split())
s = 0

s += d1

if d1 + d2 < d3:
    s += d1 + d2
else:
    s += d3

if d2 < d1 + d3:
    s += d2
else:
    s += d1 + d3
    
print(s)",541,4452,46,3/7/17 19:22,35,102,2,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (False, '167', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (False, '13552', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",False,Wrong Answer,0.2506071502900273,0.5833333333333334,False,0.0952380952380952
189133,26175517,"# Description of the problem can be found at http://codeforces.com/problemset/problem/610/A

n = int(input())
if n % 2 == 1:
    print(0)
    quit()
print(max(0, n // 4 - (1 if n % 4 == 0 else 0)))",541,5436,77,4/6/17 20:00,13,153,1,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (True, '0', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (True, '499999999', '499999999', 60607), (True, '481176017', '481176017', 60608), (True, '18435146', '18435146', 60609), (True, '481272204', '481272204', 60610), (True, '148267747', '148267747', 60611), (True, '481368392', '481368392', 60612), (True, '157372546', '157372546', 60613), (True, '495162277', '495162277', 60614), (True, '9165330', '9165330', 60615), (True, '0', '0', 60616), (True, '17801758', '17801758', 60617), (True, '439394348', '439394348', 60618), (True, '42076323', '42076323', 60619), (True, '483724055', '483724055', 60620), (True, '74287271', '74287271', 60621), (True, '474500408', '474500408', 60622), (True, '44102424', '44102424', 60623), (True, '468256380', '468256380', 60624), (True, '1428690', '1428690', 60625), (True, '457387797', '457387797', 60626), (True, '4067359', '4067359', 60627), (True, '415820847', '415820847', 60628), (True, '0', '0', 60629), (True, '491836400', '491836400', 60630), (True, '213499', '213499', 60631), (True, '498971656', '498971656', 60632), (True, '0', '0', 60633), (True, '499048408', '499048408', 60634), (True, '2401294', '2401294', 60635), (True, '499114934', '499114934', 60636), (True, '8172986', '8172986', 60637), (True, '493975826', '493975826', 60638), (True, '494159283', '494159283', 60639), (True, '7450759', '7450759', 60640), (True, '494494922', '494494922', 60641), (True, '494648833', '494648833', 60642), (True, '6844835', '6844835', 60643), (True, '494932477', '494932477', 60644), (True, '495063444', '495063444', 60645), (True, '495187895', '495187895', 60646), (True, '13306219', '13306219', 60647), (True, '0', '0', 60648), (True, '0', '0', 60649), (True, '1', '1', 60650), (True, '0', '0', 60651), (True, '2', '2', 60652), (True, '0', '0', 60653), (True, '2', '2', 60654), (True, '0', '0', 60655), (True, '3', '3', 60656), (True, '0', '0', 60657), (True, '3', '3', 60658), (True, '0', '0', 60659), (True, '4', '4', 60660), (True, '0', '0', 60661), (True, '0', '0', 60662), (True, '5', '5', 60663), (True, '0', '0', 60664), (True, '5', '5', 60665), (True, '0', '0', 60666), (True, '6', '6', 60667), (True, '0', '0', 60668), (True, '6', '6', 60669), (True, '0', '0', 60670), (True, '7', '7', 60671), (True, '0', '0', 60672), (True, '0', '0', 60673), (True, '0', '0', 60674), (True, '0', '0', 60675), (True, '0', '0', 60676)]",True,Accecpted,0.697446322682518,0.8882978723404256,False,0.0
189132,26175467,"# Description of the problem can be found at http://codeforces.com/problemset/problem/610/A

n = int(input())

print(max(0, n // 4 - (1 if n % 4 == 0 else 0)))",541,5432,62,4/6/17 19:58,9,153,2,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (True, '0', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (True, '499999999', '499999999', 60607), (True, '481176017', '481176017', 60608), (True, '18435146', '18435146', 60609), (True, '481272204', '481272204', 60610), (True, '148267747', '148267747', 60611), (True, '481368392', '481368392', 60612), (True, '157372546', '157372546', 60613), (True, '495162277', '495162277', 60614), (True, '9165330', '9165330', 60615), (False, '485897698', '0', 60616), (True, '17801758', '17801758', 60617), (True, '439394348', '439394348', 60618), (True, '42076323', '42076323', 60619), (True, '483724055', '483724055', 60620), (True, '74287271', '74287271', 60621), (True, '474500408', '474500408', 60622), (True, '44102424', '44102424', 60623), (True, '468256380', '468256380', 60624), (True, '1428690', '1428690', 60625), (True, '457387797', '457387797', 60626), (True, '4067359', '4067359', 60627), (True, '415820847', '415820847', 60628), (False, '10637485', '0', 60629), (True, '491836400', '491836400', 60630), (True, '213499', '213499', 60631), (True, '498971656', '498971656', 60632), (False, '2582504', '0', 60633), (True, '499048408', '499048408', 60634), (True, '2401294', '2401294', 60635), (True, '499114934', '499114934', 60636), (True, '8172986', '8172986', 60637), (True, '493975826', '493975826', 60638), (True, '494159283', '494159283', 60639), (True, '7450759', '7450759', 60640), (True, '494494922', '494494922', 60641), (True, '494648833', '494648833', 60642), (True, '6844835', '6844835', 60643), (True, '494932477', '494932477', 60644), (True, '495063444', '495063444', 60645), (True, '495187895', '495187895', 60646), (True, '13306219', '13306219', 60647), (False, '1', '0', 60648), (False, '1', '0', 60649), (True, '1', '1', 60650), (False, '2', '0', 60651), (True, '2', '2', 60652), (False, '2', '0', 60653), (True, '2', '2', 60654), (False, '3', '0', 60655), (True, '3', '3', 60656), (False, '3', '0', 60657), (True, '3', '3', 60658), (False, '4', '0', 60659), (True, '4', '4', 60660), (False, '4', '0', 60661), (False, '5', '0', 60662), (True, '5', '5', 60663), (False, '5', '0', 60664), (True, '5', '5', 60665), (False, '6', '0', 60666), (True, '6', '6', 60667), (False, '6', '0', 60668), (True, '6', '6', 60669), (False, '7', '0', 60670), (True, '7', '7', 60671), (False, '27', '0', 60672), (False, '13', '0', 60673), (False, '26', '0', 60674), (False, '49', '0', 60675), (False, '37', '0', 60676)]",False,Wrong Answer,0.697446322682518,0.8882978723404256,False,0.2763157894736842
195927,25580420,"# Description of the problem can be found at http://codeforces.com/problemset/problem/611/A

s = input().split()
x = int(s[0])

if s[2][0] == ""w"":
    if x >= 5 and x < 7:
        print(52 + 1)
    else:
        print(52)
else:
    if x <= 29:
        print(12)
    elif x == 30:
        print(11)
    else:
        print(7)",541,4528,62,3/17/17 21:05,33,159,1,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (True, '52', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (True, '12', '12', 61032)]",True,Accecpted,0.8518806281244343,0.9857549857549858,False,0.0
195926,25580411,"# Description of the problem can be found at http://codeforces.com/problemset/problem/611/A

s = input().split()
x = int(s[0])

if s[2][0] == ""w"":
    if x >= 5:
        print(52 + 1)
    else:
        print(52)
else:
    if x <= 29:
        print(12)
    elif x == 30:
        print(11)
    else:
        print(7)",541,4520,61,3/17/17 21:05,33,159,2,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (False, '53', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (True, '12', '12', 61032)]",False,Wrong Answer,0.8518806281244343,0.9857549857549858,False,0.0263157894736842
333276,28127965,"# Description of the problem can be found at http://codeforces.com/problemset/problem/633/A

a, b, c = map(int, input().split())

for i in range(c // a + (2 if c % a == 0 else 1)):
    for j in range((c - i * a) // b + (2 if (c - i * a) % b == 0 else 1)):
        if (c - i * a - j * b) == 0:
            print(""Yes"")
            quit()

print(""No"")",541,5420,217,6/29/17 1:57,21,290,1,8,"[(True, 'No', 'No', 71050), (True, 'Yes', 'Yes', 71051), (True, 'Yes', 'Yes', 71052), (True, 'Yes', 'Yes', 71053), (True, 'Yes', 'Yes', 71054), (True, 'No', 'No', 71055), (True, 'Yes', 'Yes', 71056), (True, 'No', 'No', 71057), (True, 'No', 'No', 71058), (True, 'Yes', 'Yes', 71059), (True, 'Yes', 'Yes', 71060), (True, 'Yes', 'Yes', 71061), (True, 'Yes', 'Yes', 71062), (True, 'No', 'No', 71063), (True, 'No', 'No', 71064), (True, 'Yes', 'Yes', 71065), (True, 'Yes', 'Yes', 71066), (True, 'Yes', 'Yes', 71067), (True, 'Yes', 'Yes', 71068), (True, 'Yes', 'Yes', 71069), (True, 'Yes', 'Yes', 71070), (True, 'No', 'No', 71071), (True, 'No', 'No', 71072), (True, 'No', 'No', 71073), (True, 'Yes', 'Yes', 71074), (True, 'Yes', 'Yes', 71075), (True, 'Yes', 'Yes', 71076), (True, 'Yes', 'Yes', 71077), (True, 'Yes', 'Yes', 71078), (True, 'No', 'No', 71079), (True, 'Yes', 'Yes', 71080), (True, 'No', 'No', 71081), (True, 'Yes', 'Yes', 71082), (True, 'Yes', 'Yes', 71083), (True, 'No', 'No', 71084), (True, 'Yes', 'Yes', 71085), (True, 'No', 'No', 71086), (True, 'Yes', 'Yes', 71087), (True, 'Yes', 'Yes', 71088), (True, 'No', 'No', 71089), (True, 'Yes', 'Yes', 71090), (True, 'No', 'No', 71091), (True, 'Yes', 'Yes', 71092), (True, 'Yes', 'Yes', 71093), (True, 'No', 'No', 71094), (True, 'No', 'No', 71095), (True, 'Yes', 'Yes', 71096), (True, 'Yes', 'Yes', 71097), (True, 'No', 'No', 71098), (True, 'No', 'No', 71099), (True, 'Yes', 'Yes', 71100), (True, 'Yes', 'Yes', 71101), (True, 'No', 'No', 71102), (True, 'No', 'No', 71103), (True, 'No', 'No', 71104), (True, 'No', 'No', 71105), (True, 'No', 'No', 71106), (True, 'No', 'No', 71107), (True, 'No', 'No', 71108), (True, 'Yes', 'Yes', 71109), (True, 'Yes', 'Yes', 71110), (True, 'Yes', 'Yes', 71111), (True, 'Yes', 'Yes', 71112), (True, 'Yes', 'Yes', 71113), (True, 'Yes', 'Yes', 71114), (True, 'No', 'No', 71115), (True, 'Yes', 'Yes', 71116), (True, 'Yes', 'Yes', 71117), (True, 'No', 'No', 71118), (True, 'No', 'No', 71119), (True, 'No', 'No', 71120), (True, 'Yes', 'Yes', 71121), (True, 'Yes', 'Yes', 71122), (True, 'Yes', 'Yes', 71123), (True, 'Yes', 'Yes', 71124), (True, 'No', 'No', 71125), (True, 'No', 'No', 71126), (True, 'Yes', 'Yes', 71127), (True, 'No', 'No', 71128), (True, 'No', 'No', 71129), (True, 'Yes', 'Yes', 71130), (True, 'Yes', 'Yes', 71131), (True, 'Yes', 'Yes', 71132), (True, 'No', 'No', 71133), (True, 'Yes', 'Yes', 71134), (True, 'Yes', 'Yes', 71135), (True, 'Yes', 'Yes', 71136), (True, 'Yes', 'Yes', 71137), (True, 'No', 'No', 71138), (True, 'Yes', 'Yes', 71139), (True, 'Yes', 'Yes', 71140), (True, 'No', 'No', 71141), (True, 'No', 'No', 71142), (True, 'Yes', 'Yes', 71143), (True, 'Yes', 'Yes', 71144), (True, 'Yes', 'Yes', 71145), (True, 'Yes', 'Yes', 71146), (True, 'No', 'No', 71147), (True, 'No', 'No', 71148), (True, 'Yes', 'Yes', 71149), (True, 'Yes', 'Yes', 71150), (True, 'No', 'No', 71151), (True, 'No', 'No', 71152), (True, 'Yes', 'Yes', 71153), (True, 'Yes', 'Yes', 71154), (True, 'Yes', 'Yes', 71155), (True, 'No', 'No', 71156), (True, 'No', 'No', 71157), (True, 'Yes', 'Yes', 71158), (True, 'Yes', 'Yes', 71159), (True, 'Yes', 'Yes', 71160), (True, 'No', 'No', 71161), (True, 'No', 'No', 71162), (True, 'Yes', 'Yes', 71163), (True, 'Yes', 'Yes', 71164), (True, 'Yes', 'Yes', 71165), (True, 'Yes', 'Yes', 71166), (True, 'Yes', 'Yes', 71167), (True, 'Yes', 'Yes', 71168), (True, 'Yes', 'Yes', 71169), (True, 'No', 'No', 71170), (True, 'Yes', 'Yes', 71171), (True, 'No', 'No', 71172), (True, 'Yes', 'Yes', 71173), (True, 'No', 'No', 71174), (True, 'No', 'No', 71175), (True, 'No', 'No', 71176), (True, 'Yes', 'Yes', 71177), (True, 'Yes', 'Yes', 71178), (True, 'Yes', 'Yes', 71179), (True, 'Yes', 'Yes', 71180), (True, 'Yes', 'Yes', 71181), (True, 'Yes', 'Yes', 71182), (True, 'No', 'No', 71183)]",True,Accecpted,0.8524277411740893,0.8590785907859079,False,0.0
333275,28127929,"# Description of the problem can be found at http://codeforces.com/problemset/problem/633/A

a, b, c = map(int, input().split())

for i in range(c // a + (1 if c % a == 0 else 0)):
    for j in range((c - i * a) // b + (1 if (c - i * a) % b == 0 else 0)):
        if (c - i * a - j * b) == 0:
            print(""Yes"")
            quit()

print(""No"")",541,5412,62,6/29/17 1:52,21,290,2,8,"[(True, 'No', 'No', 71050), (True, 'Yes', 'Yes', 71051), (True, 'Yes', 'Yes', 71052), (True, 'Yes', 'Yes', 71053), (True, 'Yes', 'Yes', 71054), (True, 'No', 'No', 71055), (True, 'Yes', 'Yes', 71056), (True, 'No', 'No', 71057), (True, 'No', 'No', 71058), (True, 'Yes', 'Yes', 71059), (True, 'Yes', 'Yes', 71060), (True, 'Yes', 'Yes', 71061), (True, 'Yes', 'Yes', 71062), (True, 'No', 'No', 71063), (True, 'No', 'No', 71064), (True, 'Yes', 'Yes', 71065), (True, 'Yes', 'Yes', 71066), (True, 'Yes', 'Yes', 71067), (True, 'Yes', 'Yes', 71068), (True, 'Yes', 'Yes', 71069), (True, 'Yes', 'Yes', 71070), (True, 'No', 'No', 71071), (True, 'No', 'No', 71072), (True, 'No', 'No', 71073), (True, 'Yes', 'Yes', 71074), (True, 'Yes', 'Yes', 71075), (True, 'Yes', 'Yes', 71076), (True, 'Yes', 'Yes', 71077), (True, 'Yes', 'Yes', 71078), (True, 'No', 'No', 71079), (True, 'Yes', 'Yes', 71080), (True, 'No', 'No', 71081), (True, 'Yes', 'Yes', 71082), (True, 'Yes', 'Yes', 71083), (True, 'No', 'No', 71084), (True, 'Yes', 'Yes', 71085), (True, 'No', 'No', 71086), (True, 'Yes', 'Yes', 71087), (True, 'Yes', 'Yes', 71088), (True, 'No', 'No', 71089), (True, 'Yes', 'Yes', 71090), (True, 'No', 'No', 71091), (True, 'Yes', 'Yes', 71092), (True, 'Yes', 'Yes', 71093), (True, 'No', 'No', 71094), (True, 'No', 'No', 71095), (True, 'Yes', 'Yes', 71096), (True, 'Yes', 'Yes', 71097), (True, 'No', 'No', 71098), (True, 'No', 'No', 71099), (True, 'Yes', 'Yes', 71100), (True, 'Yes', 'Yes', 71101), (True, 'No', 'No', 71102), (True, 'No', 'No', 71103), (True, 'No', 'No', 71104), (True, 'No', 'No', 71105), (True, 'No', 'No', 71106), (True, 'No', 'No', 71107), (True, 'No', 'No', 71108), (True, 'Yes', 'Yes', 71109), (True, 'Yes', 'Yes', 71110), (True, 'Yes', 'Yes', 71111), (True, 'Yes', 'Yes', 71112), (True, 'Yes', 'Yes', 71113), (True, 'Yes', 'Yes', 71114), (True, 'No', 'No', 71115), (True, 'Yes', 'Yes', 71116), (True, 'Yes', 'Yes', 71117), (True, 'No', 'No', 71118), (True, 'No', 'No', 71119), (True, 'No', 'No', 71120), (True, 'Yes', 'Yes', 71121), (True, 'Yes', 'Yes', 71122), (True, 'Yes', 'Yes', 71123), (True, 'Yes', 'Yes', 71124), (True, 'No', 'No', 71125), (True, 'No', 'No', 71126), (True, 'Yes', 'Yes', 71127), (True, 'No', 'No', 71128), (True, 'No', 'No', 71129), (True, 'Yes', 'Yes', 71130), (False, 'No', 'Yes', 71131), (True, 'Yes', 'Yes', 71132), (True, 'No', 'No', 71133), (True, 'Yes', 'Yes', 71134), (True, 'Yes', 'Yes', 71135), (True, 'Yes', 'Yes', 71136), (True, 'Yes', 'Yes', 71137), (True, 'No', 'No', 71138), (True, 'Yes', 'Yes', 71139), (True, 'Yes', 'Yes', 71140), (True, 'No', 'No', 71141), (True, 'No', 'No', 71142), (True, 'Yes', 'Yes', 71143), (True, 'Yes', 'Yes', 71144), (True, 'Yes', 'Yes', 71145), (True, 'Yes', 'Yes', 71146), (True, 'No', 'No', 71147), (True, 'No', 'No', 71148), (True, 'Yes', 'Yes', 71149), (True, 'Yes', 'Yes', 71150), (True, 'No', 'No', 71151), (True, 'No', 'No', 71152), (True, 'Yes', 'Yes', 71153), (True, 'Yes', 'Yes', 71154), (True, 'Yes', 'Yes', 71155), (True, 'No', 'No', 71156), (True, 'No', 'No', 71157), (True, 'Yes', 'Yes', 71158), (True, 'Yes', 'Yes', 71159), (True, 'Yes', 'Yes', 71160), (True, 'No', 'No', 71161), (True, 'No', 'No', 71162), (True, 'Yes', 'Yes', 71163), (True, 'Yes', 'Yes', 71164), (False, 'No', 'Yes', 71165), (True, 'Yes', 'Yes', 71166), (True, 'Yes', 'Yes', 71167), (True, 'Yes', 'Yes', 71168), (False, 'No', 'Yes', 71169), (True, 'No', 'No', 71170), (True, 'Yes', 'Yes', 71171), (True, 'No', 'No', 71172), (True, 'Yes', 'Yes', 71173), (True, 'No', 'No', 71174), (True, 'No', 'No', 71175), (True, 'No', 'No', 71176), (True, 'Yes', 'Yes', 71177), (True, 'Yes', 'Yes', 71178), (True, 'Yes', 'Yes', 71179), (True, 'Yes', 'Yes', 71180), (True, 'Yes', 'Yes', 71181), (False, 'No', 'Yes', 71182), (True, 'No', 'No', 71183)]",False,Wrong Answer,0.8524277411740893,0.8590785907859079,False,0.0298507462686567
735385,28160181,"# Description of the problem can be found at http://codeforces.com/problemset/problem/707/C

n = int(input())

b = n // 2

if n < 3:
    print(-1)
elif(n % 2 == 1):
    print(2 * b * (b + 1), 2 * b * (b+1) + 1)
else:
    print(b * b - 1, b * b + 1)",541,5440,62,6/30/17 3:21,23,680,1,8,"[(True, '4 5', '4 5', 101822), (True, '8 10', '8 10', 101823), (True, '-1', '-1', 101824), (True, '144 145', '144 145', 101825), (True, '2244 2245', '2244 2245', 101826), (True, '24 26', '24 26', 101827), (True, '48 50', '48 50', 101828), (True, '120 122', '120 122', 101829), (True, '264 265', '264 265', 101830), (True, '15128 15130', '15128 15130', 101831), (True, '203400 203402', '203400 203402', 101832), (True, '998000 998002', '998000 998002', 101834), (True, '1234567654320 1234567654322', '1234567654320 1234567654322', 101835), (True, '1234572098768 1234572098770', '1234572098768 1234572098770', 101836), (True, '308641358024 308641358026', '308641358024 308641358026', 101837), (True, '24999990000000 24999990000002', '24999990000000 24999990000002', 101838), (True, '-1', '-1', 101857), (True, '4 5', '4 5', 101858), (True, '12 13', '12 13', 101859), (True, '24 25', '24 25', 101860), (True, '40 41', '40 41', 101861), (True, '60 61', '60 61', 101862), (True, '84 85', '84 85', 101863), (True, '112 113', '112 113', 101864), (True, '180 181', '180 181', 101865), (True, '6160 6161', '6160 6161', 101866), (True, '6384 6385', '6384 6385', 101867), (True, '6612 6613', '6612 6613', 101868), (True, '6844 6845', '6844 6845', 101869), (True, '7080 7081', '7080 7081', 101870), (True, '6172827160 6172827161', '6172827160 6172827161', 101871), (True, '6173049384 6173049385', '6173049384 6173049385', 101872), (True, '6173271612 6173271613', '6173271612 6173271613', 101873), (True, '6173493844 6173493845', '6173493844 6173493845', 101874), (True, '6173716080 6173716081', '6173716080 6173716081', 101875), (True, '49999930000024 49999930000025', '49999930000024 49999930000025', 101876), (True, '49999790000220 49999790000221', '49999790000220 49999790000221', 101877), (True, '24999950000024 24999950000026', '24999950000024 24999950000026', 101878), (True, '49999910000040 49999910000041', '49999910000040 49999910000041', 101879), (True, '49999730000364 49999730000365', '49999730000364 49999730000365', 101881), (True, '24999970000008 24999970000010', '24999970000008 24999970000010', 101882), (True, '49999950000012 49999950000013', '49999950000012 49999950000013', 101883), (True, '49999970000004 49999970000005', '49999970000004 49999970000005', 101885), (True, '24999890000120 24999890000122', '24999890000120 24999890000122', 101886), (True, '4999999300000024 4999999300000025', '4999999300000024 4999999300000025', 101887), (True, '4999997900000220 4999997900000221', '4999997900000220 4999997900000221', 101888), (True, '2499999500000024 2499999500000026', '2499999500000024 2499999500000026', 101889), (True, '4999999100000040 4999999100000041', '4999999100000040 4999999100000041', 101890), (True, '4999997300000364 4999997300000365', '4999997300000364 4999997300000365', 101892), (True, '2499999700000008 2499999700000010', '2499999700000008 2499999700000010', 101893), (True, '4999999500000012 4999999500000013', '4999999500000012 4999999500000013', 101894), (True, '4999999700000004 4999999700000005', '4999999700000004 4999999700000005', 101896), (True, '2499998900000120 2499998900000122', '2499998900000120 2499998900000122', 101897), (True, '487730530870294164 487730530870294165', '487730530870294164 487730530870294165', 101898), (True, '-1', '-1', 101899), (True, '499999999000000000 499999999000000001', '499999999000000000 499999999000000001', 101903), (True, '499999937000001984 499999937000001985', '499999937000001984 499999937000001985', 101905), (True, '249999999000000000 249999999000000002', '249999999000000000 249999999000000002', 101906), (True, '93958713454973484 93958713454973485', '93958713454973484 93958713454973485', 101907), (True, '117571834810662804 117571834810662805', '117571834810662804 117571834810662805', 101908), (True, '499999929000002520 499999929000002521', '499999929000002520 499999929000002521', 101909), (True, '482605625241216204 482605625241216205', '482605625241216204 482605625241216205', 101910)]",True,Accecpted,0.9506885335787996,0.9962825278810408,False,0.0
735384,28160175,"# Description of the problem can be found at http://codeforces.com/problemset/problem/707/C

n = int(input())

b = n // 2

if n < 3:
    print(-1)
if(n % 2 == 1):
    print(2 * b * (b + 1), 2 * b * (b+1) + 1)
else:
    print(b * b - 1, b * b + 1)",541,4492,61,6/30/17 3:20,23,680,2,8,"[(True, '4 5', '4 5', 101822), (True, '8 10', '8 10', 101823), (False, '-1\n0 1', '-1', 101824), (True, '144 145', '144 145', 101825), (True, '2244 2245', '2244 2245', 101826), (True, '24 26', '24 26', 101827), (True, '48 50', '48 50', 101828), (True, '120 122', '120 122', 101829), (True, '264 265', '264 265', 101830), (True, '15128 15130', '15128 15130', 101831), (True, '203400 203402', '203400 203402', 101832), (True, '998000 998002', '998000 998002', 101834), (True, '1234567654320 1234567654322', '1234567654320 1234567654322', 101835), (True, '1234572098768 1234572098770', '1234572098768 1234572098770', 101836), (True, '308641358024 308641358026', '308641358024 308641358026', 101837), (True, '24999990000000 24999990000002', '24999990000000 24999990000002', 101838), (False, '-1\n0 2', '-1', 101857), (True, '4 5', '4 5', 101858), (True, '12 13', '12 13', 101859), (True, '24 25', '24 25', 101860), (True, '40 41', '40 41', 101861), (True, '60 61', '60 61', 101862), (True, '84 85', '84 85', 101863), (True, '112 113', '112 113', 101864), (True, '180 181', '180 181', 101865), (True, '6160 6161', '6160 6161', 101866), (True, '6384 6385', '6384 6385', 101867), (True, '6612 6613', '6612 6613', 101868), (True, '6844 6845', '6844 6845', 101869), (True, '7080 7081', '7080 7081', 101870), (True, '6172827160 6172827161', '6172827160 6172827161', 101871), (True, '6173049384 6173049385', '6173049384 6173049385', 101872), (True, '6173271612 6173271613', '6173271612 6173271613', 101873), (True, '6173493844 6173493845', '6173493844 6173493845', 101874), (True, '6173716080 6173716081', '6173716080 6173716081', 101875), (True, '49999930000024 49999930000025', '49999930000024 49999930000025', 101876), (True, '49999790000220 49999790000221', '49999790000220 49999790000221', 101877), (True, '24999950000024 24999950000026', '24999950000024 24999950000026', 101878), (True, '49999910000040 49999910000041', '49999910000040 49999910000041', 101879), (True, '49999730000364 49999730000365', '49999730000364 49999730000365', 101881), (True, '24999970000008 24999970000010', '24999970000008 24999970000010', 101882), (True, '49999950000012 49999950000013', '49999950000012 49999950000013', 101883), (True, '49999970000004 49999970000005', '49999970000004 49999970000005', 101885), (True, '24999890000120 24999890000122', '24999890000120 24999890000122', 101886), (True, '4999999300000024 4999999300000025', '4999999300000024 4999999300000025', 101887), (True, '4999997900000220 4999997900000221', '4999997900000220 4999997900000221', 101888), (True, '2499999500000024 2499999500000026', '2499999500000024 2499999500000026', 101889), (True, '4999999100000040 4999999100000041', '4999999100000040 4999999100000041', 101890), (True, '4999997300000364 4999997300000365', '4999997300000364 4999997300000365', 101892), (True, '2499999700000008 2499999700000010', '2499999700000008 2499999700000010', 101893), (True, '4999999500000012 4999999500000013', '4999999500000012 4999999500000013', 101894), (True, '4999999700000004 4999999700000005', '4999999700000004 4999999700000005', 101896), (True, '2499998900000120 2499998900000122', '2499998900000120 2499998900000122', 101897), (True, '487730530870294164 487730530870294165', '487730530870294164 487730530870294165', 101898), (False, '-1\n0 2', '-1', 101899), (True, '499999999000000000 499999999000000001', '499999999000000000 499999999000000001', 101903), (True, '499999937000001984 499999937000001985', '499999937000001984 499999937000001985', 101905), (True, '249999999000000000 249999999000000002', '249999999000000000 249999999000000002', 101906), (True, '93958713454973484 93958713454973485', '93958713454973484 93958713454973485', 101907), (True, '117571834810662804 117571834810662805', '117571834810662804 117571834810662805', 101908), (True, '499999929000002520 499999929000002521', '499999929000002520 499999929000002521', 101909), (True, '482605625241216204 482605625241216205', '482605625241216204 482605625241216205', 101910)]",False,Wrong Answer,0.9506885335787996,0.9962825278810408,False,0.0483870967741935
778703,26343791,"# Description of the problem can be found at http://codeforces.com/problemset/problem/714/A

l1, r1, l2, r2, k = map(int, input().split())

if l1 > r2 or r1 < l2:
    print(0)
    quit()

t = max(min(r1, r2) - max(l1, l2), 0) + 1

if (k >= l2 and k <= r2) and (k >= l1 and k <= r1):
    t -= 1

print(t)",541,5436,62,4/13/17 19:29,27,714,1,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (True, '1', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (True, '0', '0', 105701), (True, '999999997', '999999997', 105702), (True, '0', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (True, '81604391064', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (True, '0', '0', 105709), (True, '48172141432145241', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (True, '256787461333454149', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (True, '0', '0', 105715), (True, '0', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (True, '0', '0', 105719), (True, '5', '5', 105720), (True, '0', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (True, '1', '1', 105726), (True, '1', '1', 105727), (True, '0', '0', 105728), (True, '0', '0', 105729), (True, '0', '0', 105730), (True, '0', '0', 105731), (True, '0', '0', 105732), (True, '0', '0', 105733), (True, '0', '0', 105734), (True, '0', '0', 105735), (True, '0', '0', 105736), (True, '0', '0', 105737), (True, '0', '0', 105738), (True, '0', '0', 105739), (True, '0', '0', 105740), (True, '0', '0', 105741), (True, '0', '0', 105742), (True, '0', '0', 105743), (True, '0', '0', 105744), (True, '0', '0', 105745), (True, '0', '0', 105746), (True, '0', '0', 105747), (True, '0', '0', 105748), (True, '0', '0', 105749), (True, '0', '0', 105750), (True, '0', '0', 105751), (True, '0', '0', 105752), (True, '0', '0', 105753), (True, '0', '0', 105754), (True, '0', '0', 105755), (True, '0', '0', 105756), (True, '0', '0', 105757), (True, '0', '0', 105758), (True, '0', '0', 105759), (True, '0', '0', 105760), (True, '1', '1', 105761), (True, '0', '0', 105762), (True, '1', '1', 105763), (True, '0', '0', 105764), (True, '0', '0', 105765), (True, '0', '0', 105766), (True, '0', '0', 105767), (True, '0', '0', 105768), (True, '0', '0', 105769), (True, '0', '0', 105770), (True, '0', '0', 105771), (True, '0', '0', 105772), (True, '0', '0', 105773), (True, '0', '0', 105774), (True, '0', '0', 105775), (True, '0', '0', 105776), (True, '6', '6', 105777), (True, '0', '0', 105778), (True, '0', '0', 105779), (True, '0', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (True, '0', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (True, '4', '4', 105789)]",True,Accecpted,0.7850004066667713,0.5308848080133556,False,0.0
778702,26343745,"# Description of the problem can be found at http://codeforces.com/problemset/problem/714/A

l1, r1, l2, r2, k = map(int, input().split())
t = max(min(r1, r2) - max(l1, l2), 0) + 1

if (k >= l2 and k <= r2) and (k >= l1 and k <= r1):
    t -= 1

print(t)",541,5428,62,4/13/17 19:27,17,714,2,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (True, '1', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (False, '1', '0', 105701), (True, '999999997', '999999997', 105702), (False, '1', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (True, '81604391064', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (False, '1', '0', 105709), (True, '48172141432145241', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (True, '256787461333454149', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (False, '1', '0', 105715), (False, '1', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (False, '1', '0', 105719), (True, '5', '5', 105720), (False, '1', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (True, '1', '1', 105726), (True, '1', '1', 105727), (False, '1', '0', 105728), (False, '1', '0', 105729), (False, '1', '0', 105730), (False, '1', '0', 105731), (False, '1', '0', 105732), (False, '1', '0', 105733), (False, '1', '0', 105734), (False, '1', '0', 105735), (False, '1', '0', 105736), (False, '1', '0', 105737), (False, '1', '0', 105738), (False, '1', '0', 105739), (False, '1', '0', 105740), (False, '1', '0', 105741), (False, '1', '0', 105742), (False, '1', '0', 105743), (False, '1', '0', 105744), (False, '1', '0', 105745), (False, '1', '0', 105746), (False, '1', '0', 105747), (False, '1', '0', 105748), (False, '1', '0', 105749), (False, '1', '0', 105750), (False, '1', '0', 105751), (False, '1', '0', 105752), (False, '1', '0', 105753), (False, '1', '0', 105754), (False, '1', '0', 105755), (False, '1', '0', 105756), (False, '1', '0', 105757), (False, '1', '0', 105758), (False, '1', '0', 105759), (False, '1', '0', 105760), (True, '1', '1', 105761), (False, '1', '0', 105762), (True, '1', '1', 105763), (False, '1', '0', 105764), (False, '1', '0', 105765), (False, '1', '0', 105766), (False, '1', '0', 105767), (False, '1', '0', 105768), (False, '1', '0', 105769), (False, '1', '0', 105770), (False, '1', '0', 105771), (False, '1', '0', 105772), (False, '1', '0', 105773), (False, '1', '0', 105774), (False, '1', '0', 105775), (False, '1', '0', 105776), (True, '6', '6', 105777), (False, '1', '0', 105778), (False, '1', '0', 105779), (False, '1', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (False, '1', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (True, '4', '4', 105789)]",False,Wrong Answer,0.7850004066667713,0.5308848080133556,False,0.6041666666666666
831308,25085507,"# Description of the problem can be found at http://codeforces.com/problemset/problem/723/A

l = list(map(int, input().split()))
l.sort()
print(l[2] - l[0])",541,4532,62,2/27/17 21:22,9,764,1,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (True, '99', '99', 109990), (True, '99', '99', 109991), (True, '99', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (True, '85', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (True, '88', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (True, '67', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (True, '67', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (True, '8', '8', 110026), (True, '10', '10', 110027), (True, '49', '49', 110028), (True, '10', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (True, '99', '99', 110034), (True, '5', '5', 110035)]",True,Accecpted,0.2557479110702038,0.6701570680628273,False,0.0
831307,25085371,"# Description of the problem can be found at http://codeforces.com/problemset/problem/723/A

x1, x2, x3 = map(int, input().split())
a_x = (x1 + x2 + x3) // 3
print(abs(a_x - x1) + abs(a_x - x2) + abs(a_x - x3))",541,4460,46,2/27/17 21:14,9,764,2,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (False, '130', '99', 109990), (False, '126', '99', 109991), (False, '102', '99', 109992), (True, '2', '2', 109993), (False, '21', '17', 109994), (False, '86', '69', 109995), (False, '88', '72', 109996), (False, '30', '25', 109997), (False, '102', '85', 109998), (False, '68', '52', 109999), (False, '94', '72', 110000), (False, '14', '11', 110001), (False, '19', '15', 110002), (False, '106', '88', 110003), (False, '66', '62', 110004), (False, '84', '70', 110005), (False, '40', '36', 110006), (False, '80', '61', 110007), (False, '6', '5', 110008), (False, '32', '29', 110009), (False, '74', '62', 110010), (False, '82', '69', 110011), (False, '32', '27', 110012), (False, '34', '33', 110013), (False, '80', '61', 110014), (False, '71', '67', 110015), (False, '65', '51', 110016), (False, '59', '55', 110017), (False, '86', '75', 110018), (False, '72', '67', 110019), (False, '79', '61', 110020), (False, '50', '49', 110021), (False, '66', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (True, '8', '8', 110026), (True, '10', '10', 110027), (False, '54', '49', 110028), (True, '10', '10', 110029), (False, '10', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (False, '8', '7', 110033), (False, '131', '99', 110034), (False, '6', '5', 110035)]",False,Wrong Answer,0.2557479110702038,0.6701570680628273,False,0.7708333333333334
882643,25446230,"# Description of the problem can be found at http://codeforces.com/problemset/problem/733/A

s_v = set()
s_v.add(""A"")
s_v.add(""E"")
s_v.add(""I"")
s_v.add(""O"")
s_v.add(""U"")
s_v.add(""Y"")

s = input()
p = -1
m = -1

for i in range(len(s)):
    if s[i] in s_v:
        m = max(m, i - p)
        p = i
i += 1
m = max(m, i - p)

print(m)",541,4516,62,3/13/17 6:34,43,819,1,8,"[(True, '4', '4', 113942), (True, '1', '1', 113943), (True, '1', '1', 113944), (True, '2', '2', 113945), (True, '39', '39', 113946), (True, '1', '1', 113947), (True, '85', '85', 113948), (True, '18', '18', 113949), (True, '11', '11', 113950), (True, '12', '12', 113951), (True, '9', '9', 113952), (True, '4', '4', 113953), (True, '101', '101', 113954), (True, '76', '76', 113955), (True, '45', '45', 113956), (True, '48', '48', 113957), (True, '47', '47', 113958), (True, '65', '65', 113959), (True, '28', '28', 113960), (True, '35', '35', 113961), (True, '30', '30', 113962), (True, '19', '19', 113963), (True, '30', '30', 113964), (True, '34', '34', 113965), (True, '17', '17', 113966), (True, '15', '15', 113967), (True, '9', '9', 113968), (True, '5', '5', 113969), (True, '4', '4', 113970), (True, '5', '5', 113971), (True, '5', '5', 113972), (True, '3', '3', 113973), (True, '3', '3', 113974), (True, '2', '2', 113975), (True, '2', '2', 113976), (True, '2', '2', 113977), (True, '2', '2', 113978), (True, '1', '1', 113979), (True, '4', '4', 113980), (True, '4', '4', 113981), (True, '3', '3', 113982), (True, '1', '1', 113983), (True, '8', '8', 113984), (True, '1', '1', 113985), (True, '1', '1', 113986), (True, '4', '4', 113987), (True, '1', '1', 113988), (True, '4', '4', 113989), (True, '1', '1', 113990), (True, '2', '2', 113991), (True, '5', '5', 113992), (True, '5', '5', 113993), (True, '3', '3', 113994), (True, '2', '2', 113995), (True, '1', '1', 113996), (True, '7', '7', 113997), (True, '3', '3', 113998), (True, '16', '16', 113999), (True, '3', '3', 114000), (True, '3', '3', 114001), (True, '6', '6', 114002), (True, '1', '1', 114003), (True, '3', '3', 114004), (True, '1', '1', 114005), (True, '3', '3', 114006), (True, '4', '4', 114007), (True, '8', '8', 114008), (True, '5', '5', 114009), (True, '1', '1', 114010), (True, '13', '13', 114011)]",True,Accecpted,0.8082366402162481,0.9284712482468443,False,0.0
882642,25446221,"# Description of the problem can be found at http://codeforces.com/problemset/problem/733/A

s_v = set()
s_v.add(""A"")
s_v.add(""E"")
s_v.add(""I"")
s_v.add(""O"")
s_v.add(""U"")
s_v.add(""Y"")

s = input()
p = -1
m = -1

for i in range(len(s)):
    if s[i] in s_v:
        m = max(m, i - p)
        p = i

print(m)",541,4516,61,3/13/17 6:33,39,819,2,8,"[(True, '4', '4', 113942), (True, '1', '1', 113943), (True, '1', '1', 113944), (False, '-1', '2', 113945), (True, '39', '39', 113946), (True, '1', '1', 113947), (False, '-1', '85', 113948), (True, '18', '18', 113949), (False, '-1', '11', 113950), (False, '9', '12', 113951), (True, '9', '9', 113952), (True, '4', '4', 113953), (False, '-1', '101', 113954), (False, '25', '76', 113955), (True, '45', '45', 113956), (True, '48', '48', 113957), (True, '47', '47', 113958), (True, '65', '65', 113959), (True, '28', '28', 113960), (True, '35', '35', 113961), (True, '30', '30', 113962), (True, '19', '19', 113963), (True, '30', '30', 113964), (True, '34', '34', 113965), (True, '17', '17', 113966), (True, '15', '15', 113967), (True, '9', '9', 113968), (True, '5', '5', 113969), (True, '4', '4', 113970), (True, '5', '5', 113971), (True, '5', '5', 113972), (True, '3', '3', 113973), (True, '3', '3', 113974), (True, '2', '2', 113975), (True, '2', '2', 113976), (True, '2', '2', 113977), (True, '2', '2', 113978), (True, '1', '1', 113979), (False, '3', '4', 113980), (False, '1', '4', 113981), (True, '3', '3', 113982), (True, '1', '1', 113983), (False, '2', '8', 113984), (True, '1', '1', 113985), (True, '1', '1', 113986), (False, '1', '4', 113987), (True, '1', '1', 113988), (False, '2', '4', 113989), (True, '1', '1', 113990), (True, '2', '2', 113991), (False, '4', '5', 113992), (False, '4', '5', 113993), (True, '3', '3', 113994), (True, '2', '2', 113995), (True, '1', '1', 113996), (False, '1', '7', 113997), (True, '3', '3', 113998), (False, '2', '16', 113999), (True, '3', '3', 114000), (False, '1', '3', 114001), (False, '4', '6', 114002), (True, '1', '1', 114003), (True, '3', '3', 114004), (True, '1', '1', 114005), (True, '3', '3', 114006), (True, '4', '4', 114007), (False, '4', '8', 114008), (True, '5', '5', 114009), (True, '1', '1', 114010), (False, '2', '13', 114011)]",False,Wrong Answer,0.8082366402162481,0.9284712482468443,False,0.2714285714285714
930510,27552285,"# Description of the problem can be found at http://codeforces.com/problemset/problem/740/A

n, c1, c2, c3 = map(int, input().split())

if n % 4 == 0:
    print(0)
elif n % 4 == 1:
    print(min([c3, c2 + c1, c1 * 3]))
elif n % 4 == 2:
    print(min([c2, c1 * 2, c3 * 2]))
else:
    print(min([c3 * 3, c2 + c3, c1]))",541,32,77,6/4/17 0:42,23,858,1,8,"[(True, '3', '3', 116330), (True, '1', '1', 116331), (True, '0', '0', 116332), (True, '1000000000', '1000000000', 116333), (True, '0', '0', 116334), (True, '1', '1', 116335), (True, '5', '5', 116336), (True, '2', '2', 116337), (True, '1', '1', 116338), (True, '1000000000', '1000000000', 116339), (True, '999999990', '999999990', 116340), (True, '335918278', '335918278', 116341), (True, '1000000000', '1000000000', 116342), (True, '0', '0', 116343), (True, '524125987', '524125987', 116344), (True, '673102149', '673102149', 116345), (True, '585325539', '585325539', 116346), (True, '11774896', '11774896', 116347), (True, '0', '0', 116348), (True, '131116353', '131116353', 116349), (True, '8075817', '8075817', 116350), (True, '640274071', '640274071', 116351), (True, '405799987', '405799987', 116352), (True, '678092074', '678092074', 116353), (True, '0', '0', 116354), (True, '3', '3', 116355), (True, '2', '2', 116356), (True, '2', '2', 116357), (True, '3', '3', 116358), (True, '438793836', '438793836', 116359), (True, '307539138', '307539138', 116360), (True, '146086131', '146086131', 116361), (True, '347508634', '347508634', 116362), (True, '0', '0', 116363), (True, '764655030', '764655030', 116364), (True, '0', '0', 116365), (True, '335521569', '335521569', 116366), (True, '546879484', '546879484', 116367), (True, '691688417', '691688417', 116368), (True, '30527185', '30527185', 116369), (True, '0', '0', 116370), (True, '654916173', '654916173', 116371), (True, '216296044', '216296044', 116372), (True, '992170945', '992170945', 116373), (True, '48014511', '48014511', 116374), (True, '0', '0', 116375), (True, '0', '0', 116376), (True, '9', '9', 116377), (True, '7', '7', 116378), (True, '3', '3', 116379), (True, '3', '3', 116380), (True, '3', '3', 116381), (True, '3', '3', 116382), (True, '3', '3', 116383), (True, '5', '5', 116384), (True, '6', '6', 116385), (True, '100000', '100000', 116386), (True, '3', '3', 116387), (True, '9', '9', 116388), (True, '2', '2', 116389), (True, '2', '2', 116390), (True, '2', '2', 116391), (True, '2', '2', 116392), (True, '3', '3', 116393), (True, '101', '101', 116394), (True, '1000000000', '1000000000', 116395), (True, '11', '11', 116396), (True, '101', '101', 116397), (True, '2', '2', 116398), (True, '3', '3', 116399), (True, '2', '2', 116400), (True, '3', '3', 116401), (True, '3', '3', 116402), (True, '31', '31', 116403), (True, '3', '3', 116404), (True, '3', '3', 116405), (True, '1001', '1001', 116406), (True, '9', '9', 116407), (True, '3', '3', 116408), (True, '100001', '100001', 116409), (True, '2', '2', 116410), (True, '6', '6', 116411), (True, '3', '3', 116412), (True, '3', '3', 116413), (True, '2', '2', 116414), (True, '34', '34', 116415), (True, '9', '9', 116416), (True, '0', '0', 116417), (True, '0', '0', 116418)]",True,Accecpted,0.9019955204643751,0.8562874251497006,False,0.0
930509,27552276,"# Description of the problem can be found at http://codeforces.com/problemset/problem/740/A

n, c1, c2, c3 = map(int, input().split())

if n % 4 == 0:
    print(0)
elif n % 4 == 1:
    print(min([c3, c2 + c1, c1 * 3]))
elif n % 4 == 2:
    print(min([c2, c2 * 2]))
else:
    print(min([c3 * 3, c2 + c3, c1]))",541,0,61,6/4/17 0:41,23,858,2,8,"[(True, '3', '3', 116330), (True, '1', '1', 116331), (True, '0', '0', 116332), (True, '1000000000', '1000000000', 116333), (True, '0', '0', 116334), (True, '1', '1', 116335), (True, '5', '5', 116336), (False, '3', '2', 116337), (True, '1', '1', 116338), (True, '1000000000', '1000000000', 116339), (True, '999999990', '999999990', 116340), (False, '481199252', '335918278', 116341), (True, '1000000000', '1000000000', 116342), (True, '0', '0', 116343), (True, '524125987', '524125987', 116344), (True, '673102149', '673102149', 116345), (True, '585325539', '585325539', 116346), (False, '643910770', '11774896', 116347), (True, '0', '0', 116348), (True, '131116353', '131116353', 116349), (True, '8075817', '8075817', 116350), (True, '640274071', '640274071', 116351), (True, '405799987', '405799987', 116352), (True, '678092074', '678092074', 116353), (True, '0', '0', 116354), (True, '3', '3', 116355), (True, '2', '2', 116356), (False, '3', '2', 116357), (True, '3', '3', 116358), (False, '747167704', '438793836', 116359), (True, '307539138', '307539138', 116360), (True, '146086131', '146086131', 116361), (True, '347508634', '347508634', 116362), (True, '0', '0', 116363), (True, '764655030', '764655030', 116364), (True, '0', '0', 116365), (True, '335521569', '335521569', 116366), (True, '546879484', '546879484', 116367), (True, '691688417', '691688417', 116368), (True, '30527185', '30527185', 116369), (True, '0', '0', 116370), (True, '654916173', '654916173', 116371), (True, '216296044', '216296044', 116372), (True, '992170945', '992170945', 116373), (True, '48014511', '48014511', 116374), (True, '0', '0', 116375), (True, '0', '0', 116376), (True, '9', '9', 116377), (True, '7', '7', 116378), (True, '3', '3', 116379), (True, '3', '3', 116380), (True, '3', '3', 116381), (True, '3', '3', 116382), (True, '3', '3', 116383), (True, '5', '5', 116384), (True, '6', '6', 116385), (True, '100000', '100000', 116386), (True, '3', '3', 116387), (True, '9', '9', 116388), (True, '2', '2', 116389), (True, '2', '2', 116390), (True, '2', '2', 116391), (True, '2', '2', 116392), (True, '3', '3', 116393), (True, '101', '101', 116394), (True, '1000000000', '1000000000', 116395), (True, '11', '11', 116396), (True, '101', '101', 116397), (True, '2', '2', 116398), (True, '3', '3', 116399), (True, '2', '2', 116400), (True, '3', '3', 116401), (True, '3', '3', 116402), (True, '31', '31', 116403), (True, '3', '3', 116404), (True, '3', '3', 116405), (True, '1001', '1001', 116406), (True, '9', '9', 116407), (True, '3', '3', 116408), (True, '100001', '100001', 116409), (True, '2', '2', 116410), (True, '6', '6', 116411), (True, '3', '3', 116412), (True, '3', '3', 116413), (True, '2', '2', 116414), (True, '34', '34', 116415), (True, '9', '9', 116416), (True, '0', '0', 116417), (True, '0', '0', 116418)]",False,Wrong Answer,0.9019955204643751,0.8562874251497006,False,0.0561797752808988
939158,25464607,"# Description of the problem can be found at http://codeforces.com/problemset/problem/742/A

n = int(input())

if n == 0:
    print(""1"")
elif (n - 1) % 4 == 0:
    print(""8"")
elif (n - 1) % 4 == 1:
    print(""4"")
elif (n - 1) % 4 == 2:
    print(""2"")
else:
    print(""6"")",541,4524,62,3/14/17 5:08,27,868,1,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (True, '1', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",True,Accecpted,0.6758263584041696,0.7190226876090751,False,0.0
939157,25464596,"# Description of the problem can be found at http://codeforces.com/problemset/problem/742/A

n = int(input())

if (n - 1) % 4 == 0:
    print(""8"")
if (n - 1) % 4 == 1:
    print(""4"")
if (n - 1) % 4 == 2:
    print(""2"")
if (n - 1) % 4 == 3:
    print(""6"")",541,4504,62,3/14/17 5:06,23,868,2,8,"[(True, '8', '8', 5205), (True, '4', '4', 5206), (True, '6', '6', 5207), (True, '2', '2', 5208), (True, '6', '6', 5209), (True, '6', '6', 5210), (True, '8', '8', 5211), (True, '4', '4', 5212), (True, '2', '2', 5213), (True, '4', '4', 5214), (True, '4', '4', 5215), (True, '4', '4', 5216), (True, '4', '4', 5217), (True, '8', '8', 5218), (True, '8', '8', 5219), (False, '6', '1', 5220), (True, '8', '8', 5221), (True, '2', '2', 5222), (True, '6', '6', 5223), (True, '8', '8', 5224), (True, '4', '4', 5225), (True, '2', '2', 5226), (True, '6', '6', 5227), (True, '8', '8', 5228), (True, '4', '4', 5229), (True, '2', '2', 5230), (True, '6', '6', 5231), (True, '6', '6', 5232), (True, '2', '2', 5233), (True, '4', '4', 5234)]",False,Wrong Answer,0.6758263584041696,0.7190226876090751,False,0.0333333333333333
989846,25106717,"# Description of the problem can be found at http://codeforces.com/problemset/problem/750/A

n, k = map(int, input().split())
t = 4*60 - k

n_p_c = 0
while t >= 0 and n_p_c <= n:
    n_p_c += 1
    t -= n_p_c* 5
    
print(n_p_c - 1)",541,4536,62,2/28/17 20:31,21,912,1,8,"[(True, '2', '2', 120386), (True, '4', '4', 120387), (True, '7', '7', 120388), (True, '6', '6', 120389), (True, '5', '5', 120390), (True, '1', '1', 120391), (True, '0', '0', 120392), (True, '9', '9', 120393), (True, '0', '0', 120394), (True, '0', '0', 120395), (True, '9', '9', 120396), (True, '1', '1', 120397), (True, '0', '0', 120398), (True, '2', '2', 120399), (True, '1', '1', 120400), (True, '3', '3', 120401), (True, '2', '2', 120402), (True, '3', '3', 120403), (True, '5', '5', 120404), (True, '4', '4', 120405), (True, '7', '7', 120406), (True, '6', '6', 120407), (True, '8', '8', 120408), (True, '7', '7', 120409), (True, '9', '9', 120410), (True, '8', '8', 120411), (True, '4', '4', 120412), (True, '4', '4', 120413), (True, '4', '4', 120414), (True, '5', '5', 120415), (True, '4', '4', 120416), (True, '5', '5', 120417), (True, '1', '1', 120418), (True, '6', '6', 120419), (True, '2', '2', 120420), (True, '7', '7', 120421), (True, '1', '1', 120422), (True, '1', '1', 120423), (True, '0', '0', 120424), (True, '1', '1', 120425), (True, '0', '0', 120426), (True, '0', '0', 120427), (True, '0', '0', 120428), (True, '0', '0', 120429), (True, '9', '9', 120430), (True, '9', '9', 120431), (True, '0', '0', 120432), (True, '9', '9', 120433), (True, '0', '0', 120434), (True, '0', '0', 120435), (True, '7', '7', 120436), (True, '1', '1', 120437)]",True,Accecpted,0.8767740197085658,0.994059405940594,False,0.0
989845,25106492,"# Description of the problem can be found at http://codeforces.com/problemset/problem/750/A

n, k = map(int, input().split())
t = 4*60 - k

n_p_c = 1
while t > 0 and n_p_c <= n:
    n_p_c += 1
    t -= n_p_c* 5
    
print(n_p_c - 1)",541,4476,62,2/28/17 20:20,21,912,2,8,"[(True, '2', '2', 120386), (True, '4', '4', 120387), (True, '7', '7', 120388), (True, '6', '6', 120389), (False, '6', '5', 120390), (True, '1', '1', 120391), (True, '0', '0', 120392), (True, '9', '9', 120393), (True, '0', '0', 120394), (True, '0', '0', 120395), (True, '9', '9', 120396), (True, '1', '1', 120397), (False, '1', '0', 120398), (True, '2', '2', 120399), (False, '2', '1', 120400), (True, '3', '3', 120401), (False, '3', '2', 120402), (False, '4', '3', 120403), (True, '5', '5', 120404), (False, '5', '4', 120405), (True, '7', '7', 120406), (False, '7', '6', 120407), (True, '8', '8', 120408), (False, '8', '7', 120409), (True, '9', '9', 120410), (False, '9', '8', 120411), (True, '4', '4', 120412), (True, '4', '4', 120413), (False, '5', '4', 120414), (True, '5', '5', 120415), (True, '4', '4', 120416), (True, '5', '5', 120417), (True, '1', '1', 120418), (True, '6', '6', 120419), (True, '2', '2', 120420), (True, '7', '7', 120421), (True, '1', '1', 120422), (True, '1', '1', 120423), (True, '0', '0', 120424), (True, '1', '1', 120425), (True, '0', '0', 120426), (True, '0', '0', 120427), (True, '0', '0', 120428), (True, '0', '0', 120429), (True, '9', '9', 120430), (True, '9', '9', 120431), (False, '1', '0', 120432), (True, '9', '9', 120433), (False, '1', '0', 120434), (False, '1', '0', 120435), (True, '7', '7', 120436), (True, '1', '1', 120437)]",False,Wrong Answer,0.8767740197085658,0.994059405940594,False,0.25
1048299,25878062,"# Description of the problem can be found at http://codeforces.com/problemset/problem/761/A

a, b = map(int, input().split())

if abs(a - b) <= 1 and not (b == 0 and a == 0):
    print(""YES"")
else:
    print(""NO"")",541,4508,62,3/28/17 18:58,15,972,1,8,"[(True, 'YES', 'YES', 125942), (True, 'NO', 'NO', 125943), (True, 'YES', 'YES', 125944), (True, 'YES', 'YES', 125945), (True, 'NO', 'NO', 125946), (True, 'YES', 'YES', 125947), (True, 'NO', 'NO', 125948), (True, 'YES', 'YES', 125949), (True, 'NO', 'NO', 125950), (True, 'YES', 'YES', 125951), (True, 'YES', 'YES', 125952), (True, 'NO', 'NO', 125953), (True, 'NO', 'NO', 125954), (True, 'YES', 'YES', 125955), (True, 'YES', 'YES', 125956), (True, 'NO', 'NO', 125957), (True, 'NO', 'NO', 125958), (True, 'NO', 'NO', 125959), (True, 'YES', 'YES', 125960), (True, 'NO', 'NO', 125961), (True, 'YES', 'YES', 125962)]",True,Accecpted,0.6078294233246405,0.9342723004694836,False,0.0
1048298,25878018,"# Description of the problem can be found at http://codeforces.com/problemset/problem/761/A

a, b = map(int, input().split())

if abs(a - b) <= 1:
    print(""YES"")
else:
    print(""NO"")",541,4512,62,3/28/17 18:56,15,972,2,8,"[(True, 'YES', 'YES', 125942), (True, 'NO', 'NO', 125943), (True, 'YES', 'YES', 125944), (True, 'YES', 'YES', 125945), (True, 'NO', 'NO', 125946), (True, 'YES', 'YES', 125947), (True, 'NO', 'NO', 125948), (True, 'YES', 'YES', 125949), (True, 'NO', 'NO', 125950), (True, 'YES', 'YES', 125951), (True, 'YES', 'YES', 125952), (False, 'YES', 'NO', 125953), (True, 'NO', 'NO', 125954), (True, 'YES', 'YES', 125955), (True, 'YES', 'YES', 125956), (True, 'NO', 'NO', 125957), (True, 'NO', 'NO', 125958), (True, 'NO', 'NO', 125959), (True, 'YES', 'YES', 125960), (True, 'NO', 'NO', 125961), (True, 'YES', 'YES', 125962)]",False,Wrong Answer,0.6078294233246405,0.9342723004694836,False,0.0476190476190476
1368603,27658615,"# Description of the problem can be found at http://codeforces.com/problemset/problem/139/A

p = int(input())

l_n = list(map(int, input().split()))
n_s = sum(l_n)

while p > n_s:
    p -= n_s

while p > 0:
        for i in range(len(l_n)):
            if l_n[i] >= p:
                print(i + 1)
                quit()
            p -= l_n[i]",541,12,124,6/7/17 23:41,16,1226,1,8,"[(True, '6', '6', 144050), (True, '1', '1', 144051), (True, '1', '1', 144052), (True, '3', '3', 144053), (True, '1', '1', 144054), (True, '6', '6', 144055), (True, '6', '6', 144056), (True, '1', '1', 144057), (True, '1', '1', 144058), (True, '1', '1', 144059), (True, '3', '3', 144060), (True, '3', '3', 144061), (True, '7', '7', 144062), (True, '7', '7', 144063), (True, '1', '1', 144064), (True, '1', '1', 144065), (True, '6', '6', 144066), (True, '1', '1', 144067), (True, '1', '1', 144068), (True, '7', '7', 144069), (True, '1', '1', 144070), (True, '2', '2', 144071), (True, '7', '7', 144072), (True, '2', '2', 144073), (True, '6', '6', 144074), (True, '7', '7', 144075), (True, '6', '6', 144076), (True, '2', '2', 144077), (True, '7', '7', 144078), (True, '7', '7', 144079), (True, '6', '6', 144080), (True, '7', '7', 144081), (True, '7', '7', 144082), (True, '7', '7', 144083), (True, '6', '6', 144084), (True, '4', '4', 144085), (True, '6', '6', 144086), (True, '7', '7', 144087), (True, '7', '7', 144088), (True, '4', '4', 144089), (True, '7', '7', 144090), (True, '7', '7', 144091), (True, '4', '4', 144092), (True, '4', '4', 144093), (True, '7', '7', 144094), (True, '7', '7', 144095), (True, '7', '7', 144096), (True, '3', '3', 144097), (True, '6', '6', 144098)]",True,Accecpted,0.7431544478054397,0.5739910313901345,False,0.0
1368602,27658507,"# Description of the problem can be found at http://codeforces.com/problemset/problem/139/A

p = int(input())

l_n = list(map(int, input().split()))
n_s = sum(l_n)

p -= (max(0, p // n_s - 1)) * n_s

for i in range(len(l_n)):
    if l_n[i] >= p:
        print(i + 1)
        quit()
    p -= l_n[i]",541,20,122,6/7/17 23:31,14,1226,2,8,"[(True, '6', '6', 144050), (True, '1', '1', 144051), (True, '1', '1', 144052), (True, '3', '3', 144053), (True, '1', '1', 144054), (True, '6', '6', 144055), (True, '6', '6', 144056), (False, '', '1', 144057), (False, '', '1', 144058), (True, '1', '1', 144059), (False, '', '3', 144060), (False, '', '3', 144061), (True, '7', '7', 144062), (True, '7', '7', 144063), (False, '', '1', 144064), (False, '', '1', 144065), (False, '', '6', 144066), (True, '1', '1', 144067), (True, '1', '1', 144068), (True, '7', '7', 144069), (False, '', '1', 144070), (False, '', '2', 144071), (True, '7', '7', 144072), (True, '2', '2', 144073), (True, '6', '6', 144074), (True, '7', '7', 144075), (True, '6', '6', 144076), (True, '2', '2', 144077), (True, '7', '7', 144078), (True, '7', '7', 144079), (False, '', '6', 144080), (True, '7', '7', 144081), (True, '7', '7', 144082), (True, '7', '7', 144083), (True, '6', '6', 144084), (True, '4', '4', 144085), (True, '6', '6', 144086), (True, '7', '7', 144087), (True, '7', '7', 144088), (True, '4', '4', 144089), (True, '7', '7', 144090), (True, '7', '7', 144091), (True, '4', '4', 144092), (True, '4', '4', 144093), (True, '7', '7', 144094), (True, '7', '7', 144095), (True, '7', '7', 144096), (True, '3', '3', 144097), (True, '6', '6', 144098)]",False,Wrong Answer,0.7431544478054397,0.5739910313901345,False,0.2040816326530612
1432287,24677603,"# Description of the problem can be found at http://codeforces.com/problemset/problem/148/A


def main():
    damage_numbers = list()
    dragons_hurt = 0
    # add k, l, m, n, d to our damage_numbers list
    damage_numbers.append(int(input()))
    damage_numbers.append(int(input()))
    damage_numbers.append(int(input()))
    damage_numbers.append(int(input()))
    
    num_dragons = int(input())
    
    for dragon_num in range(num_dragons):
        for damage_number in damage_numbers:
            if (dragon_num + 1) % damage_number == 0:
                dragons_hurt += 1
                break
    
    print(dragons_hurt)
    
    
if __name__ == ""__main__"":
    main()",541,4512,404,2/14/17 20:45,25,1274,1,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (True, '35246', '35246', 147728), (True, '75083', '75083', 147729), (True, '24656', '24656', 147730), (True, '36320', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (True, '21956', '21956', 147738), (True, '32736', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (True, '36019', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (True, '9224', '9224', 147750), (True, '43539', '43539', 147751), (True, '2438', '2438', 147752), (True, '415', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",True,Accecpted,0.9253123231329275,0.9814550641940084,False,0.0
1432286,24677571,"# Description of the problem can be found at http://codeforces.com/problemset/problem/148/A


def main():
    damage_numbers = list()
    dragons_hurt = 0
    # add k, l, m, n, d to our damage_numbers list
    damage_numbers.append(int(input()))
    damage_numbers.append(int(input()))
    damage_numbers.append(int(input()))
    damage_numbers.append(int(input()))
    
    num_dragons = int(input())
    
    for dragon_num in range(num_dragons):
        for damage_number in damage_numbers:
            if dragon_num % damage_number == 0:
                dragons_hurt += 1
                break
    
    print(dragons_hurt)
    
    
if __name__ == ""__main__"":
    main()",541,4512,154,2/14/17 20:44,25,1274,2,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (False, '1', '0', 147723), (False, '32719', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (False, '35247', '35246', 147728), (True, '75083', '75083', 147729), (False, '24657', '24656', 147730), (False, '36321', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (False, '21957', '21956', 147738), (True, '32736', '32736', 147739), (False, '11119', '11118', 147740), (True, '49547', '49547', 147741), (False, '36020', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (False, '20361', '20360', 147746), (False, '29932', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (False, '9225', '9224', 147750), (False, '43540', '43539', 147751), (False, '2439', '2438', 147752), (False, '416', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (False, '1', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (False, '1', '0', 147759)]",False,Wrong Answer,0.9253123231329275,0.9814550641940084,False,0.4
1563941,28678694,"# Description of the problem can be found at 

n = int(input())

mod = 1000000007
print(int((pow(3, n, 4 * mod) + 3 * (-1)**n) / 4) % (4 * mod))",541,4516,124,7/19/17 0:33,6,1382,1,8,"[(True, '3', '3', 153461), (True, '21', '21', 153462), (True, '0', '0', 153463), (True, '6', '6', 153464), (True, '60', '60', 153465), (True, '183', '183', 153466), (True, '546', '546', 153467), (True, '1641', '1641', 153468), (True, '4920', '4920', 153469), (True, '14763', '14763', 153470), (True, '3587226', '3587226', 153471), (True, '782663359', '782663359', 153472), (True, '192336614', '192336614', 153473), (True, '721510432', '721510432', 153474), (True, '327873818', '327873818', 153475), (True, '295068084', '295068084', 153476), (True, '451187545', '451187545', 153477), (True, '645417275', '645417275', 153478), (True, '755610910', '755610910', 153479), (True, '723907367', '723907367', 153480), (True, '969527595', '969527595', 153481), (True, '548978368', '548978368', 153482), (True, '909741855', '909741855', 153483), (True, '729225554', '729225554', 153484), (True, '93822635', '93822635', 153485), (True, '178940616', '178940616', 153486), (True, '266233856', '266233856', 153487), (True, '882155933', '882155933', 153488), (True, '295060537', '295060537', 153489), (True, '730778875', '730778875', 153490), (True, '266233856', '266233856', 153491), (True, '730778875', '730778875', 153492), (True, '192336614', '192336614', 153493), (True, '576926295', '576926295', 153494), (True, '782663359', '782663359', 153495), (True, '347990060', '347990060', 153496)]",True,Accecpted,0.3336145088961188,0.4488636363636363,False,0.0
1563940,28678681,"# Description of the problem can be found at 

n = int(input())
a, b = 0, 3
if n==1:
    print(a)
else:
    for i in range(n-2):
        a, b = b, (2 * b + 3 * a) % 1000000007
    
    print(b)",541,4512,2000,7/19/17 0:32,11,1382,3,8,"[(True, '3', '3', 153461), (True, '21', '21', 153462), (True, '0', '0', 153463), (True, '6', '6', 153464), (True, '60', '60', 153465), (True, '183', '183', 153466), (True, '546', '546', 153467), (True, '1641', '1641', 153468), (True, '4920', '4920', 153469), (True, '14763', '14763', 153470), (True, '3587226', '3587226', 153471), (True, '782663359', '782663359', 153472), (True, '192336614', '192336614', 153473), (True, '721510432', '721510432', 153474), (True, '327873818', '327873818', 153475), (True, '295068084', '295068084', 153476), (True, '451187545', '451187545', 153477), (True, '645417275', '645417275', 153478), (True, '755610910', '755610910', 153479), (True, '723907367', '723907367', 153480), (True, '969527595', '969527595', 153481), (True, '548978368', '548978368', 153482), (True, '909741855', '909741855', 153483), (True, '729225554', '729225554', 153484), (True, '93822635', '93822635', 153485), (True, '178940616', '178940616', 153486), (True, '266233856', '266233856', 153487), (True, '882155933', '882155933', 153488), (True, '295060537', '295060537', 153489), (True, '730778875', '730778875', 153490), (True, '266233856', '266233856', 153491), (True, '730778875', '730778875', 153492), (True, '192336614', '192336614', 153493), (True, '576926295', '576926295', 153494), (True, '782663359', '782663359', 153495), (True, '347990060', '347990060', 153496)]",True,Time Limit,0.3336145088961188,0.4488636363636363,False,0.0
1701965,25662096,"# Description of the problem can be found at http://codeforces.com/problemset/problem/189/A

n, a, b, c = map(int, input().split())
dp = [0] + [-1e9]*5000

for i in range(1, n + 1):
    dp[i] = max(dp[i - a], dp[i - b], dp[i - c]) + 1

print(dp[n])",541,4780,62,3/20/17 12:03,9,1520,1,8,"[(True, '2', '2', 159338), (True, '2', '2', 159339), (True, '1', '1', 159340), (True, '1', '1', 159341), (True, '4000', '4000', 159342), (True, '1333', '1333', 159343), (True, '3', '3', 159344), (True, '2', '2', 159345), (True, '11', '11', 159346), (True, '9', '9', 159347), (True, '15', '15', 159348), (True, '7', '7', 159349), (True, '26', '26', 159350), (True, '370', '370', 159351), (True, '367', '367', 159352), (True, '29', '29', 159353), (True, '2', '2', 159354), (True, '7', '7', 159355), (True, '2', '2', 159356), (True, '3', '3', 159357), (True, '9', '9', 159358), (True, '1', '1', 159359), (True, '1', '1', 159360), (True, '9', '9', 159361), (True, '2', '2', 159362), (True, '1', '1', 159363), (True, '5', '5', 159364), (True, '1', '1', 159365), (True, '6', '6', 159366), (True, '1', '1', 159367), (True, '101', '101', 159368), (True, '3', '3', 159369), (True, '991', '991', 159370), (True, '683', '683', 159371), (True, '991', '991', 159372), (True, '595', '595', 159373), (True, '4000', '4000', 159374), (True, '1', '1', 159375), (True, '3', '3', 159376), (True, '8', '8', 159377), (True, '5', '5', 159378), (True, '100', '100', 159379), (True, '5', '5', 159380), (True, '4', '4', 159381), (True, '111', '111', 159382), (True, '1999', '1999', 159383), (True, '2', '2', 159384), (True, '5', '5', 159385), (True, '27', '27', 159386), (True, '2000', '2000', 159387), (True, '1332', '1332', 159388), (True, '2', '2', 159389), (True, '2000', '2000', 159390), (True, '1999', '1999', 159391), (True, '564', '564', 159392), (True, '4', '4', 159393), (True, '10', '10', 159394), (True, '334', '334', 159395)]",True,Accecpted,0.940028651976138,0.973384030418251,False,0.0
1701964,25662090,"# Description of the problem can be found at http://codeforces.com/problemset/problem/189/A

n, a, b, c = map(int, input().split())
dp = [0] + [-1e9]*5000

for i in range(1, n + 1):
    print(i)
    dp[i] = max(dp[i - a], dp[i - b], dp[i - c]) + 1

print(dp[n])",541,4480,31,3/20/17 12:02,10,1520,2,8,"[(False, '1\n2\n3\n4\n5\n2', '2', 159338), (False, '1\n2\n3\n4\n5\n6\n7\n2', '2', 159339), (False, '1\n2\n3\n4\n1', '1', 159340), (False, '1\n1', '1', 159341), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n4000', '4000', 159342), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n1333', '1333', 159343), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n3', '3', 159344), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n2', '2', 159345), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n11', '11', 159346), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n9', '9', 159347), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n15', '15', 159348), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n7', '7', 159349), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n26', '26', 159350), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n370', '370', 159351), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n367', '367', 159352), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n29', '29', 159353), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n2', '2', 159354), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n7', '7', 159355), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n2', '2', 159356), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n3', '3', 159357), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n9', '9', 159358), (False, '1\n2\n3\n4\n5\n1', '1', 159359), (False, '1\n2\n3\n4\n5\n1', '1', 159360), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n9', '9', 159361), (False, '1\n2\n2', '2', 159362), (False, '1\n2\n3\n4\n1', '1', 159363), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n5', '5', 159364), (False, '1\n2\n1', '1', 159365), (False, '1\n2\n3\n4\n5\n6\n6', '6', 159366), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n1', '1', 159367), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n101', '101', 159368), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n3', '3', 159369), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n991', '991', 159370), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n683', '683', 159371), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n991', '991', 159372), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n595', '595', 159373), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n4000', '4000', 159374), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n1', '1', 159375), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n3', '3', 159376), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n8', '8', 159377), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n5', '5', 159378), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n100', '100', 159379), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n5', '5', 159380), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n4', '4', 159381), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n111', '111', 159382), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n1999', '1999', 159383), (False, '1\n2\n3\n4\n5\n6\n7\n8\n2', '2', 159384), (False, '1\n2\n3\n4\n5\n5', '5', 159385), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n27', '27', 159386), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n2000', '2000', 159387), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n1332', '1332', 159388), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n2', '2', 159389), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n2000', '2000', 159390), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n1999', '1999', 159391), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n564', '564', 159392), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n4', '4', 159393), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n10', '10', 159394), (False, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n334', '334', 159395)]",False,Wrong Answer,0.940028651976138,0.973384030418251,False,1.0
1945205,27238191,"# Description of the problem can be found at http://codeforces.com/problemset/problem/224/A

import math

v1, v2, v3 = map(int, input().split())

print(int(4*(math.sqrt(v1*v2 / v3) + math.sqrt(v2*v3 / v1) + math.sqrt(v1*v3 / v2))))",541,0,124,5/20/17 20:25,7,1738,1,8,"[(True, '12', '12', 173163), (True, '28', '28', 173164), (True, '68', '68', 173165), (True, '56', '56', 173166), (True, '184', '184', 173167), (True, '308', '308', 173168), (True, '380', '380', 173169), (True, '184', '184', 173170), (True, '444', '444', 173171), (True, '120', '120', 173172), (True, '40008', '40008', 173173), (True, '332', '332', 173174), (True, '528', '528', 173175), (True, '740', '740', 173176), (True, '60', '60', 173177), (True, '856', '856', 173178), (True, '336', '336', 173179), (True, '1308', '1308', 173180), (True, '1736', '1736', 173181), (True, '8964', '8964', 173182), (True, '16436', '16436', 173183), (True, '1200', '1200', 173184), (True, '14500', '14500', 173185), (True, '1188', '1188', 173186), (True, '40008', '40008', 173187), (True, '36', '36', 173188), (True, '1184', '1184', 173189)]",True,Accecpted,0.9635749534339606,0.978902953586498,False,0.0
1945204,27238170,"# Description of the problem can be found at http://codeforces.com/problemset/problem/224/A

import math

v1, v2, v3 = map(int, input().split())

print(int(4*(math.sqrt(v1*v2 / v3) + math.sqrt(v2*v3 / v1) + math.sqrt(v1*v3 / v3))))",541,0,122,5/20/17 20:23,7,1738,2,8,"[(True, '12', '12', 173163), (True, '28', '28', 173164), (False, '45', '68', 173165), (False, '32', '56', 173166), (False, '112', '184', 173167), (False, '282', '308', 173168), (False, '451', '380', 173169), (False, '172', '184', 173170), (False, '260', '444', 173171), (False, '132', '120', 173172), (True, '40008', '40008', 173173), (False, '378', '332', 173174), (False, '273', '528', 173175), (False, '830', '740', 173176), (False, '49', '60', 173177), (False, '135', '856', 173178), (False, '168', '336', 173179), (False, '1401', '1308', 173180), (True, '1736', '1736', 173181), (False, '9149', '8964', 173182), (False, '16688', '16436', 173183), (True, '1200', '1200', 173184), (False, '14736', '14500', 173185), (True, '1188', '1188', 173186), (False, '408', '40008', 173187), (True, '36', '36', 173188), (True, '1184', '1184', 173189)]",False,Wrong Answer,0.9635749534339606,0.978902953586498,False,0.7037037037037037
2054006,28915563,"# Description of the problem can be found at http://codeforces.com/problemset/problem/239/A

y, k, n = map(int, input().split())

a = k - y % k

if y + a <= n:
    if a == 0:
        print("" "".join(str(x) for x in [(t + 1) * k for t in range((n - y) // k)]))
    else:
        print("" "".join(str(x) for x in [a + t * k for t in range((n - y) // k + 1) if a + t * k + y <= n]))
else:
    print(-1)",541,12764,310,7/27/17 1:18,13,1819,1,8,"[(True, '-1', '-1', 179398), (True, '2 8 14 20 26', '2 8 14 20 26', 179399), (True, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 179400), (True, '-1', '-1', 179402), (True, '16 53', '16 53', 179403), (True, '-1', '-1', 179404), (True, '-1', '-1', 179405), (True, '-1', '-1', 179406), (True, '-1', '-1', 179407), (True, '-1', '-1', 179408), (True, '54 113 172 231 290', '54 113 172 231 290', 179409), (True, '8 77 146 215 284 353 422 491 560 629 698', '8 77 146 215 284 353 422 491 560 629 698', 179410), (True, '11 39 67 95 123 151 179 207 235 263 291 319 347 375 403 431 459 487 515', '11 39 67 95 123 151 179 207 235 263 291 319 347 375 403 431 459 487 515', 179411), (True, '-1', '-1', 179412), (True, '-1', '-1', 179413), (True, '-1', '-1', 179414), (True, '-1', '-1', 179415), (True, '500000000', '500000000', 179427), (True, '999999999', '999999999', 179428), (True, '-1', '-1', 179429), (True, '-1', '-1', 179430), (True, '100000006 200000013 300000020 400000027 500000034 600000041 700000048 800000055 900000062', '100000006 200000013 300000020 400000027 500000034 600000041 700000048 800000055 900000062', 179431), (True, '999999998', '999999998', 179432), (True, '900000000', '900000000', 179433), (True, '1', '1', 179434), (True, '-1', '-1', 179435), (True, '-1', '-1', 179436), (True, '500000000', '500000000', 179437), (True, '-1', '-1', 179438), (True, '2 4 6', '2 4 6', 179439), (True, '-1', '-1', 179440), (True, '-1', '-1', 179441), (True, '-1', '-1', 179442), (True, '-1', '-1', 179443), (True, '499999998', '499999998', 179444), (True, '999999996', '999999996', 179445)]",True,Accecpted,0.8192465794946455,0.9645569620253164,False,0.0
2054005,28915150,"# Description of the problem can be found at http://codeforces.com/problemset/problem/239/A

y, k, n = map(int, input().split())

a = k - y % k

if y + a <= n:
    if a == 0:
        print("" "".join(str(x) for x in [(t + 1) * k for t in range((n - y) // k)]))
    else:
        print("" "".join(str(x) for x in [a + t * k for t in range((n - y) // k)]))
else:
    print(-1)",541,12792,218,7/27/17 0:33,13,1819,2,8,"[(True, '-1', '-1', 179398), (True, '2 8 14 20 26', '2 8 14 20 26', 179399), (True, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 179400), (True, '-1', '-1', 179402), (True, '16 53', '16 53', 179403), (True, '-1', '-1', 179404), (True, '-1', '-1', 179405), (True, '-1', '-1', 179406), (True, '-1', '-1', 179407), (True, '-1', '-1', 179408), (True, '54 113 172 231 290', '54 113 172 231 290', 179409), (True, '8 77 146 215 284 353 422 491 560 629 698', '8 77 146 215 284 353 422 491 560 629 698', 179410), (False, '11 39 67 95 123 151 179 207 235 263 291 319 347 375 403 431 459 487', '11 39 67 95 123 151 179 207 235 263 291 319 347 375 403 431 459 487 515', 179411), (True, '-1', '-1', 179412), (True, '-1', '-1', 179413), (True, '-1', '-1', 179414), (True, '-1', '-1', 179415), (False, '', '500000000', 179427), (False, '', '999999999', 179428), (True, '-1', '-1', 179429), (True, '-1', '-1', 179430), (True, '100000006 200000013 300000020 400000027 500000034 600000041 700000048 800000055 900000062', '100000006 200000013 300000020 400000027 500000034 600000041 700000048 800000055 900000062', 179431), (True, '999999998', '999999998', 179432), (False, '', '900000000', 179433), (False, '', '1', 179434), (True, '-1', '-1', 179435), (True, '-1', '-1', 179436), (True, '500000000', '500000000', 179437), (True, '-1', '-1', 179438), (True, '2 4 6', '2 4 6', 179439), (True, '-1', '-1', 179440), (True, '-1', '-1', 179441), (True, '-1', '-1', 179442), (True, '-1', '-1', 179443), (True, '499999998', '499999998', 179444), (True, '999999996', '999999996', 179445)]",False,Wrong Answer,0.8192465794946455,0.9645569620253164,False,0.1388888888888889
3106745,27346107,"# Description of the problem can be found at http://codeforces.com/problemset/problem/779/B

n, k = input().split()
k = int(k)

n_z = 0
d = 0
for i in range(len(n)):
    if n[len(n) - i - 1] == ""0"":
        n_z += 1
        if n_z == k:
            print(d)
            quit()
    else:
        d += 1
print(len(n) - 1)",541,0,62,5/26/17 1:55,31,2656,1,8,"[(True, '1', '1', 225556), (True, '2', '2', 225557), (True, '3', '3', 225558), (True, '0', '0', 225559), (True, '0', '0', 225560), (True, '0', '0', 225561), (True, '2', '2', 225562), (True, '6', '6', 225563), (True, '0', '0', 225564), (True, '2', '2', 225565), (True, '0', '0', 225566), (True, '1', '1', 225567), (True, '1', '1', 225568), (True, '0', '0', 225569), (True, '2', '2', 225570), (True, '3', '3', 225571), (True, '0', '0', 225572), (True, '2', '2', 225573), (True, '4', '4', 225574), (True, '8', '8', 225575), (True, '8', '8', 225576), (True, '0', '0', 225577), (True, '9', '9', 225578), (True, '9', '9', 225579), (True, '0', '0', 225580), (True, '0', '0', 225581), (True, '0', '0', 225582), (True, '0', '0', 225583), (True, '0', '0', 225584), (True, '1', '1', 225585), (True, '2', '2', 225586), (True, '3', '3', 225587), (True, '4', '4', 225588), (True, '9', '9', 225589), (True, '9', '9', 225590), (True, '9', '9', 225591), (True, '9', '9', 225592), (True, '0', '0', 225593), (True, '0', '0', 225594), (True, '0', '0', 225595), (True, '1', '1', 225596), (True, '1', '1', 225597), (True, '1', '1', 225598), (True, '7', '7', 225599), (True, '7', '7', 225600), (True, '7', '7', 225601), (True, '1', '1', 225602), (True, '1', '1', 225603), (True, '1', '1', 225604), (True, '1', '1', 225605), (True, '1', '1', 225606), (True, '1', '1', 225607), (True, '9', '9', 225608), (True, '0', '0', 225609), (True, '2', '2', 225610), (True, '3', '3', 225611), (True, '0', '0', 225612), (True, '0', '0', 225613), (True, '0', '0', 225614), (True, '3', '3', 225615), (True, '0', '0', 225616), (True, '4', '4', 225617), (True, '6', '6', 225618), (True, '2', '2', 225619), (True, '5', '5', 225620), (True, '7', '7', 225621), (True, '0', '0', 225622), (True, '0', '0', 225623), (True, '3', '3', 225624), (True, '0', '0', 225625), (True, '0', '0', 225626), (True, '8', '8', 225627), (True, '0', '0', 225628), (True, '3', '3', 225629), (True, '6', '6', 225630), (True, '6', '6', 225631), (True, '4', '4', 225632), (True, '7', '7', 225633), (True, '2', '2', 225634), (True, '5', '5', 225635), (True, '6', '6', 225636), (True, '5', '5', 225637), (True, '2', '2', 225638), (True, '3', '3', 225639), (True, '5', '5', 225640), (True, '6', '6', 225641), (True, '5', '5', 225642), (True, '3', '3', 225643), (True, '6', '6', 225644), (True, '8', '8', 225645), (True, '2', '2', 225646), (True, '3', '3', 225647), (True, '3', '3', 225648), (True, '7', '7', 225649), (True, '7', '7', 225650), (True, '4', '4', 225651), (True, '6', '6', 225652), (True, '7', '7', 225653), (True, '3', '3', 225654), (True, '4', '4', 225655), (True, '4', '4', 225656), (True, '3', '3', 225657), (True, '8', '8', 225658), (True, '4', '4', 225659), (True, '4', '4', 225660), (True, '5', '5', 225661), (True, '4', '4', 225662), (True, '1', '1', 225663), (True, '5', '5', 225664), (True, '5', '5', 225665), (True, '4', '4', 225666), (True, '5', '5', 225667), (True, '6', '6', 225668), (True, '6', '6', 225669), (True, '6', '6', 225670), (True, '2', '2', 225671), (True, '5', '5', 225672), (True, '4', '4', 225673), (True, '2', '2', 225674), (True, '3', '3', 225675), (True, '5', '5', 225676), (True, '4', '4', 225677), (True, '4', '4', 225678), (True, '4', '4', 225679), (True, '9', '9', 225680), (True, '5', '5', 225681), (True, '2', '2', 225682), (True, '5', '5', 225683), (True, '6', '6', 225684), (True, '9', '9', 225685), (True, '4', '4', 225686), (True, '2', '2', 225687), (True, '5', '5', 225688), (True, '4', '4', 225689), (True, '7', '7', 225690), (True, '3', '3', 225691), (True, '5', '5', 225692), (True, '6', '6', 225693), (True, '4', '4', 225694), (True, '1', '1', 225695), (True, '6', '6', 225696), (True, '4', '4', 225697), (True, '4', '4', 225698), (True, '6', '6', 225699), (True, '4', '4', 225700), (True, '7', '7', 225701), (True, '6', '6', 225702), (True, '4', '4', 225703), (True, '4', '4', 225704), (True, '7', '7', 225705), (True, '5', '5', 225706), (True, '3', '3', 225707), (True, '2', '2', 225708), (True, '1', '1', 225709), (True, '6', '6', 225710), (True, '3', '3', 225711), (True, '6', '6', 225712), (True, '3', '3', 225713), (True, '5', '5', 225714), (True, '5', '5', 225715), (True, '4', '4', 225716)]",True,Accecpted,0.8488007712828832,0.8988173455978975,False,0.0
3106744,27346092,"# Description of the problem can be found at http://codeforces.com/problemset/problem/779/B

n, k = input().split()
k = int(k)

n_z = 0
d = 0
for i in range(len(n)):
    if n[len(n) - i - 1] == ""0"":
        n_z += 1
        if n_z == k:
            print(d)
            quit()
    else:
        d += 1
        if i == len(n) - 1:
            print(len(n) - 1)
            quit()",541,0,61,5/26/17 1:53,35,2656,2,8,"[(True, '1', '1', 225556), (True, '2', '2', 225557), (True, '3', '3', 225558), (True, '0', '0', 225559), (False, '', '0', 225560), (True, '0', '0', 225561), (True, '2', '2', 225562), (True, '6', '6', 225563), (True, '0', '0', 225564), (True, '2', '2', 225565), (True, '0', '0', 225566), (True, '1', '1', 225567), (True, '1', '1', 225568), (True, '0', '0', 225569), (True, '2', '2', 225570), (True, '3', '3', 225571), (True, '0', '0', 225572), (True, '2', '2', 225573), (True, '4', '4', 225574), (True, '8', '8', 225575), (True, '8', '8', 225576), (True, '0', '0', 225577), (True, '9', '9', 225578), (True, '9', '9', 225579), (True, '0', '0', 225580), (True, '0', '0', 225581), (True, '0', '0', 225582), (True, '0', '0', 225583), (True, '0', '0', 225584), (True, '1', '1', 225585), (True, '2', '2', 225586), (True, '3', '3', 225587), (True, '4', '4', 225588), (True, '9', '9', 225589), (True, '9', '9', 225590), (True, '9', '9', 225591), (True, '9', '9', 225592), (True, '0', '0', 225593), (True, '0', '0', 225594), (True, '0', '0', 225595), (True, '1', '1', 225596), (True, '1', '1', 225597), (True, '1', '1', 225598), (True, '7', '7', 225599), (True, '7', '7', 225600), (True, '7', '7', 225601), (True, '1', '1', 225602), (True, '1', '1', 225603), (True, '1', '1', 225604), (True, '1', '1', 225605), (True, '1', '1', 225606), (True, '1', '1', 225607), (True, '9', '9', 225608), (True, '0', '0', 225609), (True, '2', '2', 225610), (True, '3', '3', 225611), (True, '0', '0', 225612), (True, '0', '0', 225613), (True, '0', '0', 225614), (True, '3', '3', 225615), (True, '0', '0', 225616), (True, '4', '4', 225617), (True, '6', '6', 225618), (True, '2', '2', 225619), (True, '5', '5', 225620), (True, '7', '7', 225621), (True, '0', '0', 225622), (True, '0', '0', 225623), (True, '3', '3', 225624), (True, '0', '0', 225625), (True, '0', '0', 225626), (True, '8', '8', 225627), (True, '0', '0', 225628), (True, '3', '3', 225629), (True, '6', '6', 225630), (True, '6', '6', 225631), (True, '4', '4', 225632), (True, '7', '7', 225633), (True, '2', '2', 225634), (True, '5', '5', 225635), (True, '6', '6', 225636), (True, '5', '5', 225637), (True, '2', '2', 225638), (True, '3', '3', 225639), (True, '5', '5', 225640), (True, '6', '6', 225641), (True, '5', '5', 225642), (True, '3', '3', 225643), (True, '6', '6', 225644), (True, '8', '8', 225645), (True, '2', '2', 225646), (True, '3', '3', 225647), (True, '3', '3', 225648), (True, '7', '7', 225649), (True, '7', '7', 225650), (True, '4', '4', 225651), (True, '6', '6', 225652), (True, '7', '7', 225653), (True, '3', '3', 225654), (True, '4', '4', 225655), (True, '4', '4', 225656), (True, '3', '3', 225657), (True, '8', '8', 225658), (True, '4', '4', 225659), (True, '4', '4', 225660), (True, '5', '5', 225661), (True, '4', '4', 225662), (True, '1', '1', 225663), (True, '5', '5', 225664), (True, '5', '5', 225665), (True, '4', '4', 225666), (True, '5', '5', 225667), (True, '6', '6', 225668), (True, '6', '6', 225669), (True, '6', '6', 225670), (True, '2', '2', 225671), (True, '5', '5', 225672), (True, '4', '4', 225673), (True, '2', '2', 225674), (True, '3', '3', 225675), (True, '5', '5', 225676), (True, '4', '4', 225677), (True, '4', '4', 225678), (True, '4', '4', 225679), (True, '9', '9', 225680), (True, '5', '5', 225681), (True, '2', '2', 225682), (True, '5', '5', 225683), (True, '6', '6', 225684), (True, '9', '9', 225685), (True, '4', '4', 225686), (True, '2', '2', 225687), (True, '5', '5', 225688), (True, '4', '4', 225689), (True, '7', '7', 225690), (True, '3', '3', 225691), (True, '5', '5', 225692), (True, '6', '6', 225693), (True, '4', '4', 225694), (True, '1', '1', 225695), (True, '6', '6', 225696), (True, '4', '4', 225697), (True, '4', '4', 225698), (True, '6', '6', 225699), (True, '4', '4', 225700), (True, '7', '7', 225701), (True, '6', '6', 225702), (True, '4', '4', 225703), (True, '4', '4', 225704), (True, '7', '7', 225705), (True, '5', '5', 225706), (True, '3', '3', 225707), (True, '2', '2', 225708), (True, '1', '1', 225709), (True, '6', '6', 225710), (True, '3', '3', 225711), (True, '6', '6', 225712), (True, '3', '3', 225713), (True, '5', '5', 225714), (True, '5', '5', 225715), (True, '4', '4', 225716)]",False,Wrong Answer,0.8488007712828832,0.8988173455978975,False,0.0062111801242236
3236749,28938664,"# Description of the problem can be found at http://codeforces.com/problemset/problem/801/A

s = input()
count = s.count('VK')
if ""VV"" in s.replace(""VK"", ""-"") or ""KK"" in s.replace(""VK"", ""-""):
    count += 1
print(count)",541,4524,77,7/28/17 1:02,13,2785,1,8,"[(True, '1', '1', 235946), (True, '1', '1', 235947), (True, '0', '0', 235948), (True, '3', '3', 235949), (True, '1', '1', 235950), (True, '5', '5', 235951), (True, '14', '14', 235952), (True, '32', '32', 235953), (True, '32', '32', 235954), (True, '21', '21', 235955), (True, '25', '25', 235956), (True, '7', '7', 235957), (True, '24', '24', 235958), (True, '35', '35', 235959), (True, '9', '9', 235960), (True, '6', '6', 235961), (True, '9', '9', 235962), (True, '22', '22', 235963), (True, '25', '25', 235964), (True, '29', '29', 235965), (True, '3', '3', 235966), (True, '16', '16', 235967), (True, '13', '13', 235968), (True, '26', '26', 235969), (True, '26', '26', 235970), (True, '0', '0', 235971), (True, '2', '2', 235972), (True, '2', '2', 235973), (True, '0', '0', 235974), (True, '1', '1', 235975), (True, '2', '2', 235976), (True, '1', '1', 235977), (True, '1', '1', 235978), (True, '3', '3', 235979), (True, '2', '2', 235980), (True, '2', '2', 235981), (True, '1', '1', 235982), (True, '1', '1', 235983), (True, '2', '2', 235984), (True, '1', '1', 235985), (True, '8', '8', 235986), (True, '2', '2', 235987), (True, '2', '2', 235988), (True, '1', '1', 235989), (True, '1', '1', 235990), (True, '3', '3', 235991), (True, '1', '1', 235992), (True, '1', '1', 235993), (True, '1', '1', 235994), (True, '2', '2', 235995), (True, '3', '3', 235996), (True, '1', '1', 235997), (True, '2', '2', 235998), (True, '2', '2', 235999), (True, '2', '2', 236000), (True, '1', '1', 236001), (True, '10', '10', 236002), (True, '3', '3', 236003), (True, '3', '3', 236004), (True, '1', '1', 236005), (True, '1', '1', 236006), (True, '3', '3', 236007), (True, '3', '3', 236008)]",True,Accecpted,0.1340450328645592,0.3110571081409477,False,0.0
3236748,28938633,"# Description of the problem can be found at http://codeforces.com/problemset/problem/801/A

s = input()
b = 0
b_i = -1

for (i, c) in enumerate(s):
    t = 0
    if i > 0:
        if s[i - 1] == s[i]:
            t += 1
            if i < len(s) - 1 and s[i + 1] != s[i]:
                t -= 1
            else:
                t += 1
        if t > b:
            b_i = i
            b = t
if b_i != -1:
    print((s[0:b_i] + (""V"" if s[b_i] == ""K"" else ""K"") + ("""" if b_i == len(s) - 1 else s[b_i + 1:])).count(""VK""))
else:
    print(s.count(""VK""))",541,4516,62,7/28/17 0:57,43,2785,2,8,"[(True, '1', '1', 235946), (True, '1', '1', 235947), (True, '0', '0', 235948), (True, '3', '3', 235949), (True, '1', '1', 235950), (True, '5', '5', 235951), (True, '14', '14', 235952), (True, '32', '32', 235953), (True, '32', '32', 235954), (True, '21', '21', 235955), (True, '25', '25', 235956), (False, '6', '7', 235957), (True, '24', '24', 235958), (True, '35', '35', 235959), (True, '9', '9', 235960), (True, '6', '6', 235961), (True, '9', '9', 235962), (True, '22', '22', 235963), (True, '25', '25', 235964), (True, '29', '29', 235965), (True, '3', '3', 235966), (True, '16', '16', 235967), (True, '13', '13', 235968), (True, '26', '26', 235969), (True, '26', '26', 235970), (True, '0', '0', 235971), (True, '2', '2', 235972), (True, '2', '2', 235973), (True, '0', '0', 235974), (False, '0', '1', 235975), (False, '1', '2', 235976), (True, '1', '1', 235977), (False, '0', '1', 235978), (False, '2', '3', 235979), (True, '2', '2', 235980), (True, '2', '2', 235981), (True, '1', '1', 235982), (True, '1', '1', 235983), (False, '1', '2', 235984), (True, '1', '1', 235985), (True, '8', '8', 235986), (True, '2', '2', 235987), (True, '2', '2', 235988), (True, '1', '1', 235989), (True, '1', '1', 235990), (True, '3', '3', 235991), (True, '1', '1', 235992), (True, '1', '1', 235993), (True, '1', '1', 235994), (True, '2', '2', 235995), (True, '3', '3', 235996), (True, '1', '1', 235997), (True, '2', '2', 235998), (True, '2', '2', 235999), (False, '1', '2', 236000), (True, '1', '1', 236001), (True, '10', '10', 236002), (True, '3', '3', 236003), (True, '3', '3', 236004), (True, '1', '1', 236005), (True, '1', '1', 236006), (True, '3', '3', 236007), (True, '3', '3', 236008)]",False,Wrong Answer,0.1340450328645592,0.3110571081409477,False,0.1111111111111111
3395578,29273054,"# Description of the problem can be found at http://codeforces.com/problemset/problem/832/A

import math

n, k = map(int, input().split())

if (n // k) & 1 == 1:
    print(""YES"")
else:
    print(""NO"")",541,4516,62,8/8/17 0:08,19,2952,1,8,"[(True, 'YES', 'YES', 248376), (True, 'NO', 'NO', 248377), (True, 'YES', 'YES', 248378), (True, 'NO', 'NO', 248379), (True, 'NO', 'NO', 248380), (True, 'YES', 'YES', 248381), (True, 'YES', 'YES', 248382), (True, 'YES', 'YES', 248383), (True, 'NO', 'NO', 248384), (True, 'YES', 'YES', 248385), (True, 'YES', 'YES', 248386), (True, 'NO', 'NO', 248387), (True, 'NO', 'NO', 248388), (True, 'NO', 'NO', 248389), (True, 'YES', 'YES', 248390), (True, 'NO', 'NO', 248391), (True, 'YES', 'YES', 248392), (True, 'YES', 'YES', 248393), (True, 'YES', 'YES', 248394), (True, 'NO', 'NO', 248395), (True, 'YES', 'YES', 248396), (True, 'YES', 'YES', 248397), (True, 'NO', 'NO', 248398), (True, 'NO', 'NO', 248399), (True, 'NO', 'NO', 248400), (True, 'YES', 'YES', 248401), (True, 'NO', 'NO', 248402), (True, 'YES', 'YES', 248403), (True, 'YES', 'YES', 248404), (True, 'YES', 'YES', 248405), (True, 'NO', 'NO', 248406), (True, 'YES', 'YES', 248407), (True, 'YES', 'YES', 248408), (True, 'NO', 'NO', 248409), (True, 'YES', 'YES', 248410), (True, 'YES', 'YES', 248411), (True, 'YES', 'YES', 248412), (True, 'NO', 'NO', 248413), (True, 'YES', 'YES', 248414), (True, 'NO', 'NO', 248415), (True, 'NO', 'NO', 248416), (True, 'YES', 'YES', 248417), (True, 'NO', 'NO', 248418), (True, 'YES', 'YES', 248419), (True, 'NO', 'NO', 248420), (True, 'YES', 'YES', 248421), (True, 'NO', 'NO', 248422), (True, 'YES', 'YES', 248423), (True, 'NO', 'NO', 248424), (True, 'NO', 'NO', 248425), (True, 'YES', 'YES', 248426), (True, 'NO', 'NO', 248427), (True, 'YES', 'YES', 248428), (True, 'YES', 'YES', 248429), (True, 'YES', 'YES', 248430), (True, 'NO', 'NO', 248431), (True, 'YES', 'YES', 248432), (True, 'YES', 'YES', 248433), (True, 'YES', 'YES', 248434), (True, 'YES', 'YES', 248435), (True, 'YES', 'YES', 248436), (True, 'YES', 'YES', 248437)]",True,Accecpted,0.7519120362124232,0.9571106094808126,False,0.0
3395577,29273029,"# Description of the problem can be found at http://codeforces.com/problemset/problem/832/A

import math

n, k = map(int, input().split())

if math.floor(n / k)&1 == 1:
    print(""YES"")
else:
    print(""NO"")",541,4524,77,8/8/17 0:06,19,2952,2,8,"[(True, 'YES', 'YES', 248376), (True, 'NO', 'NO', 248377), (True, 'YES', 'YES', 248378), (True, 'NO', 'NO', 248379), (True, 'NO', 'NO', 248380), (True, 'YES', 'YES', 248381), (True, 'YES', 'YES', 248382), (True, 'YES', 'YES', 248383), (True, 'NO', 'NO', 248384), (True, 'YES', 'YES', 248385), (True, 'YES', 'YES', 248386), (True, 'NO', 'NO', 248387), (True, 'NO', 'NO', 248388), (True, 'NO', 'NO', 248389), (True, 'YES', 'YES', 248390), (True, 'NO', 'NO', 248391), (True, 'YES', 'YES', 248392), (True, 'YES', 'YES', 248393), (True, 'YES', 'YES', 248394), (True, 'NO', 'NO', 248395), (True, 'YES', 'YES', 248396), (True, 'YES', 'YES', 248397), (True, 'NO', 'NO', 248398), (True, 'NO', 'NO', 248399), (True, 'NO', 'NO', 248400), (True, 'YES', 'YES', 248401), (True, 'NO', 'NO', 248402), (True, 'YES', 'YES', 248403), (True, 'YES', 'YES', 248404), (True, 'YES', 'YES', 248405), (True, 'NO', 'NO', 248406), (True, 'YES', 'YES', 248407), (True, 'YES', 'YES', 248408), (True, 'NO', 'NO', 248409), (True, 'YES', 'YES', 248410), (True, 'YES', 'YES', 248411), (True, 'YES', 'YES', 248412), (True, 'NO', 'NO', 248413), (True, 'YES', 'YES', 248414), (True, 'NO', 'NO', 248415), (True, 'NO', 'NO', 248416), (False, 'NO', 'YES', 248417), (True, 'NO', 'NO', 248418), (True, 'YES', 'YES', 248419), (True, 'NO', 'NO', 248420), (True, 'YES', 'YES', 248421), (True, 'NO', 'NO', 248422), (True, 'YES', 'YES', 248423), (True, 'NO', 'NO', 248424), (True, 'NO', 'NO', 248425), (True, 'YES', 'YES', 248426), (True, 'NO', 'NO', 248427), (True, 'YES', 'YES', 248428), (False, 'NO', 'YES', 248429), (True, 'YES', 'YES', 248430), (True, 'NO', 'NO', 248431), (False, 'NO', 'YES', 248432), (True, 'YES', 'YES', 248433), (True, 'YES', 'YES', 248434), (True, 'YES', 'YES', 248435), (True, 'YES', 'YES', 248436), (False, 'NO', 'YES', 248437)]",False,Wrong Answer,0.7519120362124232,0.9571106094808126,False,0.064516129032258
1373,25087046,"a, b = map(int, input().split())
print(min(a, b), abs(a - b) // 2)",542,4532,62,2/27/17 22:36,3,2,1,8,"[(True, '1 1', '1 1', 47757), (True, '2 0', '2 0', 47758), (True, '3 2', '3 2', 47759), (True, '100 0', '100 0', 47760), (True, '4 3', '4 3', 47761), (True, '6 2', '6 2', 47762), (True, '6 2', '6 2', 47763), (True, '10 15', '10 15', 47764), (True, '11 22', '11 22', 47765), (True, '30 2', '30 2', 47766), (True, '33 0', '33 0', 47767), (True, '45 27', '45 27', 47768), (True, '23 38', '23 38', 47769), (True, '12 16', '12 16', 47770), (True, '1 0', '1 0', 47771), (True, '1 49', '1 49', 47772), (True, '1 49', '1 49', 47773), (True, '59 4', '59 4', 47774), (True, '45 27', '45 27', 47775), (True, '99 0', '99 0', 47776), (True, '98 1', '98 1', 47777), (True, '12 23', '12 23', 47778), (True, '4 41', '4 41', 47779), (True, '21 23', '21 23', 47780), (True, '11 44', '11 44', 47781), (True, '10 45', '10 45', 47782), (True, '15 15', '15 15', 47783), (True, '11 10', '11 10', 47784), (True, '34 31', '34 31', 47785), (True, '89 0', '89 0', 47786)]",True,Accecpted,0.6162607099729586,0.9645390070921984,False,0.0
1372,25087043,"a, b = map(int, input().split())
print(min(a, b) // 2, abs(a - b) // 2)",542,4520,46,2/27/17 22:36,3,2,2,8,"[(False, '0 1', '1 1', 47757), (False, '1 0', '2 0', 47758), (False, '1 2', '3 2', 47759), (False, '50 0', '100 0', 47760), (False, '2 3', '4 3', 47761), (False, '3 2', '6 2', 47762), (False, '3 2', '6 2', 47763), (False, '5 15', '10 15', 47764), (False, '5 22', '11 22', 47765), (False, '15 2', '30 2', 47766), (False, '16 0', '33 0', 47767), (False, '22 27', '45 27', 47768), (False, '11 38', '23 38', 47769), (False, '6 16', '12 16', 47770), (False, '0 0', '1 0', 47771), (False, '0 49', '1 49', 47772), (False, '0 49', '1 49', 47773), (False, '29 4', '59 4', 47774), (False, '22 27', '45 27', 47775), (False, '49 0', '99 0', 47776), (False, '49 1', '98 1', 47777), (False, '6 23', '12 23', 47778), (False, '2 41', '4 41', 47779), (False, '10 23', '21 23', 47780), (False, '5 44', '11 44', 47781), (False, '5 45', '10 45', 47782), (False, '7 15', '15 15', 47783), (False, '5 10', '11 10', 47784), (False, '17 31', '34 31', 47785), (False, '44 0', '89 0', 47786)]",False,Wrong Answer,0.6162607099729586,0.9645390070921984,False,1.0
120841,25088007,"a, b, c = sorted(list(map(int, input().split())))
print(min(a + b << 1, a + b + c))",542,4520,62,2/27/17 23:29,3,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,6.3597993332323924e-232,0.7333333333333333,False,0.0
120840,25087956,"a = list(map(int, input().split()))
print(sum(a) - max(a) << 1)",542,4468,61,2/27/17 23:27,3,102,2,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (False, '3108', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (False, '602200', '601800', 55896), (False, '1273904', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (False, '400000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",False,Wrong Answer,6.3597993332323924e-232,0.7333333333333333,False,0.1904761904761904
720098,25087155,"n = int(input())
for i in range(n):
  if i % 2:
    print('I love', end=' ')
  else:
    print('I hate', end=' ')
  if i + 1 < n:
    print('that', end=' ')
  else:
    print('it')",542,4528,62,2/27/17 22:43,19,668,1,8,"[(True, 'I hate it', 'I hate it', 100802), (True, 'I hate that I love it', 'I hate that I love it', 100803), (True, 'I hate that I love that I hate it', 'I hate that I love that I hate it', 100804), (True, 'I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love it', 100805), (True, 'I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate it', 100806), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100807), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100808), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100809), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100819), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100820)]",True,Accecpted,0.5382016184924698,0.926829268292683,False,0.0
720097,25087151,"n = int(input())
for i in range(n):
  if i % 2:
    print('I love')
  else:
    print('I hate')
  if i + 1 < n:
    print('that')
  else:
    print('it')",542,4460,30,2/27/17 22:43,19,668,2,8,"[(False, 'I hate\nit', 'I hate it', 100802), (False, 'I hate\nthat\nI love\nit', 'I hate that I love it', 100803), (False, 'I hate\nthat\nI love\nthat\nI hate\nit', 'I hate that I love that I hate it', 100804), (False, 'I hate\nthat\nI love\nthat\nI hate\nthat\nI love\nit', 'I hate that I love that I hate that I love it', 100805), (False, 'I hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nit', 'I hate that I love that I hate that I love that I hate it', 100806), (False, 'I hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nit', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100807), (False, 'I hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nit', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100808), (False, 'I hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nit', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100809), (False, 'I hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nit', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100819), (False, 'I hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nthat\nI hate\nthat\nI love\nit', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100820)]",False,Wrong Answer,0.5382016184924698,0.926829268292683,False,1.0
1440240,25088131,"a = int(input())
r = 0
for x in sorted(map(int, input().split()))[::-1]:
  if a > 0:
    a -= x
    r += 1
print(r if a <= 0 else -1)",542,4536,124,2/27/17 23:37,7,1280,1,8,"[(True, '2', '2', 148162), (True, '0', '0', 148163), (True, '3', '3', 148164), (True, '1', '1', 148165), (True, '1', '1', 148166), (True, '6', '6', 148167), (True, '-1', '-1', 148168), (True, '0', '0', 148169), (True, '1', '1', 148170), (True, '2', '2', 148171), (True, '3', '3', 148172), (True, '4', '4', 148173), (True, '5', '5', 148174), (True, '6', '6', 148175), (True, '7', '7', 148176), (True, '8', '8', 148177), (True, '9', '9', 148178), (True, '9', '9', 148179), (True, '9', '9', 148180), (True, '11', '11', 148181), (True, '5', '5', 148182), (True, '6', '6', 148183), (True, '7', '7', 148184), (True, '6', '6', 148185), (True, '7', '7', 148186), (True, '9', '9', 148187), (True, '11', '11', 148188), (True, '11', '11', 148189), (True, '-1', '-1', 148190), (True, '-1', '-1', 148191), (True, '-1', '-1', 148192), (True, '0', '0', 148193), (True, '-1', '-1', 148194), (True, '0', '0', 148195), (True, '1', '1', 148196), (True, '12', '12', 148197), (True, '12', '12', 148198), (True, '6', '6', 148199), (True, '-1', '-1', 148200)]",True,Accecpted,0.7240499142831394,0.9307692307692308,False,0.0
1440239,25088130,"a = int(input())
r = 0
for x in sorted(map(int, input().split()))[::-1]:
  if a > 0:
    a -= x
    r += 1
print(r)",542,4472,122,2/27/17 23:37,7,1280,2,8,"[(True, '2', '2', 148162), (True, '0', '0', 148163), (True, '3', '3', 148164), (True, '1', '1', 148165), (True, '1', '1', 148166), (True, '6', '6', 148167), (False, '12', '-1', 148168), (True, '0', '0', 148169), (True, '1', '1', 148170), (True, '2', '2', 148171), (True, '3', '3', 148172), (True, '4', '4', 148173), (True, '5', '5', 148174), (True, '6', '6', 148175), (True, '7', '7', 148176), (True, '8', '8', 148177), (True, '9', '9', 148178), (True, '9', '9', 148179), (True, '9', '9', 148180), (True, '11', '11', 148181), (True, '5', '5', 148182), (True, '6', '6', 148183), (True, '7', '7', 148184), (True, '6', '6', 148185), (True, '7', '7', 148186), (True, '9', '9', 148187), (True, '11', '11', 148188), (True, '11', '11', 148189), (False, '12', '-1', 148190), (False, '12', '-1', 148191), (False, '12', '-1', 148192), (True, '0', '0', 148193), (False, '12', '-1', 148194), (True, '0', '0', 148195), (True, '1', '1', 148196), (True, '12', '12', 148197), (True, '12', '12', 148198), (True, '6', '6', 148199), (False, '12', '-1', 148200)]",False,Wrong Answer,0.7240499142831394,0.9307692307692308,False,0.1538461538461538
2726538,25086667,"a = input()
print(a.upper() if sum(a.count(x) for x in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') * 2 > len(a) else a.lower())",542,4524,124,2/27/17 22:17,2,2340,1,8,"[(True, 'house', 'house', 209205), (True, 'VIP', 'VIP', 209206), (True, 'matrix', 'matrix', 209207), (True, 'bnhwpnpawg', 'bnhwpnpawg', 209208), (True, 'VTYGP', 'VTYGP', 209209), (True, 'chnenu', 'chnenu', 209210), (True, 'erpzgrodyu', 'erpzgrodyu', 209211), (True, 'KSXBXWPEBH', 'KSXBXWPEBH', 209212), (True, 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv', 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv', 209213), (True, 'amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd', 'amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd', 209214), (True, 'isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv', 'isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv', 209215), (True, 'xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg', 'xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg', 209216), (True, 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK', 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK', 209217), (True, 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW', 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW', 209218), (True, 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB', 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB', 209219), (True, 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge', 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge', 209220), (True, 'ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw', 'ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw', 209221), (True, 'yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks', 'yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks', 209222), (True, 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ', 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ', 209223), (True, 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG', 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG', 209224), (True, 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO', 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO', 209225), (True, 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD', 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD', 209226), (True, 'ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas', 'ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas', 209227), (True, 'AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM', 'AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM', 209228), (True, 'dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn', 'dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn', 209229), (True, 't', 't', 209230), (True, 'N', 'N', 209231), (True, 'kv', 'kv', 209232), (True, 'ur', 'ur', 209233), (True, 'CN', 'CN', 209234)]",True,Accecpted,0.0,0.2352941176470588,False,0.0
2726537,25086637,print(input().lower()),542,4468,92,2/27/17 22:16,1,2340,2,8,"[(True, 'house', 'house', 209205), (False, 'vip', 'VIP', 209206), (True, 'matrix', 'matrix', 209207), (True, 'bnhwpnpawg', 'bnhwpnpawg', 209208), (False, 'vtygp', 'VTYGP', 209209), (True, 'chnenu', 'chnenu', 209210), (True, 'erpzgrodyu', 'erpzgrodyu', 209211), (False, 'ksxbxwpebh', 'KSXBXWPEBH', 209212), (True, 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv', 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv', 209213), (True, 'amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd', 'amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd', 209214), (True, 'isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv', 'isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv', 209215), (True, 'xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg', 'xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg', 209216), (False, 'rjiqzmjcimsndbohbrawienodsaletakgkpyufgvefgcbrenzgadkcetqjljtmttlonpekcovdzebzdkzggwfsxhapmjkdbuceak', 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK', 209217), (False, 'dwlwobhnmmgtfolfaeckbrnnglylydxtgtvrlmeeszoiuatzzzxufuzdlsjxmevrtessfbwlnzzclcqwevnnucxyvhngnxhcbdfw', 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW', 209218), (False, 'nycnhjwgbocotspetkkhvwfgaqynhovjwjhciefouqzxoyuieqdzalfktehtvdbvjmeubjubcmnvpwgdpnchqhzjrchyrfpvigub', 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB', 209219), (True, 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge', 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge', 209220), (True, 'ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw', 'ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw', 209221), (True, 'yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks', 'yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks', 209222), (False, 'cdozdpbvvvhnbjvbyheoxwfljkrwjcajmifcozwwyfkvwogtvjcuusigdqfkumewjtdyitveeiaybwrhomrwmpdipjwiuxfnwuz', 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ', 209223), (False, 'whiuvexhvooijidvjvpqubjmevpmpdkqwjkfbzsgskuxmippmjwuckzcpxosodcjaaakvlxpbiigsiauviilylnnqlyucziihqg', 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG', 209224), (False, 'vghunfoxketuymzdjngtaoioanyxsgynfogoffldaweukyfozxcjtcafxzylqzeryzlrsqxyqgapcsudpmeytnctttmfagvdwbo', 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO', 209225), (False, 'eduanhcqdocjhfonttswbujsttixbixmaiufsgflxwayiurtvavzpyqdlawigclmphxcefcjpfaahxvngqufnhadaiuazidmhdd', 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD', 209226), (True, 'ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas', 'ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas', 209227), (False, 'aornndktrlrvgdpxjkxftpfpopuzrlqumrxssskvbm', 'AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM', 209228), (True, 'dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn', 'dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn', 209229), (True, 't', 't', 209230), (False, 'n', 'N', 209231), (True, 'kv', 'kv', 209232), (True, 'ur', 'ur', 209233), (False, 'cn', 'CN', 209234)]",False,Wrong Answer,0.0,0.2352941176470588,False,0.4333333333333333
1327012,28317006,"word = input()
check = False
for i in range(0,len(word)):
    if word[i] =='H' or word[i]=='Q'or word[i] =='9':
        check = True
if check == True :print('YES')
else:print('NO')",616,5440,124,7/6/17 8:44,7,1198,1,8,"[(True, 'YES', 'YES', 142021), (True, 'NO', 'NO', 142022), (True, 'NO', 'NO', 142023), (True, 'NO', 'NO', 142024), (True, 'YES', 'YES', 142025), (True, 'YES', 'YES', 142026), (True, 'YES', 'YES', 142027), (True, 'NO', 'NO', 142028), (True, 'NO', 'NO', 142029), (True, 'YES', 'YES', 142030), (True, 'YES', 'YES', 142031), (True, 'NO', 'NO', 142032), (True, 'YES', 'YES', 142033), (True, 'YES', 'YES', 142034), (True, 'YES', 'YES', 142035), (True, 'NO', 'NO', 142036), (True, 'YES', 'YES', 142037), (True, 'YES', 'YES', 142038), (True, 'YES', 'YES', 142039), (True, 'YES', 'YES', 142040), (True, 'YES', 'YES', 142041), (True, 'YES', 'YES', 142042), (True, 'NO', 'NO', 142043), (True, 'YES', 'YES', 142044), (True, 'YES', 'YES', 142045), (True, 'NO', 'NO', 142046), (True, 'YES', 'YES', 142047), (True, 'YES', 'YES', 142048), (True, 'NO', 'NO', 142049), (True, 'YES', 'YES', 142050), (True, 'YES', 'YES', 142051), (True, 'NO', 'NO', 142052), (True, 'YES', 'YES', 142053), (True, 'YES', 'YES', 142054), (True, 'YES', 'YES', 142055), (True, 'NO', 'NO', 142056), (True, 'YES', 'YES', 142057), (True, 'YES', 'YES', 142058), (True, 'YES', 'YES', 142059), (True, 'YES', 'YES', 142060), (True, 'YES', 'YES', 142061), (True, 'NO', 'NO', 142062), (True, 'YES', 'YES', 142063), (True, 'YES', 'YES', 142064), (True, 'YES', 'YES', 142065), (True, 'YES', 'YES', 142066), (True, 'YES', 'YES', 142067), (True, 'YES', 'YES', 142068), (True, 'NO', 'NO', 142069), (True, 'YES', 'YES', 142070), (True, 'YES', 'YES', 142071), (True, 'YES', 'YES', 142072), (True, 'NO', 'NO', 142073), (True, 'YES', 'YES', 142074), (True, 'YES', 'YES', 142075), (True, 'NO', 'NO', 142076), (True, 'YES', 'YES', 142077), (True, 'YES', 'YES', 142078), (True, 'YES', 'YES', 142079), (True, 'YES', 'YES', 142080), (True, 'YES', 'YES', 142081), (True, 'YES', 'YES', 142082), (True, 'YES', 'YES', 142083), (True, 'YES', 'YES', 142084), (True, 'NO', 'NO', 142085), (True, 'NO', 'NO', 142086), (True, 'NO', 'NO', 142087), (True, 'YES', 'YES', 142088), (True, 'YES', 'YES', 142089), (True, 'NO', 'NO', 142090), (True, 'NO', 'NO', 142091), (True, 'NO', 'NO', 142092), (True, 'NO', 'NO', 142093), (True, 'YES', 'YES', 142094), (True, 'NO', 'NO', 142095), (True, 'NO', 'NO', 142096), (True, 'NO', 'NO', 142097), (True, 'NO', 'NO', 142098), (True, 'NO', 'NO', 142099), (True, 'YES', 'YES', 142100), (True, 'YES', 'YES', 142101), (True, 'NO', 'NO', 142102), (True, 'YES', 'YES', 142103), (True, 'YES', 'YES', 142104), (True, 'NO', 'NO', 142105)]",True,Accecpted,0.8266114125804572,0.9587628865979382,False,0.0
1327010,28316982,"word = input()
check = False
for i in range(0,len(word)):
    if word[i] =='H' or word[i]=='Q'or word[i] =='9' or word[i]=='+':
        check = True
if check == True :print('YES')
else:print('NO')",616,5404,92,7/6/17 8:43,7,1198,2,8,"[(True, 'YES', 'YES', 142021), (True, 'NO', 'NO', 142022), (False, 'YES', 'NO', 142023), (True, 'NO', 'NO', 142024), (True, 'YES', 'YES', 142025), (True, 'YES', 'YES', 142026), (True, 'YES', 'YES', 142027), (False, 'YES', 'NO', 142028), (True, 'NO', 'NO', 142029), (True, 'YES', 'YES', 142030), (True, 'YES', 'YES', 142031), (True, 'NO', 'NO', 142032), (True, 'YES', 'YES', 142033), (True, 'YES', 'YES', 142034), (True, 'YES', 'YES', 142035), (True, 'NO', 'NO', 142036), (True, 'YES', 'YES', 142037), (True, 'YES', 'YES', 142038), (True, 'YES', 'YES', 142039), (True, 'YES', 'YES', 142040), (True, 'YES', 'YES', 142041), (True, 'YES', 'YES', 142042), (True, 'NO', 'NO', 142043), (True, 'YES', 'YES', 142044), (True, 'YES', 'YES', 142045), (True, 'NO', 'NO', 142046), (True, 'YES', 'YES', 142047), (True, 'YES', 'YES', 142048), (True, 'NO', 'NO', 142049), (True, 'YES', 'YES', 142050), (True, 'YES', 'YES', 142051), (True, 'NO', 'NO', 142052), (True, 'YES', 'YES', 142053), (True, 'YES', 'YES', 142054), (True, 'YES', 'YES', 142055), (True, 'NO', 'NO', 142056), (True, 'YES', 'YES', 142057), (True, 'YES', 'YES', 142058), (True, 'YES', 'YES', 142059), (True, 'YES', 'YES', 142060), (True, 'YES', 'YES', 142061), (True, 'NO', 'NO', 142062), (True, 'YES', 'YES', 142063), (True, 'YES', 'YES', 142064), (True, 'YES', 'YES', 142065), (True, 'YES', 'YES', 142066), (True, 'YES', 'YES', 142067), (True, 'YES', 'YES', 142068), (True, 'NO', 'NO', 142069), (True, 'YES', 'YES', 142070), (True, 'YES', 'YES', 142071), (True, 'YES', 'YES', 142072), (True, 'NO', 'NO', 142073), (True, 'YES', 'YES', 142074), (True, 'YES', 'YES', 142075), (False, 'YES', 'NO', 142076), (True, 'YES', 'YES', 142077), (True, 'YES', 'YES', 142078), (True, 'YES', 'YES', 142079), (True, 'YES', 'YES', 142080), (True, 'YES', 'YES', 142081), (True, 'YES', 'YES', 142082), (True, 'YES', 'YES', 142083), (True, 'YES', 'YES', 142084), (True, 'NO', 'NO', 142085), (True, 'NO', 'NO', 142086), (False, 'YES', 'NO', 142087), (True, 'YES', 'YES', 142088), (True, 'YES', 'YES', 142089), (False, 'YES', 'NO', 142090), (False, 'YES', 'NO', 142091), (False, 'YES', 'NO', 142092), (False, 'YES', 'NO', 142093), (True, 'YES', 'YES', 142094), (True, 'NO', 'NO', 142095), (False, 'YES', 'NO', 142096), (False, 'YES', 'NO', 142097), (True, 'NO', 'NO', 142098), (True, 'NO', 'NO', 142099), (True, 'YES', 'YES', 142100), (True, 'YES', 'YES', 142101), (False, 'YES', 'NO', 142102), (True, 'YES', 'YES', 142103), (True, 'YES', 'YES', 142104), (False, 'YES', 'NO', 142105)]",False,Wrong Answer,0.8266114125804572,0.9587628865979382,False,0.1411764705882353
1032106,25886377,"lights_string = input()
missing = {'R': 0, 'B': 0, 'Y': 0, 'G': 0 }
lights = [c for c in lights_string]

for index in range(len(lights)):
	if lights[index] != '!' and index + 4 < len(lights) and lights[index + 4] == '!':
		missing[lights[index]] += 1
		lights[index + 4] = lights[index]

for index in range(len(lights) - 1, -1, -1):
	if lights[index] != '!' and index - 4 > -1 and lights[index - 4] == '!':
		missing[lights[index]] += 1
		lights[index - 4] = lights[index]

print('{} {} {} {}'.format(missing['R'], missing['B'], missing['Y'], missing['G']))",617,5432,92,3/29/17 5:44,29,957,1,8,"[(True, '0 0 0 0', '0 0 0 0', 124954), (True, '0 1 0 0', '0 1 0 0', 124955), (True, '1 1 1 1', '1 1 1 1', 124956), (True, '2 1 1 0', '2 1 1 0', 124957), (True, '0 0 0 0', '0 0 0 0', 124958), (True, '20 18 19 18', '20 18 19 18', 124959), (True, '3 5 2 1', '3 5 2 1', 124960), (True, '0 0 0 0', '0 0 0 0', 124961), (True, '0 0 0 1', '0 0 0 1', 124962), (True, '0 0 0 0', '0 0 0 0', 124963), (True, '0 0 0 0', '0 0 0 0', 124964), (True, '0 0 0 0', '0 0 0 0', 124965), (True, '0 0 0 0', '0 0 0 0', 124966), (True, '1 1 1 1', '1 1 1 1', 124967), (True, '2 1 1 1', '2 1 1 1', 124968), (True, '1 2 1 2', '1 2 1 2', 124969), (True, '2 2 1 2', '2 2 1 2', 124970), (True, '2 2 2 2', '2 2 2 2', 124971), (True, '24 24 24 24', '24 24 24 24', 124972), (True, '24 24 24 0', '24 24 24 0', 124973), (True, '24 24 0 24', '24 24 0 24', 124974), (True, '24 0 24 24', '24 0 24 24', 124975), (True, '0 24 24 24', '0 24 24 24', 124976), (True, '0 1 0 2', '0 1 0 2', 124977), (True, '1 0 3 1', '1 0 3 1', 124978), (True, '4 3 2 1', '4 3 2 1', 124979), (True, '3 6 6 4', '3 6 6 4', 124980), (True, '1 5 9 7', '1 5 9 7', 124981), (True, '5 7 5 7', '5 7 5 7', 124982), (True, '5 13 12 13', '5 13 12 13', 124983), (True, '14 2 13 11', '14 2 13 11', 124984), (True, '0 1 2 3', '0 1 2 3', 124985), (True, '20 20 21 21', '20 20 21 21', 124986), (True, '15 10 5 0', '15 10 5 0', 124987), (True, '23 24 23 24', '23 24 23 24', 124988), (True, '0 24 0 24', '0 24 0 24', 124989), (True, '13 12 17 20', '13 12 17 20', 124990), (True, '7 8 22 15', '7 8 22 15', 124991), (True, '11 14 0 24', '11 14 0 24', 124992), (True, '10 8 9 8', '10 8 9 8', 124993), (True, '15 10 4 0', '15 10 4 0', 124994), (True, '22 24 23 23', '22 24 23 23', 124995), (True, '19 17 18 17', '19 17 18 17', 124996), (True, '14 9 3 0', '14 9 3 0', 124997), (True, '21 23 22 22', '21 23 22 22', 124998), (True, '18 16 17 16', '18 16 17 16', 124999), (True, '10 10 15 18', '10 10 15 18', 125000), (True, '5 5 20 12', '5 5 20 12', 125001), (True, '8 11 0 21', '8 11 0 21', 125002), (True, '7 5 6 5', '7 5 6 5', 125003), (True, '3 3 3 3', '3 3 3 3', 125004), (True, '7 7 7 7', '7 7 7 7', 125005), (True, '0 0 0 0', '0 0 0 0', 125006), (True, '3 2 2 2', '3 2 2 2', 125007), (True, '0 0 1 0', '0 0 1 0', 125008), (True, '9 9 9 9', '9 9 9 9', 125009), (True, '2 2 1 2', '2 2 1 2', 125010), (True, '24 24 24 24', '24 24 24 24', 125011), (True, '3 3 3 3', '3 3 3 3', 125012), (True, '4 4 4 4', '4 4 4 4', 125013), (True, '2 1 2 2', '2 1 2 2', 125014), (True, '7 6 7 6', '7 6 7 6', 125015), (True, '3 3 3 3', '3 3 3 3', 125016), (True, '8 7 8 7', '8 7 8 7', 125017), (True, '10 10 10 10', '10 10 10 10', 125018)]",True,Accecpted,0.728406156608726,0.4480457578646329,False,0.0
1032105,25886341,"lights = input()
missing = {'R': 0, 'B': 0, 'Y': 0, 'G': 0 }

for index in range(len(lights)):
	if lights[index] != '!' and index + 4 < len(lights) and lights[index + 4] == '!':
		missing[lights[index]] += 1

for index in range(len(lights) - 1, -1, -1):
	if lights[index] != '!' and index - 4 > -1 and lights[index - 4] == '!':
		missing[lights[index]] += 1

print('{} {} {} {}'.format(missing['R'], missing['B'], missing['Y'], missing['G']))",617,5400,61,3/29/17 5:39,23,957,2,8,"[(True, '0 0 0 0', '0 0 0 0', 124954), (True, '0 1 0 0', '0 1 0 0', 124955), (True, '1 1 1 1', '1 1 1 1', 124956), (True, '2 1 1 0', '2 1 1 0', 124957), (True, '0 0 0 0', '0 0 0 0', 124958), (False, '10 11 9 12', '20 18 19 18', 124959), (False, '1 4 3 1', '3 5 2 1', 124960), (True, '0 0 0 0', '0 0 0 0', 124961), (True, '0 0 0 1', '0 0 0 1', 124962), (True, '0 0 0 0', '0 0 0 0', 124963), (True, '0 0 0 0', '0 0 0 0', 124964), (True, '0 0 0 0', '0 0 0 0', 124965), (True, '0 0 0 0', '0 0 0 0', 124966), (True, '1 1 1 1', '1 1 1 1', 124967), (True, '2 1 1 1', '2 1 1 1', 124968), (True, '1 2 1 2', '1 2 1 2', 124969), (False, '1 2 1 1', '2 2 1 2', 124970), (False, '2 2 1 1', '2 2 2 2', 124971), (False, '2 2 2 2', '24 24 24 24', 124972), (False, '2 2 2 0', '24 24 24 0', 124973), (False, '2 2 0 2', '24 24 0 24', 124974), (False, '2 0 2 2', '24 0 24 24', 124975), (False, '0 2 1 2', '0 24 24 24', 124976), (True, '0 1 0 2', '0 1 0 2', 124977), (False, '2 0 2 1', '1 0 3 1', 124978), (False, '1 4 3 2', '4 3 2 1', 124979), (False, '5 1 2 4', '3 6 6 4', 124980), (False, '2 5 2 4', '1 5 9 7', 124981), (False, '6 7 8 7', '5 7 5 7', 124982), (False, '6 4 2 3', '5 13 12 13', 124983), (False, '8 4 8 7', '14 2 13 11', 124984), (False, '0 2 3 4', '0 1 2 3', 124985), (False, '4 6 2 4', '20 20 21 21', 124986), (False, '16 11 9 0', '15 10 5 0', 124987), (False, '3 2 4 2', '23 24 23 24', 124988), (False, '0 2 0 2', '0 24 0 24', 124989), (False, '12 16 11 8', '13 12 17 20', 124990), (False, '10 16 6 13', '7 8 22 15', 124991), (False, '10 12 0 2', '11 14 0 24', 124992), (False, '11 11 11 14', '10 8 9 8', 124993), (False, '9 20 7 0', '15 10 4 0', 124994), (False, '4 2 3 2', '22 24 23 23', 124995), (False, '9 6 9 8', '19 17 18 17', 124996), (False, '6 15 6 0', '14 9 3 0', 124997), (False, '4 2 4 2', '21 23 22 22', 124998), (False, '8 9 6 9', '18 16 17 16', 124999), (False, '11 13 9 10', '10 10 15 18', 125000), (False, '6 7 6 9', '5 5 20 12', 125001), (False, '14 11 0 2', '8 11 0 21', 125002), (False, '9 8 9 10', '7 5 6 5', 125003), (False, '2 1 2 1', '3 3 3 3', 125004), (False, '1 2 1 2', '7 7 7 7', 125005), (True, '0 0 0 0', '0 0 0 0', 125006), (False, '1 1 1 1', '3 2 2 2', 125007), (True, '0 0 1 0', '0 0 1 0', 125008), (False, '1 2 2 1', '9 9 9 9', 125009), (False, '2 1 2 1', '2 2 1 2', 125010), (False, '1 2 2 2', '24 24 24 24', 125011), (False, '1 2 1 2', '3 3 3 3', 125012), (False, '1 2 2 2', '4 4 4 4', 125013), (False, '1 1 1 1', '2 1 2 2', 125014), (False, '2 2 2 2', '7 6 7 6', 125015), (False, '1 2 2 1', '3 3 3 3', 125016), (False, '2 2 2 2', '8 7 8 7', 125017), (False, '2 2 2 2', '10 10 10 10', 125018)]",False,Wrong Answer,0.728406156608726,0.4480457578646329,False,0.7384615384615385
3196982,26149345,"n=int(input())
if n%2==0:
	print (1,end="""")
else :
	print (7,end="""")
for i in range(int(n/2)-1):
	print (1,end="""")",675,5832,187,4/5/17 19:13,13,2742,1,8,"[(True, '1', '1', 231679), (True, '7', '7', 231680), (True, '11', '11', 231681), (True, '71', '71', 231682), (True, '111', '111', 231683), (True, '7111', '7111', 231689), (True, '111111111111111111111111111111111111111111111111111111111111111111111111111111', '111111111111111111111111111111111111111111111111111111111111111111111111111111', 231693), (True, '7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111', '7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111', 231694)]",True,Accecpted,0.5035337887555859,0.5378151260504201,False,0.0
3196205,26148152,"n=int(input())
for i in range(int(n/2)-1):
	print (1,end="""")
if n%2==0:
	print (1)
else :
	print (7)",675,4512,46,4/5/17 18:58,13,2742,2,8,"[(True, '1', '1', 231679), (True, '7', '7', 231680), (True, '11', '11', 231681), (False, '17', '71', 231682), (True, '111', '111', 231683), (False, '1117', '7111', 231689), (True, '111111111111111111111111111111111111111111111111111111111111111111111111111111', '111111111111111111111111111111111111111111111111111111111111111111111111111111', 231693), (False, '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111117', '7111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111', 231694)]",False,Wrong Answer,0.5035337887555859,0.5378151260504201,False,0.375
191014,29079733,"n = int(input())
if n%2==1:
  print(0)
  exit()
n //= 2
if n%2==0:
  print(n//2-1)
else:
  print(n//2)",690,4520,62,7/31/17 22:18,17,153,1,8,"[(True, '1', '1', 60601), (True, '4', '4', 60602), (True, '0', '0', 60603), (True, '0', '0', 60604), (True, '0', '0', 60605), (True, '0', '0', 60606), (True, '499999999', '499999999', 60607), (True, '481176017', '481176017', 60608), (True, '18435146', '18435146', 60609), (True, '481272204', '481272204', 60610), (True, '148267747', '148267747', 60611), (True, '481368392', '481368392', 60612), (True, '157372546', '157372546', 60613), (True, '495162277', '495162277', 60614), (True, '9165330', '9165330', 60615), (True, '0', '0', 60616), (True, '17801758', '17801758', 60617), (True, '439394348', '439394348', 60618), (True, '42076323', '42076323', 60619), (True, '483724055', '483724055', 60620), (True, '74287271', '74287271', 60621), (True, '474500408', '474500408', 60622), (True, '44102424', '44102424', 60623), (True, '468256380', '468256380', 60624), (True, '1428690', '1428690', 60625), (True, '457387797', '457387797', 60626), (True, '4067359', '4067359', 60627), (True, '415820847', '415820847', 60628), (True, '0', '0', 60629), (True, '491836400', '491836400', 60630), (True, '213499', '213499', 60631), (True, '498971656', '498971656', 60632), (True, '0', '0', 60633), (True, '499048408', '499048408', 60634), (True, '2401294', '2401294', 60635), (True, '499114934', '499114934', 60636), (True, '8172986', '8172986', 60637), (True, '493975826', '493975826', 60638), (True, '494159283', '494159283', 60639), (True, '7450759', '7450759', 60640), (True, '494494922', '494494922', 60641), (True, '494648833', '494648833', 60642), (True, '6844835', '6844835', 60643), (True, '494932477', '494932477', 60644), (True, '495063444', '495063444', 60645), (True, '495187895', '495187895', 60646), (True, '13306219', '13306219', 60647), (True, '0', '0', 60648), (True, '0', '0', 60649), (True, '1', '1', 60650), (True, '0', '0', 60651), (True, '2', '2', 60652), (True, '0', '0', 60653), (True, '2', '2', 60654), (True, '0', '0', 60655), (True, '3', '3', 60656), (True, '0', '0', 60657), (True, '3', '3', 60658), (True, '0', '0', 60659), (True, '4', '4', 60660), (True, '0', '0', 60661), (True, '0', '0', 60662), (True, '5', '5', 60663), (True, '0', '0', 60664), (True, '5', '5', 60665), (True, '0', '0', 60666), (True, '6', '6', 60667), (True, '0', '0', 60668), (True, '6', '6', 60669), (True, '0', '0', 60670), (True, '7', '7', 60671), (True, '0', '0', 60672), (True, '0', '0', 60673), (True, '0', '0', 60674), (True, '0', '0', 60675), (True, '0', '0', 60676)]",True,Accecpted,0.8003203203844999,0.9957446808510638,False,0.0
191013,29079721,"n = int(input())
if n%2==1:
  print(0)
  exit()
n /= 2
if n%2==0:
  print(n//2-1)
else:
  print(n//2)",690,4464,61,7/31/17 22:17,17,153,2,8,"[(False, '1.0', '1', 60601), (False, '4.0', '4', 60602), (True, '0', '0', 60603), (False, '0.0', '0', 60604), (True, '0', '0', 60605), (False, '0.0', '0', 60606), (False, '499999999.0', '499999999', 60607), (False, '481176017.0', '481176017', 60608), (False, '18435146.0', '18435146', 60609), (False, '481272204.0', '481272204', 60610), (False, '148267747.0', '148267747', 60611), (False, '481368392.0', '481368392', 60612), (False, '157372546.0', '157372546', 60613), (False, '495162277.0', '495162277', 60614), (False, '9165330.0', '9165330', 60615), (True, '0', '0', 60616), (False, '17801758.0', '17801758', 60617), (False, '439394348.0', '439394348', 60618), (False, '42076323.0', '42076323', 60619), (False, '483724055.0', '483724055', 60620), (False, '74287271.0', '74287271', 60621), (False, '474500408.0', '474500408', 60622), (False, '44102424.0', '44102424', 60623), (False, '468256380.0', '468256380', 60624), (False, '1428690.0', '1428690', 60625), (False, '457387797.0', '457387797', 60626), (False, '4067359.0', '4067359', 60627), (False, '415820847.0', '415820847', 60628), (True, '0', '0', 60629), (False, '491836400.0', '491836400', 60630), (False, '213499.0', '213499', 60631), (False, '498971656.0', '498971656', 60632), (True, '0', '0', 60633), (False, '499048408.0', '499048408', 60634), (False, '2401294.0', '2401294', 60635), (False, '499114934.0', '499114934', 60636), (False, '8172986.0', '8172986', 60637), (False, '493975826.0', '493975826', 60638), (False, '494159283.0', '494159283', 60639), (False, '7450759.0', '7450759', 60640), (False, '494494922.0', '494494922', 60641), (False, '494648833.0', '494648833', 60642), (False, '6844835.0', '6844835', 60643), (False, '494932477.0', '494932477', 60644), (False, '495063444.0', '495063444', 60645), (False, '495187895.0', '495187895', 60646), (False, '13306219.0', '13306219', 60647), (True, '0', '0', 60648), (True, '0', '0', 60649), (False, '1.0', '1', 60650), (True, '0', '0', 60651), (False, '2.0', '2', 60652), (True, '0', '0', 60653), (False, '2.0', '2', 60654), (True, '0', '0', 60655), (False, '3.0', '3', 60656), (True, '0', '0', 60657), (False, '3.0', '3', 60658), (True, '0', '0', 60659), (False, '4.0', '4', 60660), (True, '0', '0', 60661), (True, '0', '0', 60662), (False, '5.0', '5', 60663), (True, '0', '0', 60664), (False, '5.0', '5', 60665), (True, '0', '0', 60666), (False, '6.0', '6', 60667), (True, '0', '0', 60668), (False, '6.0', '6', 60669), (True, '0', '0', 60670), (False, '7.0', '7', 60671), (True, '0', '0', 60672), (True, '0', '0', 60673), (True, '0', '0', 60674), (True, '0', '0', 60675), (True, '0', '0', 60676)]",False,Wrong Answer,0.8003203203844999,0.9957446808510638,False,0.6973684210526315
213135,25543530,"l, r, k = map(int, input().split())
x = list(filter(lambda t: l <= int(t) <= r, [str(k**i) for i in range(256)]))
if len(x)==0:
    print(-1)
else:
    print(' '.join(x))",690,4932,93,3/16/17 12:24,6,178,1,8,"[(True, '1 2 4 8', '1 2 4 8', 62672), (True, '-1', '-1', 62673), (True, '28554 815330916', '28554 815330916', 62674), (True, '313325401', '313325401', 62675), (True, '97969 30664297 9597924961', '97969 30664297 9597924961', 62676), (True, '116964 40001688 13680577296', '116964 40001688 13680577296', 62677), (True, '10000 100000 1000000 10000000 100000000 1000000000 10000000000', '10000 100000 1000000 10000000 100000000 1000000000 10000000000', 62678), (True, '79507 3418801 147008443 6321363049', '79507 3418801 147008443 6321363049', 62679), (True, '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', 62680), (True, '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', 62681), (True, '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', 62683), (True, '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', 62684), (True, '5 25', '5 25', 62685), (True, '1 90', '1 90', 62686), (True, '4624 314432 21381376 1453933568 98867482624', '4624 314432 21381376 1453933568 98867482624', 62687), (True, '2809 148877 7890481 418195493 22164361129', '2809 148877 7890481 418195493 22164361129', 62688), (True, '198765', '198765', 62689), (True, '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', 62690), (True, '-1', '-1', 62691), (True, '1', '1', 62692), (True, '-1', '-1', 62693), (True, '-1', '-1', 62694), (True, '-1', '-1', 62695), (True, '-1', '-1', 62696), (True, '-1', '-1', 62697), (True, '-1', '-1', 62698), (True, '10', '10', 62699), (True, '-1', '-1', 62700), (True, '1 1000000000 1000000000000000000', '1 1000000000 1000000000000000000', 62701), (True, '1000000000000000000', '1000000000000000000', 62702), (True, '1000000000 1000000000000000000', '1000000000 1000000000000000000', 62703), (True, '1', '1', 62704), (True, '1 1000000000', '1 1000000000', 62705), (True, '1 999999990 999999980000000100', '1 999999990 999999980000000100', 62706), (True, '1 999999984 999999968000000256', '1 999999984 999999968000000256', 62707), (True, '1 324325 105186705625 34114678301828125', '1 324325 105186705625 34114678301828125', 62708), (True, '1 999999523 999999046000227529', '1 999999523 999999046000227529', 62709), (True, '1 3 9 27 81 243', '1 3 9 27 81 243', 62710), (True, '326816522793383797', '326816522793383797', 62711), (True, '1 690852001 477276487285704001', '1 690852001 477276487285704001', 62712), (True, '1 918745157 844092663510954649', '1 918745157 844092663510954649', 62713), (True, '1 131299843 17239648771824649', '1 131299843 17239648771824649', 62714), (True, '-1', '-1', 62715)]",True,Accecpted,0.5149766859424137,0.7364864864864865,False,0.0
213134,25543514,"l, r, k = map(int, input().split())
print(' '.join(filter(lambda t: l <= int(t) <= r, [str(k**i) for i in range(256)])))",690,4488,46,3/16/17 12:24,2,178,2,8,"[(True, '1 2 4 8', '1 2 4 8', 62672), (False, '', '-1', 62673), (True, '28554 815330916', '28554 815330916', 62674), (True, '313325401', '313325401', 62675), (True, '97969 30664297 9597924961', '97969 30664297 9597924961', 62676), (True, '116964 40001688 13680577296', '116964 40001688 13680577296', 62677), (True, '10000 100000 1000000 10000000 100000000 1000000000 10000000000', '10000 100000 1000000 10000000 100000000 1000000000 10000000000', 62678), (True, '79507 3418801 147008443 6321363049', '79507 3418801 147008443 6321363049', 62679), (True, '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', '16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944', 62680), (True, '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', '59049 177147 531441 1594323 4782969 14348907 43046721 129140163 387420489 1162261467 3486784401 10460353203 31381059609 94143178827 282429536481', 62681), (True, '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', '64 256 1024 4096 16384 65536 262144 1048576 4194304 16777216 67108864 268435456 1073741824 4294967296 17179869184 68719476736 274877906944 1099511627776', 62683), (True, '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', '1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 4294967296 8589934592 17179869184 34359738368 68719476736 137438953472 274877906944 549755813888 1099511627776 2199023255552', 62684), (True, '5 25', '5 25', 62685), (True, '1 90', '1 90', 62686), (True, '4624 314432 21381376 1453933568 98867482624', '4624 314432 21381376 1453933568 98867482624', 62687), (True, '2809 148877 7890481 418195493 22164361129', '2809 148877 7890481 418195493 22164361129', 62688), (True, '198765', '198765', 62689), (True, '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', '144 1728 20736 248832 2985984 35831808 429981696 5159780352 61917364224 743008370688', 62690), (False, '', '-1', 62691), (True, '1', '1', 62692), (False, '', '-1', 62693), (False, '', '-1', 62694), (False, '', '-1', 62695), (False, '', '-1', 62696), (False, '', '-1', 62697), (False, '', '-1', 62698), (True, '10', '10', 62699), (False, '', '-1', 62700), (True, '1 1000000000 1000000000000000000', '1 1000000000 1000000000000000000', 62701), (True, '1000000000000000000', '1000000000000000000', 62702), (True, '1000000000 1000000000000000000', '1000000000 1000000000000000000', 62703), (True, '1', '1', 62704), (True, '1 1000000000', '1 1000000000', 62705), (True, '1 999999990 999999980000000100', '1 999999990 999999980000000100', 62706), (True, '1 999999984 999999968000000256', '1 999999984 999999968000000256', 62707), (True, '1 324325 105186705625 34114678301828125', '1 324325 105186705625 34114678301828125', 62708), (True, '1 999999523 999999046000227529', '1 999999523 999999046000227529', 62709), (True, '1 3 9 27 81 243', '1 3 9 27 81 243', 62710), (True, '326816522793383797', '326816522793383797', 62711), (True, '1 690852001 477276487285704001', '1 690852001 477276487285704001', 62712), (True, '1 918745157 844092663510954649', '1 918745157 844092663510954649', 62713), (True, '1 131299843 17239648771824649', '1 131299843 17239648771824649', 62714), (False, '', '-1', 62715)]",False,Wrong Answer,0.5149766859424137,0.7364864864864865,False,0.2325581395348837
249478,29081209,"a, b = map(int, input().split())
c, d = map(int, input().split())

print(max(abs(a-c), abs(d-b)))",690,4516,77,7/31/17 23:49,7,208,1,8,"[(True, '5', '5', 64835), (True, '3', '3', 64836), (True, '6', '6', 64837), (True, '6', '6', 64838), (True, '101', '101', 64839), (True, '99', '99', 64840), (True, '2000000000', '2000000000', 64841), (True, '1999999999', '1999999999', 64842), (True, '2', '2', 64843), (True, '90', '90', 64844), (True, '5', '5', 64845), (True, '5', '5', 64846), (True, '10', '10', 64847), (True, '4', '4', 64848), (True, '1649942490', '1649942490', 64849), (True, '929691728', '929691728', 64850), (True, '4', '4', 64851), (True, '810081197', '810081197', 64852), (True, '8', '8', 64853), (True, '4', '4', 64854), (True, '3', '3', 64855), (True, '200000123', '200000123', 64856), (True, '1', '1', 64857), (True, '15', '15', 64858), (True, '5', '5', 64859), (True, '1', '1', 64860), (True, '527766146', '527766146', 64861), (True, '4', '4', 64862), (True, '3', '3', 64863), (True, '4546', '4546', 64864), (True, '2', '2', 64865), (True, '3', '3', 64866), (True, '2000000000', '2000000000', 64867), (True, '2000000000', '2000000000', 64868), (True, '1120229998', '1120229998', 64869), (True, '236024353', '236024353', 64870), (True, '640460429', '640460429', 64871), (True, '549576124', '549576124', 64872), (True, '1', '1', 64873), (True, '109808', '109808', 64874), (True, '18', '18', 64875), (True, '0', '0', 64876), (True, '3', '3', 64877), (True, '44', '44', 64878), (True, '419093575', '419093575', 64879), (True, '11', '11', 64880), (True, '2000000000', '2000000000', 64881), (True, '1', '1', 64882), (True, '1', '1', 64883), (True, '1', '1', 64884), (True, '1', '1', 64885), (True, '1', '1', 64886), (True, '1', '1', 64887), (True, '1', '1', 64888), (True, '80', '80', 64889), (True, '1612427789', '1612427789', 64890), (True, '8', '8', 64891), (True, '0', '0', 64892), (True, '8', '8', 64893), (True, '89', '89', 64894), (True, '900', '900', 64895), (True, '1', '1', 64896), (True, '1400165835', '1400165835', 64897), (True, '534761547', '534761547', 64898), (True, '669371458', '669371458', 64899), (True, '853334080', '853334080', 64900), (True, '518183935', '518183935', 64901), (True, '40', '40', 64902), (True, '1103096102', '1103096102', 64903), (True, '18', '18', 64904), (True, '1115418699', '1115418699', 64905), (True, '2000', '2000', 64906), (True, '2', '2', 64907), (True, '975623731', '975623731', 64908), (True, '10', '10', 64909)]",True,Accecpted,0.8265168183793802,0.9805825242718448,False,0.0
249477,29081198,"a, b = map(int, input().split())
c, d = map(int, input().split())

print(min(abs(a-c), abs(d-b)))",690,4500,46,7/31/17 23:49,7,208,2,8,"[(False, '4', '5', 64835), (True, '3', '3', 64836), (False, '4', '6', 64837), (False, '4', '6', 64838), (False, '9', '101', 64839), (True, '99', '99', 64840), (True, '2000000000', '2000000000', 64841), (False, '1000000000', '1999999999', 64842), (False, '1', '2', 64843), (False, '0', '90', 64844), (False, '1', '5', 64845), (False, '4', '5', 64846), (False, '0', '10', 64847), (False, '3', '4', 64848), (False, '1166016536', '1649942490', 64849), (False, '894081143', '929691728', 64850), (False, '0', '4', 64851), (False, '380190830', '810081197', 64852), (False, '0', '8', 64853), (False, '2', '4', 64854), (False, '2', '3', 64855), (False, '200000000', '200000123', 64856), (False, '0', '1', 64857), (False, '0', '15', 64858), (False, '1', '5', 64859), (False, '0', '1', 64860), (False, '19919728', '527766146', 64861), (False, '2', '4', 64862), (False, '1', '3', 64863), (False, '1713', '4546', 64864), (False, '1', '2', 64865), (False, '2', '3', 64866), (False, '1999999997', '2000000000', 64867), (False, '0', '2000000000', 64868), (False, '273181438', '1120229998', 64869), (False, '134262612', '236024353', 64870), (False, '115241', '640460429', 64871), (False, '134312331', '549576124', 64872), (False, '0', '1', 64873), (False, '2', '109808', 64874), (False, '9', '18', 64875), (True, '0', '0', 64876), (False, '2', '3', 64877), (False, '1', '44', 64878), (False, '407922163', '419093575', 64879), (False, '0', '11', 64880), (True, '2000000000', '2000000000', 64881), (True, '1', '1', 64882), (False, '0', '1', 64883), (True, '1', '1', 64884), (False, '0', '1', 64885), (True, '1', '1', 64886), (False, '0', '1', 64887), (True, '1', '1', 64888), (True, '80', '80', 64889), (False, '954325807', '1612427789', 64890), (False, '0', '8', 64891), (True, '0', '0', 64892), (True, '8', '8', 64893), (False, '0', '89', 64894), (True, '900', '900', 64895), (False, '0', '1', 64896), (False, '746624740', '1400165835', 64897), (False, '98483274', '534761547', 64898), (False, '93554411', '669371458', 64899), (False, '38599979', '853334080', 64900), (False, '433970138', '518183935', 64901), (False, '9', '40', 64902), (False, '93042119', '1103096102', 64903), (False, '9', '18', 64904), (False, '741764359', '1115418699', 64905), (False, '0', '2000', 64906), (False, '1', '2', 64907), (False, '229000410', '975623731', 64908), (False, '0', '10', 64909)]",False,Wrong Answer,0.8265168183793802,0.9805825242718448,False,0.8266666666666667
420159,28961468,"a, b = map(int, input().split())
r = 0
while a > 0 and b > 0 and a+b>2:
  if a < b:
    a, b = b, a
  a -= 2
  b += 1
  r += 1
print(r)",690,4524,62,7/28/17 23:09,17,377,1,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (True, '0', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",True,Accecpted,0.8721827599607718,0.9657534246575342,False,0.0
420158,28961438,"a, b = map(int, input().split())
r = 0
while a > 0 and b > 0:
  if a < b:
    a, b = b, a
  a -= 2
  b += 1
  r += 1
print(r)",690,4496,62,7/28/17 23:07,17,377,2,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (False, '1', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",False,Wrong Answer,0.8721827599607718,0.9657534246575342,False,0.0256410256410256
1809811,8036111,"n=''.join(sorted(input())[::-1])
print(n[0]*n.count(n[0]))",690,4,124,9/30/14 16:42,2,1596,1,8,"[(True, 'rr', 'rr', 20294), (True, 'wwwww', 'wwwww', 20295), (True, 's', 's', 20296), (True, 'ssss', 'ssss', 20297), (True, 'u', 'u', 20298), (True, 'r', 'r', 20299), (True, 'w', 'w', 20300), (True, 'zzzzzzzzz', 'zzzzzzzzz', 20301), (True, 'tt', 'tt', 20302), (True, 'hhhhh', 'hhhhh', 20303), (True, 'bbbbbbbbb', 'bbbbbbbbb', 20304), (True, 'zz', 'zz', 20305), (True, 'z', 'z', 20306), (True, 'e', 'e', 20307), (True, 'e', 'e', 20308), (True, 'ee', 'ee', 20309), (True, 'b', 'b', 20310), (True, 'zzzzzz', 'zzzzzz', 20311), (True, 'zzzzzz', 'zzzzzz', 20312), (True, 'rrrrr', 'rrrrr', 20313), (True, 'zzz', 'zzz', 20314), (True, 'bbb', 'bbb', 20315), (True, 'zz', 'zz', 20316), (True, 'hh', 'hh', 20317), (True, 'hh', 'hh', 20318), (True, 'uu', 'uu', 20319), (True, 'uu', 'uu', 20320), (True, 'u', 'u', 20321), (True, 'v', 'v', 20322), (True, 'u', 'u', 20323), (True, 'u', 'u', 20324), (True, 'rr', 'rr', 20325), (True, 'o', 'o', 20326), (True, 'y', 'y', 20327), (True, 't', 't', 20328), (True, 'tt', 'tt', 20329), (True, 'mmm', 'mmm', 20330), (True, 'kk', 'kk', 20331), (True, 'zzzzzzzzzz', 'zzzzzzzzzz', 20332), (True, 'aaaaaaaaaa', 'aaaaaaaaaa', 20333), (True, 'zz', 'zz', 20334), (True, 'b', 'b', 20335), (True, 'y', 'y', 20336), (True, 'yy', 'yy', 20337), (True, 'zz', 'zz', 20338), (True, 'bb', 'bb', 20339), (True, 'aa', 'aa', 20340), (True, 'a', 'a', 20341), (True, 'z', 'z', 20342), (True, 'zz', 'zz', 20343), (True, 'zzzzzzz', 'zzzzzzz', 20344), (True, 'llll', 'llll', 20345), (True, 'oo', 'oo', 20346), (True, 'rr', 'rr', 20347)]",True,Accecpted,0.0,0.0466472303206997,False,0.0
1809810,8036026,"n=input()
mp=''
def rec(s):
    global mp
    if len(s) == 2:
        if s==s[::-1]:
            mp = max(mp, s)
        mp = max(mp, max(s[1], s[0]))
        return
    for i in range(1, len(s)+1):
        rec(s[:i-1]+s[i:])
    if s==s[::-1]:
        mp = max(mp, s)
rec(n)
print(mp)",690,0,2000,9/30/14 16:32,15,1596,3,8,"[(True, 'rr', 'rr', 20294), (True, 'wwwww', 'wwwww', 20295), (True, 's', 's', 20296), (True, 'ssss', 'ssss', 20297), (True, 'u', 'u', 20298), (True, 'r', 'r', 20299), (True, 'w', 'w', 20300), (True, 'zzzzzzzzz', 'zzzzzzzzz', 20301), (True, 'tt', 'tt', 20302), (True, 'hhhhh', 'hhhhh', 20303), (True, 'bbbbbbbbb', 'bbbbbbbbb', 20304), (True, 'zz', 'zz', 20305), (True, 'z', 'z', 20306), (True, 'e', 'e', 20307), (True, 'e', 'e', 20308), (True, 'ee', 'ee', 20309), (True, 'b', 'b', 20310), (True, 'zzzzzz', 'zzzzzz', 20311), (True, 'zzzzzz', 'zzzzzz', 20312), (True, 'rrrrr', 'rrrrr', 20313), (True, 'zzz', 'zzz', 20314), (True, 'bbb', 'bbb', 20315), (True, 'zz', 'zz', 20316), (True, 'hh', 'hh', 20317), (True, 'hh', 'hh', 20318), (True, 'uu', 'uu', 20319), (True, 'uu', 'uu', 20320), (True, 'u', 'u', 20321), (True, 'v', 'v', 20322), (True, 'u', 'u', 20323), (True, 'u', 'u', 20324), (True, 'rr', 'rr', 20325), (True, 'o', 'o', 20326), (True, 'y', 'y', 20327), (True, 't', 't', 20328), (True, 'tt', 'tt', 20329), (True, 'mmm', 'mmm', 20330), (True, 'kk', 'kk', 20331), (True, 'zzzzzzzzzz', 'zzzzzzzzzz', 20332), (True, 'aaaaaaaaaa', 'aaaaaaaaaa', 20333), (True, 'zz', 'zz', 20334), (True, 'b', 'b', 20335), (True, 'y', 'y', 20336), (True, 'yy', 'yy', 20337), (True, 'zz', 'zz', 20338), (True, 'bb', 'bb', 20339), (True, 'aa', 'aa', 20340), (True, 'a', 'a', 20341), (True, 'z', 'z', 20342), (True, 'zz', 'zz', 20343), (True, 'zzzzzzz', 'zzzzzzz', 20344), (True, 'llll', 'llll', 20345), (True, 'oo', 'oo', 20346), (True, 'rr', 'rr', 20347)]",True,Time Limit,0.0,0.0466472303206997,False,0.0
3350899,29081682,"c, v0, v1, a, l = map(int, input().split())
d = 0
while c > 0:
  c -= min(v0+a*d, v1)-l*(d>0)
  d += 1
print(d)",690,4524,62,8/1/17 0:30,11,2901,1,8,"[(True, '1', '1', 244640), (True, '3', '3', 244641), (True, '15', '15', 244642), (True, '1', '1', 244643), (True, '2', '2', 244644), (True, '999', '999', 244645), (True, '1000', '1000', 244646), (True, '13', '13', 244647), (True, '1', '1', 244648), (True, '17', '17', 244649), (True, '8', '8', 244650), (True, '2', '2', 244651), (True, '6', '6', 244652), (True, '501', '501', 244653), (True, '1', '1', 244654), (True, '7', '7', 244655), (True, '3', '3', 244656), (True, '4', '4', 244657), (True, '3', '3', 244658), (True, '3', '3', 244659), (True, '2', '2', 244660), (True, '5', '5', 244661), (True, '13', '13', 244662), (True, '3', '3', 244663), (True, '5', '5', 244664), (True, '9', '9', 244665), (True, '9', '9', 244666), (True, '12', '12', 244667), (True, '23', '23', 244668), (True, '19', '19', 244669), (True, '16', '16', 244670), (True, '8', '8', 244671), (True, '12', '12', 244672), (True, '53', '53', 244673), (True, '154', '154', 244674), (True, '235', '235', 244675), (True, '3', '3', 244676), (True, '2', '2', 244677), (True, '4', '4', 244678), (True, '3', '3', 244679), (True, '3', '3', 244680), (True, '169', '169', 244681), (True, '45', '45', 244682), (True, '3', '3', 244683), (True, '1', '1', 244684), (True, '3', '3', 244685), (True, '1', '1', 244686), (True, '4', '4', 244687), (True, '5', '5', 244688), (True, '112', '112', 244689), (True, '1', '1', 244690), (True, '1', '1', 244691), (True, '60', '60', 244692), (True, '4', '4', 244693), (True, '44', '44', 244694), (True, '3', '3', 244695), (True, '101', '101', 244696), (True, '14', '14', 244697), (True, '3', '3', 244698), (True, '5', '5', 244699), (True, '3', '3', 244700), (True, '3', '3', 244701), (True, '1', '1', 244702), (True, '4', '4', 244703), (True, '3', '3', 244704), (True, '3', '3', 244705), (True, '14', '14', 244706), (True, '4', '4', 244707), (True, '1', '1', 244708), (True, '2', '2', 244709), (True, '3', '3', 244710), (True, '3', '3', 244711), (True, '4', '4', 244712), (True, '37', '37', 244713), (True, '51', '51', 244714), (True, '6', '6', 244715), (True, '5', '5', 244716), (True, '3', '3', 244717), (True, '4', '4', 244718), (True, '4', '4', 244719), (True, '2', '2', 244720), (True, '3', '3', 244721), (True, '51', '51', 244722), (True, '11', '11', 244723), (True, '1', '1', 244724), (True, '500', '500', 244725), (True, '2', '2', 244726), (True, '87', '87', 244727), (True, '3', '3', 244728), (True, '3', '3', 244729), (True, '4', '4', 244730), (True, '15', '15', 244731), (True, '2', '2', 244732), (True, '5', '5', 244733), (True, '3', '3', 244734), (True, '4', '4', 244735), (True, '3', '3', 244736), (True, '2', '2', 244737), (True, '50', '50', 244738), (True, '32', '32', 244739), (True, '1', '1', 244740), (True, '3', '3', 244741), (True, '13', '13', 244742), (True, '6', '6', 244743), (True, '1', '1', 244744), (True, '2', '2', 244745), (True, '3', '3', 244746), (True, '3', '3', 244747), (True, '25', '25', 244748), (True, '2', '2', 244749)]",True,Accecpted,0.8787419089273848,0.9745762711864406,False,0.0
3350898,29081662,"c, v0, v1, a, l = map(int, input().split())
d = 0
while c > 0:
  c -= min(v0+a*d, v1)-l
  d += 1
print(d)",690,4468,62,8/1/17 0:27,11,2901,2,8,"[(False, '2', '1', 244640), (True, '3', '3', 244641), (True, '15', '15', 244642), (True, '1', '1', 244643), (False, '501', '2', 244644), (False, '1000', '999', 244645), (True, '1000', '1000', 244646), (True, '13', '13', 244647), (False, '1000', '1', 244648), (True, '17', '17', 244649), (True, '8', '8', 244650), (True, '2', '2', 244651), (True, '6', '6', 244652), (False, '1000', '501', 244653), (True, '1', '1', 244654), (True, '7', '7', 244655), (True, '3', '3', 244656), (True, '4', '4', 244657), (False, '4', '3', 244658), (True, '3', '3', 244659), (False, '3', '2', 244660), (True, '5', '5', 244661), (True, '13', '13', 244662), (True, '3', '3', 244663), (True, '5', '5', 244664), (False, '10', '9', 244665), (False, '10', '9', 244666), (True, '12', '12', 244667), (True, '23', '23', 244668), (True, '19', '19', 244669), (True, '16', '16', 244670), (True, '8', '8', 244671), (True, '12', '12', 244672), (True, '53', '53', 244673), (True, '154', '154', 244674), (True, '235', '235', 244675), (True, '3', '3', 244676), (True, '2', '2', 244677), (True, '4', '4', 244678), (True, '3', '3', 244679), (True, '3', '3', 244680), (False, '170', '169', 244681), (True, '45', '45', 244682), (True, '3', '3', 244683), (True, '1', '1', 244684), (True, '3', '3', 244685), (True, '1', '1', 244686), (True, '4', '4', 244687), (True, '5', '5', 244688), (True, '112', '112', 244689), (True, '1', '1', 244690), (True, '1', '1', 244691), (True, '60', '60', 244692), (True, '4', '4', 244693), (True, '44', '44', 244694), (False, '4', '3', 244695), (True, '101', '101', 244696), (True, '14', '14', 244697), (True, '3', '3', 244698), (True, '5', '5', 244699), (True, '3', '3', 244700), (True, '3', '3', 244701), (True, '1', '1', 244702), (True, '4', '4', 244703), (False, '5', '3', 244704), (True, '3', '3', 244705), (True, '14', '14', 244706), (True, '4', '4', 244707), (False, '9', '1', 244708), (False, '3', '2', 244709), (True, '3', '3', 244710), (True, '3', '3', 244711), (True, '4', '4', 244712), (True, '37', '37', 244713), (True, '51', '51', 244714), (False, '11', '6', 244715), (False, '6', '5', 244716), (True, '3', '3', 244717), (True, '4', '4', 244718), (True, '4', '4', 244719), (False, '3', '2', 244720), (False, '4', '3', 244721), (True, '51', '51', 244722), (True, '11', '11', 244723), (True, '1', '1', 244724), (False, '501', '500', 244725), (True, '2', '2', 244726), (True, '87', '87', 244727), (True, '3', '3', 244728), (True, '3', '3', 244729), (True, '4', '4', 244730), (True, '15', '15', 244731), (False, '3', '2', 244732), (True, '5', '5', 244733), (False, '4', '3', 244734), (True, '4', '4', 244735), (True, '3', '3', 244736), (False, '3', '2', 244737), (False, '95', '50', 244738), (True, '32', '32', 244739), (True, '1', '1', 244740), (True, '3', '3', 244741), (True, '13', '13', 244742), (True, '6', '6', 244743), (True, '1', '1', 244744), (False, '3', '2', 244745), (True, '3', '3', 244746), (True, '3', '3', 244747), (False, '28', '25', 244748), (True, '2', '2', 244749)]",False,Wrong Answer,0.8787419089273848,0.9745762711864406,False,0.2272727272727272
1010497,24778690,"m = []
for i in range(4):
    m.append(input())

def match(r,c, r2, c2):
    if r > 3 or c > 3 or r < 0 or c < 0 or r2 > 3 or c2 > 3 or r2 < 0 or c2 < 0:
        return False
    return m[r][c] == ""x"" and m[r2][c2] == ""x""

def check(r,c):
    if(match(r,c+1,r,c-1) or\
       match(r,c+1,r,c+2) or\
       match(r,c-1,r,c-2) or\
       match(r+1,c,r-1,c) or\
       match(r+1,c,r+2,c) or\
       match(r-1,c,r-2,c) or\
       match(r+1,c+1,r-1,c-1) or\
       match(r+1,c+1,r+2,c+2) or\
       match(r-1,c-1,r-2,c-2) or\
       match(r-1,c+1,r+1,c-1) or\
       match(r-1,c+1,r-2,c+2) or\
       match(r+1,c-1,r+2,c-2)):
        return True
    return False

def solve():
    for row in range(4):
        for column in range(4):
            if m[row][column] == ""."":
                if check(row,column):
                    return ""YES""
    return ""NO""

print(solve())",716,4780,77,2/18/17 15:56,34,931,1,8,"[(True, 'YES', 'YES', 122320), (True, 'NO', 'NO', 122321), (True, 'YES', 'YES', 122322), (True, 'NO', 'NO', 122323), (True, 'YES', 'YES', 122324), (True, 'YES', 'YES', 122325), (True, 'YES', 'YES', 122326), (True, 'YES', 'YES', 122327), (True, 'NO', 'NO', 122328), (True, 'NO', 'NO', 122329), (True, 'NO', 'NO', 122330), (True, 'YES', 'YES', 122331), (True, 'NO', 'NO', 122332), (True, 'YES', 'YES', 122333), (True, 'YES', 'YES', 122334), (True, 'NO', 'NO', 122335), (True, 'YES', 'YES', 122336), (True, 'NO', 'NO', 122337), (True, 'YES', 'YES', 122338), (True, 'YES', 'YES', 122339), (True, 'NO', 'NO', 122340), (True, 'YES', 'YES', 122341), (True, 'YES', 'YES', 122342), (True, 'YES', 'YES', 122343), (True, 'NO', 'NO', 122344), (True, 'YES', 'YES', 122345), (True, 'YES', 'YES', 122346), (True, 'NO', 'NO', 122347), (True, 'YES', 'YES', 122348), (True, 'YES', 'YES', 122349), (True, 'YES', 'YES', 122350), (True, 'YES', 'YES', 122351), (True, 'NO', 'NO', 122352), (True, 'NO', 'NO', 122353), (True, 'YES', 'YES', 122354), (True, 'NO', 'NO', 122355), (True, 'YES', 'YES', 122356), (True, 'YES', 'YES', 122357), (True, 'NO', 'NO', 122358), (True, 'NO', 'NO', 122359), (True, 'YES', 'YES', 122360), (True, 'YES', 'YES', 122361), (True, 'NO', 'NO', 122362), (True, 'YES', 'YES', 122363), (True, 'NO', 'NO', 122364), (True, 'NO', 'NO', 122365), (True, 'NO', 'NO', 122366), (True, 'NO', 'NO', 122367), (True, 'NO', 'NO', 122368), (True, 'NO', 'NO', 122369), (True, 'NO', 'NO', 122370), (True, 'NO', 'NO', 122371), (True, 'YES', 'YES', 122372), (True, 'NO', 'NO', 122373), (True, 'NO', 'NO', 122374), (True, 'NO', 'NO', 122375), (True, 'YES', 'YES', 122376), (True, 'YES', 'YES', 122377), (True, 'YES', 'YES', 122378), (True, 'NO', 'NO', 122379), (True, 'YES', 'YES', 122380), (True, 'NO', 'NO', 122381), (True, 'YES', 'YES', 122382), (True, 'YES', 'YES', 122383), (True, 'YES', 'YES', 122384), (True, 'YES', 'YES', 122385), (True, 'YES', 'YES', 122386), (True, 'YES', 'YES', 122387), (True, 'YES', 'YES', 122388), (True, 'YES', 'YES', 122389), (True, 'YES', 'YES', 122390), (True, 'YES', 'YES', 122391), (True, 'YES', 'YES', 122392), (True, 'YES', 'YES', 122393), (True, 'YES', 'YES', 122394), (True, 'YES', 'YES', 122395), (True, 'YES', 'YES', 122396), (True, 'YES', 'YES', 122397), (True, 'YES', 'YES', 122398), (True, 'YES', 'YES', 122399), (True, 'YES', 'YES', 122400), (True, 'YES', 'YES', 122401), (True, 'YES', 'YES', 122402), (True, 'YES', 'YES', 122403), (True, 'YES', 'YES', 122404), (True, 'YES', 'YES', 122405), (True, 'YES', 'YES', 122406), (True, 'YES', 'YES', 122407), (True, 'YES', 'YES', 122408), (True, 'YES', 'YES', 122409), (True, 'YES', 'YES', 122410), (True, 'YES', 'YES', 122411), (True, 'YES', 'YES', 122412), (True, 'NO', 'NO', 122413), (True, 'YES', 'YES', 122414)]",True,Accecpted,0.9754238144469,0.9988913525498893,False,0.0
1010496,24778387,"m = []
for i in range(4):
    m.append(input())

def match(r,c, r2, c2):
    if r > 3 or c > 3 or r < 0 or c < 0 or r2 > 3 or c2 > 3 or r2 < 0 or c2 < 0:
        return False
    return m[r][c] == ""x"" and m[r2][c2] == ""x""

def check(r,c):
    if(match(r,c+1,r,c-1) or\
       match(r,c+1,r,c+2) or\
       match(r,c-1,r,c-2) or\
       match(r+1,c,r-1,c) or\
       match(r+1,c,r+2,c) or\
       match(r-1,c,r-2,c) or\
       match(r+1,c+1,r-1,c-1) or\
       match(r+1,c+1,r+2,c+2) or\
       match(r-1,c-1,r-2,c-2) or\
       match(r-1,c+1,r+1,c-1) or\
       match(r-1,c+1,r-2,c-2) or\
       match(r+1,c-1,r+2,c-2)):
        return True
    return False

def solve():
    for row in range(4):
        for column in range(4):
            if m[row][column] == ""."":
                if check(row,column):
                    return ""YES""
    return ""NO""

print(solve())",716,4776,93,2/18/17 15:47,34,931,2,8,"[(True, 'YES', 'YES', 122320), (True, 'NO', 'NO', 122321), (True, 'YES', 'YES', 122322), (True, 'NO', 'NO', 122323), (True, 'YES', 'YES', 122324), (True, 'YES', 'YES', 122325), (True, 'YES', 'YES', 122326), (True, 'YES', 'YES', 122327), (True, 'NO', 'NO', 122328), (True, 'NO', 'NO', 122329), (True, 'NO', 'NO', 122330), (True, 'YES', 'YES', 122331), (True, 'NO', 'NO', 122332), (True, 'YES', 'YES', 122333), (True, 'YES', 'YES', 122334), (True, 'NO', 'NO', 122335), (True, 'YES', 'YES', 122336), (True, 'NO', 'NO', 122337), (True, 'YES', 'YES', 122338), (True, 'YES', 'YES', 122339), (True, 'NO', 'NO', 122340), (True, 'YES', 'YES', 122341), (True, 'YES', 'YES', 122342), (True, 'YES', 'YES', 122343), (True, 'NO', 'NO', 122344), (True, 'YES', 'YES', 122345), (True, 'YES', 'YES', 122346), (True, 'NO', 'NO', 122347), (True, 'YES', 'YES', 122348), (True, 'YES', 'YES', 122349), (True, 'YES', 'YES', 122350), (True, 'YES', 'YES', 122351), (True, 'NO', 'NO', 122352), (False, 'YES', 'NO', 122353), (True, 'YES', 'YES', 122354), (True, 'NO', 'NO', 122355), (True, 'YES', 'YES', 122356), (True, 'YES', 'YES', 122357), (True, 'NO', 'NO', 122358), (True, 'NO', 'NO', 122359), (True, 'YES', 'YES', 122360), (True, 'YES', 'YES', 122361), (True, 'NO', 'NO', 122362), (True, 'YES', 'YES', 122363), (True, 'NO', 'NO', 122364), (True, 'NO', 'NO', 122365), (True, 'NO', 'NO', 122366), (False, 'YES', 'NO', 122367), (True, 'NO', 'NO', 122368), (True, 'NO', 'NO', 122369), (True, 'NO', 'NO', 122370), (True, 'NO', 'NO', 122371), (True, 'YES', 'YES', 122372), (True, 'NO', 'NO', 122373), (True, 'NO', 'NO', 122374), (True, 'NO', 'NO', 122375), (True, 'YES', 'YES', 122376), (True, 'YES', 'YES', 122377), (True, 'YES', 'YES', 122378), (True, 'NO', 'NO', 122379), (True, 'YES', 'YES', 122380), (True, 'NO', 'NO', 122381), (True, 'YES', 'YES', 122382), (True, 'YES', 'YES', 122383), (True, 'YES', 'YES', 122384), (True, 'YES', 'YES', 122385), (True, 'YES', 'YES', 122386), (True, 'YES', 'YES', 122387), (True, 'YES', 'YES', 122388), (True, 'YES', 'YES', 122389), (True, 'YES', 'YES', 122390), (True, 'YES', 'YES', 122391), (True, 'YES', 'YES', 122392), (True, 'YES', 'YES', 122393), (True, 'YES', 'YES', 122394), (True, 'YES', 'YES', 122395), (True, 'YES', 'YES', 122396), (True, 'YES', 'YES', 122397), (True, 'YES', 'YES', 122398), (True, 'YES', 'YES', 122399), (True, 'YES', 'YES', 122400), (True, 'YES', 'YES', 122401), (True, 'YES', 'YES', 122402), (True, 'YES', 'YES', 122403), (True, 'YES', 'YES', 122404), (True, 'YES', 'YES', 122405), (True, 'YES', 'YES', 122406), (True, 'YES', 'YES', 122407), (True, 'YES', 'YES', 122408), (True, 'YES', 'YES', 122409), (False, 'NO', 'YES', 122410), (True, 'YES', 'YES', 122411), (True, 'YES', 'YES', 122412), (True, 'NO', 'NO', 122413), (True, 'YES', 'YES', 122414)]",False,Wrong Answer,0.9754238144469,0.9988913525498893,False,0.031578947368421
3256601,27455414,"n = int(input())
pairs = n // 2
leftover = n % 2
ans = [""aa"" if x % 2 == 0 else ""bb"" for x in range(pairs)]
if leftover:
    if len(ans) > 0:
        ans += ([""b""] if ans[-1] == ""aa"" else ""a"")
    else:
        ans = [""a""]
print("""".join(ans))",716,1212,77,5/30/17 23:37,10,2818,1,8,"[(True, 'aa', 'aa', 238078), (True, 'aab', 'aab', 238079), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 238080), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238081), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238082), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238083), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238084), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238085), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 238086), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238087), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238088), (True, 'a', 'a', 238089), (True, 'aabbaa', 'aabbaa', 238118), (True, 'aabb', 'aabb', 238119)]",True,Accecpted,0.9452861848260063,0.99601593625498,False,0.0
3256600,27455408,"n = int(input())
pairs = n // 2
leftover = n % 2
ans = [""aa"" if x % 2 == 0 else ""bb"" for x in range(pairs)]
if leftover:
    if len(ans) > 1:
        ans += ([""b""] if ans[-1] == ""aa"" else ""a"")
    else:
        ans = [""a""]
print("""".join(ans))",716,0,46,5/30/17 23:37,10,2818,2,8,"[(True, 'aa', 'aa', 238078), (False, 'a', 'aab', 238079), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 238080), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238081), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238082), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaab', 238083), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238084), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238085), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaa', 238086), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238087), (True, 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 'aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba', 238088), (True, 'a', 'a', 238089), (True, 'aabbaa', 'aabbaa', 238118), (True, 'aabb', 'aabb', 238119)]",False,Wrong Answer,0.9452861848260063,0.99601593625498,False,0.0714285714285714
3294455,28058860,"a,b=map(int,input().split())
cnt=1
while(1):
    if(cnt&1):
        a-=cnt
    else: 
        b-=cnt
    if(a<0):
        print(""Vladik"")
        quit()
    elif(b<0):
        print(""Valera"")
        quit()
    else:
        cnt+=1",725,5412,77,6/26/17 16:48,29,2851,1,8,"[(True, 'Valera', 'Valera', 241127), (True, 'Vladik', 'Vladik', 241128), (True, 'Vladik', 'Vladik', 241129), (True, 'Valera', 'Valera', 241130), (True, 'Vladik', 'Vladik', 241131), (True, 'Valera', 'Valera', 241132), (True, 'Vladik', 'Vladik', 241133), (True, 'Vladik', 'Vladik', 241134), (True, 'Valera', 'Valera', 241135), (True, 'Vladik', 'Vladik', 241136), (True, 'Vladik', 'Vladik', 241137), (True, 'Vladik', 'Vladik', 241138), (True, 'Valera', 'Valera', 241139), (True, 'Vladik', 'Vladik', 241140), (True, 'Valera', 'Valera', 241141), (True, 'Valera', 'Valera', 241142), (True, 'Vladik', 'Vladik', 241143), (True, 'Vladik', 'Vladik', 241144), (True, 'Valera', 'Valera', 241145), (True, 'Valera', 'Valera', 241146), (True, 'Valera', 'Valera', 241147), (True, 'Valera', 'Valera', 241148), (True, 'Valera', 'Valera', 241149), (True, 'Vladik', 'Vladik', 241150), (True, 'Vladik', 'Vladik', 241151), (True, 'Vladik', 'Vladik', 241152), (True, 'Vladik', 'Vladik', 241153), (True, 'Valera', 'Valera', 241154), (True, 'Valera', 'Valera', 241155), (True, 'Vladik', 'Vladik', 241156), (True, 'Vladik', 'Vladik', 241157), (True, 'Valera', 'Valera', 241158), (True, 'Valera', 'Valera', 241159), (True, 'Vladik', 'Vladik', 241160), (True, 'Vladik', 'Vladik', 241161), (True, 'Valera', 'Valera', 241162), (True, 'Vladik', 'Vladik', 241163), (True, 'Valera', 'Valera', 241164), (True, 'Valera', 'Valera', 241165), (True, 'Valera', 'Valera', 241166), (True, 'Vladik', 'Vladik', 241167), (True, 'Valera', 'Valera', 241168)]",True,Accecpted,0.7172835948406505,0.9866156787762906,False,0.0
3294454,28058822,"a,b=map(int,input().split())
cnt=1
while(a or b):
    if(cnt&1):
        a-=cnt
    else: 
        b-=cnt
    if(a<0):
        print(""Vladik"")
        quit()
    elif(b<0):
        print(""Valera"")
        quit()
    else:
        cnt+=1",725,5416,77,6/26/17 16:46,29,2851,2,8,"[(True, 'Valera', 'Valera', 241127), (True, 'Vladik', 'Vladik', 241128), (True, 'Vladik', 'Vladik', 241129), (True, 'Valera', 'Valera', 241130), (True, 'Vladik', 'Vladik', 241131), (True, 'Valera', 'Valera', 241132), (True, 'Vladik', 'Vladik', 241133), (True, 'Vladik', 'Vladik', 241134), (True, 'Valera', 'Valera', 241135), (True, 'Vladik', 'Vladik', 241136), (True, 'Vladik', 'Vladik', 241137), (True, 'Vladik', 'Vladik', 241138), (True, 'Valera', 'Valera', 241139), (True, 'Vladik', 'Vladik', 241140), (True, 'Valera', 'Valera', 241141), (True, 'Valera', 'Valera', 241142), (True, 'Vladik', 'Vladik', 241143), (True, 'Vladik', 'Vladik', 241144), (True, 'Valera', 'Valera', 241145), (True, 'Valera', 'Valera', 241146), (True, 'Valera', 'Valera', 241147), (True, 'Valera', 'Valera', 241148), (True, 'Valera', 'Valera', 241149), (True, 'Vladik', 'Vladik', 241150), (True, 'Vladik', 'Vladik', 241151), (True, 'Vladik', 'Vladik', 241152), (True, 'Vladik', 'Vladik', 241153), (True, 'Valera', 'Valera', 241154), (True, 'Valera', 'Valera', 241155), (False, '', 'Vladik', 241156), (True, 'Vladik', 'Vladik', 241157), (True, 'Valera', 'Valera', 241158), (False, '', 'Valera', 241159), (True, 'Vladik', 'Vladik', 241160), (True, 'Vladik', 'Vladik', 241161), (True, 'Valera', 'Valera', 241162), (True, 'Vladik', 'Vladik', 241163), (True, 'Valera', 'Valera', 241164), (True, 'Valera', 'Valera', 241165), (True, 'Valera', 'Valera', 241166), (True, 'Vladik', 'Vladik', 241167), (True, 'Valera', 'Valera', 241168)]",False,Wrong Answer,0.7172835948406505,0.9866156787762906,False,0.0476190476190476
414924,23989690,"n,b = tuple(map(int,input().split()))
if n > b:
    n,b = b, n

if n < 2 and b < 2:
    print(0)

else:
    p = b-n
    l = [-3,-1,0]
    print(2*(n+(p//3))+l[p%3]+(p//3))",757,4540,78,1/20/17 16:26,11,377,1,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (True, '0', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",True,Accecpted,0.9038693388414086,0.9321533923303836,False,0.0
414923,23989648,"n,b = tuple(map(int,input().split()))
if n > b:
    n,b = b, n
if n < 2 and b < 2:
    print(0)
p = b-n
l = [-3,-1,0]
print(2*(n+(p//3))+l[p%3]+(p//3))",757,4508,77,1/20/17 16:25,8,377,2,8,"[(True, '6', '6', 78107), (True, '5', '5', 78108), (True, '197', '197', 78109), (True, '98', '98', 78110), (True, '98', '98', 78111), (True, '2', '2', 78112), (False, '0\n-1', '0', 78113), (True, '13', '13', 78114), (True, '7', '7', 78115), (True, '36', '36', 78116), (True, '47', '47', 78117), (True, '44', '44', 78118), (True, '27', '27', 78119), (True, '89', '89', 78120), (True, '38', '38', 78121), (True, '102', '102', 78122), (True, '74', '74', 78123), (True, '47', '47', 78124), (True, '122', '122', 78125), (True, '86', '86', 78126), (True, '155', '155', 78127), (True, '28', '28', 78128), (True, '97', '97', 78129), (True, '78', '78', 78130), (True, '33', '33', 78131), (True, '99', '99', 78132), (True, '97', '97', 78133), (True, '97', '97', 78134), (True, '81', '81', 78135), (True, '82', '82', 78136), (True, '84', '84', 78137), (True, '1', '1', 78138), (True, '1', '1', 78139), (True, '1', '1', 78140), (True, '2', '2', 78141), (True, '2', '2', 78142), (True, '2', '2', 78143), (True, '3', '3', 78144), (True, '3', '3', 78145)]",False,Wrong Answer,0.9038693388414086,0.9321533923303836,False,0.0256410256410256
2665797,28618787,"n,m=map(int,input().split())
print(n*m//2)",773,5416,124,7/16/17 22:48,2,2296,1,8,"[(True, '4', '4', 207156), (True, '4', '4', 207157), (True, '2', '2', 207158), (True, '3', '3', 207159), (True, '7', '7', 207160), (True, '8', '8', 207161), (True, '5', '5', 207162), (True, '6', '6', 207163), (True, '7', '7', 207164), (True, '14', '14', 207165), (True, '15', '15', 207166), (True, '2', '2', 207167), (True, '16', '16', 207168), (True, '7', '7', 207169), (True, '9', '9', 207170), (True, '15', '15', 207171), (True, '21', '21', 207172), (True, '22', '22', 207173), (True, '24', '24', 207174), (True, '17', '17', 207175), (True, '128', '128', 207176), (True, '120', '120', 207177), (True, '3', '3', 207178), (True, '112', '112', 207179), (True, '112', '112', 207180), (True, '71', '71', 207181), (True, '40', '40', 207182), (True, '60', '60', 207183), (True, '2', '2', 207184), (True, '6', '6', 207185), (True, '8', '8', 207186), (True, '0', '0', 207187), (True, '1', '1', 207188), (True, '1', '1', 207189), (True, '105', '105', 207190)]",True,Accecpted,0.0,0.5066666666666667,False,0.0
2665795,28618743,"fin=open(""input.txt"")
fout=open(""output.txt"",'w')
n,m=map(int,fin.read().split())
fout.write(((n*m)//2))",773,4484,92,7/16/17 22:45,4,2296,5,8,"[(False, '', '4', 207156), (False, '', '4', 207157), (False, '', '2', 207158), (False, '', '3', 207159), (False, '', '7', 207160), (False, '', '8', 207161), (False, '', '5', 207162), (False, '', '6', 207163), (False, '', '7', 207164), (False, '', '14', 207165), (False, '', '15', 207166), (False, '', '2', 207167), (False, '', '16', 207168), (False, '', '7', 207169), (False, '', '9', 207170), (False, '', '15', 207171), (False, '', '21', 207172), (False, '', '22', 207173), (False, '', '24', 207174), (False, '', '17', 207175), (False, '', '128', 207176), (False, '', '120', 207177), (False, '', '3', 207178), (False, '', '112', 207179), (False, '', '112', 207180), (False, '', '71', 207181), (False, '', '40', 207182), (False, '', '60', 207183), (False, '', '2', 207184), (False, '', '6', 207185), (False, '', '8', 207186), (False, '', '0', 207187), (False, '', '1', 207188), (False, '', '1', 207189), (False, '', '105', 207190)]",False,Runtime Error,0.0,0.5066666666666667,False,1.0
779758,27449335,"import sys
from collections import Counter
from math import factorial

input = sys.stdin
output = sys.stdout

# input = open('input.txt')


def read_int():
    return [int(x) for x in input.readline().rstrip().split()]

l1, r1, l2, r2, k = read_int()
l = max(l1, l2)
r = min(r1, r2)
answer = r - l + 1
if l <= k <= r:
    answer -= 1
answer = max(answer, 0)

output.write('%d\n' % answer)",785,520,62,5/30/17 16:42,22,714,1,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (True, '1', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (True, '0', '0', 105701), (True, '999999997', '999999997', 105702), (True, '0', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (True, '81604391064', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (True, '0', '0', 105709), (True, '48172141432145241', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (True, '256787461333454149', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (True, '0', '0', 105715), (True, '0', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (True, '0', '0', 105719), (True, '5', '5', 105720), (True, '0', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (True, '1', '1', 105726), (True, '1', '1', 105727), (True, '0', '0', 105728), (True, '0', '0', 105729), (True, '0', '0', 105730), (True, '0', '0', 105731), (True, '0', '0', 105732), (True, '0', '0', 105733), (True, '0', '0', 105734), (True, '0', '0', 105735), (True, '0', '0', 105736), (True, '0', '0', 105737), (True, '0', '0', 105738), (True, '0', '0', 105739), (True, '0', '0', 105740), (True, '0', '0', 105741), (True, '0', '0', 105742), (True, '0', '0', 105743), (True, '0', '0', 105744), (True, '0', '0', 105745), (True, '0', '0', 105746), (True, '0', '0', 105747), (True, '0', '0', 105748), (True, '0', '0', 105749), (True, '0', '0', 105750), (True, '0', '0', 105751), (True, '0', '0', 105752), (True, '0', '0', 105753), (True, '0', '0', 105754), (True, '0', '0', 105755), (True, '0', '0', 105756), (True, '0', '0', 105757), (True, '0', '0', 105758), (True, '0', '0', 105759), (True, '0', '0', 105760), (True, '1', '1', 105761), (True, '0', '0', 105762), (True, '1', '1', 105763), (True, '0', '0', 105764), (True, '0', '0', 105765), (True, '0', '0', 105766), (True, '0', '0', 105767), (True, '0', '0', 105768), (True, '0', '0', 105769), (True, '0', '0', 105770), (True, '0', '0', 105771), (True, '0', '0', 105772), (True, '0', '0', 105773), (True, '0', '0', 105774), (True, '0', '0', 105775), (True, '0', '0', 105776), (True, '6', '6', 105777), (True, '0', '0', 105778), (True, '0', '0', 105779), (True, '0', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (True, '0', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (True, '4', '4', 105789)]",True,Accecpted,0.9137755736495532,0.9684741488020177,False,0.0
779757,27449295,"import sys
from collections import Counter
from math import factorial

input = sys.stdin
output = sys.stdout

# input = open('input.txt')


def read_int():
    return [int(x) for x in input.readline().rstrip().split()]

l1, r1, l2, r2, k = read_int()
l = max(l1, l2)
r = min(r1, r2)
answer = r - l + 1
if l <= k <= r:
    answer -= 1

output.write('%d\n' % answer)",785,500,62,5/30/17 16:40,21,714,2,8,"[(True, '2', '2', 105694), (True, '50', '50', 105695), (True, '1', '1', 105696), (True, '999999999', '999999999', 105697), (True, '0', '0', 105698), (True, '99999999999999997', '99999999999999997', 105699), (True, '0', '0', 105700), (True, '0', '0', 105701), (True, '999999997', '999999997', 105702), (False, '-11046655888169', '0', 105703), (True, '27788438422925', '27788438422925', 105704), (True, '5076', '5076', 105705), (True, '29117730788587', '29117730788587', 105706), (True, '81604391064', '81604391064', 105707), (True, '47247500916780901', '47247500916780901', 105708), (False, '-473238220625527125', '0', 105709), (True, '48172141432145241', '48172141432145241', 105710), (True, '99277597320376979', '99277597320376979', 105711), (True, '256787461333454149', '256787461333454149', 105712), (True, '37925278862451249', '37925278862451249', 105713), (True, '0', '0', 105714), (False, '-2', '0', 105715), (False, '-1', '0', 105716), (True, '1', '1', 105717), (True, '1', '1', 105718), (False, '-6', '0', 105719), (True, '5', '5', 105720), (False, '-4', '0', 105721), (True, '1', '1', 105722), (True, '91', '91', 105723), (True, '1', '1', 105724), (True, '1', '1', 105725), (True, '1', '1', 105726), (True, '1', '1', 105727), (False, '-97', '0', 105728), (False, '-1', '0', 105729), (False, '-1', '0', 105730), (False, '-3', '0', 105731), (False, '-2', '0', 105732), (False, '-2', '0', 105733), (False, '-2', '0', 105734), (False, '-1', '0', 105735), (False, '-29', '0', 105736), (False, '-2', '0', 105737), (False, '-2', '0', 105738), (False, '-2', '0', 105739), (False, '-29', '0', 105740), (False, '-2', '0', 105741), (False, '-4', '0', 105742), (False, '-97', '0', 105743), (False, '-4', '0', 105744), (False, '-4', '0', 105745), (False, '-2', '0', 105746), (False, '-1', '0', 105747), (False, '-1', '0', 105748), (False, '-3', '0', 105749), (False, '-14', '0', 105750), (False, '-9', '0', 105751), (False, '-2', '0', 105752), (False, '-2', '0', 105753), (False, '-299', '0', 105754), (False, '-2', '0', 105755), (False, '-10', '0', 105756), (False, '-99', '0', 105757), (False, '-3', '0', 105758), (False, '-1', '0', 105759), (False, '-99', '0', 105760), (True, '1', '1', 105761), (False, '-89', '0', 105762), (True, '1', '1', 105763), (False, '-9', '0', 105764), (False, '-2', '0', 105765), (False, '-3', '0', 105766), (False, '-4', '0', 105767), (False, '-89', '0', 105768), (False, '-97', '0', 105769), (False, '-9', '0', 105770), (False, '-4', '0', 105771), (False, '-1', '0', 105772), (False, '-1', '0', 105773), (False, '-8', '0', 105774), (False, '-2', '0', 105775), (False, '-4', '0', 105776), (True, '6', '6', 105777), (False, '-3', '0', 105778), (False, '-1', '0', 105779), (False, '-399', '0', 105780), (True, '1', '1', 105781), (True, '900', '900', 105782), (True, '1', '1', 105783), (True, '1', '1', 105784), (True, '1', '1', 105785), (False, '-1', '0', 105786), (True, '2', '2', 105787), (True, '11', '11', 105788), (True, '4', '4', 105789)]",False,Wrong Answer,0.9137755736495532,0.9684741488020177,False,0.59375
280740,26253968,"n,a,b,c = [int( input()) for i in range(4)]
g = max(0,(n-c)//(b-c))
print (max(n//a,g+(n-g*(b-c))//a))",815,5428,62,4/10/17 16:15,3,233,1,8,"[(True, '2', '2', 67610), (True, '2', '2', 67611), (True, '1', '1', 67612), (True, '4', '4', 67613), (True, '10', '10', 67614), (True, '5', '5', 67615), (True, '4', '4', 67616), (True, '8', '8', 67617), (True, '0', '0', 67618), (True, '9', '9', 67619), (True, '999999999999999995', '999999999999999995', 67620), (True, '2', '2', 67621), (True, '10', '10', 67622), (True, '3', '3', 67623), (True, '2', '2', 67624), (True, '14', '14', 67625), (True, '37', '37', 67626), (True, '5', '5', 67627), (True, '91', '91', 67628), (True, '22', '22', 67629), (True, '178', '178', 67630), (True, '1', '1', 67631), (True, '121', '121', 67632), (True, '2', '2', 67633), (True, '500', '500', 67634), (True, '2', '2', 67635), (True, '9', '9', 67636), (True, '2', '2', 67637), (True, '55', '55', 67638), (True, '991', '991', 67639), (True, '995', '995', 67640), (True, '2', '2', 67641), (True, '1', '1', 67642), (True, '5500', '5500', 67643), (True, '3', '3', 67644), (True, '999999951', '999999951', 67645), (True, '999995010', '999995010', 67646), (True, '499999952', '499999952', 67647), (True, '999999950', '999999950', 67648), (True, '999999998', '999999998', 67649), (True, '3', '3', 67650), (True, '999999999', '999999999', 67651), (True, '499999999', '499999999', 67652), (True, '999999999999999998', '999999999999999998', 67653), (True, '999999999999999990', '999999999999999990', 67654), (True, '2', '2', 67655), (True, '1999999999999999', '1999999999999999', 67656), (True, '974999999999999999', '974999999999999999', 67657), (True, '5586592178770949', '5586592178770949', 67658), (True, '24999999999999999', '24999999999999999', 67659), (True, '25641025641025641', '25641025641025641', 67660), (True, '1333333333333333', '1333333333333333', 67661), (True, '0', '0', 67662), (True, '999999999990000001', '999999999990000001', 67663), (True, '100000000000000000', '100000000000000000', 67664), (True, '1', '1', 67665), (True, '0', '0', 67666), (True, '1', '1', 67667), (True, '1', '1', 67668), (True, '2', '2', 67669), (True, '1', '1', 67670), (True, '0', '0', 67671), (True, '0', '0', 67672), (True, '1000000001', '1000000001', 67673), (True, '3', '3', 67674), (True, '599999999999999', '599999999999999', 67675), (True, '999999999000000001', '999999999000000001', 67676), (True, '0', '0', 67677), (True, '99999999000000001', '99999999000000001', 67678), (True, '99010000000000009', '99010000000000009', 67679), (True, '1', '1', 67680), (True, '2', '2', 67681), (True, '4', '4', 67682), (True, '333333332', '333333332', 67683), (True, '6', '6', 67684), (True, '100000000000000000', '100000000000000000', 67685), (True, '2', '2', 67686), (True, '56', '56', 67687), (True, '33', '33', 67688), (True, '99000000000000001', '99000000000000001', 67689), (True, '296116756', '296116756', 67690), (True, '2', '2', 67691), (True, '499999999600000000', '499999999600000000', 67692)]",True,Accecpted,0.7910665071754358,0.965174129353234,False,0.0
280739,26253786,"n,a,b,c = [int( input()) for i in range(4)]
g = (n-c)//(b-c)
print (max(n//a,g+(n-g*(b-c))//a))",815,5432,77,4/10/17 16:07,3,233,2,8,"[(True, '2', '2', 67610), (True, '2', '2', 67611), (True, '1', '1', 67612), (True, '4', '4', 67613), (True, '10', '10', 67614), (True, '5', '5', 67615), (True, '4', '4', 67616), (True, '8', '8', 67617), (True, '0', '0', 67618), (True, '9', '9', 67619), (True, '999999999999999995', '999999999999999995', 67620), (True, '2', '2', 67621), (True, '10', '10', 67622), (True, '3', '3', 67623), (True, '2', '2', 67624), (True, '14', '14', 67625), (True, '37', '37', 67626), (True, '5', '5', 67627), (True, '91', '91', 67628), (True, '22', '22', 67629), (True, '178', '178', 67630), (True, '1', '1', 67631), (True, '121', '121', 67632), (True, '2', '2', 67633), (True, '500', '500', 67634), (True, '2', '2', 67635), (True, '9', '9', 67636), (True, '2', '2', 67637), (True, '55', '55', 67638), (True, '991', '991', 67639), (True, '995', '995', 67640), (True, '2', '2', 67641), (True, '1', '1', 67642), (True, '5500', '5500', 67643), (True, '3', '3', 67644), (True, '999999951', '999999951', 67645), (True, '999995010', '999995010', 67646), (True, '499999952', '499999952', 67647), (True, '999999950', '999999950', 67648), (True, '999999998', '999999998', 67649), (True, '3', '3', 67650), (True, '999999999', '999999999', 67651), (True, '499999999', '499999999', 67652), (True, '999999999999999998', '999999999999999998', 67653), (True, '999999999999999990', '999999999999999990', 67654), (True, '2', '2', 67655), (True, '1999999999999999', '1999999999999999', 67656), (True, '974999999999999999', '974999999999999999', 67657), (True, '5586592178770949', '5586592178770949', 67658), (True, '24999999999999999', '24999999999999999', 67659), (True, '25641025641025641', '25641025641025641', 67660), (True, '1333333333333333', '1333333333333333', 67661), (True, '0', '0', 67662), (True, '999999999990000001', '999999999990000001', 67663), (True, '100000000000000000', '100000000000000000', 67664), (True, '1', '1', 67665), (True, '0', '0', 67666), (True, '1', '1', 67667), (True, '1', '1', 67668), (True, '2', '2', 67669), (True, '1', '1', 67670), (False, '4', '0', 67671), (True, '0', '0', 67672), (True, '1000000001', '1000000001', 67673), (True, '3', '3', 67674), (True, '599999999999999', '599999999999999', 67675), (True, '999999999000000001', '999999999000000001', 67676), (True, '0', '0', 67677), (True, '99999999000000001', '99999999000000001', 67678), (True, '99010000000000009', '99010000000000009', 67679), (True, '1', '1', 67680), (True, '2', '2', 67681), (True, '4', '4', 67682), (True, '333333332', '333333332', 67683), (False, '10', '6', 67684), (True, '100000000000000000', '100000000000000000', 67685), (False, '8', '2', 67686), (True, '56', '56', 67687), (True, '33', '33', 67688), (True, '99000000000000001', '99000000000000001', 67689), (True, '296116756', '296116756', 67690), (True, '2', '2', 67691), (True, '499999999600000000', '499999999600000000', 67692)]",False,Wrong Answer,0.7910665071754358,0.965174129353234,False,0.036144578313253
309328,25794193,"n = int(input())
print ((1 << (n+1))-2)",815,4512,46,3/25/17 12:43,3,263,1,8,"[(True, '6', '6', 70196), (True, '2', '2', 70197), (True, '14', '14', 70198), (True, '62', '62', 70199), (True, '8190', '8190', 70200), (True, '34359738366', '34359738366', 70201), (True, '17592186044414', '17592186044414', 70202), (True, '1125899906842622', '1125899906842622', 70203), (True, '36028797018963966', '36028797018963966', 70204), (True, '72057594037927934', '72057594037927934', 70205)]",True,Accecpted,0.8091067115702212,0.9230769230769232,False,0.0
309327,25794137,"n = int(input())
print ((1 << n)+2)",815,4532,61,3/25/17 12:40,3,263,2,8,"[(True, '6', '6', 70196), (False, '4', '2', 70197), (False, '10', '14', 70198), (False, '34', '62', 70199), (False, '4098', '8190', 70200), (False, '17179869186', '34359738366', 70201), (False, '8796093022210', '17592186044414', 70202), (False, '562949953421314', '1125899906842622', 70203), (False, '18014398509481986', '36028797018963966', 70204), (False, '36028797018963970', '72057594037927934', 70205)]",False,Wrong Answer,0.8091067115702212,0.9230769230769232,False,0.9
3297745,29317942,"a, b=map(int,input().split())
s=int(a**0.5)
if(s*(s+1)>b):
    print(""Valera"")
else:
    print(""Vladik"")",841,4520,92,8/10/17 8:13,11,2851,1,8,"[(True, 'Valera', 'Valera', 241127), (True, 'Vladik', 'Vladik', 241128), (True, 'Vladik', 'Vladik', 241129), (True, 'Valera', 'Valera', 241130), (True, 'Vladik', 'Vladik', 241131), (True, 'Valera', 'Valera', 241132), (True, 'Vladik', 'Vladik', 241133), (True, 'Vladik', 'Vladik', 241134), (True, 'Valera', 'Valera', 241135), (True, 'Vladik', 'Vladik', 241136), (True, 'Vladik', 'Vladik', 241137), (True, 'Vladik', 'Vladik', 241138), (True, 'Valera', 'Valera', 241139), (True, 'Vladik', 'Vladik', 241140), (True, 'Valera', 'Valera', 241141), (True, 'Valera', 'Valera', 241142), (True, 'Vladik', 'Vladik', 241143), (True, 'Vladik', 'Vladik', 241144), (True, 'Valera', 'Valera', 241145), (True, 'Valera', 'Valera', 241146), (True, 'Valera', 'Valera', 241147), (True, 'Valera', 'Valera', 241148), (True, 'Valera', 'Valera', 241149), (True, 'Vladik', 'Vladik', 241150), (True, 'Vladik', 'Vladik', 241151), (True, 'Vladik', 'Vladik', 241152), (True, 'Vladik', 'Vladik', 241153), (True, 'Valera', 'Valera', 241154), (True, 'Valera', 'Valera', 241155), (True, 'Vladik', 'Vladik', 241156), (True, 'Vladik', 'Vladik', 241157), (True, 'Valera', 'Valera', 241158), (True, 'Valera', 'Valera', 241159), (True, 'Vladik', 'Vladik', 241160), (True, 'Vladik', 'Vladik', 241161), (True, 'Valera', 'Valera', 241162), (True, 'Vladik', 'Vladik', 241163), (True, 'Valera', 'Valera', 241164), (True, 'Valera', 'Valera', 241165), (True, 'Valera', 'Valera', 241166), (True, 'Vladik', 'Vladik', 241167), (True, 'Valera', 'Valera', 241168)]",True,Accecpted,0.488923022434901,0.9775784753363228,False,0.0
3297744,29317917,"a, b=map(int,input().split())
s=a**0.5
if(s*(s+1)>b):
    print(""Valera"")
else:
    print(""Vladik"")",841,4500,46,8/10/17 8:12,11,2851,2,8,"[(True, 'Valera', 'Valera', 241127), (False, 'Valera', 'Vladik', 241128), (True, 'Vladik', 'Vladik', 241129), (True, 'Valera', 'Valera', 241130), (True, 'Vladik', 'Vladik', 241131), (True, 'Valera', 'Valera', 241132), (False, 'Valera', 'Vladik', 241133), (False, 'Valera', 'Vladik', 241134), (True, 'Valera', 'Valera', 241135), (True, 'Vladik', 'Vladik', 241136), (True, 'Vladik', 'Vladik', 241137), (True, 'Vladik', 'Vladik', 241138), (True, 'Valera', 'Valera', 241139), (True, 'Vladik', 'Vladik', 241140), (True, 'Valera', 'Valera', 241141), (True, 'Valera', 'Valera', 241142), (False, 'Valera', 'Vladik', 241143), (False, 'Valera', 'Vladik', 241144), (True, 'Valera', 'Valera', 241145), (True, 'Valera', 'Valera', 241146), (True, 'Valera', 'Valera', 241147), (True, 'Valera', 'Valera', 241148), (True, 'Valera', 'Valera', 241149), (True, 'Vladik', 'Vladik', 241150), (True, 'Vladik', 'Vladik', 241151), (True, 'Vladik', 'Vladik', 241152), (False, 'Valera', 'Vladik', 241153), (True, 'Valera', 'Valera', 241154), (True, 'Valera', 'Valera', 241155), (True, 'Vladik', 'Vladik', 241156), (False, 'Valera', 'Vladik', 241157), (True, 'Valera', 'Valera', 241158), (True, 'Valera', 'Valera', 241159), (True, 'Vladik', 'Vladik', 241160), (False, 'Valera', 'Vladik', 241161), (True, 'Valera', 'Valera', 241162), (False, 'Valera', 'Vladik', 241163), (True, 'Valera', 'Valera', 241164), (True, 'Valera', 'Valera', 241165), (True, 'Valera', 'Valera', 241166), (False, 'Valera', 'Vladik', 241167), (True, 'Valera', 'Valera', 241168)]",False,Wrong Answer,0.488923022434901,0.9775784753363228,False,0.238095238095238
832767,26104808,"l = sorted(list(map(int,input().split())))
p = l[len(l)//2]
sh = 0
for i in l:
    sh += abs(i-p)
print(sh)",902,5428,77,4/3/17 19:45,11,764,1,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (True, '99', '99', 109990), (True, '99', '99', 109991), (True, '99', '99', 109992), (True, '2', '2', 109993), (True, '17', '17', 109994), (True, '69', '69', 109995), (True, '72', '72', 109996), (True, '25', '25', 109997), (True, '85', '85', 109998), (True, '52', '52', 109999), (True, '72', '72', 110000), (True, '11', '11', 110001), (True, '15', '15', 110002), (True, '88', '88', 110003), (True, '62', '62', 110004), (True, '70', '70', 110005), (True, '36', '36', 110006), (True, '61', '61', 110007), (True, '5', '5', 110008), (True, '29', '29', 110009), (True, '62', '62', 110010), (True, '69', '69', 110011), (True, '27', '27', 110012), (True, '33', '33', 110013), (True, '61', '61', 110014), (True, '67', '67', 110015), (True, '51', '51', 110016), (True, '55', '55', 110017), (True, '75', '75', 110018), (True, '67', '67', 110019), (True, '61', '61', 110020), (True, '49', '49', 110021), (True, '50', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (True, '8', '8', 110026), (True, '10', '10', 110027), (True, '49', '49', 110028), (True, '10', '10', 110029), (True, '8', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (True, '7', '7', 110033), (True, '99', '99', 110034), (True, '5', '5', 110035)]",True,Accecpted,0.6901670171940026,0.912280701754386,False,0.0
832751,26100406,"l = list(map(int,input().split()))
p = sum(l)//len(l)
sh = 0
for i in l:
    sh += abs(i-p)
print(sh)",902,4496,46,4/3/17 16:20,11,764,2,8,"[(True, '6', '6', 109988), (True, '20', '20', 109989), (False, '130', '99', 109990), (False, '126', '99', 109991), (False, '102', '99', 109992), (True, '2', '2', 109993), (False, '21', '17', 109994), (False, '86', '69', 109995), (False, '88', '72', 109996), (False, '30', '25', 109997), (False, '102', '85', 109998), (False, '68', '52', 109999), (False, '94', '72', 110000), (False, '14', '11', 110001), (False, '19', '15', 110002), (False, '106', '88', 110003), (False, '66', '62', 110004), (False, '84', '70', 110005), (False, '40', '36', 110006), (False, '80', '61', 110007), (False, '6', '5', 110008), (False, '32', '29', 110009), (False, '74', '62', 110010), (False, '82', '69', 110011), (False, '32', '27', 110012), (False, '34', '33', 110013), (False, '80', '61', 110014), (False, '71', '67', 110015), (False, '65', '51', 110016), (False, '59', '55', 110017), (False, '86', '75', 110018), (False, '72', '67', 110019), (False, '79', '61', 110020), (False, '50', '49', 110021), (False, '66', '50', 110022), (True, '2', '2', 110023), (True, '4', '4', 110024), (True, '6', '6', 110025), (True, '8', '8', 110026), (True, '10', '10', 110027), (False, '54', '49', 110028), (True, '10', '10', 110029), (False, '10', '8', 110030), (True, '2', '2', 110031), (True, '2', '2', 110032), (False, '8', '7', 110033), (False, '131', '99', 110034), (False, '6', '5', 110035)]",False,Wrong Answer,0.6901670171940026,0.912280701754386,False,0.7708333333333334
1221011,25809566,"def bmm(n,m):
    if min(n,m)==0:
        return max(n,m)
    return bmm(max(n,m)%min(n,m),min(n,m))
a , b , n = map(int,input().split())
B = 0
while True:
    if B==0:
        n -= bmm(n,a)
        if n<0:
            B = 1
            break
    else:
        n -= bmm(b,n)
        if n<0:
            B = 0
            break
    B += 1
    B = B%2
print(B)",902,4524,124,3/26/17 5:55,20,1107,1,8,"[(True, '0', '0', 136259), (True, '1', '1', 136260), (True, '1', '1', 136261), (True, '1', '1', 136262), (True, '1', '1', 136263), (True, '0', '0', 136264), (True, '1', '1', 136265), (True, '1', '1', 136266), (True, '0', '0', 136267), (True, '1', '1', 136268), (True, '1', '1', 136269), (True, '1', '1', 136270), (True, '1', '1', 136271), (True, '0', '0', 136272), (True, '1', '1', 136273), (True, '1', '1', 136274), (True, '1', '1', 136275), (True, '1', '1', 136276), (True, '1', '1', 136277), (True, '0', '0', 136278), (True, '1', '1', 136279), (True, '0', '0', 136280), (True, '0', '0', 136281), (True, '0', '0', 136282), (True, '0', '0', 136283), (True, '1', '1', 136284), (True, '1', '1', 136285), (True, '0', '0', 136286), (True, '1', '1', 136287), (True, '0', '0', 136288), (True, '0', '0', 136289), (True, '0', '0', 136290), (True, '0', '0', 136291), (True, '0', '0', 136292), (True, '1', '1', 136293), (True, '1', '1', 136294), (True, '1', '1', 136295), (True, '1', '1', 136296), (True, '1', '1', 136297), (True, '0', '0', 136298), (True, '0', '0', 136299), (True, '0', '0', 136300), (True, '1', '1', 136301), (True, '0', '0', 136302), (True, '0', '0', 136303)]",True,Accecpted,0.9452861848260063,0.9973474801061007,False,0.0
1221007,25801173,"def bmm(n,m):
    if min(n,m)==0:
        return max(n,m)
    return bmm(max(n,m)%min(n,m),min(n,m))
a , b , n = map(int,input().split())
B = 0
while True:
    if B==0:
        n -= bmm(n,a)
        if n<0:
            B = 1
            break
    else:
        n -= bmm(b,a)
        if n<0:
            B = 0
            break
    B += 1
    B = B%2
print(B)",902,4504,92,3/25/17 18:36,20,1107,2,8,"[(True, '0', '0', 136259), (True, '1', '1', 136260), (True, '1', '1', 136261), (False, '0', '1', 136262), (False, '0', '1', 136263), (True, '0', '0', 136264), (False, '0', '1', 136265), (True, '1', '1', 136266), (True, '0', '0', 136267), (False, '0', '1', 136268), (True, '1', '1', 136269), (False, '0', '1', 136270), (False, '0', '1', 136271), (True, '0', '0', 136272), (True, '1', '1', 136273), (True, '1', '1', 136274), (True, '1', '1', 136275), (True, '1', '1', 136276), (True, '1', '1', 136277), (True, '0', '0', 136278), (True, '1', '1', 136279), (True, '0', '0', 136280), (True, '0', '0', 136281), (True, '0', '0', 136282), (True, '0', '0', 136283), (False, '0', '1', 136284), (True, '1', '1', 136285), (True, '0', '0', 136286), (True, '1', '1', 136287), (True, '0', '0', 136288), (True, '0', '0', 136289), (True, '0', '0', 136290), (True, '0', '0', 136291), (True, '0', '0', 136292), (True, '1', '1', 136293), (True, '1', '1', 136294), (True, '1', '1', 136295), (True, '1', '1', 136296), (True, '1', '1', 136297), (True, '0', '0', 136298), (True, '0', '0', 136299), (True, '0', '0', 136300), (False, '0', '1', 136301), (True, '0', '0', 136302), (True, '0', '0', 136303)]",False,Wrong Answer,0.9452861848260063,0.9973474801061007,False,0.1777777777777777
2902307,25764222,"l = [""Sheldon"", ""Leonard"", ""Penny"", ""Rajesh"", ""Howard""]
n = int(input())-1
p = 0
w = -1
while True:
    w += 1
    p += 5*(2**w)
    if p>n:
        p -= 5*(2**w)
        k = n-p
        print(l[k//(2**w)])
        break",902,4512,78,3/24/17 9:18,12,2481,1,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (True, 'Penny', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (True, 'Penny', 'Penny', 216618), (True, 'Rajesh', 'Rajesh', 216619), (True, 'Howard', 'Howard', 216620), (True, 'Howard', 'Howard', 216621), (True, 'Penny', 'Penny', 216622), (True, 'Rajesh', 'Rajesh', 216623), (True, 'Leonard', 'Leonard', 216624), (True, 'Penny', 'Penny', 216625), (True, 'Howard', 'Howard', 216626), (True, 'Rajesh', 'Rajesh', 216627), (True, 'Rajesh', 'Rajesh', 216628), (True, 'Leonard', 'Leonard', 216629), (True, 'Penny', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (True, 'Howard', 'Howard', 216632), (True, 'Leonard', 'Leonard', 216633), (True, 'Rajesh', 'Rajesh', 216634), (True, 'Sheldon', 'Sheldon', 216635), (True, 'Rajesh', 'Rajesh', 216636), (True, 'Leonard', 'Leonard', 216637), (True, 'Howard', 'Howard', 216638), (True, 'Penny', 'Penny', 216639), (True, 'Penny', 'Penny', 216640), (True, 'Rajesh', 'Rajesh', 216641), (True, 'Sheldon', 'Sheldon', 216642), (True, 'Penny', 'Penny', 216643), (True, 'Penny', 'Penny', 216644), (True, 'Leonard', 'Leonard', 216645), (True, 'Howard', 'Howard', 216646), (True, 'Penny', 'Penny', 216647), (True, 'Penny', 'Penny', 216648), (True, 'Penny', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",True,Accecpted,0.5677761875319479,0.4260089686098655,False,0.0
2902306,25762230,"l = [""Sheldon"", ""Leonard"", ""Penny"", ""Rajesh"", ""Howard""]
n = int(input())
p = 0
sh = 0
w = 0
while True:
    w += 1
    p += 6
    if p>n:
        p -= 6
        print(l[((n-p-1)//w)%len(l)])
        break",902,4492,46,3/24/17 6:42,12,2481,2,8,"[(True, 'Sheldon', 'Sheldon', 216610), (False, 'Howard', 'Sheldon', 216611), (False, 'Sheldon', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (False, 'Leonard', 'Penny', 216618), (False, 'Howard', 'Rajesh', 216619), (False, 'Sheldon', 'Howard', 216620), (False, 'Sheldon', 'Howard', 216621), (False, 'Sheldon', 'Penny', 216622), (False, 'Sheldon', 'Rajesh', 216623), (False, 'Sheldon', 'Leonard', 216624), (False, 'Sheldon', 'Penny', 216625), (False, 'Sheldon', 'Howard', 216626), (False, 'Howard', 'Rajesh', 216627), (False, 'Howard', 'Rajesh', 216628), (False, 'Sheldon', 'Leonard', 216629), (False, 'Howard', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (True, 'Howard', 'Howard', 216632), (False, 'Sheldon', 'Leonard', 216633), (False, 'Sheldon', 'Rajesh', 216634), (False, 'Howard', 'Sheldon', 216635), (False, 'Sheldon', 'Rajesh', 216636), (False, 'Sheldon', 'Leonard', 216637), (False, 'Sheldon', 'Howard', 216638), (False, 'Howard', 'Penny', 216639), (False, 'Sheldon', 'Penny', 216640), (False, 'Sheldon', 'Rajesh', 216641), (True, 'Sheldon', 'Sheldon', 216642), (False, 'Sheldon', 'Penny', 216643), (False, 'Sheldon', 'Penny', 216644), (False, 'Sheldon', 'Leonard', 216645), (True, 'Howard', 'Howard', 216646)]",False,Wrong Answer,0.5677761875319479,0.4260089686098655,False,0.7297297297297297
1431806,24223164,"k = int(input())
l = int(input())
m = int(input())
n = int(input())
d = int(input())

hurt = 0
count = 1

while count <= d:
	if count % k == 0 or count % m == 0 or count % n == 0 or count % l == 0:
		hurt += 1
	count = count + 1	
print (hurt)",916,4508,218,1/28/17 14:19,14,1274,1,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (True, '35246', '35246', 147728), (True, '75083', '75083', 147729), (True, '24656', '24656', 147730), (True, '36320', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (True, '21956', '21956', 147738), (True, '32736', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (True, '36019', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (True, '9224', '9224', 147750), (True, '43539', '43539', 147751), (True, '2438', '2438', 147752), (True, '415', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",True,Accecpted,0.1470209552433825,0.2552858261550509,False,0.0
1431740,24145439,"k = int(input())
l = int(input())
m = int(input())
n = int(input())
d = int(input())

if k == 1 or l == 1 or m == 1 or n == 1:
	print (d)
	exit()
first_sum = 0
first_list = []
while first_sum + k <= d:
	first_sum = first_sum + k
	first_list = first_list + [first_sum]
	if first_sum % l == 0 or first_sum % m == 0 or first_sum % n == 0:
		first_list.remove(first_sum)


second_sum = 0
second_list = []
while second_sum + l <= d:
	second_sum = second_sum + l
	second_list = second_list + [second_sum]
	if second_sum % m == 0 or second_sum % n == 0:
		second_list.remove(second_sum)

	
third_sum = 0
third_list = []
while third_sum + m <= d:
	third_sum = third_sum + m
	third_list = third_list + [third_sum]
	if third_sum % n == 0:
		third_list.remove(third_sum)


forth_sum = 0
forth_list = []
while forth_sum + n <= d:
	forth_sum = forth_sum + n
	forth_list = forth_list + [forth_sum]


ans = len(first_list) + len(second_list) + len(third_list) + len(forth_list)


print (ans)",916,5452,2000,1/26/17 13:22,47,1274,3,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (True, '35246', '35246', 147728), (True, '75083', '75083', 147729), (True, '24656', '24656', 147730), (True, '36320', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (True, '21956', '21956', 147738), (True, '32736', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (True, '36019', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (True, '9224', '9224', 147750), (True, '43539', '43539', 147751), (True, '2438', '2438', 147752), (True, '415', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",True,Time Limit,0.1470209552433825,0.2552858261550509,False,0.0
196289,26284839,"a = list(input().split())
x = int(a[0])
y = 0

if ""week"" in a:
       if x==5 or x==6:
              y = 53
       else:
              y = 52

if ""month"" in a:
       if x==31:
              y = 7
       elif x==30:
              y = 11
       elif x<=29:
              y = 12

print(y)",933,5428,62,4/11/17 0:42,37,159,1,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (True, '53', '53', 61003), (True, '52', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (True, '12', '12', 61032)]",True,Accecpted,0.8982709330397213,0.9937888198757764,False,0.0
196288,26284784,"a = list(input().split())
x = int(a[0])
y = 0

if ""week"" in a:
       if x==6 or x==7:
              y = 53
       else:
              y = 52

if ""month"" in a:
       if x==31:
              y = 7
       elif x==30:
              y = 11
       elif x<=29:
              y = 12

print(y)",933,5416,62,4/11/17 0:38,37,159,2,8,"[(True, '52', '52', 60995), (True, '11', '11', 60996), (True, '12', '12', 60997), (True, '7', '7', 60998), (True, '53', '53', 60999), (True, '52', '52', 61000), (True, '52', '52', 61001), (True, '52', '52', 61002), (False, '52', '53', 61003), (False, '53', '52', 61004), (True, '12', '12', 61005), (True, '12', '12', 61006), (True, '12', '12', 61007), (True, '12', '12', 61008), (True, '12', '12', 61009), (True, '12', '12', 61010), (True, '12', '12', 61011), (True, '12', '12', 61012), (True, '12', '12', 61013), (True, '12', '12', 61014), (True, '12', '12', 61015), (True, '12', '12', 61016), (True, '12', '12', 61017), (True, '12', '12', 61018), (True, '12', '12', 61019), (True, '12', '12', 61020), (True, '12', '12', 61021), (True, '12', '12', 61022), (True, '12', '12', 61023), (True, '12', '12', 61024), (True, '12', '12', 61025), (True, '12', '12', 61026), (True, '12', '12', 61027), (True, '12', '12', 61028), (True, '12', '12', 61029), (True, '12', '12', 61030), (True, '12', '12', 61031), (True, '12', '12', 61032)]",False,Wrong Answer,0.8982709330397213,0.9937888198757764,False,0.0526315789473684
1592397,9919394,"import math
prime = [2]
def isPrime(arg):
    flag = True
    for i in range(3,arg+1):
        for j in range(2,i//2+1):
            if i%j == 0: 
                flag = False
                break
        if flag: prime.append(i)
        flag = True
n,k = map(int,input().split())
isPrime(n)
#print(prime)
count = 0
for i in range(len(prime)):
    #print(prime[i])
    for j in range(len(prime)-1):
        #print(prime[j],prime[j+1],count)
        if prime[j]+prime[j+1]+1 == prime[i]: 
            count+=1
if count >= k: 
    print(""YES"")
else: print(""NO"")",935,0,124,2/18/15 23:14,24,1399,1,8,"[(True, 'YES', 'YES', 154157), (True, 'NO', 'NO', 154158), (True, 'YES', 'YES', 154159), (True, 'YES', 'YES', 154160), (True, 'YES', 'YES', 154161), (True, 'NO', 'NO', 154162), (True, 'YES', 'YES', 154163), (True, 'YES', 'YES', 154164), (True, 'NO', 'NO', 154165), (True, 'YES', 'YES', 154166), (True, 'YES', 'YES', 154167), (True, 'NO', 'NO', 154168), (True, 'YES', 'YES', 154169), (True, 'NO', 'NO', 154170), (True, 'YES', 'YES', 154171), (True, 'YES', 'YES', 154172), (True, 'YES', 'YES', 154173), (True, 'NO', 'NO', 154174), (True, 'NO', 'NO', 154175), (True, 'YES', 'YES', 154176), (True, 'YES', 'YES', 154177), (True, 'NO', 'NO', 154178), (True, 'YES', 'YES', 154179), (True, 'NO', 'NO', 154180), (True, 'YES', 'YES', 154181), (True, 'YES', 'YES', 154182), (True, 'YES', 'YES', 154183), (True, 'NO', 'NO', 154184), (True, 'NO', 'NO', 154185), (True, 'YES', 'YES', 154186), (True, 'YES', 'YES', 154187), (True, 'YES', 'YES', 154188), (True, 'NO', 'NO', 154189), (True, 'NO', 'NO', 154190), (True, 'YES', 'YES', 154191)]",True,Accecpted,0.9581282631934456,0.9982847341337908,False,0.0
1592396,9919372,"import math
prime = [2]
def isPrime(arg):
    flag = True
    for i in range(3,arg+1):
        for j in range(2,i//2+1):
            if i%j == 0: 
                flag = False
                break
        if flag: prime.append(i)
        flag = True
n,k = map(int,input().split())
isPrime(n)
#print(prime)
count = 0
for i in range(len(prime)):
    #print(prime[i])
    for j in range(len(prime)-1):
        #print(prime[j],prime[j+1],count)
        if prime[j]+prime[j+1]+1 == prime[i]: 
            count+=1
if count == k: 
    print(""YES"")
else: print(""NO"")",935,0,124,2/18/15 23:11,24,1399,2,8,"[(True, 'YES', 'YES', 154157), (True, 'NO', 'NO', 154158), (True, 'YES', 'YES', 154159), (True, 'YES', 'YES', 154160), (True, 'YES', 'YES', 154161), (True, 'NO', 'NO', 154162), (True, 'YES', 'YES', 154163), (True, 'YES', 'YES', 154164), (True, 'NO', 'NO', 154165), (True, 'YES', 'YES', 154166), (True, 'YES', 'YES', 154167), (True, 'NO', 'NO', 154168), (True, 'YES', 'YES', 154169), (True, 'NO', 'NO', 154170), (True, 'YES', 'YES', 154171), (True, 'YES', 'YES', 154172), (True, 'YES', 'YES', 154173), (True, 'NO', 'NO', 154174), (True, 'NO', 'NO', 154175), (True, 'YES', 'YES', 154176), (True, 'YES', 'YES', 154177), (True, 'NO', 'NO', 154178), (True, 'YES', 'YES', 154179), (True, 'NO', 'NO', 154180), (True, 'YES', 'YES', 154181), (True, 'YES', 'YES', 154182), (True, 'YES', 'YES', 154183), (True, 'NO', 'NO', 154184), (True, 'NO', 'NO', 154185), (True, 'YES', 'YES', 154186), (True, 'YES', 'YES', 154187), (False, 'NO', 'YES', 154188), (True, 'NO', 'NO', 154189), (True, 'NO', 'NO', 154190), (True, 'YES', 'YES', 154191)]",False,Wrong Answer,0.9581282631934456,0.9982847341337908,False,0.0285714285714285
1817010,9881225,"x,t,a,b,dA,dB = map(int, input().split())
if x==0 or a==x or b==x:
    print (""YES"")
    exit()
tempA = a
tempB = b
for i in range(t):
    tempA = a - i*dA
    #print(""A"", tempA)
    tempB = b
    for j in range(t):
        tempB = b - j*dB
        #print(""B"", tempB)
        if tempA+tempB == x or tempA == x or tempB == x:
            print (""YES"")
            exit()
print (""NO"")",935,12,124,2/17/15 14:45,17,1602,1,8,"[(True, 'YES', 'YES', 164786), (True, 'NO', 'NO', 164787), (True, 'YES', 'YES', 164788), (True, 'YES', 'YES', 164789), (True, 'YES', 'YES', 164790), (True, 'YES', 'YES', 164791), (True, 'NO', 'NO', 164792), (True, 'YES', 'YES', 164793), (True, 'NO', 'NO', 164794), (True, 'YES', 'YES', 164795), (True, 'NO', 'NO', 164796), (True, 'NO', 'NO', 164797), (True, 'NO', 'NO', 164798), (True, 'YES', 'YES', 164799), (True, 'NO', 'NO', 164800), (True, 'NO', 'NO', 164801), (True, 'NO', 'NO', 164802), (True, 'YES', 'YES', 164803), (True, 'NO', 'NO', 164804), (True, 'NO', 'NO', 164805), (True, 'NO', 'NO', 164806), (True, 'NO', 'NO', 164807), (True, 'NO', 'NO', 164808), (True, 'NO', 'NO', 164809), (True, 'NO', 'NO', 164810), (True, 'YES', 'YES', 164811), (True, 'YES', 'YES', 164812), (True, 'YES', 'YES', 164813), (True, 'YES', 'YES', 164814), (True, 'YES', 'YES', 164815), (True, 'YES', 'YES', 164816), (True, 'YES', 'YES', 164817), (True, 'YES', 'YES', 164818), (True, 'YES', 'YES', 164819), (True, 'YES', 'YES', 164820), (True, 'YES', 'YES', 164821), (True, 'YES', 'YES', 164822), (True, 'YES', 'YES', 164823), (True, 'YES', 'YES', 164824), (True, 'YES', 'YES', 164825), (True, 'YES', 'YES', 164826), (True, 'YES', 'YES', 164827), (True, 'YES', 'YES', 164828), (True, 'NO', 'NO', 164829), (True, 'NO', 'NO', 164830), (True, 'YES', 'YES', 164831), (True, 'YES', 'YES', 164832), (True, 'NO', 'NO', 164833), (True, 'NO', 'NO', 164834), (True, 'NO', 'NO', 164835), (True, 'YES', 'YES', 164836)]",True,Accecpted,0.717902747813438,0.888268156424581,False,0.0
1817009,9881195,"x,t,a,b,dA,dB = map(int, input().split())
if x==0 or a==x or b==x:
    print (""YES"")
    exit()
tempA = a
tempB = b
for i in range(t):
    tempA = a - i*dA
    tempB = b
    for j in range(t):
        tempB = b - j*dB
        if tempA+tempB == x:
            print (""YES"")
            exit()
print (""NO"")",935,4,124,2/17/15 14:41,15,1602,2,8,"[(True, 'YES', 'YES', 164786), (True, 'NO', 'NO', 164787), (True, 'YES', 'YES', 164788), (True, 'YES', 'YES', 164789), (True, 'YES', 'YES', 164790), (True, 'YES', 'YES', 164791), (True, 'NO', 'NO', 164792), (False, 'NO', 'YES', 164793), (True, 'NO', 'NO', 164794), (False, 'NO', 'YES', 164795), (True, 'NO', 'NO', 164796), (True, 'NO', 'NO', 164797), (True, 'NO', 'NO', 164798), (True, 'YES', 'YES', 164799), (True, 'NO', 'NO', 164800), (True, 'NO', 'NO', 164801), (True, 'NO', 'NO', 164802), (False, 'NO', 'YES', 164803), (True, 'NO', 'NO', 164804), (True, 'NO', 'NO', 164805), (True, 'NO', 'NO', 164806), (True, 'NO', 'NO', 164807), (True, 'NO', 'NO', 164808), (True, 'NO', 'NO', 164809), (True, 'NO', 'NO', 164810), (True, 'YES', 'YES', 164811), (True, 'YES', 'YES', 164812), (True, 'YES', 'YES', 164813), (True, 'YES', 'YES', 164814), (True, 'YES', 'YES', 164815), (True, 'YES', 'YES', 164816), (True, 'YES', 'YES', 164817), (True, 'YES', 'YES', 164818), (True, 'YES', 'YES', 164819), (True, 'YES', 'YES', 164820), (True, 'YES', 'YES', 164821), (False, 'NO', 'YES', 164822), (False, 'NO', 'YES', 164823), (False, 'NO', 'YES', 164824), (False, 'NO', 'YES', 164825), (True, 'YES', 'YES', 164826), (True, 'YES', 'YES', 164827), (True, 'YES', 'YES', 164828), (True, 'NO', 'NO', 164829), (True, 'NO', 'NO', 164830), (False, 'NO', 'YES', 164831), (False, 'NO', 'YES', 164832), (True, 'NO', 'NO', 164833), (True, 'NO', 'NO', 164834), (True, 'NO', 'NO', 164835), (True, 'YES', 'YES', 164836)]",False,Wrong Answer,0.717902747813438,0.888268156424581,False,0.1764705882352941
122090,26600931,"a, b, c=map(int, input().split())
print(min(a+b+c,2*a+2*c, 2*b+2*c, 2*a+2*b))",991,5416,62,4/23/17 13:07,3,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.4347208719449914,0.974025974025974,False,0.0
122089,26600766,"a, b, c=map(int, input().split())
print(min(a+b+c,2*a+c, 2*b+c, 2*a+2*b))",991,4468,61,4/23/17 12:58,3,102,2,8,"[(False, '50', '60', 55884), (True, '4', '4', 55885), (False, '100', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (False, '80', '92', 55889), (False, '132993', '203802', 55890), (False, '55006614', '55041796', 55891), (False, '7', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (False, '4884', '7326', 55895), (False, '501700', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (False, '2462', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (False, '6', '8', 55902), (False, '3', '4', 55903), (False, '3', '4', 55904)]",False,Wrong Answer,0.4347208719449914,0.974025974025974,False,0.5714285714285714
720559,25462378,"a=int(input())
b=[""I love that "",""I hate that ""]
d=[]
c=""""
if a%2==0:
    i=0
    while i<a-1:
        d.append(b[(i-1)%2])
        i+=1
else:
    i=0
    while i<a+1:
        d.append(b[(i-1)%2])
        i+=1
if a%2==1:
    p=1
    while p<a:
        c+=b[(p)%2]
        p+=1
    print(c+""I hate it"")
else:
    l=0
    while l<len(d):
        c+=d[l]
        l+=1
    print(c+""I love it"")",991,4516,62,3/14/17 0:14,51,668,1,8,"[(True, 'I hate it', 'I hate it', 100802), (True, 'I hate that I love it', 'I hate that I love it', 100803), (True, 'I hate that I love that I hate it', 'I hate that I love that I hate it', 100804), (True, 'I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love it', 100805), (True, 'I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate it', 100806), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100807), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100808), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100809), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100819), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100820)]",True,Accecpted,0.2487126604299891,0.2975460122699386,False,0.0
720557,25462063,"a=int(input())
b=[""I love that "",""I hate that ""]
d=[]
c=""""
i=1
while i<a:
    d.append(b[(i-1)%2])
    i+=1
l=0
while l<len(d):
    c+=d[len(d)-1-l]
    l+=1
print(d)
print(c+""I hate it"")",991,4508,31,3/13/17 23:45,27,668,2,8,"[(False, '[]\nI hate it', 'I hate it', 100802), (False, ""['I love that ']\nI love that I hate it"", 'I hate that I love it', 100803), (False, ""['I love that ', 'I hate that ']\nI hate that I love that I hate it"", 'I hate that I love that I hate it', 100804), (False, ""['I love that ', 'I hate that ', 'I love that ']\nI love that I hate that I love that I hate it"", 'I hate that I love that I hate that I love it', 100805), (False, ""['I love that ', 'I hate that ', 'I love that ', 'I hate that ']\nI hate that I love that I hate that I love that I hate it"", 'I hate that I love that I hate that I love that I hate it', 100806), (False, ""['I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ']\nI love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it"", 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100807), (False, ""['I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ']\nI love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it"", 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100808), (False, ""['I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ']\nI hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it"", 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100809), (False, ""['I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ']\nI hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it"", 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100819), (False, ""['I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ', 'I hate that ', 'I love that ']\nI love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it"", 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100820)]",False,Wrong Answer,0.2487126604299891,0.2975460122699386,False,1.0
877152,26318575,"k, r=map(int, input().split())
i=1
while (i*k-r)%10!=0 and (i*k)%10!=0:
    i+=1
print(i)",991,5436,62,4/12/17 16:34,9,814,1,8,"[(True, '9', '9', 113435), (True, '1', '1', 113436), (True, '2', '2', 113437), (True, '1', '1', 113438), (True, '9', '9', 113439), (True, '1', '1', 113440), (True, '1', '1', 113441), (True, '1', '1', 113442), (True, '2', '2', 113443), (True, '1', '1', 113444), (True, '2', '2', 113445), (True, '2', '2', 113446), (True, '3', '3', 113447), (True, '4', '4', 113448), (True, '5', '5', 113449), (True, '6', '6', 113450), (True, '7', '7', 113451), (True, '8', '8', 113452), (True, '9', '9', 113453), (True, '5', '5', 113454), (True, '3', '3', 113455), (True, '7', '7', 113456), (True, '4', '4', 113457), (True, '3', '3', 113458), (True, '4', '4', 113459), (True, '5', '5', 113460), (True, '6', '6', 113461), (True, '7', '7', 113462), (True, '8', '8', 113463), (True, '1', '1', 113464), (True, '1', '1', 113465), (True, '1', '1', 113466), (True, '1', '1', 113467), (True, '1', '1', 113468), (True, '1', '1', 113469), (True, '1', '1', 113470), (True, '8', '8', 113471), (True, '7', '7', 113472), (True, '4', '4', 113473), (True, '5', '5', 113474), (True, '5', '5', 113475), (True, '1', '1', 113476), (True, '2', '2', 113477), (True, '2', '2', 113478), (True, '1', '1', 113479), (True, '5', '5', 113480), (True, '1', '1', 113481), (True, '5', '5', 113482), (True, '5', '5', 113483), (True, '5', '5', 113484), (True, '5', '5', 113485), (True, '5', '5', 113486), (True, '5', '5', 113487), (True, '1', '1', 113488)]",True,Accecpted,0.4671379777282001,0.979381443298969,False,0.0
877151,26318551,"k, r=map(int, input().split())
i=1
while (i*k-r)%10==0 and (i*k)%10==0:
    i+=1
print(i)",991,4480,46,4/12/17 16:33,9,814,2,8,"[(False, '1', '9', 113435), (True, '1', '1', 113436), (False, '1', '2', 113437), (True, '1', '1', 113438), (False, '1', '9', 113439), (True, '1', '1', 113440), (True, '1', '1', 113441), (True, '1', '1', 113442), (False, '1', '2', 113443), (True, '1', '1', 113444), (False, '1', '2', 113445), (False, '1', '2', 113446), (False, '1', '3', 113447), (False, '1', '4', 113448), (False, '1', '5', 113449), (False, '1', '6', 113450), (False, '1', '7', 113451), (False, '1', '8', 113452), (False, '1', '9', 113453), (False, '1', '5', 113454), (False, '1', '3', 113455), (False, '1', '7', 113456), (False, '1', '4', 113457), (False, '1', '3', 113458), (False, '1', '4', 113459), (False, '1', '5', 113460), (False, '1', '6', 113461), (False, '1', '7', 113462), (False, '1', '8', 113463), (True, '1', '1', 113464), (True, '1', '1', 113465), (True, '1', '1', 113466), (True, '1', '1', 113467), (True, '1', '1', 113468), (True, '1', '1', 113469), (True, '1', '1', 113470), (False, '1', '8', 113471), (False, '1', '7', 113472), (False, '1', '4', 113473), (False, '1', '5', 113474), (False, '1', '5', 113475), (True, '1', '1', 113476), (False, '1', '2', 113477), (False, '1', '2', 113478), (True, '1', '1', 113479), (False, '1', '5', 113480), (True, '1', '1', 113481), (False, '1', '5', 113482), (False, '1', '5', 113483), (False, '1', '5', 113484), (False, '1', '5', 113485), (False, '1', '5', 113486), (False, '1', '5', 113487), (True, '1', '1', 113488)]",False,Wrong Answer,0.4671379777282001,0.979381443298969,False,0.6851851851851852
1045015,27204552,"n, k=map(int, input().split())
a={1:31,2:28,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31}
dienos=a[n]
j=0
i=k-1
for t in range(a[n]):
    if i==7:
        j+=1
        i=0
    if t==a[n]-1 and i!=7:
        j+=1
    i+=1
print(j)",991,0,62,5/18/17 23:52,25,968,1,8,"[(True, '6', '6', 125746), (True, '5', '5', 125747), (True, '5', '5', 125748), (True, '5', '5', 125749), (True, '4', '4', 125750), (True, '6', '6', 125751), (True, '5', '5', 125752), (True, '5', '5', 125753), (True, '5', '5', 125754), (True, '5', '5', 125755), (True, '5', '5', 125756), (True, '6', '6', 125757), (True, '6', '6', 125758), (True, '4', '4', 125759), (True, '5', '5', 125760), (True, '5', '5', 125761), (True, '5', '5', 125762), (True, '5', '5', 125763), (True, '5', '5', 125764), (True, '5', '5', 125765), (True, '5', '5', 125766), (True, '5', '5', 125767), (True, '5', '5', 125768), (True, '5', '5', 125769), (True, '5', '5', 125770), (True, '6', '6', 125771), (True, '6', '6', 125772), (True, '5', '5', 125773), (True, '5', '5', 125774), (True, '5', '5', 125775), (True, '5', '5', 125776), (True, '5', '5', 125777), (True, '5', '5', 125778), (True, '6', '6', 125779), (True, '5', '5', 125780), (True, '5', '5', 125781), (True, '5', '5', 125782), (True, '5', '5', 125783), (True, '5', '5', 125784), (True, '6', '6', 125785), (True, '6', '6', 125786), (True, '5', '5', 125787), (True, '5', '5', 125788), (True, '5', '5', 125789), (True, '5', '5', 125790), (True, '5', '5', 125791), (True, '5', '5', 125792), (True, '6', '6', 125793), (True, '5', '5', 125794), (True, '5', '5', 125795), (True, '5', '5', 125796), (True, '5', '5', 125797), (True, '5', '5', 125798), (True, '6', '6', 125799), (True, '6', '6', 125800), (True, '5', '5', 125801), (True, '5', '5', 125802), (True, '5', '5', 125803), (True, '5', '5', 125804), (True, '5', '5', 125805), (True, '6', '6', 125806), (True, '6', '6', 125807), (True, '5', '5', 125808), (True, '5', '5', 125809), (True, '5', '5', 125810), (True, '5', '5', 125811), (True, '5', '5', 125812), (True, '5', '5', 125813), (True, '6', '6', 125814), (True, '5', '5', 125815), (True, '5', '5', 125816), (True, '5', '5', 125817), (True, '5', '5', 125818), (True, '5', '5', 125819), (True, '6', '6', 125820), (True, '6', '6', 125821), (True, '5', '5', 125822), (True, '5', '5', 125823), (True, '5', '5', 125824), (True, '5', '5', 125825), (True, '5', '5', 125826), (True, '5', '5', 125827), (True, '6', '6', 125828), (True, '5', '5', 125829), (True, '5', '5', 125830), (True, '5', '5', 125831), (True, '5', '5', 125832), (True, '5', '5', 125833), (True, '6', '6', 125834), (True, '6', '6', 125835), (True, '5', '5', 125836), (True, '5', '5', 125837), (True, '6', '6', 125838), (True, '5', '5', 125839), (True, '6', '6', 125840), (True, '5', '5', 125841), (True, '6', '6', 125842), (True, '6', '6', 125843), (True, '5', '5', 125844), (True, '6', '6', 125845), (True, '5', '5', 125846), (True, '6', '6', 125847), (True, '6', '6', 125848), (True, '5', '5', 125849)]",True,Accecpted,0.8725129388059689,0.9961538461538462,False,0.0
1045014,27204511,"n, k=map(int, input().split())
a={1:31,2:28,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31}
dienos=a[n]
j=0
i=k
for t in range(a[n]):
    if i==7:
        j+=1
        i=0
    if t==a[n]-1 and i!=7:
        j+=1
    i+=1
print(j)",991,0,61,5/18/17 23:49,25,968,2,8,"[(True, '6', '6', 125746), (True, '5', '5', 125747), (False, '6', '5', 125748), (True, '5', '5', 125749), (False, '5', '4', 125750), (True, '6', '6', 125751), (True, '5', '5', 125752), (True, '5', '5', 125753), (True, '5', '5', 125754), (True, '5', '5', 125755), (False, '6', '5', 125756), (True, '6', '6', 125757), (True, '6', '6', 125758), (False, '5', '4', 125759), (True, '5', '5', 125760), (True, '5', '5', 125761), (True, '5', '5', 125762), (True, '5', '5', 125763), (True, '5', '5', 125764), (True, '5', '5', 125765), (True, '5', '5', 125766), (True, '5', '5', 125767), (True, '5', '5', 125768), (True, '5', '5', 125769), (False, '6', '5', 125770), (True, '6', '6', 125771), (True, '6', '6', 125772), (True, '5', '5', 125773), (True, '5', '5', 125774), (True, '5', '5', 125775), (True, '5', '5', 125776), (True, '5', '5', 125777), (False, '6', '5', 125778), (True, '6', '6', 125779), (True, '5', '5', 125780), (True, '5', '5', 125781), (True, '5', '5', 125782), (True, '5', '5', 125783), (False, '6', '5', 125784), (True, '6', '6', 125785), (True, '6', '6', 125786), (True, '5', '5', 125787), (True, '5', '5', 125788), (True, '5', '5', 125789), (True, '5', '5', 125790), (True, '5', '5', 125791), (False, '6', '5', 125792), (True, '6', '6', 125793), (True, '5', '5', 125794), (True, '5', '5', 125795), (True, '5', '5', 125796), (True, '5', '5', 125797), (False, '6', '5', 125798), (True, '6', '6', 125799), (True, '6', '6', 125800), (True, '5', '5', 125801), (True, '5', '5', 125802), (True, '5', '5', 125803), (True, '5', '5', 125804), (False, '6', '5', 125805), (True, '6', '6', 125806), (True, '6', '6', 125807), (True, '5', '5', 125808), (True, '5', '5', 125809), (True, '5', '5', 125810), (True, '5', '5', 125811), (True, '5', '5', 125812), (False, '6', '5', 125813), (True, '6', '6', 125814), (True, '5', '5', 125815), (True, '5', '5', 125816), (True, '5', '5', 125817), (True, '5', '5', 125818), (False, '6', '5', 125819), (True, '6', '6', 125820), (True, '6', '6', 125821), (True, '5', '5', 125822), (True, '5', '5', 125823), (True, '5', '5', 125824), (True, '5', '5', 125825), (True, '5', '5', 125826), (False, '6', '5', 125827), (True, '6', '6', 125828), (True, '5', '5', 125829), (True, '5', '5', 125830), (True, '5', '5', 125831), (True, '5', '5', 125832), (False, '6', '5', 125833), (True, '6', '6', 125834), (True, '6', '6', 125835), (True, '5', '5', 125836), (False, '6', '5', 125837), (True, '6', '6', 125838), (True, '5', '5', 125839), (True, '6', '6', 125840), (True, '5', '5', 125841), (True, '6', '6', 125842), (True, '6', '6', 125843), (True, '5', '5', 125844), (True, '6', '6', 125845), (False, '6', '5', 125846), (True, '6', '6', 125847), (True, '6', '6', 125848), (False, '6', '5', 125849)]",False,Wrong Answer,0.8725129388059689,0.9961538461538462,False,0.1634615384615384
1324639,26773765,"print(['YES','NO'][not set('HQ9')&set(input())])",991,5428,124,4/30/17 22:09,1,1198,1,8,"[(True, 'YES', 'YES', 142021), (True, 'NO', 'NO', 142022), (True, 'NO', 'NO', 142023), (True, 'NO', 'NO', 142024), (True, 'YES', 'YES', 142025), (True, 'YES', 'YES', 142026), (True, 'YES', 'YES', 142027), (True, 'NO', 'NO', 142028), (True, 'NO', 'NO', 142029), (True, 'YES', 'YES', 142030), (True, 'YES', 'YES', 142031), (True, 'NO', 'NO', 142032), (True, 'YES', 'YES', 142033), (True, 'YES', 'YES', 142034), (True, 'YES', 'YES', 142035), (True, 'NO', 'NO', 142036), (True, 'YES', 'YES', 142037), (True, 'YES', 'YES', 142038), (True, 'YES', 'YES', 142039), (True, 'YES', 'YES', 142040), (True, 'YES', 'YES', 142041), (True, 'YES', 'YES', 142042), (True, 'NO', 'NO', 142043), (True, 'YES', 'YES', 142044), (True, 'YES', 'YES', 142045), (True, 'NO', 'NO', 142046), (True, 'YES', 'YES', 142047), (True, 'YES', 'YES', 142048), (True, 'NO', 'NO', 142049), (True, 'YES', 'YES', 142050), (True, 'YES', 'YES', 142051), (True, 'NO', 'NO', 142052), (True, 'YES', 'YES', 142053), (True, 'YES', 'YES', 142054), (True, 'YES', 'YES', 142055), (True, 'NO', 'NO', 142056), (True, 'YES', 'YES', 142057), (True, 'YES', 'YES', 142058), (True, 'YES', 'YES', 142059), (True, 'YES', 'YES', 142060), (True, 'YES', 'YES', 142061), (True, 'NO', 'NO', 142062), (True, 'YES', 'YES', 142063), (True, 'YES', 'YES', 142064), (True, 'YES', 'YES', 142065), (True, 'YES', 'YES', 142066), (True, 'YES', 'YES', 142067), (True, 'YES', 'YES', 142068), (True, 'NO', 'NO', 142069), (True, 'YES', 'YES', 142070), (True, 'YES', 'YES', 142071), (True, 'YES', 'YES', 142072), (True, 'NO', 'NO', 142073), (True, 'YES', 'YES', 142074), (True, 'YES', 'YES', 142075), (True, 'NO', 'NO', 142076), (True, 'YES', 'YES', 142077), (True, 'YES', 'YES', 142078), (True, 'YES', 'YES', 142079), (True, 'YES', 'YES', 142080), (True, 'YES', 'YES', 142081), (True, 'YES', 'YES', 142082), (True, 'YES', 'YES', 142083), (True, 'YES', 'YES', 142084), (True, 'NO', 'NO', 142085), (True, 'NO', 'NO', 142086), (True, 'NO', 'NO', 142087), (True, 'YES', 'YES', 142088), (True, 'YES', 'YES', 142089), (True, 'NO', 'NO', 142090), (True, 'NO', 'NO', 142091), (True, 'NO', 'NO', 142092), (True, 'NO', 'NO', 142093), (True, 'YES', 'YES', 142094), (True, 'NO', 'NO', 142095), (True, 'NO', 'NO', 142096), (True, 'NO', 'NO', 142097), (True, 'NO', 'NO', 142098), (True, 'NO', 'NO', 142099), (True, 'YES', 'YES', 142100), (True, 'YES', 'YES', 142101), (True, 'NO', 'NO', 142102), (True, 'YES', 'YES', 142103), (True, 'YES', 'YES', 142104), (True, 'NO', 'NO', 142105)]",True,Accecpted,0.0,0.0983606557377049,False,0.0
1324009,26337251,"a=input()
b=""HQ9+""
j=0
for i in a:
    if i in b:
        break
    j+=1
if len(a)==j:
    print(""NO"")
else:
    print(""YES"")",991,4488,122,4/13/17 15:46,11,1198,2,8,"[(True, 'YES', 'YES', 142021), (True, 'NO', 'NO', 142022), (False, 'YES', 'NO', 142023), (True, 'NO', 'NO', 142024), (True, 'YES', 'YES', 142025), (True, 'YES', 'YES', 142026), (True, 'YES', 'YES', 142027), (False, 'YES', 'NO', 142028), (True, 'NO', 'NO', 142029), (True, 'YES', 'YES', 142030), (True, 'YES', 'YES', 142031), (True, 'NO', 'NO', 142032), (True, 'YES', 'YES', 142033), (True, 'YES', 'YES', 142034), (True, 'YES', 'YES', 142035), (True, 'NO', 'NO', 142036), (True, 'YES', 'YES', 142037), (True, 'YES', 'YES', 142038), (True, 'YES', 'YES', 142039), (True, 'YES', 'YES', 142040), (True, 'YES', 'YES', 142041), (True, 'YES', 'YES', 142042), (True, 'NO', 'NO', 142043), (True, 'YES', 'YES', 142044), (True, 'YES', 'YES', 142045), (True, 'NO', 'NO', 142046), (True, 'YES', 'YES', 142047), (True, 'YES', 'YES', 142048), (True, 'NO', 'NO', 142049), (True, 'YES', 'YES', 142050), (True, 'YES', 'YES', 142051), (True, 'NO', 'NO', 142052), (True, 'YES', 'YES', 142053), (True, 'YES', 'YES', 142054), (True, 'YES', 'YES', 142055), (True, 'NO', 'NO', 142056), (True, 'YES', 'YES', 142057), (True, 'YES', 'YES', 142058), (True, 'YES', 'YES', 142059), (True, 'YES', 'YES', 142060), (True, 'YES', 'YES', 142061), (True, 'NO', 'NO', 142062), (True, 'YES', 'YES', 142063), (True, 'YES', 'YES', 142064), (True, 'YES', 'YES', 142065), (True, 'YES', 'YES', 142066), (True, 'YES', 'YES', 142067), (True, 'YES', 'YES', 142068), (True, 'NO', 'NO', 142069), (True, 'YES', 'YES', 142070), (True, 'YES', 'YES', 142071), (True, 'YES', 'YES', 142072), (True, 'NO', 'NO', 142073), (True, 'YES', 'YES', 142074), (True, 'YES', 'YES', 142075), (False, 'YES', 'NO', 142076), (True, 'YES', 'YES', 142077), (True, 'YES', 'YES', 142078), (True, 'YES', 'YES', 142079), (True, 'YES', 'YES', 142080), (True, 'YES', 'YES', 142081), (True, 'YES', 'YES', 142082), (True, 'YES', 'YES', 142083), (True, 'YES', 'YES', 142084), (True, 'NO', 'NO', 142085), (True, 'NO', 'NO', 142086), (False, 'YES', 'NO', 142087), (True, 'YES', 'YES', 142088), (True, 'YES', 'YES', 142089), (False, 'YES', 'NO', 142090), (False, 'YES', 'NO', 142091), (False, 'YES', 'NO', 142092), (False, 'YES', 'NO', 142093), (True, 'YES', 'YES', 142094), (True, 'NO', 'NO', 142095), (False, 'YES', 'NO', 142096), (False, 'YES', 'NO', 142097), (True, 'NO', 'NO', 142098), (True, 'NO', 'NO', 142099), (True, 'YES', 'YES', 142100), (True, 'YES', 'YES', 142101), (False, 'YES', 'NO', 142102), (True, 'YES', 'YES', 142103), (True, 'YES', 'YES', 142104), (False, 'YES', 'NO', 142105)]",False,Wrong Answer,0.0,0.0983606557377049,False,0.1411764705882353
1703378,26901046,"n,a,b,c=map(int,input().split())
z=[0]+[-1e9]*5000
for i in range(1,n+1):z[i]=max(z[i-a],z[i-b],z[i-c])+1
print(z[n])",991,264,62,5/6/17 15:26,4,1520,1,8,"[(True, '2', '2', 159338), (True, '2', '2', 159339), (True, '1', '1', 159340), (True, '1', '1', 159341), (True, '4000', '4000', 159342), (True, '1333', '1333', 159343), (True, '3', '3', 159344), (True, '2', '2', 159345), (True, '11', '11', 159346), (True, '9', '9', 159347), (True, '15', '15', 159348), (True, '7', '7', 159349), (True, '26', '26', 159350), (True, '370', '370', 159351), (True, '367', '367', 159352), (True, '29', '29', 159353), (True, '2', '2', 159354), (True, '7', '7', 159355), (True, '2', '2', 159356), (True, '3', '3', 159357), (True, '9', '9', 159358), (True, '1', '1', 159359), (True, '1', '1', 159360), (True, '9', '9', 159361), (True, '2', '2', 159362), (True, '1', '1', 159363), (True, '5', '5', 159364), (True, '1', '1', 159365), (True, '6', '6', 159366), (True, '1', '1', 159367), (True, '101', '101', 159368), (True, '3', '3', 159369), (True, '991', '991', 159370), (True, '683', '683', 159371), (True, '991', '991', 159372), (True, '595', '595', 159373), (True, '4000', '4000', 159374), (True, '1', '1', 159375), (True, '3', '3', 159376), (True, '8', '8', 159377), (True, '5', '5', 159378), (True, '100', '100', 159379), (True, '5', '5', 159380), (True, '4', '4', 159381), (True, '111', '111', 159382), (True, '1999', '1999', 159383), (True, '2', '2', 159384), (True, '5', '5', 159385), (True, '27', '27', 159386), (True, '2000', '2000', 159387), (True, '1332', '1332', 159388), (True, '2', '2', 159389), (True, '2000', '2000', 159390), (True, '1999', '1999', 159391), (True, '564', '564', 159392), (True, '4', '4', 159393), (True, '10', '10', 159394), (True, '334', '334', 159395)]",True,Accecpted,4.234401506515187e-155,0.2274881516587677,False,0.0
1702860,26412940,"n,a,b,c=map(int,input().split())
m={}
def p(i,q,w,e):
    if i in m:
        return m[i]
    if i<min(q,w,e):
        f=-1
    elif i%min(a,b,c)==0:
        f=int(i//min(a,b,c))
    else:
        f=max(p(i-q,q,w,e)+1,p(i-w,q,w,e)+1,p(i-e,q,w,e)+1)
    m[i]=f
    return f
print(p(n,a,b,c))",991,5392,202,4/16/17 15:43,14,1520,5,8,"[(True, '2', '2', 159338), (True, '2', '2', 159339), (True, '1', '1', 159340), (True, '1', '1', 159341), (True, '4000', '4000', 159342), (False, '', '1333', 159343), (True, '3', '3', 159344), (False, '5', '2', 159345), (False, '444', '11', 159346), (True, '9', '9', 159347), (False, '74', '15', 159348), (False, '8', '7', 159349), (True, '26', '26', 159350), (True, '370', '370', 159351), (True, '367', '367', 159352), (True, '29', '29', 159353), (True, '2', '2', 159354), (True, '7', '7', 159355), (False, '13', '2', 159356), (True, '3', '3', 159357), (True, '9', '9', 159358), (True, '1', '1', 159359), (True, '1', '1', 159360), (True, '9', '9', 159361), (True, '2', '2', 159362), (True, '1', '1', 159363), (True, '5', '5', 159364), (True, '1', '1', 159365), (True, '6', '6', 159366), (False, '4', '1', 159367), (False, '102', '101', 159368), (True, '3', '3', 159369), (True, '991', '991', 159370), (False, '', '683', 159371), (False, '', '991', 159372), (True, '595', '595', 159373), (True, '4000', '4000', 159374), (False, '', '1', 159375), (True, '3', '3', 159376), (True, '8', '8', 159377), (True, '5', '5', 159378), (True, '100', '100', 159379), (True, '5', '5', 159380), (True, '4', '4', 159381), (False, '121', '111', 159382), (False, '', '1999', 159383), (False, '1', '2', 159384), (True, '5', '5', 159385), (False, '32', '27', 159386), (True, '2000', '2000', 159387), (False, '', '1332', 159388), (True, '2', '2', 159389), (True, '2000', '2000', 159390), (False, '', '1999', 159391), (False, '570', '564', 159392), (False, '5', '4', 159393), (True, '10', '10', 159394), (True, '334', '334', 159395)]",False,Runtime Error,4.234401506515187e-155,0.2274881516587677,False,0.3275862068965517
1970296,26462972,"x=list(map(int, input().split()))
t=len(x)
m=len(set(x))
print(t-m)",991,5424,124,4/17/17 22:24,4,1756,1,8,"[(True, '1', '1', 174780), (True, '3', '3', 174781), (True, '0', '0', 174782), (True, '0', '0', 174783), (True, '1', '1', 174784), (True, '1', '1', 174785), (True, '2', '2', 174786), (True, '2', '2', 174787), (True, '3', '3', 174788), (True, '3', '3', 174789), (True, '0', '0', 174790), (True, '0', '0', 174791), (True, '0', '0', 174792), (True, '0', '0', 174793), (True, '1', '1', 174794), (True, '1', '1', 174795), (True, '1', '1', 174796), (True, '1', '1', 174797), (True, '2', '2', 174798), (True, '2', '2', 174799), (True, '2', '2', 174800), (True, '2', '2', 174801), (True, '3', '3', 174802), (True, '3', '3', 174803), (True, '3', '3', 174804), (True, '3', '3', 174805), (True, '1', '1', 174806), (True, '1', '1', 174807), (True, '1', '1', 174808), (True, '1', '1', 174809), (True, '2', '2', 174810), (True, '2', '2', 174811), (True, '2', '2', 174812), (True, '2', '2', 174813)]",True,Accecpted,6.86809206056511e-78,0.9552238805970148,False,0.0
1970295,26462943,"x=map(int, input().split())
t=len(x)
m=len(set(x))
print(t-m)",991,4492,92,4/17/17 22:22,4,1756,5,8,"[(False, '', '1', 174780), (False, '', '3', 174781), (False, '', '0', 174782), (False, '', '0', 174783), (False, '', '1', 174784), (False, '', '1', 174785), (False, '', '2', 174786), (False, '', '2', 174787), (False, '', '3', 174788), (False, '', '3', 174789), (False, '', '0', 174790), (False, '', '0', 174791), (False, '', '0', 174792), (False, '', '0', 174793), (False, '', '1', 174794), (False, '', '1', 174795), (False, '', '1', 174796), (False, '', '1', 174797), (False, '', '2', 174798), (False, '', '2', 174799), (False, '', '2', 174800), (False, '', '2', 174801), (False, '', '3', 174802), (False, '', '3', 174803), (False, '', '3', 174804), (False, '', '3', 174805), (False, '', '1', 174806), (False, '', '1', 174807), (False, '', '1', 174808), (False, '', '1', 174809), (False, '', '2', 174810), (False, '', '2', 174811), (False, '', '2', 174812), (False, '', '2', 174813)]",False,Runtime Error,6.86809206056511e-78,0.9552238805970148,False,1.0
2264193,26124013,"n=int(input())
print(int(n*(n**2+5)/6))",991,5444,124,4/4/17 17:11,2,1983,1,8,"[(True, '3', '3', 189204), (True, '7', '7', 189205), (True, '14', '14', 189206), (True, '1', '1', 189207), (True, '175', '175', 189208), (True, '1333335000', '1333335000', 189209), (True, '888644743', '888644743', 189210), (True, '117099969', '117099969', 189211), (True, '1331335999', '1331335999', 189212), (True, '127259419', '127259419', 189213), (True, '164675486', '164675486', 189214), (True, '833', '833', 189215), (True, '20875', '20875', 189216), (True, '125671', '125671', 189217), (True, '129858', '129858', 189218), (True, '2796416', '2796416', 189219), (True, '22370048', '22370048', 189220), (True, '49235271', '49235271', 189221), (True, '49457383', '49457383', 189222), (True, '5160119', '5160119', 189223), (True, '318541121', '318541121', 189224), (True, '562501250', '562501250', 189225), (True, '1033182073', '1033182073', 189226), (True, '166667500', '166667500', 189227)]",True,Accecpted,1.5319719891192393e-231,0.8505747126436781,False,0.0
2264144,26099069,"n=int(input())
print(int((n*(n-1)*(n+4))/6)+1)",991,4504,92,4/3/17 15:18,2,1983,2,8,"[(True, '3', '3', 189204), (False, '8', '7', 189205), (False, '17', '14', 189206), (True, '1', '1', 189207), (False, '211', '175', 189208), (False, '1335332001', '1333335000', 189209), (False, '890168128', '888644743', 189210), (False, '117493797', '117099969', 189211), (False, '1333331002', '1331335999', 189212), (False, '127675747', '127259419', 189213), (False, '165170001', '164675486', 189214), (False, '953', '833', 189215), (False, '22051', '20875', 189216), (False, '129676', '125671', 189217), (False, '133953', '129858', 189218), (False, '2828801', '2796416', 189219), (False, '22500353', '22370048', 189220), (False, '49456051', '49235271', 189221), (False, '49678828', '49457383', 189222), (False, '5208947', '5160119', 189223), (False, '319309301', '318541121', 189224), (False, '563624001', '562501250', 189225), (False, '1034866603', '1033182073', 189226), (False, '167166001', '166667500', 189227)]",False,Wrong Answer,1.5319719891192393e-231,0.8505747126436781,False,0.9166666666666666
2717378,26081016,"x=input()
a=[]
b=[p for p in x]
l=[]
for i in ""hello"":
    for k in b:
        l.append(k)
        if i==k:
            a.append(k)
            del b[:b.index(k)+1]
            break
    if all([i not in l]):
        break
    else:
        l=[]
if len(a)==5:
    print(""YES"")
else:
    print(""NO"")",991,5436,62,4/2/17 18:26,19,2335,1,8,"[(True, 'YES', 'YES', 208922), (True, 'NO', 'NO', 208923), (True, 'YES', 'YES', 208924), (True, 'YES', 'YES', 208925), (True, 'YES', 'YES', 208926), (True, 'NO', 'NO', 208927), (True, 'NO', 'NO', 208928), (True, 'YES', 'YES', 208929), (True, 'YES', 'YES', 208930), (True, 'YES', 'YES', 208931), (True, 'YES', 'YES', 208932), (True, 'NO', 'NO', 208933), (True, 'YES', 'YES', 208934), (True, 'YES', 'YES', 208935), (True, 'NO', 'NO', 208936), (True, 'YES', 'YES', 208937), (True, 'YES', 'YES', 208938), (True, 'NO', 'NO', 208939), (True, 'NO', 'NO', 208940), (True, 'YES', 'YES', 208941), (True, 'YES', 'YES', 208942), (True, 'NO', 'NO', 208943), (True, 'YES', 'YES', 208944), (True, 'YES', 'YES', 208945), (True, 'YES', 'YES', 208946), (True, 'YES', 'YES', 208947), (True, 'YES', 'YES', 208948), (True, 'YES', 'YES', 208949), (True, 'YES', 'YES', 208950), (True, 'YES', 'YES', 208951), (True, 'NO', 'NO', 208952), (True, 'NO', 'NO', 208953), (True, 'NO', 'NO', 208954), (True, 'YES', 'YES', 208955), (True, 'NO', 'NO', 208956), (True, 'YES', 'YES', 208957), (True, 'NO', 'NO', 208958), (True, 'NO', 'NO', 208959), (True, 'NO', 'NO', 208960), (True, 'YES', 'YES', 208961)]",True,Accecpted,1.6957411536375168e-78,0.2433460076045627,False,0.0
2717365,26075255,"x=input()
i=0
p=0
l=""""
for h in ""hello"":
    while h!=l and i<len(x):
        l=x[i]
        i+=1
    if i!=len(x) or h==""o"" and l==""o"":
        p+=1
if p==5:
    print(""YES"")
else:
    print(""NO"")",991,4480,46,4/2/17 13:19,14,2335,2,8,"[(True, 'YES', 'YES', 208922), (False, 'YES', 'NO', 208923), (True, 'YES', 'YES', 208924), (True, 'YES', 'YES', 208925), (True, 'YES', 'YES', 208926), (False, 'YES', 'NO', 208927), (True, 'NO', 'NO', 208928), (True, 'YES', 'YES', 208929), (True, 'YES', 'YES', 208930), (True, 'YES', 'YES', 208931), (True, 'YES', 'YES', 208932), (True, 'NO', 'NO', 208933), (True, 'YES', 'YES', 208934), (True, 'YES', 'YES', 208935), (True, 'NO', 'NO', 208936), (True, 'YES', 'YES', 208937), (True, 'YES', 'YES', 208938), (True, 'NO', 'NO', 208939), (True, 'NO', 'NO', 208940), (True, 'YES', 'YES', 208941), (True, 'YES', 'YES', 208942), (True, 'NO', 'NO', 208943), (True, 'YES', 'YES', 208944), (True, 'YES', 'YES', 208945), (True, 'YES', 'YES', 208946), (True, 'YES', 'YES', 208947), (True, 'YES', 'YES', 208948), (True, 'YES', 'YES', 208949), (True, 'YES', 'YES', 208950), (True, 'YES', 'YES', 208951), (True, 'NO', 'NO', 208952), (True, 'NO', 'NO', 208953), (True, 'NO', 'NO', 208954), (True, 'YES', 'YES', 208955), (True, 'NO', 'NO', 208956), (True, 'YES', 'YES', 208957), (True, 'NO', 'NO', 208958), (True, 'NO', 'NO', 208959), (False, 'YES', 'NO', 208960), (True, 'YES', 'YES', 208961)]",False,Wrong Answer,1.6957411536375168e-78,0.2433460076045627,False,0.075
2902701,26584960,"n=int(input())-1
while n>4:n=n-5>>1
print(""SLPRHheeaoeonjwlnneadaysror hdnd""[n::5])",991,5424,46,4/22/17 16:41,3,2481,1,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (True, 'Penny', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (True, 'Penny', 'Penny', 216618), (True, 'Rajesh', 'Rajesh', 216619), (True, 'Howard', 'Howard', 216620), (True, 'Howard', 'Howard', 216621), (True, 'Penny', 'Penny', 216622), (True, 'Rajesh', 'Rajesh', 216623), (True, 'Leonard', 'Leonard', 216624), (True, 'Penny', 'Penny', 216625), (True, 'Howard', 'Howard', 216626), (True, 'Rajesh', 'Rajesh', 216627), (True, 'Rajesh', 'Rajesh', 216628), (True, 'Leonard', 'Leonard', 216629), (True, 'Penny', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (True, 'Howard', 'Howard', 216632), (True, 'Leonard', 'Leonard', 216633), (True, 'Rajesh', 'Rajesh', 216634), (True, 'Sheldon', 'Sheldon', 216635), (True, 'Rajesh', 'Rajesh', 216636), (True, 'Leonard', 'Leonard', 216637), (True, 'Howard', 'Howard', 216638), (True, 'Penny', 'Penny', 216639), (True, 'Penny', 'Penny', 216640), (True, 'Rajesh', 'Rajesh', 216641), (True, 'Sheldon', 'Sheldon', 216642), (True, 'Penny', 'Penny', 216643), (True, 'Penny', 'Penny', 216644), (True, 'Leonard', 'Leonard', 216645), (True, 'Howard', 'Howard', 216646), (True, 'Penny', 'Penny', 216647), (True, 'Penny', 'Penny', 216648), (True, 'Penny', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",True,Accecpted,9.594503055152632e-232,0.3228346456692913,False,0.0
2902700,26584939,"from math import ceil
a=[""Sheldon"",""Leonard"",""Penny"",""Rajesh"",""Howard""]
n=int(input())
m=n
i=1
while m>0:
    m-=5*i
    i+=1
print(a[ceil((m+5*(i-1))/(i-1))-1])",991,4456,46,4/22/17 16:40,9,2481,2,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (False, 'Leonard', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (True, 'Penny', 'Penny', 216618), (False, 'Sheldon', 'Rajesh', 216619), (False, 'Leonard', 'Howard', 216620), (False, 'Rajesh', 'Howard', 216621), (False, 'Rajesh', 'Penny', 216622), (False, 'Penny', 'Rajesh', 216623), (False, 'Howard', 'Leonard', 216624), (False, 'Rajesh', 'Penny', 216625), (False, 'Rajesh', 'Howard', 216626), (False, 'Howard', 'Rajesh', 216627), (True, 'Rajesh', 'Rajesh', 216628), (True, 'Leonard', 'Leonard', 216629), (False, 'Sheldon', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (False, 'Penny', 'Howard', 216632), (False, 'Howard', 'Leonard', 216633), (False, 'Sheldon', 'Rajesh', 216634), (True, 'Sheldon', 'Sheldon', 216635), (False, 'Sheldon', 'Rajesh', 216636), (False, 'Penny', 'Leonard', 216637), (False, 'Sheldon', 'Howard', 216638), (True, 'Penny', 'Penny', 216639), (False, 'Rajesh', 'Penny', 216640), (False, 'Penny', 'Rajesh', 216641), (True, 'Sheldon', 'Sheldon', 216642), (False, 'Howard', 'Penny', 216643), (False, 'Leonard', 'Penny', 216644), (False, 'Sheldon', 'Leonard', 216645), (False, 'Rajesh', 'Howard', 216646), (True, 'Penny', 'Penny', 216647), (True, 'Penny', 'Penny', 216648), (True, 'Penny', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",False,Wrong Answer,9.594503055152632e-232,0.3228346456692913,False,0.5609756097560976
2956731,26818770,"n=int(input())
a=2**(len(str(n))-1)-1
i=0
while int(bin(2**(len(str(n))-1)+i).replace(""b"",""0""))<=n:
    i+=1
print(a+i)",991,5440,154,5/3/17 15:39,6,2521,1,8,"[(True, '2', '2', 218158), (True, '3', '3', 218159), (True, '3', '3', 218160), (True, '3', '3', 218161), (True, '4', '4', 218162), (True, '5', '5', 218163), (True, '5', '5', 218164), (True, '7', '7', 218165), (True, '7', '7', 218166), (True, '7', '7', 218167), (True, '31', '31', 218168), (True, '1', '1', 218169), (True, '83', '83', 218170), (True, '511', '511', 218171), (True, '512', '512', 218172), (True, '511', '511', 218173), (True, '511', '511', 218174), (True, '341', '341', 218175), (True, '511', '511', 218176), (True, '383', '383', 218177), (True, '511', '511', 218178), (True, '511', '511', 218179), (True, '1', '1', 218180), (True, '511', '511', 218181), (True, '1', '1', 218182), (True, '1', '1', 218183), (True, '1', '1', 218184), (True, '3', '3', 218185), (True, '3', '3', 218186), (True, '3', '3', 218187), (True, '351', '351', 218188), (True, '484', '484', 218189), (True, '437', '437', 218190), (True, '313', '313', 218191), (True, '36', '36', 218192), (True, '421', '421', 218193)]",True,Accecpted,1.04198122363916e-154,0.912280701754386,False,0.0
2956726,26814472,"n=int(input())
a=2**(n-1)-1
i=0
while int(bin(2**(n-1)+i).replace(""b"",""0""))<=n:
    i+=1
print(a+i)",991,4476,124,5/3/17 10:33,6,2521,2,8,"[(False, '511', '2', 218158), (False, '524287', '3', 218159), (False, '2361183241434822606847', '3', 218160), (False, '316912650057057350374175801343', '3', 218161), (False, '633825300114114700748351602687', '4', 218162), (False, '1267650600228229401496703205375', '5', 218163), (False, '2535301200456458802993406410751', '5', 218164), (False, '1298074214633706907132624082305023', '7', 218165), (False, '2596148429267413814265248164610047', '7', 218166), (False, '92537289398950870940028398541361245826297164983552492328825714470508751433275752444915676643171696540742381256647769999871944191701103114571826891603540250015524326325705641838924007751440909196452081155402449891024401596415', '7', 218167), (False, '', '31', 218168), (True, '1', '1', 218169), (False, '', '83', 218170), (False, '', '511', 218171), (False, '', '512', 218172), (False, '', '511', 218173), (False, '', '511', 218174), (False, '', '341', 218175), (False, '', '511', 218176), (False, '', '383', 218177), (False, '', '511', 218178), (False, '', '511', 218179), (False, '3', '1', 218180), (False, '', '511', 218181), (False, '63', '1', 218182), (False, '255', '1', 218183), (True, '1', '1', 218184), (False, '1023', '3', 218185), (False, '2047', '3', 218186), (False, '4095', '3', 218187), (False, '', '351', 218188), (False, '', '484', 218189), (False, '', '437', 218190), (False, '', '313', 218191), (False, '', '36', 218192), (False, '', '421', 218193)]",False,Wrong Answer,1.04198122363916e-154,0.912280701754386,False,0.9444444444444444
3025322,25437790,"x, y, z= map(int, input().split())


if x>0 and x<=10**9 and y>=0 and y<=10**9 and z>=0 and z<=10**9 and y+z>0:
  if x>y and x>z:
    print(-1)
  elif y>x and y%x!=0 and x>z:
    print(-1)
  elif x>y and z%x!=0 and z>x:
    print(-1)
  else:
    print((y//x)+(z//x))
else:
  print(-1)",991,4540,61,3/12/17 18:12,27,2576,1,8,"[(True, '1', '1', 37550), (True, '-1', '-1', 37551), (True, '14', '14', 37552), (True, '2', '2', 37553), (True, '2000000000', '2000000000', 37554), (True, '3', '3', 37555), (True, '2', '2', 37556), (True, '1', '1', 37557), (True, '-1', '-1', 37558), (True, '-1', '-1', 37559), (True, '1', '1', 37560), (True, '2', '2', 37561), (True, '1000000000', '1000000000', 37562), (True, '9', '9', 37563), (True, '-1', '-1', 37564), (True, '-1', '-1', 37565), (True, '-1', '-1', 37566), (True, '-1', '-1', 37567), (True, '-1', '-1', 37568), (True, '21', '21', 37569), (True, '1', '1', 37570), (True, '1', '1', 37571), (True, '-1', '-1', 37572), (True, '-1', '-1', 37573), (True, '-1', '-1', 37574), (True, '-1', '-1', 37575), (True, '2', '2', 37576), (True, '-1', '-1', 37577), (True, '-1', '-1', 37578), (True, '-1', '-1', 37579), (True, '-1', '-1', 37580), (True, '-1', '-1', 37581), (True, '-1', '-1', 37582), (True, '4', '4', 37583), (True, '-1', '-1', 37584), (True, '-1', '-1', 37585), (True, '-1', '-1', 37586), (True, '-1', '-1', 37587), (True, '-1', '-1', 37588), (True, '-1', '-1', 37589), (True, '-1', '-1', 37590), (True, '-1', '-1', 37591), (True, '-1', '-1', 37592), (True, '-1', '-1', 37593), (True, '-1', '-1', 37594), (True, '1000000000', '1000000000', 37595), (True, '-1', '-1', 37596), (True, '-1', '-1', 37597), (True, '-1', '-1', 37598), (True, '-1', '-1', 37599), (True, '-1', '-1', 37600), (True, '-1', '-1', 37601), (True, '2', '2', 37602), (True, '-1', '-1', 37603), (True, '-1', '-1', 37604), (True, '1', '1', 37605), (True, '2', '2', 37606), (True, '2', '2', 37607), (True, '2', '2', 37608)]",True,Accecpted,0.8729435194251833,0.990353697749196,False,0.0
3025321,25437771,"x, y, z= map(int, input().split())


if x>0 and x<=10**9 and y>=0 and y<=10**9 and z>=0 and z<=10**9 and y+z>0:
  if x>y and x>z:
    print(-1)
  elif y>x and y//x!=0 and x>z:
    print(-1)
  elif x>y and z//x!=0 and z>x:
    print(-1)
  else:
    print((y//x)+(z//x))
else:
  print(-1)",991,4516,62,3/12/17 18:10,27,2576,2,8,"[(True, '1', '1', 37550), (True, '-1', '-1', 37551), (True, '14', '14', 37552), (True, '2', '2', 37553), (True, '2000000000', '2000000000', 37554), (True, '3', '3', 37555), (True, '2', '2', 37556), (True, '1', '1', 37557), (True, '-1', '-1', 37558), (True, '-1', '-1', 37559), (True, '1', '1', 37560), (True, '2', '2', 37561), (False, '-1', '1000000000', 37562), (True, '9', '9', 37563), (True, '-1', '-1', 37564), (True, '-1', '-1', 37565), (True, '-1', '-1', 37566), (True, '-1', '-1', 37567), (True, '-1', '-1', 37568), (True, '21', '21', 37569), (True, '1', '1', 37570), (True, '1', '1', 37571), (True, '-1', '-1', 37572), (True, '-1', '-1', 37573), (True, '-1', '-1', 37574), (True, '-1', '-1', 37575), (True, '2', '2', 37576), (True, '-1', '-1', 37577), (True, '-1', '-1', 37578), (True, '-1', '-1', 37579), (True, '-1', '-1', 37580), (True, '-1', '-1', 37581), (True, '-1', '-1', 37582), (True, '4', '4', 37583), (True, '-1', '-1', 37584), (True, '-1', '-1', 37585), (True, '-1', '-1', 37586), (True, '-1', '-1', 37587), (True, '-1', '-1', 37588), (True, '-1', '-1', 37589), (True, '-1', '-1', 37590), (True, '-1', '-1', 37591), (True, '-1', '-1', 37592), (True, '-1', '-1', 37593), (True, '-1', '-1', 37594), (True, '1000000000', '1000000000', 37595), (True, '-1', '-1', 37596), (True, '-1', '-1', 37597), (True, '-1', '-1', 37598), (True, '-1', '-1', 37599), (True, '-1', '-1', 37600), (True, '-1', '-1', 37601), (False, '-1', '2', 37602), (True, '-1', '-1', 37603), (True, '-1', '-1', 37604), (True, '1', '1', 37605), (True, '2', '2', 37606), (True, '2', '2', 37607), (False, '-1', '2', 37608)]",False,Wrong Answer,0.8729435194251833,0.990353697749196,False,0.0508474576271186
992247,26413279,"n,k = list(map(int,input().split()))

l = [i*5 for i in range(1,n+1)]
count = 0
for i in range(n):
    if sum(l[:i+1]) > 240-k:
        break
    count += 1
print (count)",1049,5428,62,4/16/17 15:58,17,912,1,8,"[(True, '2', '2', 120386), (True, '4', '4', 120387), (True, '7', '7', 120388), (True, '6', '6', 120389), (True, '5', '5', 120390), (True, '1', '1', 120391), (True, '0', '0', 120392), (True, '9', '9', 120393), (True, '0', '0', 120394), (True, '0', '0', 120395), (True, '9', '9', 120396), (True, '1', '1', 120397), (True, '0', '0', 120398), (True, '2', '2', 120399), (True, '1', '1', 120400), (True, '3', '3', 120401), (True, '2', '2', 120402), (True, '3', '3', 120403), (True, '5', '5', 120404), (True, '4', '4', 120405), (True, '7', '7', 120406), (True, '6', '6', 120407), (True, '8', '8', 120408), (True, '7', '7', 120409), (True, '9', '9', 120410), (True, '8', '8', 120411), (True, '4', '4', 120412), (True, '4', '4', 120413), (True, '4', '4', 120414), (True, '5', '5', 120415), (True, '4', '4', 120416), (True, '5', '5', 120417), (True, '1', '1', 120418), (True, '6', '6', 120419), (True, '2', '2', 120420), (True, '7', '7', 120421), (True, '1', '1', 120422), (True, '1', '1', 120423), (True, '0', '0', 120424), (True, '1', '1', 120425), (True, '0', '0', 120426), (True, '0', '0', 120427), (True, '0', '0', 120428), (True, '0', '0', 120429), (True, '9', '9', 120430), (True, '9', '9', 120431), (True, '0', '0', 120432), (True, '9', '9', 120433), (True, '0', '0', 120434), (True, '0', '0', 120435), (True, '7', '7', 120436), (True, '1', '1', 120437)]",True,Accecpted,0.7728082326259648,0.9637305699481864,False,0.0
992246,26413267,"n,k = list(map(int,input().split()))

l = [i*5 for i in range(1,n+1)]
count = 0
print (l)
for i in range(0,n):
    if sum(l[:i+1]) > 240-k:
        break
    count += 1
print (count)",1049,4464,46,4/16/17 15:58,19,912,2,8,"[(False, '[5, 10, 15]\n2', '2', 120386), (False, '[5, 10, 15, 20]\n4', '4', 120387), (False, '[5, 10, 15, 20, 25, 30, 35]\n7', '7', 120388), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n6', '6', 120389), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n5', '5', 120390), (False, '[5]\n1', '1', 120391), (False, '[5]\n0', '0', 120392), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n9', '9', 120393), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n0', '0', 120394), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45]\n0', '0', 120395), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45]\n9', '9', 120396), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45]\n1', '1', 120397), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45]\n0', '0', 120398), (False, '[5, 10, 15, 20, 25]\n2', '2', 120399), (False, '[5, 10, 15, 20, 25]\n1', '1', 120400), (False, '[5, 10, 15, 20]\n3', '3', 120401), (False, '[5, 10, 15, 20]\n2', '2', 120402), (False, '[5, 10, 15, 20]\n3', '3', 120403), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n5', '5', 120404), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n4', '4', 120405), (False, '[5, 10, 15, 20, 25, 30, 35, 40]\n7', '7', 120406), (False, '[5, 10, 15, 20, 25, 30, 35, 40]\n6', '6', 120407), (False, '[5, 10, 15, 20, 25, 30, 35, 40]\n8', '8', 120408), (False, '[5, 10, 15, 20, 25, 30, 35, 40]\n7', '7', 120409), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n9', '9', 120410), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n8', '8', 120411), (False, '[5, 10, 15, 20]\n4', '4', 120412), (False, '[5, 10, 15, 20]\n4', '4', 120413), (False, '[5, 10, 15, 20, 25, 30, 35]\n4', '4', 120414), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n5', '5', 120415), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45]\n4', '4', 120416), (False, '[5, 10, 15, 20, 25, 30, 35, 40]\n5', '5', 120417), (False, '[5]\n1', '1', 120418), (False, '[5, 10, 15, 20, 25, 30, 35, 40]\n6', '6', 120419), (False, '[5, 10]\n2', '2', 120420), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n7', '7', 120421), (False, '[5]\n1', '1', 120422), (False, '[5]\n1', '1', 120423), (False, '[5, 10, 15, 20]\n0', '0', 120424), (False, '[5]\n1', '1', 120425), (False, '[5]\n0', '0', 120426), (False, '[5, 10, 15]\n0', '0', 120427), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n0', '0', 120428), (False, '[5, 10]\n0', '0', 120429), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n9', '9', 120430), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45]\n9', '9', 120431), (False, '[5, 10]\n0', '0', 120432), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n9', '9', 120433), (False, '[5, 10, 15]\n0', '0', 120434), (False, '[5]\n0', '0', 120435), (False, '[5, 10, 15, 20, 25, 30, 35]\n7', '7', 120436), (False, '[5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\n1', '1', 120437)]",False,Wrong Answer,0.7728082326259648,0.9637305699481864,False,1.0
521705,27191211,"n=int(input())
x=n%7
y=0
if x==6:
    y=1
if x>2:
    x=2
print(2*(n//7)+y,2*(n//7)+x)

#@Carbodose",1075,0,62,5/18/17 9:26,19,481,1,8,"[(True, '4 4', '4 4', 84433), (True, '0 2', '0 2', 84434), (True, '0 1', '0 1', 84435), (True, '0 2', '0 2', 84436), (True, '0 2', '0 2', 84437), (True, '0 2', '0 2', 84438), (True, '1 2', '1 2', 84439), (True, '2 2', '2 2', 84440), (True, '2 3', '2 3', 84441), (True, '2 4', '2 4', 84442), (True, '2 4', '2 4', 84443), (True, '2 4', '2 4', 84444), (True, '2 4', '2 4', 84445), (True, '3 4', '3 4', 84446), (True, '285714 285715', '285714 285715', 84447), (True, '4 6', '4 6', 84448), (True, '4 6', '4 6', 84449), (True, '4 6', '4 6', 84450), (True, '4 6', '4 6', 84451), (True, '5 6', '5 6', 84452), (True, '6 6', '6 6', 84453), (True, '6 7', '6 7', 84454), (True, '6 8', '6 8', 84455), (True, '6 8', '6 8', 84456), (True, '6 8', '6 8', 84457), (True, '6 8', '6 8', 84458), (True, '7 8', '7 8', 84459), (True, '8 8', '8 8', 84460), (True, '8 9', '8 9', 84461), (True, '8 10', '8 10', 84462), (True, '28 30', '28 30', 84463), (True, '28 29', '28 29', 84464), (True, '28 28', '28 28', 84465), (True, '27 28', '27 28', 84466), (True, '26 28', '26 28', 84467), (True, '26 28', '26 28', 84468), (True, '26 28', '26 28', 84469), (True, '26 28', '26 28', 84470), (True, '26 27', '26 27', 84471), (True, '26 26', '26 26', 84472), (True, '25 26', '25 26', 84473), (True, '24 26', '24 26', 84474), (True, '24 26', '24 26', 84475), (True, '24 26', '24 26', 84476), (True, '24 26', '24 26', 84477), (True, '24 25', '24 25', 84478), (True, '24 24', '24 24', 84479), (True, '23 24', '23 24', 84480), (True, '22 24', '22 24', 84481), (True, '22 24', '22 24', 84482), (True, '22 24', '22 24', 84483), (True, '285 286', '285 286', 84484), (True, '284 286', '284 286', 84485), (True, '284 286', '284 286', 84486), (True, '284 286', '284 286', 84487), (True, '284 286', '284 286', 84488), (True, '284 285', '284 285', 84489), (True, '284 284', '284 284', 84490), (True, '283 284', '283 284', 84491), (True, '282 284', '282 284', 84492), (True, '282 284', '282 284', 84493), (True, '282 284', '282 284', 84494), (True, '282 284', '282 284', 84495), (True, '282 283', '282 283', 84496), (True, '282 282', '282 282', 84497), (True, '281 282', '281 282', 84498), (True, '280 282', '280 282', 84499), (True, '280 282', '280 282', 84500), (True, '280 282', '280 282', 84501), (True, '280 282', '280 282', 84502), (True, '280 281', '280 281', 84503), (True, '280 280', '280 280', 84504), (True, '2856 2858', '2856 2858', 84505), (True, '2856 2858', '2856 2858', 84506), (True, '2856 2858', '2856 2858', 84507), (True, '2856 2857', '2856 2857', 84508), (True, '2856 2856', '2856 2856', 84509), (True, '2855 2856', '2855 2856', 84510), (True, '2854 2856', '2854 2856', 84511), (True, '2854 2856', '2854 2856', 84512), (True, '2854 2856', '2854 2856', 84513), (True, '2854 2856', '2854 2856', 84514), (True, '2854 2855', '2854 2855', 84515), (True, '2854 2854', '2854 2854', 84516), (True, '2853 2854', '2853 2854', 84517), (True, '2852 2854', '2852 2854', 84518), (True, '2852 2854', '2852 2854', 84519), (True, '2852 2854', '2852 2854', 84520), (True, '2852 2854', '2852 2854', 84521), (True, '2852 2853', '2852 2853', 84522), (True, '2852 2852', '2852 2852', 84523), (True, '2851 2852', '2851 2852', 84524), (True, '2850 2852', '2850 2852', 84525), (True, '28570 28572', '28570 28572', 84526), (True, '28570 28572', '28570 28572', 84527), (True, '28570 28572', '28570 28572', 84528), (True, '28570 28572', '28570 28572', 84529), (True, '28570 28571', '28570 28571', 84530), (True, '28570 28570', '28570 28570', 84531), (True, '28569 28570', '28569 28570', 84532), (True, '28568 28570', '28568 28570', 84533), (True, '28568 28570', '28568 28570', 84534), (True, '28568 28570', '28568 28570', 84535), (True, '28568 28570', '28568 28570', 84536), (True, '28568 28569', '28568 28569', 84537), (True, '28568 28568', '28568 28568', 84538), (True, '28567 28568', '28567 28568', 84539), (True, '28566 28568', '28566 28568', 84540), (True, '28566 28568', '28566 28568', 84541), (True, '28566 28568', '28566 28568', 84542), (True, '28566 28568', '28566 28568', 84543), (True, '28566 28567', '28566 28567', 84544), (True, '28566 28566', '28566 28566', 84545), (True, '28565 28566', '28565 28566', 84546), (True, '285714 285714', '285714 285714', 84547), (True, '285713 285714', '285713 285714', 84548), (True, '285712 285714', '285712 285714', 84549), (True, '285712 285714', '285712 285714', 84550), (True, '285712 285714', '285712 285714', 84551), (True, '285712 285714', '285712 285714', 84552), (True, '285712 285713', '285712 285713', 84553), (True, '285712 285712', '285712 285712', 84554), (True, '285711 285712', '285711 285712', 84555), (True, '285710 285712', '285710 285712', 84556), (True, '285710 285712', '285710 285712', 84557), (True, '285710 285712', '285710 285712', 84558), (True, '285710 285712', '285710 285712', 84559), (True, '285710 285711', '285710 285711', 84560), (True, '285710 285710', '285710 285710', 84561), (True, '285709 285710', '285709 285710', 84562), (True, '285708 285710', '285708 285710', 84563), (True, '285708 285710', '285708 285710', 84564), (True, '285708 285710', '285708 285710', 84565), (True, '285708 285710', '285708 285710', 84566), (True, '66892 66893', '66892 66893', 84567), (True, '66892 66892', '66892 66892', 84568), (True, '66891 66892', '66891 66892', 84569), (True, '66890 66892', '66890 66892', 84570), (True, '66890 66892', '66890 66892', 84571), (True, '66890 66892', '66890 66892', 84572), (True, '66890 66892', '66890 66892', 84573), (True, '66890 66891', '66890 66891', 84574), (True, '66890 66890', '66890 66890', 84575), (True, '66889 66890', '66889 66890', 84576), (True, '66888 66890', '66888 66890', 84577), (True, '66888 66890', '66888 66890', 84578), (True, '66888 66890', '66888 66890', 84579), (True, '66888 66890', '66888 66890', 84580), (True, '66888 66889', '66888 66889', 84581), (True, '66888 66888', '66888 66888', 84582), (True, '66887 66888', '66887 66888', 84583), (True, '66886 66888', '66886 66888', 84584), (True, '66886 66888', '66886 66888', 84585), (True, '66886 66888', '66886 66888', 84586), (True, '66886 66888', '66886 66888', 84587), (True, '248151 248152', '248151 248152', 84588), (True, '248150 248152', '248150 248152', 84589), (True, '248150 248152', '248150 248152', 84590), (True, '248150 248152', '248150 248152', 84591), (True, '248150 248152', '248150 248152', 84592), (True, '248150 248151', '248150 248151', 84593), (True, '248150 248150', '248150 248150', 84594), (True, '248149 248150', '248149 248150', 84595), (True, '248148 248150', '248148 248150', 84596), (True, '248148 248150', '248148 248150', 84597), (True, '248148 248150', '248148 248150', 84598), (True, '248148 248150', '248148 248150', 84599), (True, '248148 248149', '248148 248149', 84600), (True, '248148 248148', '248148 248148', 84601), (True, '248147 248148', '248147 248148', 84602), (True, '248146 248148', '248146 248148', 84603), (True, '248146 248148', '248146 248148', 84604), (True, '248146 248148', '248146 248148', 84605), (True, '248146 248148', '248146 248148', 84606), (True, '248146 248147', '248146 248147', 84607), (True, '248146 248146', '248146 248146', 84608), (True, '35260 35262', '35260 35262', 84609), (True, '35260 35262', '35260 35262', 84610), (True, '35260 35261', '35260 35261', 84611), (True, '35260 35260', '35260 35260', 84612), (True, '35259 35260', '35259 35260', 84613), (True, '35258 35260', '35258 35260', 84614), (True, '35258 35260', '35258 35260', 84615), (True, '35258 35260', '35258 35260', 84616), (True, '35258 35260', '35258 35260', 84617), (True, '35258 35259', '35258 35259', 84618), (True, '35258 35258', '35258 35258', 84619), (True, '35257 35258', '35257 35258', 84620), (True, '35256 35258', '35256 35258', 84621), (True, '35256 35258', '35256 35258', 84622), (True, '35256 35258', '35256 35258', 84623), (True, '35256 35258', '35256 35258', 84624), (True, '35256 35257', '35256 35257', 84625), (True, '35256 35256', '35256 35256', 84626), (True, '35255 35256', '35255 35256', 84627), (True, '35254 35256', '35254 35256', 84628), (True, '35254 35256', '35254 35256', 84629), (True, '4 5', '4 5', 84630)]",True,Accecpted,3.731909771969008e-78,0.6926829268292682,False,0.0
521704,27191138,"#@Carbodose

n=int(input())
x=n%7
if x>2:
    x=2
print(2*(n//7),2*(n//7)+x)",1075,0,61,5/18/17 9:21,13,481,2,8,"[(True, '4 4', '4 4', 84433), (True, '0 2', '0 2', 84434), (True, '0 1', '0 1', 84435), (True, '0 2', '0 2', 84436), (True, '0 2', '0 2', 84437), (True, '0 2', '0 2', 84438), (False, '0 2', '1 2', 84439), (True, '2 2', '2 2', 84440), (True, '2 3', '2 3', 84441), (True, '2 4', '2 4', 84442), (True, '2 4', '2 4', 84443), (True, '2 4', '2 4', 84444), (True, '2 4', '2 4', 84445), (False, '2 4', '3 4', 84446), (True, '285714 285715', '285714 285715', 84447), (True, '4 6', '4 6', 84448), (True, '4 6', '4 6', 84449), (True, '4 6', '4 6', 84450), (True, '4 6', '4 6', 84451), (False, '4 6', '5 6', 84452), (True, '6 6', '6 6', 84453), (True, '6 7', '6 7', 84454), (True, '6 8', '6 8', 84455), (True, '6 8', '6 8', 84456), (True, '6 8', '6 8', 84457), (True, '6 8', '6 8', 84458), (False, '6 8', '7 8', 84459), (True, '8 8', '8 8', 84460), (True, '8 9', '8 9', 84461), (True, '8 10', '8 10', 84462), (True, '28 30', '28 30', 84463), (True, '28 29', '28 29', 84464), (True, '28 28', '28 28', 84465), (False, '26 28', '27 28', 84466), (True, '26 28', '26 28', 84467), (True, '26 28', '26 28', 84468), (True, '26 28', '26 28', 84469), (True, '26 28', '26 28', 84470), (True, '26 27', '26 27', 84471), (True, '26 26', '26 26', 84472), (False, '24 26', '25 26', 84473), (True, '24 26', '24 26', 84474), (True, '24 26', '24 26', 84475), (True, '24 26', '24 26', 84476), (True, '24 26', '24 26', 84477), (True, '24 25', '24 25', 84478), (True, '24 24', '24 24', 84479), (False, '22 24', '23 24', 84480), (True, '22 24', '22 24', 84481), (True, '22 24', '22 24', 84482), (True, '22 24', '22 24', 84483), (False, '284 286', '285 286', 84484), (True, '284 286', '284 286', 84485), (True, '284 286', '284 286', 84486), (True, '284 286', '284 286', 84487), (True, '284 286', '284 286', 84488), (True, '284 285', '284 285', 84489), (True, '284 284', '284 284', 84490), (False, '282 284', '283 284', 84491), (True, '282 284', '282 284', 84492), (True, '282 284', '282 284', 84493), (True, '282 284', '282 284', 84494), (True, '282 284', '282 284', 84495), (True, '282 283', '282 283', 84496), (True, '282 282', '282 282', 84497), (False, '280 282', '281 282', 84498), (True, '280 282', '280 282', 84499), (True, '280 282', '280 282', 84500), (True, '280 282', '280 282', 84501), (True, '280 282', '280 282', 84502), (True, '280 281', '280 281', 84503), (True, '280 280', '280 280', 84504), (True, '2856 2858', '2856 2858', 84505), (True, '2856 2858', '2856 2858', 84506), (True, '2856 2858', '2856 2858', 84507), (True, '2856 2857', '2856 2857', 84508), (True, '2856 2856', '2856 2856', 84509), (False, '2854 2856', '2855 2856', 84510), (True, '2854 2856', '2854 2856', 84511), (True, '2854 2856', '2854 2856', 84512), (True, '2854 2856', '2854 2856', 84513), (True, '2854 2856', '2854 2856', 84514), (True, '2854 2855', '2854 2855', 84515), (True, '2854 2854', '2854 2854', 84516), (False, '2852 2854', '2853 2854', 84517), (True, '2852 2854', '2852 2854', 84518), (True, '2852 2854', '2852 2854', 84519), (True, '2852 2854', '2852 2854', 84520), (True, '2852 2854', '2852 2854', 84521), (True, '2852 2853', '2852 2853', 84522), (True, '2852 2852', '2852 2852', 84523), (False, '2850 2852', '2851 2852', 84524), (True, '2850 2852', '2850 2852', 84525), (True, '28570 28572', '28570 28572', 84526), (True, '28570 28572', '28570 28572', 84527), (True, '28570 28572', '28570 28572', 84528), (True, '28570 28572', '28570 28572', 84529), (True, '28570 28571', '28570 28571', 84530), (True, '28570 28570', '28570 28570', 84531), (False, '28568 28570', '28569 28570', 84532), (True, '28568 28570', '28568 28570', 84533), (True, '28568 28570', '28568 28570', 84534), (True, '28568 28570', '28568 28570', 84535), (True, '28568 28570', '28568 28570', 84536), (True, '28568 28569', '28568 28569', 84537), (True, '28568 28568', '28568 28568', 84538), (False, '28566 28568', '28567 28568', 84539), (True, '28566 28568', '28566 28568', 84540), (True, '28566 28568', '28566 28568', 84541), (True, '28566 28568', '28566 28568', 84542), (True, '28566 28568', '28566 28568', 84543), (True, '28566 28567', '28566 28567', 84544), (True, '28566 28566', '28566 28566', 84545), (False, '28564 28566', '28565 28566', 84546), (True, '285714 285714', '285714 285714', 84547), (False, '285712 285714', '285713 285714', 84548), (True, '285712 285714', '285712 285714', 84549), (True, '285712 285714', '285712 285714', 84550), (True, '285712 285714', '285712 285714', 84551), (True, '285712 285714', '285712 285714', 84552), (True, '285712 285713', '285712 285713', 84553), (True, '285712 285712', '285712 285712', 84554), (False, '285710 285712', '285711 285712', 84555), (True, '285710 285712', '285710 285712', 84556), (True, '285710 285712', '285710 285712', 84557), (True, '285710 285712', '285710 285712', 84558), (True, '285710 285712', '285710 285712', 84559), (True, '285710 285711', '285710 285711', 84560), (True, '285710 285710', '285710 285710', 84561), (False, '285708 285710', '285709 285710', 84562), (True, '285708 285710', '285708 285710', 84563), (True, '285708 285710', '285708 285710', 84564), (True, '285708 285710', '285708 285710', 84565), (True, '285708 285710', '285708 285710', 84566), (True, '66892 66893', '66892 66893', 84567), (True, '66892 66892', '66892 66892', 84568), (False, '66890 66892', '66891 66892', 84569), (True, '66890 66892', '66890 66892', 84570), (True, '66890 66892', '66890 66892', 84571), (True, '66890 66892', '66890 66892', 84572), (True, '66890 66892', '66890 66892', 84573), (True, '66890 66891', '66890 66891', 84574), (True, '66890 66890', '66890 66890', 84575), (False, '66888 66890', '66889 66890', 84576), (True, '66888 66890', '66888 66890', 84577), (True, '66888 66890', '66888 66890', 84578), (True, '66888 66890', '66888 66890', 84579), (True, '66888 66890', '66888 66890', 84580), (True, '66888 66889', '66888 66889', 84581), (True, '66888 66888', '66888 66888', 84582), (False, '66886 66888', '66887 66888', 84583), (True, '66886 66888', '66886 66888', 84584), (True, '66886 66888', '66886 66888', 84585), (True, '66886 66888', '66886 66888', 84586), (True, '66886 66888', '66886 66888', 84587), (False, '248150 248152', '248151 248152', 84588), (True, '248150 248152', '248150 248152', 84589), (True, '248150 248152', '248150 248152', 84590), (True, '248150 248152', '248150 248152', 84591), (True, '248150 248152', '248150 248152', 84592), (True, '248150 248151', '248150 248151', 84593), (True, '248150 248150', '248150 248150', 84594), (False, '248148 248150', '248149 248150', 84595), (True, '248148 248150', '248148 248150', 84596), (True, '248148 248150', '248148 248150', 84597), (True, '248148 248150', '248148 248150', 84598), (True, '248148 248150', '248148 248150', 84599), (True, '248148 248149', '248148 248149', 84600), (True, '248148 248148', '248148 248148', 84601), (False, '248146 248148', '248147 248148', 84602), (True, '248146 248148', '248146 248148', 84603), (True, '248146 248148', '248146 248148', 84604), (True, '248146 248148', '248146 248148', 84605), (True, '248146 248148', '248146 248148', 84606), (True, '248146 248147', '248146 248147', 84607), (True, '248146 248146', '248146 248146', 84608), (True, '35260 35262', '35260 35262', 84609), (True, '35260 35262', '35260 35262', 84610), (True, '35260 35261', '35260 35261', 84611), (True, '35260 35260', '35260 35260', 84612), (False, '35258 35260', '35259 35260', 84613), (True, '35258 35260', '35258 35260', 84614), (True, '35258 35260', '35258 35260', 84615), (True, '35258 35260', '35258 35260', 84616), (True, '35258 35260', '35258 35260', 84617), (True, '35258 35259', '35258 35259', 84618), (True, '35258 35258', '35258 35258', 84619), (False, '35256 35258', '35257 35258', 84620), (True, '35256 35258', '35256 35258', 84621), (True, '35256 35258', '35256 35258', 84622), (True, '35256 35258', '35256 35258', 84623), (True, '35256 35258', '35256 35258', 84624), (True, '35256 35257', '35256 35257', 84625), (True, '35256 35256', '35256 35256', 84626), (False, '35254 35256', '35255 35256', 84627), (True, '35254 35256', '35254 35256', 84628), (True, '35254 35256', '35254 35256', 84629), (True, '4 5', '4 5', 84630)]",False,Wrong Answer,3.731909771969008e-78,0.6926829268292682,False,0.1414141414141414
1442173,27169519,"k=int(input())
x=sorted(list(map(int,input().split())))
c,s=0,0
for i in range(11,-1,-1):
    if s>=k:
        break
    s+=x[i]
    c+=1
if s>=k:
    print(c)
else:
    print('-1')",1075,0,124,5/17/17 1:47,12,1280,1,8,"[(True, '2', '2', 148162), (True, '0', '0', 148163), (True, '3', '3', 148164), (True, '1', '1', 148165), (True, '1', '1', 148166), (True, '6', '6', 148167), (True, '-1', '-1', 148168), (True, '0', '0', 148169), (True, '1', '1', 148170), (True, '2', '2', 148171), (True, '3', '3', 148172), (True, '4', '4', 148173), (True, '5', '5', 148174), (True, '6', '6', 148175), (True, '7', '7', 148176), (True, '8', '8', 148177), (True, '9', '9', 148178), (True, '9', '9', 148179), (True, '9', '9', 148180), (True, '11', '11', 148181), (True, '5', '5', 148182), (True, '6', '6', 148183), (True, '7', '7', 148184), (True, '6', '6', 148185), (True, '7', '7', 148186), (True, '9', '9', 148187), (True, '11', '11', 148188), (True, '11', '11', 148189), (True, '-1', '-1', 148190), (True, '-1', '-1', 148191), (True, '-1', '-1', 148192), (True, '0', '0', 148193), (True, '-1', '-1', 148194), (True, '0', '0', 148195), (True, '1', '1', 148196), (True, '12', '12', 148197), (True, '12', '12', 148198), (True, '6', '6', 148199), (True, '-1', '-1', 148200)]",True,Accecpted,0.6841262339661334,0.8901734104046243,False,0.0
1442172,27169498,"k=int(input())
x=sorted(list(map(int,input().split())))
c,s=0,0
for i in range(11,-1,-1):
    if s>=k:
        break
    s+=x[i]
    c+=1
print(c)",1075,0,124,5/17/17 1:43,9,1280,2,8,"[(True, '2', '2', 148162), (True, '0', '0', 148163), (True, '3', '3', 148164), (True, '1', '1', 148165), (True, '1', '1', 148166), (True, '6', '6', 148167), (False, '12', '-1', 148168), (True, '0', '0', 148169), (True, '1', '1', 148170), (True, '2', '2', 148171), (True, '3', '3', 148172), (True, '4', '4', 148173), (True, '5', '5', 148174), (True, '6', '6', 148175), (True, '7', '7', 148176), (True, '8', '8', 148177), (True, '9', '9', 148178), (True, '9', '9', 148179), (True, '9', '9', 148180), (True, '11', '11', 148181), (True, '5', '5', 148182), (True, '6', '6', 148183), (True, '7', '7', 148184), (True, '6', '6', 148185), (True, '7', '7', 148186), (True, '9', '9', 148187), (True, '11', '11', 148188), (True, '11', '11', 148189), (False, '12', '-1', 148190), (False, '12', '-1', 148191), (False, '12', '-1', 148192), (True, '0', '0', 148193), (False, '12', '-1', 148194), (True, '0', '0', 148195), (True, '1', '1', 148196), (True, '12', '12', 148197), (True, '12', '12', 148198), (True, '6', '6', 148199), (False, '12', '-1', 148200)]",False,Wrong Answer,0.6841262339661334,0.8901734104046243,False,0.1538461538461538
3134492,27057777,"n=int(input())-1

x=[4, 22, 27, 58, 85, 94, 121, 166, 202, 265, 274, 319, 346, 355, 378, 382, 391, 438, 454, 483, 517, 526, 535, 562, 576, 588, 627, 634, 636, 645, 648, 654, 663, 666, 690, 706, 728, 729, 762, 778, 825, 852, 861, 895, 913, 915, 922, 958, 985, 1086]
print(x[n])


''' nao moja nao'''",1075,0,62,5/12/17 18:42,13,2681,1,8,"[(True, '27', '27', 226729), (True, '4', '4', 226730), (True, '22', '22', 226731), (True, '58', '58', 226732), (True, '85', '85', 226733), (True, '94', '94', 226734), (True, '121', '121', 226735), (True, '166', '166', 226736), (True, '202', '202', 226737), (True, '265', '265', 226738), (True, '274', '274', 226739), (True, '319', '319', 226740), (True, '346', '346', 226741), (True, '355', '355', 226742), (True, '378', '378', 226743), (True, '382', '382', 226744), (True, '391', '391', 226745), (True, '438', '438', 226746), (True, '454', '454', 226747), (True, '483', '483', 226748), (True, '517', '517', 226749), (True, '526', '526', 226750), (True, '535', '535', 226751), (True, '562', '562', 226752), (True, '576', '576', 226753), (True, '588', '588', 226754), (True, '627', '627', 226755), (True, '634', '634', 226756), (True, '636', '636', 226757), (True, '645', '645', 226758)]",True,Accecpted,0.0,0.1144578313253012,False,0.0
3134491,27057575,"n=input()
print('4')",1075,0,31,5/12/17 18:33,3,2681,2,8,"[(False, '4', '27', 226729), (True, '4', '4', 226730), (False, '4', '22', 226731), (False, '4', '58', 226732), (False, '4', '85', 226733), (False, '4', '94', 226734), (False, '4', '121', 226735), (False, '4', '166', 226736), (False, '4', '202', 226737), (False, '4', '265', 226738), (False, '4', '274', 226739), (False, '4', '319', 226740), (False, '4', '346', 226741), (False, '4', '355', 226742), (False, '4', '378', 226743), (False, '4', '382', 226744), (False, '4', '391', 226745), (False, '4', '438', 226746), (False, '4', '454', 226747), (False, '4', '483', 226748), (False, '4', '517', 226749), (False, '4', '526', 226750), (False, '4', '535', 226751), (False, '4', '562', 226752), (False, '4', '576', 226753), (False, '4', '588', 226754), (False, '4', '627', 226755), (False, '4', '634', 226756), (False, '4', '636', 226757), (False, '4', '645', 226758)]",False,Wrong Answer,0.0,0.1144578313253012,False,0.9666666666666668
967349,27236779,"a=int(input())
b=int(input())
c=int(input())
i=0
p=0
for i in range(a+1):
  if (2*i<=b and 4*i<=c):
   p=i
if(p>0):
 sum=p+2*p+4*p
else:
 sum=0
print(sum)",1082,8,62,5/20/17 18:26,25,888,1,8,"[(True, '7', '7', 118234), (True, '21', '21', 118235), (True, '0', '0', 118236), (True, '0', '0', 118237), (True, '7', '7', 118238), (True, '1750', '1750', 118239), (True, '0', '0', 118240), (True, '0', '0', 118241), (True, '7', '7', 118242), (True, '0', '0', 118243), (True, '7', '7', 118244), (True, '1750', '1750', 118245), (True, '7', '7', 118246), (True, '0', '0', 118247), (True, '21', '21', 118248), (True, '70', '70', 118249), (True, '693', '693', 118250), (True, '1400', '1400', 118251), (True, '1393', '1393', 118252), (True, '1400', '1400', 118253), (True, '1393', '1393', 118254), (True, '1400', '1400', 118255), (True, '1393', '1393', 118256), (True, '1400', '1400', 118257), (True, '882', '882', 118258), (True, '763', '763', 118259), (True, '903', '903', 118260), (True, '1127', '1127', 118261), (True, '273', '273', 118262), (True, '63', '63', 118263), (True, '959', '959', 118264), (True, '105', '105', 118265), (True, '1323', '1323', 118266), (True, '126', '126', 118267), (True, '1022', '1022', 118268), (True, '490', '490', 118269), (True, '1092', '1092', 118270), (True, '1176', '1176', 118271), (True, '322', '322', 118272), (True, '1218', '1218', 118273), (True, '1008', '1008', 118274), (True, '154', '154', 118275), (True, '980', '980', 118276), (True, '1218', '1218', 118277), (True, '1617', '1617', 118278), (True, '1057', '1057', 118279), (True, '616', '616', 118280), (True, '84', '84', 118281), (True, '1428', '1428', 118282), (True, '889', '889', 118283), (True, '1561', '1561', 118284), (True, '1015', '1015', 118285), (True, '574', '574', 118286), (True, '133', '133', 118287), (True, '1372', '1372', 118288), (True, '833', '833', 118289), (True, '1449', '1449', 118290), (True, '903', '903', 118291), (True, '462', '462', 118292), (True, '1708', '1708', 118293), (True, '1267', '1267', 118294), (True, '721', '721', 118295), (True, '7', '7', 118296), (True, '14', '14', 118297), (True, '7', '7', 118298), (True, '7', '7', 118299), (True, '7', '7', 118300), (True, '14', '14', 118301), (True, '7', '7', 118302), (True, '7', '7', 118303), (True, '14', '14', 118304), (True, '14', '14', 118305), (True, '7', '7', 118306), (True, '14', '14', 118307), (True, '7', '7', 118308), (True, '7', '7', 118309), (True, '7', '7', 118310), (True, '35', '35', 118311), (True, '0', '0', 118312), (True, '21', '21', 118313), (True, '14', '14', 118314), (True, '7', '7', 118315), (True, '0', '0', 118316), (True, '14', '14', 118317)]",True,Accecpted,0.1447953615777742,0.6253101736972705,False,0.0
967327,27220027,"a=int(input())
b=int(input())
c=int(input())
i=1
p=0
for i in range (a):
 if (b>=2*i and c>=4*i):
  p=p+1
q=p-1
if (q>0):
 sum=q+2*q+4*q
else:
 sum=0
if(a==1 and b==2 and c==4):
 sum=7
print(sum)",1082,0,62,5/19/17 21:07,31,888,2,8,"[(True, '7', '7', 118234), (True, '21', '21', 118235), (True, '0', '0', 118236), (True, '0', '0', 118237), (True, '7', '7', 118238), (True, '1750', '1750', 118239), (True, '0', '0', 118240), (True, '0', '0', 118241), (False, '0', '7', 118242), (True, '0', '0', 118243), (True, '7', '7', 118244), (True, '1750', '1750', 118245), (True, '7', '7', 118246), (True, '0', '0', 118247), (True, '21', '21', 118248), (False, '63', '70', 118249), (True, '693', '693', 118250), (False, '1393', '1400', 118251), (False, '1386', '1393', 118252), (True, '1400', '1400', 118253), (True, '1393', '1393', 118254), (False, '1393', '1400', 118255), (True, '1393', '1393', 118256), (False, '1393', '1400', 118257), (True, '882', '882', 118258), (False, '756', '763', 118259), (True, '903', '903', 118260), (False, '1120', '1127', 118261), (False, '266', '273', 118262), (False, '56', '63', 118263), (False, '952', '959', 118264), (False, '98', '105', 118265), (False, '1316', '1323', 118266), (False, '119', '126', 118267), (False, '1015', '1022', 118268), (False, '483', '490', 118269), (True, '1092', '1092', 118270), (False, '1169', '1176', 118271), (False, '315', '322', 118272), (False, '1211', '1218', 118273), (False, '1001', '1008', 118274), (False, '147', '154', 118275), (True, '980', '980', 118276), (True, '1218', '1218', 118277), (False, '1610', '1617', 118278), (False, '1050', '1057', 118279), (False, '609', '616', 118280), (False, '77', '84', 118281), (False, '1421', '1428', 118282), (False, '882', '889', 118283), (True, '1561', '1561', 118284), (True, '1015', '1015', 118285), (True, '574', '574', 118286), (True, '133', '133', 118287), (True, '1372', '1372', 118288), (True, '833', '833', 118289), (True, '1449', '1449', 118290), (True, '903', '903', 118291), (True, '462', '462', 118292), (True, '1708', '1708', 118293), (True, '1267', '1267', 118294), (True, '721', '721', 118295), (True, '7', '7', 118296), (False, '7', '14', 118297), (True, '7', '7', 118298), (False, '0', '7', 118299), (False, '0', '7', 118300), (True, '14', '14', 118301), (False, '0', '7', 118302), (False, '0', '7', 118303), (True, '14', '14', 118304), (False, '7', '14', 118305), (True, '7', '7', 118306), (False, '7', '14', 118307), (True, '7', '7', 118308), (False, '0', '7', 118309), (False, '0', '7', 118310), (True, '35', '35', 118311), (True, '0', '0', 118312), (False, '14', '21', 118313), (False, '7', '14', 118314), (False, '0', '7', 118315), (True, '0', '0', 118316), (True, '14', '14', 118317)]",False,Wrong Answer,0.1447953615777742,0.6253101736972705,False,0.4642857142857143
993245,27275534,"n, k = map(int, input().split())
time = 240 - k
def solved_problem( t ):
    i = 1
    while 1 :
        if ((t - 5 * i)<0):
            break
        t = t - 5 * i
        i+=1
    return i   
x = solved_problem(time) - 1
if(x>n):
    x=n
print(x)",1084,0,62,5/22/17 4:38,27,912,1,8,"[(True, '2', '2', 120386), (True, '4', '4', 120387), (True, '7', '7', 120388), (True, '6', '6', 120389), (True, '5', '5', 120390), (True, '1', '1', 120391), (True, '0', '0', 120392), (True, '9', '9', 120393), (True, '0', '0', 120394), (True, '0', '0', 120395), (True, '9', '9', 120396), (True, '1', '1', 120397), (True, '0', '0', 120398), (True, '2', '2', 120399), (True, '1', '1', 120400), (True, '3', '3', 120401), (True, '2', '2', 120402), (True, '3', '3', 120403), (True, '5', '5', 120404), (True, '4', '4', 120405), (True, '7', '7', 120406), (True, '6', '6', 120407), (True, '8', '8', 120408), (True, '7', '7', 120409), (True, '9', '9', 120410), (True, '8', '8', 120411), (True, '4', '4', 120412), (True, '4', '4', 120413), (True, '4', '4', 120414), (True, '5', '5', 120415), (True, '4', '4', 120416), (True, '5', '5', 120417), (True, '1', '1', 120418), (True, '6', '6', 120419), (True, '2', '2', 120420), (True, '7', '7', 120421), (True, '1', '1', 120422), (True, '1', '1', 120423), (True, '0', '0', 120424), (True, '1', '1', 120425), (True, '0', '0', 120426), (True, '0', '0', 120427), (True, '0', '0', 120428), (True, '0', '0', 120429), (True, '9', '9', 120430), (True, '9', '9', 120431), (True, '0', '0', 120432), (True, '9', '9', 120433), (True, '0', '0', 120434), (True, '0', '0', 120435), (True, '7', '7', 120436), (True, '1', '1', 120437)]",True,Accecpted,0.6420671621355516,0.8939929328621908,False,0.0
993243,27275480,"n, k = map(int, input().split())
time = 240 - k
def solved_problem( t ):
    i, c = 1, 0
    while 1 :
        t = t - 5 * i
        if ((t - 5 * i)<=0):
            break
        c+=1
        i+=1
    return i   
x = solved_problem(time)
if(x>n):
    x=n
print(x)",1084,0,46,5/22/17 4:31,29,912,2,8,"[(True, '2', '2', 120386), (True, '4', '4', 120387), (True, '7', '7', 120388), (True, '6', '6', 120389), (False, '6', '5', 120390), (True, '1', '1', 120391), (False, '1', '0', 120392), (True, '9', '9', 120393), (False, '1', '0', 120394), (False, '1', '0', 120395), (True, '9', '9', 120396), (True, '1', '1', 120397), (False, '1', '0', 120398), (True, '2', '2', 120399), (False, '2', '1', 120400), (True, '3', '3', 120401), (False, '3', '2', 120402), (False, '4', '3', 120403), (True, '5', '5', 120404), (False, '5', '4', 120405), (True, '7', '7', 120406), (False, '7', '6', 120407), (True, '8', '8', 120408), (False, '8', '7', 120409), (True, '9', '9', 120410), (False, '9', '8', 120411), (True, '4', '4', 120412), (True, '4', '4', 120413), (False, '5', '4', 120414), (True, '5', '5', 120415), (True, '4', '4', 120416), (True, '5', '5', 120417), (True, '1', '1', 120418), (True, '6', '6', 120419), (True, '2', '2', 120420), (True, '7', '7', 120421), (True, '1', '1', 120422), (True, '1', '1', 120423), (False, '1', '0', 120424), (True, '1', '1', 120425), (False, '1', '0', 120426), (False, '1', '0', 120427), (False, '1', '0', 120428), (False, '1', '0', 120429), (True, '9', '9', 120430), (True, '9', '9', 120431), (False, '1', '0', 120432), (True, '9', '9', 120433), (False, '1', '0', 120434), (False, '1', '0', 120435), (True, '7', '7', 120436), (True, '1', '1', 120437)]",False,Wrong Answer,0.6420671621355516,0.8939929328621908,False,0.4038461538461538
2264660,26580359,"import math

n = int(input())

ans = 0

for x in range(1,n):
    ans += x*(n-x)

ans += n
print (ans)",1086,5416,124,4/22/17 12:56,11,1983,1,8,"[(True, '3', '3', 189204), (True, '7', '7', 189205), (True, '14', '14', 189206), (True, '1', '1', 189207), (True, '175', '175', 189208), (True, '1333335000', '1333335000', 189209), (True, '888644743', '888644743', 189210), (True, '117099969', '117099969', 189211), (True, '1331335999', '1331335999', 189212), (True, '127259419', '127259419', 189213), (True, '164675486', '164675486', 189214), (True, '833', '833', 189215), (True, '20875', '20875', 189216), (True, '125671', '125671', 189217), (True, '129858', '129858', 189218), (True, '2796416', '2796416', 189219), (True, '22370048', '22370048', 189220), (True, '49235271', '49235271', 189221), (True, '49457383', '49457383', 189222), (True, '5160119', '5160119', 189223), (True, '318541121', '318541121', 189224), (True, '562501250', '562501250', 189225), (True, '1033182073', '1033182073', 189226), (True, '166667500', '166667500', 189227)]",True,Accecpted,1.60126717061518e-155,0.3698630136986301,False,0.0
2264617,26564636,"n = int (input())
print (2**n -1 )",1086,4500,122,4/21/17 20:42,2,1983,2,8,"[(True, '3', '3', 189204), (True, '7', '7', 189205), (False, '15', '14', 189206), (True, '1', '1', 189207), (False, '1023', '175', 189208), (False, '114813069527425452423283320117768198402231770208869520047764273682576626139237031385665948631650626991844596463898746277344711896086305533142593135616665318539129989145312280000688779148240044871428926990063486244781615463646388363947317026040466353970904996558162398808944629605623311649536164221970332681344168908984458505602379484807914058900934776500429002716706625830522008132236281291761267883317206598995396418127021779858404042159853183251540889433902091920554957783589672039160081957216630582755380425583726015528348786419432054508915275783882625175435528800822842770817965453762184851149029375', '1333335000', 189209), (False, '7932360166132991037324662611299148491806588917417578062895402112190756192791383079728038335584752176198706047028467993907530297003563001112090671511408282585989093299613541529617711947351349057135170828523482460600945560293728256675900680786034605994586278084280588133160837217047568827430176679211084964358916174726923405760417435954586231280313547635970157510308799693831433028112193911743383594532948559810369760703960032352323709857120525766822271277928244556111499120794203339220646638453564325305788056347460568327651327', '888644743', 189210), (False, '4127301024497384737127654569660285988428494734657199391624693039270889863724412964643884811622321780427143710884821317803768340308614730759769835769241715444596770968742227220068214981847081570726751819595399909407406471037121576084674975771617472472574520163263578111', '117099969', 189211), (False, '57406534763712726211641660058884099201115885104434760023882136841288313069618515692832974315825313495922298231949373138672355948043152766571296567808332659269564994572656140000344389574120022435714463495031743122390807731823194181973658513020233176985452498279081199404472314802811655824768082110985166340672084454492229252801189742403957029450467388250214501358353312915261004066118140645880633941658603299497698209063510889929202021079926591625770444716951045960277478891794836019580040978608315291377690212791863007764174393209716027254457637891941312587717764400411421385408982726881092425574514687', '1331335999', 189212), (False, '138489241570027830339787760577155329299276713436413040296712132107088403511830081562061637127414005863461524601112396740396934118638271997477005289970188832449072118890235188784327954969769132963403984511490113773016980728775065400466052716630386010092873601750856629835792383', '127259419', 189213), (False, '669692879491417075592765655662501131600878007315958504652343992731469406953085076558248986759809911329746670573470716765741965803557696277249036098418660925245910485926514436588817162816398196367372136384565404686473871329212422972447846496629816432160699779855408885478776864478289024177325354254335', '164675486', 189214), (False, '131071', '833', 189215), (False, '1125899906842623', '20875', 189216), (False, '2475880078570760549798248447', '125671', 189217), (False, '4951760157141521099596496895', '129858', 189218), (False, '115792089237316195423570985008687907853269984665640564039457584007913129639935', '2796416', 189219), (False, '13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095', '22370048', 189220), (False, '306180206916083902309240650087602475282639486413866622577088471913520022894784390350900738050555138105234536857820245071373614031482942161565170086143298589738273508330367307539078392896587187265470463', '49235271', 189221), (False, '612360413832167804618481300175204950565278972827733245154176943827040045789568780701801476101110276210469073715640490142747228062965884323130340172286597179476547016660734615078156785793174374530940927', '49457383', 189222), (False, '33374797436264220037422214158899251790667258161822699530422525122222183215322508594108782608383', '5160119', 189223), (False, '37863836749836624519685721051661259620651479953327743006663194502484140901918582305414891167792390423864786913161082367119465075114288865399939483197803640952494350165176803223487453031926938094231297947945458185901565874328474742895059539967181118451598554694323541583938700878309666603549794060712588550257599207554960306976494159202895236481265058936464581713934315159551', '318541121', 189224), (False, '35074662110434038747627587960280857993524015880330828824075798024790963850563322203657080886584969261653150406795437517399294548941469959754171038918004700847889956485329097264486802711583462946536682184340138629451355458264946342525383619389314960644665052551751442335509249173361130355796109709885580674313954210217657847432626760733004753275317192133674703563372783297041993227052663333668509952000175053355529058880434182538386715523683713208549375', '562501250', 189225), (False, '9819786255688460528742238970227602814817438663889495986280639962151666144621084648439944216495781327947644161398532399291553744506412482488781663545817807448211710863491101520258503344506201776990026443246709472122781084691000091345909940069444727130384881225551306268868388835644097433646376281013558439642207351183769808340943425117215006718884100350841550062409479196018657702097999419942099254491883690645354997765637676527103720284917230766999974128311514396157779102391271000567722480231697745772085750410670046837510834828141407629302350030569471', '1033182073', 189226), (False, '10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069375', '166667500', 189227)]",False,Wrong Answer,1.60126717061518e-155,0.3698630136986301,False,0.875
1431937,24332345,"k = int(input())
l = int(input())
m = int(input())
n = int(input())
d = int(input())
contador = -1
if k<=d and l<=d and m<=d and n<=d:
    for i in range(d+1):
        if (i%k==0) or (i%l==0) or (i%m==0) or (i%n==0):
            contador +=1
    print(contador)
else:
    print('0')",1092,4508,248,2/1/17 6:59,13,1274,1,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (True, '32718', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (True, '35246', '35246', 147728), (True, '75083', '75083', 147729), (True, '24656', '24656', 147730), (True, '36320', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (True, '21956', '21956', 147738), (True, '32736', '32736', 147739), (True, '11118', '11118', 147740), (True, '49547', '49547', 147741), (True, '36019', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (True, '20360', '20360', 147746), (True, '29931', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (True, '9224', '9224', 147750), (True, '43539', '43539', 147751), (True, '2438', '2438', 147752), (True, '415', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",True,Accecpted,0.6370684165490352,0.6576271186440678,False,0.0
1431936,24332167,"k = int(input())
l = int(input())
m = int(input())
n = int(input())
d = int(input())
contador = 0
if k<=d and l<=d and m<=d and n<=d:
    for i in range(d):
        if (i%k!=0) and (i%l!=0) and (i%m!=0) and (i%n!=0):
            contador +=1
    print(d-contador)
else:
    print('0')",1092,4492,124,2/1/17 6:44,13,1274,2,8,"[(True, '12', '12', 147720), (True, '17', '17', 147721), (True, '100000', '100000', 147722), (True, '0', '0', 147723), (False, '32719', '32718', 147724), (True, '59392', '59392', 147725), (True, '44835', '44835', 147726), (True, '62982', '62982', 147727), (False, '35247', '35246', 147728), (True, '75083', '75083', 147729), (False, '24657', '24656', 147730), (False, '36321', '36320', 147731), (True, '28244', '28244', 147732), (True, '16540', '16540', 147733), (True, '36302', '36302', 147734), (True, '15539', '15539', 147735), (True, '39901', '39901', 147736), (True, '58048', '58048', 147737), (False, '21957', '21956', 147738), (True, '32736', '32736', 147739), (False, '11119', '11118', 147740), (True, '49547', '49547', 147741), (False, '36020', '36019', 147742), (True, '63537', '63537', 147743), (True, '53678', '53678', 147744), (True, '99831', '99831', 147745), (False, '20361', '20360', 147746), (False, '29932', '29931', 147747), (True, '89535', '89535', 147748), (True, '7682', '7682', 147749), (False, '9225', '9224', 147750), (False, '43540', '43539', 147751), (False, '2439', '2438', 147752), (False, '416', '415', 147753), (True, '10000', '10000', 147754), (True, '1', '1', 147755), (True, '0', '0', 147756), (True, '10', '10', 147757), (True, '100', '100', 147758), (True, '0', '0', 147759)]",False,Wrong Answer,0.6370684165490352,0.6576271186440678,False,0.325
2206804,26905065,"def Primo(N):
    div = 0
    if N>1:
        for k in range (2,N):
            if N%k==0:
                div +=1
                if div >0:
                    break
                    return False
        if div ==0:
            return True
        else:
            return False
    else:
        return False

def CasiPrimo(N):
    Cont =0
    for k in range (2,N):
        if N%k==0:
            if Primo(k):
                Cont +=1
                if Cont >2:
                    break
    if Cont==2:
        return True
    else:
        return False
C = 0
N = int(input())
for k in range (N+1):
    if CasiPrimo(k):
        C += 1
print(C)",1092,4,810,5/6/17 18:47,34,1940,1,8,"[(True, '2', '2', 186638), (True, '8', '8', 186639), (True, '0', '0', 186640), (True, '0', '0', 186641), (True, '0', '0', 186642), (True, '0', '0', 186643), (True, '1', '1', 186644), (True, '6', '6', 186645), (True, '19', '19', 186646), (True, '41', '41', 186647), (True, '125', '125', 186648), (True, '501', '501', 186649), (True, '508', '508', 186650), (True, '958', '958', 186651), (True, '1375', '1375', 186652), (True, '1375', '1375', 186653), (True, '1375', '1375', 186654), (True, '1374', '1374', 186655), (True, '706', '706', 186656), (True, '808', '808', 186657), (True, '732', '732', 186658), (True, '266', '266', 186659), (True, '439', '439', 186660)]",True,Accecpted,0.7620506028488335,0.6820276497695853,False,0.0
2206803,26904461,"def Primo(N):
    div = 0
    if N>1:
        for k in range (2,N):
            if N%k==0:
                div +=1
        if div ==0:
            return True
        else:
            return False
    else:
        return False

def CasiPrimo(N):
    Div = []
    for k in range (2,N):
            if N%k==0:
                Div.append(k)
    Cont = 0
    for k in range (len(Div)):
        if Primo(Div[k]):
            Cont +=1
    if Cont==2:
        return True
    else:
        return False
C = 0
N = int(input())
for k in range (N+1):
    if CasiPrimo(k):
        C += 1
print(C)",1092,8,2000,5/6/17 18:17,32,1940,3,8,"[(True, '2', '2', 186638), (True, '8', '8', 186639), (True, '0', '0', 186640), (True, '0', '0', 186641), (True, '0', '0', 186642), (True, '0', '0', 186643), (True, '1', '1', 186644), (True, '6', '6', 186645), (True, '19', '19', 186646), (True, '41', '41', 186647), (True, '125', '125', 186648), (True, '501', '501', 186649), (True, '508', '508', 186650), (True, '958', '958', 186651), (True, '1375', '1375', 186652), (True, '1375', '1375', 186653), (True, '1375', '1375', 186654), (True, '1374', '1374', 186655), (True, '706', '706', 186656), (True, '808', '808', 186657), (True, '732', '732', 186658), (True, '266', '266', 186659), (True, '439', '439', 186660)]",True,Time Limit,0.7620506028488335,0.6820276497695853,False,0.0
119380,23405801,"#in the name of god
#Mr_Rubik
#codeforces,problemset
d1,d2,d3=map(int,input().split())
mn=[(d1+d2+d1+d2),(d1+d3+d1+d3),(d2+d3+d2+d3),(d1+d3+d2)]
mn.sort()
print(mn[0])",1106,4532,62,12/29/16 22:06,13,102,1,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Accecpted,0.570282226440554,0.9017632241813602,False,0.0
119379,23405787,"#in the name of god
#Mr_Rubik
#codeforces,problemset
for i in range(100):
    d1,d2,d3=map(int,input().split())
    mn=[(d1+d2+d1+d2),(d1+d3+d1+d3),(d2+d3+d2+d3),(d1+d3+d2)]
    mn.sort()
    print(mn[0])",1106,4476,46,12/29/16 22:05,15,102,5,8,"[(True, '60', '60', 55884), (True, '4', '4', 55885), (True, '134', '134', 55886), (True, '2331', '2331', 55887), (True, '8', '8', 55888), (True, '92', '92', 55889), (True, '203802', '203802', 55890), (True, '55041796', '55041796', 55891), (True, '12', '12', 55892), (True, '543828', '543828', 55893), (True, '305580', '305580', 55894), (True, '7326', '7326', 55895), (True, '601800', '601800', 55896), (True, '955428', '955428', 55897), (True, '54676', '54676', 55898), (True, '2836', '2836', 55899), (True, '243848', '243848', 55900), (True, '300000000', '300000000', 55901), (True, '8', '8', 55902), (True, '4', '4', 55903), (True, '4', '4', 55904)]",True,Runtime Error,0.570282226440554,0.9017632241813602,False,0.0
718448,23244420,"#in the name of god
#Mr_Rubik
#codeforces,problemset
n=int(input())
if n==1:
    print(""I hate it"")
else:
    s=""""
    for i in range(n-1):
        if i%2==0:s+=""I hate that""
        else:s+=""I love that""
        s+="" ""
    if n%2==0 and n!=1:s+=""I love it""
    if n%2==1 and n!=1:s+=""I hate it""    
    print(s)",1106,4504,77,12/23/16 12:42,29,668,1,8,"[(True, 'I hate it', 'I hate it', 100802), (True, 'I hate that I love it', 'I hate that I love it', 100803), (True, 'I hate that I love that I hate it', 'I hate that I love that I hate it', 100804), (True, 'I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love it', 100805), (True, 'I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate it', 100806), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100807), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100808), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100809), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100819), (True, 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100820)]",True,Accecpted,0.2642893728681911,0.5101663585951941,False,0.0
718447,23244246,"#in the name of god
#Mr_Rubik
#codeforces,problemset
n=int(input())
s=""""
s+=""I hate it""
for i in range(1,n):
    s+="" ""
    if i%2==0:s+=""I hate it""
    else:s+=""I love it""
print(s)",1106,4488,46,12/23/16 12:31,21,668,2,8,"[(True, 'I hate it', 'I hate it', 100802), (False, 'I hate it I love it', 'I hate that I love it', 100803), (False, 'I hate it I love it I hate it', 'I hate that I love that I hate it', 100804), (False, 'I hate it I love it I hate it I love it', 'I hate that I love that I hate that I love it', 100805), (False, 'I hate it I love it I hate it I love it I hate it', 'I hate that I love that I hate that I love that I hate it', 100806), (False, 'I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100807), (False, 'I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100808), (False, 'I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100809), (False, 'I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate it', 100819), (False, 'I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it I hate it I love it', 'I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love that I hate that I love it', 100820)]",False,Wrong Answer,0.2642893728681911,0.5101663585951941,False,0.9
2900706,23078645,"n=int(input())-1
while n>4:
    n=n-5>>1
print(['Sheldon', 'Leonard', 'Penny', 'Rajesh','Howard'] [n])",1106,20,62,12/18/16 10:08,4,2481,1,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (True, 'Penny', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (True, 'Penny', 'Penny', 216618), (True, 'Rajesh', 'Rajesh', 216619), (True, 'Howard', 'Howard', 216620), (True, 'Howard', 'Howard', 216621), (True, 'Penny', 'Penny', 216622), (True, 'Rajesh', 'Rajesh', 216623), (True, 'Leonard', 'Leonard', 216624), (True, 'Penny', 'Penny', 216625), (True, 'Howard', 'Howard', 216626), (True, 'Rajesh', 'Rajesh', 216627), (True, 'Rajesh', 'Rajesh', 216628), (True, 'Leonard', 'Leonard', 216629), (True, 'Penny', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (True, 'Howard', 'Howard', 216632), (True, 'Leonard', 'Leonard', 216633), (True, 'Rajesh', 'Rajesh', 216634), (True, 'Sheldon', 'Sheldon', 216635), (True, 'Rajesh', 'Rajesh', 216636), (True, 'Leonard', 'Leonard', 216637), (True, 'Howard', 'Howard', 216638), (True, 'Penny', 'Penny', 216639), (True, 'Penny', 'Penny', 216640), (True, 'Rajesh', 'Rajesh', 216641), (True, 'Sheldon', 'Sheldon', 216642), (True, 'Penny', 'Penny', 216643), (True, 'Penny', 'Penny', 216644), (True, 'Leonard', 'Leonard', 216645), (True, 'Howard', 'Howard', 216646), (True, 'Penny', 'Penny', 216647), (True, 'Penny', 'Penny', 216648), (True, 'Penny', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",True,Accecpted,0.0,0.2769230769230769,False,0.0
2900705,23077893,"arr=[""Sheldon"",""Leonard"",""Penny"",""Rajesh"",""Howard""]
n=int(input())
print(arr[((n-1)%5)])",1106,0,46,12/18/16 9:12,3,2481,2,8,"[(True, 'Sheldon', 'Sheldon', 216610), (True, 'Sheldon', 'Sheldon', 216611), (False, 'Leonard', 'Penny', 216612), (True, 'Sheldon', 'Sheldon', 216613), (True, 'Leonard', 'Leonard', 216614), (True, 'Penny', 'Penny', 216615), (True, 'Rajesh', 'Rajesh', 216616), (True, 'Howard', 'Howard', 216617), (False, 'Howard', 'Penny', 216618), (True, 'Rajesh', 'Rajesh', 216619), (False, 'Penny', 'Howard', 216620), (True, 'Howard', 'Howard', 216621), (False, 'Howard', 'Penny', 216622), (False, 'Penny', 'Rajesh', 216623), (False, 'Sheldon', 'Leonard', 216624), (False, 'Leonard', 'Penny', 216625), (False, 'Rajesh', 'Howard', 216626), (False, 'Penny', 'Rajesh', 216627), (False, 'Sheldon', 'Rajesh', 216628), (False, 'Sheldon', 'Leonard', 216629), (False, 'Leonard', 'Penny', 216630), (True, 'Howard', 'Howard', 216631), (True, 'Howard', 'Howard', 216632), (False, 'Howard', 'Leonard', 216633), (False, 'Leonard', 'Rajesh', 216634), (False, 'Penny', 'Sheldon', 216635), (True, 'Rajesh', 'Rajesh', 216636), (False, 'Howard', 'Leonard', 216637), (False, 'Penny', 'Howard', 216638), (False, 'Rajesh', 'Penny', 216639), (False, 'Howard', 'Penny', 216640), (False, 'Howard', 'Rajesh', 216641), (False, 'Rajesh', 'Sheldon', 216642), (False, 'Sheldon', 'Penny', 216643), (True, 'Penny', 'Penny', 216644), (False, 'Sheldon', 'Leonard', 216645), (True, 'Howard', 'Howard', 216646), (False, 'Howard', 'Penny', 216647), (False, 'Rajesh', 'Penny', 216648), (True, 'Penny', 'Penny', 216649), (True, 'Howard', 'Howard', 216650)]",False,Wrong Answer,0.0,0.2769230769230769,False,0.6097560975609756
301171,29079847,"s = input()
a = s.split()
n = int(a[0])
b = int(a[1])
p = int(a[2])
t = n
c = 1
sm = 0
while n != 1:
    while True:
        if c * 2 > n:
            break
        c *= 2
    sm = sm + c//2 + c*b
    n -= c//2
    c = 1
print(sm, t * p, end = "" "")",1111,4520,62,7/31/17 22:24,33,250,1,8,"[(True, '20 15', '20 15', 69289), (True, '35 32', '35 32', 69290), (True, '27 5000', '27 5000', 69291), (True, '19019 20', '19019 20', 69292), (True, '24453 9900', '24453 9900', 69293), (True, '1497 500', '1497 500', 69294), (True, '499499 250000', '499499 250000', 69295), (True, '237025 237000', '237025 237000', 69296), (True, '0 3', '0 3', 69297), (True, '0 133', '0 133', 69298), (True, '0 100', '0 100', 69299), (True, '0 4', '0 4', 69300), (True, '0 15', '0 15', 69301), (True, '0 1', '0 1', 69302), (True, '0 5', '0 5', 69303), (True, '0 500', '0 500', 69304), (True, '0 8', '0 8', 69305), (True, '189 100', '189 100', 69306), (True, '0 5', '0 5', 69307), (True, '0 1', '0 1', 69308), (True, '0 4', '0 4', 69309), (True, '0 10', '0 10', 69310), (True, '0 345', '0 345', 69311), (True, '150 91', '150 91', 69312), (True, '0 1', '0 1', 69313), (True, '0 13', '0 13', 69314), (True, '0 499', '0 499', 69315), (True, '0 90', '0 90', 69316), (True, '201 180', '201 180', 69317), (True, '156 53', '156 53', 69318), (True, '10584 5329', '10584 5329', 69319), (True, '198 67', '198 67', 69320), (True, '186 63', '186 63', 69321), (True, '174 59', '174 59', 69322), (True, '168 57', '168 57', 69323), (True, '36 13', '36 13', 69324), (True, '1740 1745', '1740 1745', 69325), (True, '415415 207936', '415415 207936', 69326)]",True,Accecpted,0.8617232860601574,0.5786802030456852,False,0.0
301170,29079732,"s = input()
a = s.split()
n = int(a[0])
b = int(a[1])
p = int(a[2])
t = n
c = 1
sm = 0
while True:
    while True:
        if c * 2 > n:
            break
        c *= 2
    sm = sm + c//2 + c*b
    n -= c//2
    if n == 1:
        break
    c = 1
print(sm, t * p, end = "" "")",1111,4504,62,7/31/17 22:18,37,250,2,8,"[(True, '20 15', '20 15', 69289), (True, '35 32', '35 32', 69290), (True, '27 5000', '27 5000', 69291), (True, '19019 20', '19019 20', 69292), (True, '24453 9900', '24453 9900', 69293), (True, '1497 500', '1497 500', 69294), (True, '499499 250000', '499499 250000', 69295), (True, '237025 237000', '237025 237000', 69296), (False, '2 3', '0 3', 69297), (False, '2 133', '0 133', 69298), (False, '2 100', '0 100', 69299), (False, '3 4', '0 4', 69300), (False, '10 15', '0 15', 69301), (False, '1 1', '0 1', 69302), (False, '2 5', '0 5', 69303), (False, '500 500', '0 500', 69304), (False, '3 8', '0 8', 69305), (True, '189 100', '189 100', 69306), (False, '3 5', '0 5', 69307), (False, '2 1', '0 1', 69308), (False, '2 4', '0 4', 69309), (False, '10 10', '0 10', 69310), (False, '345 345', '0 345', 69311), (True, '150 91', '150 91', 69312), (False, '500 1', '0 1', 69313), (False, '12 13', '0 13', 69314), (False, '500 499', '0 499', 69315), (False, '100 90', '0 90', 69316), (True, '201 180', '201 180', 69317), (True, '156 53', '156 53', 69318), (True, '10584 5329', '10584 5329', 69319), (True, '198 67', '198 67', 69320), (True, '186 63', '186 63', 69321), (True, '174 59', '174 59', 69322), (True, '168 57', '168 57', 69323), (True, '36 13', '36 13', 69324), (True, '1740 1745', '1740 1745', 69325), (True, '415415 207936', '415415 207936', 69326)]",False,Wrong Answer,0.8617232860601574,0.5786802030456852,False,0.4736842105263157
3362972,28808734,"n = int(input())
s = input()
t = 0
for i in s:
    if i == '1':
        t += 1
    else:
        print(t,sep = '', end = '')
        t = 0
print(t,sep = '', end = '')",1111,4512,62,7/24/17 0:54,19,2924,1,8,"[(True, '3', '3', 247097), (True, '2031', '2031', 247098), (True, '1', '1', 247099), (True, '100', '100', 247100), (True, '1001', '1001', 247101), (True, '202002000', '202002000', 247102), (True, '100090049', '100090049', 247103), (True, '123456789', '123456789', 247104), (True, '999999999', '999999999', 247105), (True, '1000000000', '1000000000', 247106), (True, '10', '10', 247107), (True, '30', '30', 247108), (True, '11110', '11110', 247109)]",True,Accecpted,0.8555308664663046,0.9558441558441558,False,0.0
3362971,28808727,"n = int(input())
s = input()
t = 0
for i in s:
    if i == '1':
        t += 1
    else:
        print(t,sep = '', end = '')
        t = 0
if t != 0:
    print(t,sep = '', end = '')",1111,4520,61,7/24/17 0:53,21,2924,2,8,"[(True, '3', '3', 247097), (True, '2031', '2031', 247098), (True, '1', '1', 247099), (False, '10', '100', 247100), (True, '1001', '1001', 247101), (False, '20200200', '202002000', 247102), (True, '100090049', '100090049', 247103), (True, '123456789', '123456789', 247104), (True, '999999999', '999999999', 247105), (False, '100000000', '1000000000', 247106), (False, '1', '10', 247107), (False, '3', '30', 247108), (False, '1111', '11110', 247109)]",False,Wrong Answer,0.8555308664663046,0.9558441558441558,False,0.4615384615384615
3150304,27042889,"a, b = map(int, input().split())
c, d = map(int, input().split())
v = set(range(b, 100 ** 2, a)) & set(range(d, 100 ** 2, c))
print(min(v) if v else -1)",1112,1092,62,5/12/17 1:05,7,2697,1,8,"[(True, '82', '82', 227721), (True, '-1', '-1', 227722), (True, '1222', '1222', 227723), (True, '1748', '1748', 227724), (True, '211', '211', 227725), (True, '301', '301', 227726), (True, '3414', '3414', 227727), (True, '1014', '1014', 227728), (True, '718', '718', 227729), (True, '-1', '-1', 227730), (True, '1255', '1255', 227731), (True, '1278', '1278', 227732), (True, '209', '209', 227733), (True, '2321', '2321', 227734), (True, '-1', '-1', 227735), (True, '1156', '1156', 227736), (True, '-1', '-1', 227737), (True, '1346', '1346', 227738), (True, '789', '789', 227739), (True, '-1', '-1', 227740), (True, '674', '674', 227741), (True, '364', '364', 227742), (True, '48', '48', 227743), (True, '5967', '5967', 227744), (True, '317', '317', 227745), (True, '331', '331', 227746), (True, '1410', '1410', 227747), (True, '-1', '-1', 227748), (True, '427', '427', 227749), (True, '3483', '3483', 227750), (True, '-1', '-1', 227751), (True, '204', '204', 227752), (True, '100', '100', 227753), (True, '1', '1', 227754), (True, '100', '100', 227755), (True, '101', '101', 227756), (True, '9703', '9703', 227757), (True, '9605', '9605', 227758), (True, '4852', '4852', 227759), (True, '-1', '-1', 227760), (True, '2', '2', 227761), (True, '5', '5', 227762), (True, '3', '3', 227763), (True, '-1', '-1', 227764), (True, '-1', '-1', 227765), (True, '-1', '-1', 227766), (True, '-1', '-1', 227767), (True, '99', '99', 227768), (True, '5', '5', 227769), (True, '100', '100', 227770), (True, '-1', '-1', 227771), (True, '20', '20', 227772), (True, '10', '10', 227773), (True, '-1', '-1', 227774), (True, '100', '100', 227775), (True, '319', '319', 227776), (True, '82', '82', 227777), (True, '14', '14', 227778)]",True,Accecpted,7.919883909890055e-232,0.2375478927203065,False,0.0
3150303,27042790,"from sys import exit
a,b=map(int,input().split())
c,d=map(int,input().split())
if b==d:
    print(b)
    exit(0)
if ((b%2!=0 and a%2==0)and(d%2==0))or((d%2!=0 and c%2==0)and(b%2==0)):
    print('-1')
    exit(0)
i=1
while True:
   j=((i*a+b)-d)/c
   m=((i*a+b)-d)//c
   if j-float(m)==0.0:
       print((i*a+b))
       break
   i+=1",1112,0,1000,5/12/17 0:54,33,2697,3,8,"[(True, '82', '82', 227721), (True, '-1', '-1', 227722), (True, '1222', '1222', 227723), (True, '1748', '1748', 227724), (True, '211', '211', 227725), (True, '301', '301', 227726), (True, '3414', '3414', 227727), (True, '1014', '1014', 227728), (True, '718', '718', 227729)]",True,Time Limit,7.919883909890055e-232,0.2375478927203065,False,0.0
1156155,26229298,"n=int(input())

K=0
while ((n>0)):
    ld=n%10
    if((ld==7)or(ld==4)):
        K+=1
    
    n=n//10

if(K>0):
    a=""YES""
    while ((K>0)and(a==""YES"")):
        ld=K%10
        if((ld==7)or(ld==4)):
            a=""YES""
        else:
            a=""NO""
            break
        K=K//10
else:
    a=""NO""

print(a)",1116,5432,154,4/9/17 5:57,24,1062,1,8,"[(True, 'NO', 'NO', 131260), (True, 'YES', 'YES', 131261), (True, 'NO', 'NO', 131262), (True, 'NO', 'NO', 131263), (True, 'NO', 'NO', 131264), (True, 'NO', 'NO', 131265), (True, 'YES', 'YES', 131266), (True, 'YES', 'YES', 131267), (True, 'YES', 'YES', 131268), (True, 'NO', 'NO', 131269), (True, 'YES', 'YES', 131270), (True, 'NO', 'NO', 131271), (True, 'YES', 'YES', 131272), (True, 'NO', 'NO', 131273), (True, 'NO', 'NO', 131274), (True, 'NO', 'NO', 131275), (True, 'NO', 'NO', 131276), (True, 'NO', 'NO', 131277), (True, 'NO', 'NO', 131278), (True, 'NO', 'NO', 131279), (True, 'NO', 'NO', 131280), (True, 'NO', 'NO', 131281), (True, 'YES', 'YES', 131282), (True, 'YES', 'YES', 131283), (True, 'YES', 'YES', 131284), (True, 'NO', 'NO', 131285), (True, 'YES', 'YES', 131286), (True, 'YES', 'YES', 131287), (True, 'YES', 'YES', 131288), (True, 'NO', 'NO', 131289), (True, 'NO', 'NO', 131290), (True, 'YES', 'YES', 131291), (True, 'YES', 'YES', 131292), (True, 'NO', 'NO', 131293)]",True,Accecpted,0.4306165652033611,0.7476415094339622,False,0.0
1156154,26229222,"n=int(input())
a=""YES""
K=0
while ((n>0)and(a==""YES"")):
    ld=n%10
    if((ld==7)or(ld==4)):
        K+=1
        a=""YES""
    else:
        a=""NO""

    n=n//10

if(a==""NO""):

    if(K>0):
        a=""YES""
        while ((K>0)and(a==""YES"")):
            ld=K%10
            if((ld==7)or(ld==4)):
                
                a=""YES""
            else:
                a=""NO""
                break
            K=K/10
    else:
        a=""NO""

    print(a)
else:
    print(""YES"")",1116,5416,124,4/9/17 5:48,32,1062,2,8,"[(True, 'NO', 'NO', 131260), (True, 'YES', 'YES', 131261), (True, 'NO', 'NO', 131262), (False, 'YES', 'NO', 131263), (False, 'YES', 'NO', 131264), (True, 'NO', 'NO', 131265), (False, 'NO', 'YES', 131266), (False, 'NO', 'YES', 131267), (False, 'NO', 'YES', 131268), (True, 'NO', 'NO', 131269), (True, 'YES', 'YES', 131270), (True, 'NO', 'NO', 131271), (False, 'NO', 'YES', 131272), (True, 'NO', 'NO', 131273), (True, 'NO', 'NO', 131274), (True, 'NO', 'NO', 131275), (False, 'YES', 'NO', 131276), (False, 'YES', 'NO', 131277), (False, 'YES', 'NO', 131278), (True, 'NO', 'NO', 131279), (True, 'NO', 'NO', 131280), (True, 'NO', 'NO', 131281), (False, 'NO', 'YES', 131282), (False, 'NO', 'YES', 131283), (False, 'NO', 'YES', 131284), (True, 'NO', 'NO', 131285), (True, 'YES', 'YES', 131286), (False, 'NO', 'YES', 131287), (False, 'NO', 'YES', 131288), (True, 'NO', 'NO', 131289), (False, 'YES', 'NO', 131290), (True, 'YES', 'YES', 131291), (True, 'YES', 'YES', 131292), (False, 'YES', 'NO', 131293)]",False,Wrong Answer,0.4306165652033611,0.7476415094339622,False,0.4705882352941176
